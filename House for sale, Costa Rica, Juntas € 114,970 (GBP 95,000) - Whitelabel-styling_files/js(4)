/*!
  Copyright (c) 2015 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames () {
		var classes = '';

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes += ' ' + arg;
			} else if (Array.isArray(arg)) {
				classes += ' ' + classNames.apply(null, arg);
			} else if (argType === 'object') {
				for (var key in arg) {
					if (hasOwn.call(arg, key) && arg[key]) {
						classes += ' ' + key;
					}
				}
			}
		}

		return classes.substr(1);
	}

	if (typeof module !== 'undefined' && module.exports) {
		module.exports = classNames;
	} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {
		// register as 'classnames', consistent with npm package name
		define('classnames', function () {
			return classNames;
		});
	} else {
		window.classNames = classNames;
	}
}());

/**
 * React (with addons) v0.14.7
 */
(function (f) { if (typeof exports === "object" && typeof module !== "undefined") { module.exports = f() } else if (typeof define === "function" && define.amd) { define([], f) } else { var g; if (typeof window !== "undefined") { g = window } else if (typeof global !== "undefined") { g = global } else if (typeof self !== "undefined") { g = self } else { g = this } g.React = f() } })(function () {
	var define, module, exports; return (function e(t, n, r) { function s(o, u) { if (!n[o]) { if (!t[o]) { var a = typeof require == "function" && require; if (!u && a) return a(o, !0); if (i) return i(o, !0); var f = new Error("Cannot find module '" + o + "'"); throw f.code = "MODULE_NOT_FOUND", f } var l = n[o] = { exports: {} }; t[o][0].call(l.exports, function (e) { var n = t[o][1][e]; return s(n ? n : e) }, l, l.exports, e, t, n, r) } return n[o].exports } var i = typeof require == "function" && require; for (var o = 0; o < r.length; o++) s(r[o]); return s })({
		1: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactWithAddons
			 */

			/**
			 * This module exists purely in the open source project, and is meant as a way
			 * to create a separate standalone build of React. This build has "addons", or
			 * functionality we've built and think might be useful but doesn't have a good
			 * place to live inside React core.
			 */

			'use strict';

			var LinkedStateMixin = _dereq_(22);
			var React = _dereq_(26);
			var ReactComponentWithPureRenderMixin = _dereq_(37);
			var ReactCSSTransitionGroup = _dereq_(29);
			var ReactFragment = _dereq_(64);
			var ReactTransitionGroup = _dereq_(94);
			var ReactUpdates = _dereq_(96);

			var cloneWithProps = _dereq_(118);
			var shallowCompare = _dereq_(140);
			var update = _dereq_(143);
			var warning = _dereq_(173);

			var warnedAboutBatchedUpdates = false;

			React.addons = {
				CSSTransitionGroup: ReactCSSTransitionGroup,
				LinkedStateMixin: LinkedStateMixin,
				PureRenderMixin: ReactComponentWithPureRenderMixin,
				TransitionGroup: ReactTransitionGroup,

				batchedUpdates: function () {
					if ("development" !== 'production') {
						"development" !== 'production' ? warning(warnedAboutBatchedUpdates, 'React.addons.batchedUpdates is deprecated. Use ' + 'ReactDOM.unstable_batchedUpdates instead.') : undefined;
						warnedAboutBatchedUpdates = true;
					}
					return ReactUpdates.batchedUpdates.apply(this, arguments);
				},
				cloneWithProps: cloneWithProps,
				createFragment: ReactFragment.create,
				shallowCompare: shallowCompare,
				update: update
			};

			if ("development" !== 'production') {
				React.addons.Perf = _dereq_(55);
				React.addons.TestUtils = _dereq_(91);
			}

			module.exports = React;
		}, { "118": 118, "140": 140, "143": 143, "173": 173, "22": 22, "26": 26, "29": 29, "37": 37, "55": 55, "64": 64, "91": 91, "94": 94, "96": 96 }], 2: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule AutoFocusUtils
			 * @typechecks static-only
			 */

			'use strict';

			var ReactMount = _dereq_(72);

			var findDOMNode = _dereq_(122);
			var focusNode = _dereq_(155);

			var Mixin = {
				componentDidMount: function () {
					if (this.props.autoFocus) {
						focusNode(findDOMNode(this));
					}
				}
			};

			var AutoFocusUtils = {
				Mixin: Mixin,

				focusDOMComponent: function () {
					focusNode(ReactMount.getNode(this._rootNodeID));
				}
			};

			module.exports = AutoFocusUtils;
		}, { "122": 122, "155": 155, "72": 72 }], 3: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015 Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule BeforeInputEventPlugin
			 * @typechecks static-only
			 */

			'use strict';

			var EventConstants = _dereq_(15);
			var EventPropagators = _dereq_(19);
			var ExecutionEnvironment = _dereq_(147);
			var FallbackCompositionState = _dereq_(20);
			var SyntheticCompositionEvent = _dereq_(103);
			var SyntheticInputEvent = _dereq_(107);

			var keyOf = _dereq_(166);

			var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
			var START_KEYCODE = 229;

			var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

			var documentMode = null;
			if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
				documentMode = document.documentMode;
			}

			// Webkit offers a very useful `textInput` event that can be used to
			// directly represent `beforeInput`. The IE `textinput` event is not as
			// useful, so we don't use it.
			var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

			// In IE9+, we have access to composition events, but the data supplied
			// by the native compositionend event may be incorrect. Japanese ideographic
			// spaces, for instance (\u3000) are not recorded correctly.
			var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

			/**
			 * Opera <= 12 includes TextEvent in window, but does not fire
			 * text input events. Rely on keypress instead.
			 */
			function isPresto() {
				var opera = window.opera;
				return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
			}

			var SPACEBAR_CODE = 32;
			var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

			var topLevelTypes = EventConstants.topLevelTypes;

			// Events and their corresponding property names.
			var eventTypes = {
				beforeInput: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onBeforeInput: null }),
						captured: keyOf({ onBeforeInputCapture: null })
					},
					dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]
				},
				compositionEnd: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onCompositionEnd: null }),
						captured: keyOf({ onCompositionEndCapture: null })
					},
					dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
				},
				compositionStart: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onCompositionStart: null }),
						captured: keyOf({ onCompositionStartCapture: null })
					},
					dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
				},
				compositionUpdate: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onCompositionUpdate: null }),
						captured: keyOf({ onCompositionUpdateCapture: null })
					},
					dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
				}
			};

			// Track whether we've ever handled a keypress on the space key.
			var hasSpaceKeypress = false;

			/**
			 * Return whether a native keypress event is assumed to be a command.
			 * This is required because Firefox fires `keypress` events for key commands
			 * (cut, copy, select-all, etc.) even though no character is inserted.
			 */
			function isKeypressCommand(nativeEvent) {
				return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
				// ctrlKey && altKey is equivalent to AltGr, and is not a command.
				!(nativeEvent.ctrlKey && nativeEvent.altKey);
			}

			/**
			 * Translate native top level events into event types.
			 *
			 * @param {string} topLevelType
			 * @return {object}
			 */
			function getCompositionEventType(topLevelType) {
				switch (topLevelType) {
					case topLevelTypes.topCompositionStart:
						return eventTypes.compositionStart;
					case topLevelTypes.topCompositionEnd:
						return eventTypes.compositionEnd;
					case topLevelTypes.topCompositionUpdate:
						return eventTypes.compositionUpdate;
				}
			}

			/**
			 * Does our fallback best-guess model think this event signifies that
			 * composition has begun?
			 *
			 * @param {string} topLevelType
			 * @param {object} nativeEvent
			 * @return {boolean}
			 */
			function isFallbackCompositionStart(topLevelType, nativeEvent) {
				return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;
			}

			/**
			 * Does our fallback mode think that this event is the end of composition?
			 *
			 * @param {string} topLevelType
			 * @param {object} nativeEvent
			 * @return {boolean}
			 */
			function isFallbackCompositionEnd(topLevelType, nativeEvent) {
				switch (topLevelType) {
					case topLevelTypes.topKeyUp:
						// Command keys insert or clear IME input.
						return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
					case topLevelTypes.topKeyDown:
						// Expect IME keyCode on each keydown. If we get any other
						// code we must have exited earlier.
						return nativeEvent.keyCode !== START_KEYCODE;
					case topLevelTypes.topKeyPress:
					case topLevelTypes.topMouseDown:
					case topLevelTypes.topBlur:
						// Events are not possible without cancelling IME.
						return true;
					default:
						return false;
				}
			}

			/**
			 * Google Input Tools provides composition data via a CustomEvent,
			 * with the `data` property populated in the `detail` object. If this
			 * is available on the event object, use it. If not, this is a plain
			 * composition event and we have nothing special to extract.
			 *
			 * @param {object} nativeEvent
			 * @return {?string}
			 */
			function getDataFromCustomEvent(nativeEvent) {
				var detail = nativeEvent.detail;
				if (typeof detail === 'object' && 'data' in detail) {
					return detail.data;
				}
				return null;
			}

			// Track the current IME composition fallback object, if any.
			var currentComposition = null;

			/**
			 * @param {string} topLevelType Record from `EventConstants`.
			 * @param {DOMEventTarget} topLevelTarget The listening component root node.
			 * @param {string} topLevelTargetID ID of `topLevelTarget`.
			 * @param {object} nativeEvent Native browser event.
			 * @return {?object} A SyntheticCompositionEvent.
			 */
			function extractCompositionEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
				var eventType;
				var fallbackData;

				if (canUseCompositionEvent) {
					eventType = getCompositionEventType(topLevelType);
				} else if (!currentComposition) {
					if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
						eventType = eventTypes.compositionStart;
					}
				} else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
					eventType = eventTypes.compositionEnd;
				}

				if (!eventType) {
					return null;
				}

				if (useFallbackCompositionData) {
					// The current composition is stored statically and must not be
					// overwritten while composition continues.
					if (!currentComposition && eventType === eventTypes.compositionStart) {
						currentComposition = FallbackCompositionState.getPooled(topLevelTarget);
					} else if (eventType === eventTypes.compositionEnd) {
						if (currentComposition) {
							fallbackData = currentComposition.getData();
						}
					}
				}

				var event = SyntheticCompositionEvent.getPooled(eventType, topLevelTargetID, nativeEvent, nativeEventTarget);

				if (fallbackData) {
					// Inject data generated from fallback path into the synthetic event.
					// This matches the property of native CompositionEventInterface.
					event.data = fallbackData;
				} else {
					var customData = getDataFromCustomEvent(nativeEvent);
					if (customData !== null) {
						event.data = customData;
					}
				}

				EventPropagators.accumulateTwoPhaseDispatches(event);
				return event;
			}

			/**
			 * @param {string} topLevelType Record from `EventConstants`.
			 * @param {object} nativeEvent Native browser event.
			 * @return {?string} The string corresponding to this `beforeInput` event.
			 */
			function getNativeBeforeInputChars(topLevelType, nativeEvent) {
				switch (topLevelType) {
					case topLevelTypes.topCompositionEnd:
						return getDataFromCustomEvent(nativeEvent);
					case topLevelTypes.topKeyPress:
						/**
						 * If native `textInput` events are available, our goal is to make
						 * use of them. However, there is a special case: the spacebar key.
						 * In Webkit, preventing default on a spacebar `textInput` event
						 * cancels character insertion, but it *also* causes the browser
						 * to fall back to its default spacebar behavior of scrolling the
						 * page.
						 *
						 * Tracking at:
						 * https://code.google.com/p/chromium/issues/detail?id=355103
						 *
						 * To avoid this issue, use the keypress event as if no `textInput`
						 * event is available.
						 */
						var which = nativeEvent.which;
						if (which !== SPACEBAR_CODE) {
							return null;
						}

						hasSpaceKeypress = true;
						return SPACEBAR_CHAR;

					case topLevelTypes.topTextInput:
						// Record the characters to be added to the DOM.
						var chars = nativeEvent.data;

						// If it's a spacebar character, assume that we have already handled
						// it at the keypress level and bail immediately. Android Chrome
						// doesn't give us keycodes, so we need to blacklist it.
						if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
							return null;
						}

						return chars;

					default:
						// For other native event types, do nothing.
						return null;
				}
			}

			/**
			 * For browsers that do not provide the `textInput` event, extract the
			 * appropriate string to use for SyntheticInputEvent.
			 *
			 * @param {string} topLevelType Record from `EventConstants`.
			 * @param {object} nativeEvent Native browser event.
			 * @return {?string} The fallback string for this `beforeInput` event.
			 */
			function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
				// If we are currently composing (IME) and using a fallback to do so,
				// try to extract the composed characters from the fallback object.
				if (currentComposition) {
					if (topLevelType === topLevelTypes.topCompositionEnd || isFallbackCompositionEnd(topLevelType, nativeEvent)) {
						var chars = currentComposition.getData();
						FallbackCompositionState.release(currentComposition);
						currentComposition = null;
						return chars;
					}
					return null;
				}

				switch (topLevelType) {
					case topLevelTypes.topPaste:
						// If a paste event occurs after a keypress, throw out the input
						// chars. Paste events should not lead to BeforeInput events.
						return null;
					case topLevelTypes.topKeyPress:
						/**
						 * As of v27, Firefox may fire keypress events even when no character
						 * will be inserted. A few possibilities:
						 *
						 * - `which` is `0`. Arrow keys, Esc key, etc.
						 *
						 * - `which` is the pressed key code, but no char is available.
						 *   Ex: 'AltGr + d` in Polish. There is no modified character for
						 *   this key combination and no character is inserted into the
						 *   document, but FF fires the keypress for char code `100` anyway.
						 *   No `input` event will occur.
						 *
						 * - `which` is the pressed key code, but a command combination is
						 *   being used. Ex: `Cmd+C`. No character is inserted, and no
						 *   `input` event will occur.
						 */
						if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
							return String.fromCharCode(nativeEvent.which);
						}
						return null;
					case topLevelTypes.topCompositionEnd:
						return useFallbackCompositionData ? null : nativeEvent.data;
					default:
						return null;
				}
			}

			/**
			 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
			 * `textInput` or fallback behavior.
			 *
			 * @param {string} topLevelType Record from `EventConstants`.
			 * @param {DOMEventTarget} topLevelTarget The listening component root node.
			 * @param {string} topLevelTargetID ID of `topLevelTarget`.
			 * @param {object} nativeEvent Native browser event.
			 * @return {?object} A SyntheticInputEvent.
			 */
			function extractBeforeInputEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
				var chars;

				if (canUseTextInputEvent) {
					chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
				} else {
					chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
				}

				// If no characters are being inserted, no BeforeInput event should
				// be fired.
				if (!chars) {
					return null;
				}

				var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, topLevelTargetID, nativeEvent, nativeEventTarget);

				event.data = chars;
				EventPropagators.accumulateTwoPhaseDispatches(event);
				return event;
			}

			/**
			 * Create an `onBeforeInput` event to match
			 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
			 *
			 * This event plugin is based on the native `textInput` event
			 * available in Chrome, Safari, Opera, and IE. This event fires after
			 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
			 *
			 * `beforeInput` is spec'd but not implemented in any browsers, and
			 * the `input` event does not provide any useful information about what has
			 * actually been added, contrary to the spec. Thus, `textInput` is the best
			 * available event to identify the characters that have actually been inserted
			 * into the target node.
			 *
			 * This plugin is also responsible for emitting `composition` events, thus
			 * allowing us to share composition fallback code for both `beforeInput` and
			 * `composition` event types.
			 */
			var BeforeInputEventPlugin = {

				eventTypes: eventTypes,

				/**
				 * @param {string} topLevelType Record from `EventConstants`.
				 * @param {DOMEventTarget} topLevelTarget The listening component root node.
				 * @param {string} topLevelTargetID ID of `topLevelTarget`.
				 * @param {object} nativeEvent Native browser event.
				 * @return {*} An accumulation of synthetic events.
				 * @see {EventPluginHub.extractEvents}
				 */
				extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
					return [extractCompositionEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget)];
				}
			};

			module.exports = BeforeInputEventPlugin;
		}, { "103": 103, "107": 107, "147": 147, "15": 15, "166": 166, "19": 19, "20": 20 }], 4: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule CSSProperty
			 */

			'use strict';

			/**
			 * CSS properties which accept numbers but are not in units of "px".
			 */
			var isUnitlessNumber = {
				animationIterationCount: true,
				boxFlex: true,
				boxFlexGroup: true,
				boxOrdinalGroup: true,
				columnCount: true,
				flex: true,
				flexGrow: true,
				flexPositive: true,
				flexShrink: true,
				flexNegative: true,
				flexOrder: true,
				fontWeight: true,
				lineClamp: true,
				lineHeight: true,
				opacity: true,
				order: true,
				orphans: true,
				tabSize: true,
				widows: true,
				zIndex: true,
				zoom: true,

				// SVG-related properties
				fillOpacity: true,
				stopOpacity: true,
				strokeDashoffset: true,
				strokeOpacity: true,
				strokeWidth: true
			};

			/**
			 * @param {string} prefix vendor-specific prefix, eg: Webkit
			 * @param {string} key style name, eg: transitionDuration
			 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
			 * WebkitTransitionDuration
			 */
			function prefixKey(prefix, key) {
				return prefix + key.charAt(0).toUpperCase() + key.substring(1);
			}

			/**
			 * Support style names that may come passed in prefixed by adding permutations
			 * of vendor prefixes.
			 */
			var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

			// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
			// infinite loop, because it iterates over the newly added props too.
			Object.keys(isUnitlessNumber).forEach(function (prop) {
				prefixes.forEach(function (prefix) {
					isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
				});
			});

			/**
			 * Most style properties can be unset by doing .style[prop] = '' but IE8
			 * doesn't like doing that with shorthand properties so for the properties that
			 * IE8 breaks on, which are listed here, we instead unset each of the
			 * individual properties. See http://bugs.jquery.com/ticket/12385.
			 * The 4-value 'clock' properties like margin, padding, border-width seem to
			 * behave without any problems. Curiously, list-style works too without any
			 * special prodding.
			 */
			var shorthandPropertyExpansions = {
				background: {
					backgroundAttachment: true,
					backgroundColor: true,
					backgroundImage: true,
					backgroundPositionX: true,
					backgroundPositionY: true,
					backgroundRepeat: true
				},
				backgroundPosition: {
					backgroundPositionX: true,
					backgroundPositionY: true
				},
				border: {
					borderWidth: true,
					borderStyle: true,
					borderColor: true
				},
				borderBottom: {
					borderBottomWidth: true,
					borderBottomStyle: true,
					borderBottomColor: true
				},
				borderLeft: {
					borderLeftWidth: true,
					borderLeftStyle: true,
					borderLeftColor: true
				},
				borderRight: {
					borderRightWidth: true,
					borderRightStyle: true,
					borderRightColor: true
				},
				borderTop: {
					borderTopWidth: true,
					borderTopStyle: true,
					borderTopColor: true
				},
				font: {
					fontStyle: true,
					fontVariant: true,
					fontWeight: true,
					fontSize: true,
					lineHeight: true,
					fontFamily: true
				},
				outline: {
					outlineWidth: true,
					outlineStyle: true,
					outlineColor: true
				}
			};

			var CSSProperty = {
				isUnitlessNumber: isUnitlessNumber,
				shorthandPropertyExpansions: shorthandPropertyExpansions
			};

			module.exports = CSSProperty;
		}, {}], 5: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule CSSPropertyOperations
			 * @typechecks static-only
			 */

			'use strict';

			var CSSProperty = _dereq_(4);
			var ExecutionEnvironment = _dereq_(147);
			var ReactPerf = _dereq_(78);

			var camelizeStyleName = _dereq_(149);
			var dangerousStyleValue = _dereq_(119);
			var hyphenateStyleName = _dereq_(160);
			var memoizeStringOnly = _dereq_(168);
			var warning = _dereq_(173);

			var processStyleName = memoizeStringOnly(function (styleName) {
				return hyphenateStyleName(styleName);
			});

			var hasShorthandPropertyBug = false;
			var styleFloatAccessor = 'cssFloat';
			if (ExecutionEnvironment.canUseDOM) {
				var tempStyle = document.createElement('div').style;
				try {
					// IE8 throws "Invalid argument." if resetting shorthand style properties.
					tempStyle.font = '';
				} catch (e) {
					hasShorthandPropertyBug = true;
				}
				// IE8 only supports accessing cssFloat (standard) as styleFloat
				if (document.documentElement.style.cssFloat === undefined) {
					styleFloatAccessor = 'styleFloat';
				}
			}

			if ("development" !== 'production') {
				// 'msTransform' is correct, but the other prefixes should be capitalized
				var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

				// style values shouldn't contain a semicolon
				var badStyleValueWithSemicolonPattern = /;\s*$/;

				var warnedStyleNames = {};
				var warnedStyleValues = {};

				var warnHyphenatedStyleName = function (name) {
					if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
						return;
					}

					warnedStyleNames[name] = true;
					"development" !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?', name, camelizeStyleName(name)) : undefined;
				};

				var warnBadVendoredStyleName = function (name) {
					if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
						return;
					}

					warnedStyleNames[name] = true;
					"development" !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1)) : undefined;
				};

				var warnStyleValueWithSemicolon = function (name, value) {
					if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
						return;
					}

					warnedStyleValues[value] = true;
					"development" !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon. ' + 'Try "%s: %s" instead.', name, value.replace(badStyleValueWithSemicolonPattern, '')) : undefined;
				};

				/**
				 * @param {string} name
				 * @param {*} value
				 */
				var warnValidStyle = function (name, value) {
					if (name.indexOf('-') > -1) {
						warnHyphenatedStyleName(name);
					} else if (badVendoredStyleNamePattern.test(name)) {
						warnBadVendoredStyleName(name);
					} else if (badStyleValueWithSemicolonPattern.test(value)) {
						warnStyleValueWithSemicolon(name, value);
					}
				};
			}

			/**
			 * Operations for dealing with CSS properties.
			 */
			var CSSPropertyOperations = {

				/**
				 * Serializes a mapping of style properties for use as inline styles:
				 *
				 *   > createMarkupForStyles({width: '200px', height: 0})
				 *   "width:200px;height:0;"
				 *
				 * Undefined values are ignored so that declarative programming is easier.
				 * The result should be HTML-escaped before insertion into the DOM.
				 *
				 * @param {object} styles
				 * @return {?string}
				 */
				createMarkupForStyles: function (styles) {
					var serialized = '';
					for (var styleName in styles) {
						if (!styles.hasOwnProperty(styleName)) {
							continue;
						}
						var styleValue = styles[styleName];
						if ("development" !== 'production') {
							warnValidStyle(styleName, styleValue);
						}
						if (styleValue != null) {
							serialized += processStyleName(styleName) + ':';
							serialized += dangerousStyleValue(styleName, styleValue) + ';';
						}
					}
					return serialized || null;
				},

				/**
				 * Sets the value for multiple styles on a node.  If a value is specified as
				 * '' (empty string), the corresponding style property will be unset.
				 *
				 * @param {DOMElement} node
				 * @param {object} styles
				 */
				setValueForStyles: function (node, styles) {
					var style = node.style;
					for (var styleName in styles) {
						if (!styles.hasOwnProperty(styleName)) {
							continue;
						}
						if ("development" !== 'production') {
							warnValidStyle(styleName, styles[styleName]);
						}
						var styleValue = dangerousStyleValue(styleName, styles[styleName]);
						if (styleName === 'float') {
							styleName = styleFloatAccessor;
						}
						if (styleValue) {
							style[styleName] = styleValue;
						} else {
							var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
							if (expansion) {
								// Shorthand property that IE8 won't like unsetting, so unset each
								// component to placate it
								for (var individualStyleName in expansion) {
									style[individualStyleName] = '';
								}
							} else {
								style[styleName] = '';
							}
						}
					}
				}

			};

			ReactPerf.measureMethods(CSSPropertyOperations, 'CSSPropertyOperations', {
				setValueForStyles: 'setValueForStyles'
			});

			module.exports = CSSPropertyOperations;
		}, { "119": 119, "147": 147, "149": 149, "160": 160, "168": 168, "173": 173, "4": 4, "78": 78 }], 6: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule CallbackQueue
			 */

			'use strict';

			var PooledClass = _dereq_(25);

			var assign = _dereq_(24);
			var invariant = _dereq_(161);

			/**
			 * A specialized pseudo-event module to help keep track of components waiting to
			 * be notified when their DOM representations are available for use.
			 *
			 * This implements `PooledClass`, so you should never need to instantiate this.
			 * Instead, use `CallbackQueue.getPooled()`.
			 *
			 * @class ReactMountReady
			 * @implements PooledClass
			 * @internal
			 */
			function CallbackQueue() {
				this._callbacks = null;
				this._contexts = null;
			}

			assign(CallbackQueue.prototype, {

				/**
				 * Enqueues a callback to be invoked when `notifyAll` is invoked.
				 *
				 * @param {function} callback Invoked when `notifyAll` is invoked.
				 * @param {?object} context Context to call `callback` with.
				 * @internal
				 */
				enqueue: function (callback, context) {
					this._callbacks = this._callbacks || [];
					this._contexts = this._contexts || [];
					this._callbacks.push(callback);
					this._contexts.push(context);
				},

				/**
				 * Invokes all enqueued callbacks and clears the queue. This is invoked after
				 * the DOM representation of a component has been created or updated.
				 *
				 * @internal
				 */
				notifyAll: function () {
					var callbacks = this._callbacks;
					var contexts = this._contexts;
					if (callbacks) {
						!(callbacks.length === contexts.length) ? "development" !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : invariant(false) : undefined;
						this._callbacks = null;
						this._contexts = null;
						for (var i = 0; i < callbacks.length; i++) {
							callbacks[i].call(contexts[i]);
						}
						callbacks.length = 0;
						contexts.length = 0;
					}
				},

				/**
				 * Resets the internal queue.
				 *
				 * @internal
				 */
				reset: function () {
					this._callbacks = null;
					this._contexts = null;
				},

				/**
				 * `PooledClass` looks for this.
				 */
				destructor: function () {
					this.reset();
				}

			});

			PooledClass.addPoolingTo(CallbackQueue);

			module.exports = CallbackQueue;
		}, { "161": 161, "24": 24, "25": 25 }], 7: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ChangeEventPlugin
			 */

			'use strict';

			var EventConstants = _dereq_(15);
			var EventPluginHub = _dereq_(16);
			var EventPropagators = _dereq_(19);
			var ExecutionEnvironment = _dereq_(147);
			var ReactUpdates = _dereq_(96);
			var SyntheticEvent = _dereq_(105);

			var getEventTarget = _dereq_(128);
			var isEventSupported = _dereq_(133);
			var isTextInputElement = _dereq_(134);
			var keyOf = _dereq_(166);

			var topLevelTypes = EventConstants.topLevelTypes;

			var eventTypes = {
				change: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onChange: null }),
						captured: keyOf({ onChangeCapture: null })
					},
					dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]
				}
			};

			/**
			 * For IE shims
			 */
			var activeElement = null;
			var activeElementID = null;
			var activeElementValue = null;
			var activeElementValueProp = null;

			/**
			 * SECTION: handle `change` event
			 */
			function shouldUseChangeEvent(elem) {
				var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
				return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
			}

			var doesChangeEventBubble = false;
			if (ExecutionEnvironment.canUseDOM) {
				// See `handleChange` comment below
				doesChangeEventBubble = isEventSupported('change') && (!('documentMode' in document) || document.documentMode > 8);
			}

			function manualDispatchChangeEvent(nativeEvent) {
				var event = SyntheticEvent.getPooled(eventTypes.change, activeElementID, nativeEvent, getEventTarget(nativeEvent));
				EventPropagators.accumulateTwoPhaseDispatches(event);

				// If change and propertychange bubbled, we'd just bind to it like all the
				// other events and have it go through ReactBrowserEventEmitter. Since it
				// doesn't, we manually listen for the events and so we have to enqueue and
				// process the abstract event manually.
				//
				// Batching is necessary here in order to ensure that all event handlers run
				// before the next rerender (including event handlers attached to ancestor
				// elements instead of directly on the input). Without this, controlled
				// components don't work properly in conjunction with event bubbling because
				// the component is rerendered and the value reverted before all the event
				// handlers can run. See https://github.com/facebook/react/issues/708.
				ReactUpdates.batchedUpdates(runEventInBatch, event);
			}

			function runEventInBatch(event) {
				EventPluginHub.enqueueEvents(event);
				EventPluginHub.processEventQueue(false);
			}

			function startWatchingForChangeEventIE8(target, targetID) {
				activeElement = target;
				activeElementID = targetID;
				activeElement.attachEvent('onchange', manualDispatchChangeEvent);
			}

			function stopWatchingForChangeEventIE8() {
				if (!activeElement) {
					return;
				}
				activeElement.detachEvent('onchange', manualDispatchChangeEvent);
				activeElement = null;
				activeElementID = null;
			}

			function getTargetIDForChangeEvent(topLevelType, topLevelTarget, topLevelTargetID) {
				if (topLevelType === topLevelTypes.topChange) {
					return topLevelTargetID;
				}
			}
			function handleEventsForChangeEventIE8(topLevelType, topLevelTarget, topLevelTargetID) {
				if (topLevelType === topLevelTypes.topFocus) {
					// stopWatching() should be a noop here but we call it just in case we
					// missed a blur event somehow.
					stopWatchingForChangeEventIE8();
					startWatchingForChangeEventIE8(topLevelTarget, topLevelTargetID);
				} else if (topLevelType === topLevelTypes.topBlur) {
					stopWatchingForChangeEventIE8();
				}
			}

			/**
			 * SECTION: handle `input` event
			 */
			var isInputEventSupported = false;
			if (ExecutionEnvironment.canUseDOM) {
				// IE9 claims to support the input event but fails to trigger it when
				// deleting text, so we ignore its input events
				isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 9);
			}

			/**
			 * (For old IE.) Replacement getter/setter for the `value` property that gets
			 * set on the active element.
			 */
			var newValueProp = {
				get: function () {
					return activeElementValueProp.get.call(this);
				},
				set: function (val) {
					// Cast to a string so we can do equality checks.
					activeElementValue = '' + val;
					activeElementValueProp.set.call(this, val);
				}
			};

			/**
			 * (For old IE.) Starts tracking propertychange events on the passed-in element
			 * and override the value property so that we can distinguish user events from
			 * value changes in JS.
			 */
			function startWatchingForValueChange(target, targetID) {
				activeElement = target;
				activeElementID = targetID;
				activeElementValue = target.value;
				activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');

				// Not guarded in a canDefineProperty check: IE8 supports defineProperty only
				// on DOM elements
				Object.defineProperty(activeElement, 'value', newValueProp);
				activeElement.attachEvent('onpropertychange', handlePropertyChange);
			}

			/**
			 * (For old IE.) Removes the event listeners from the currently-tracked element,
			 * if any exists.
			 */
			function stopWatchingForValueChange() {
				if (!activeElement) {
					return;
				}

				// delete restores the original property definition
				delete activeElement.value;
				activeElement.detachEvent('onpropertychange', handlePropertyChange);

				activeElement = null;
				activeElementID = null;
				activeElementValue = null;
				activeElementValueProp = null;
			}

			/**
			 * (For old IE.) Handles a propertychange event, sending a `change` event if
			 * the value of the active element has changed.
			 */
			function handlePropertyChange(nativeEvent) {
				if (nativeEvent.propertyName !== 'value') {
					return;
				}
				var value = nativeEvent.srcElement.value;
				if (value === activeElementValue) {
					return;
				}
				activeElementValue = value;

				manualDispatchChangeEvent(nativeEvent);
			}

			/**
			 * If a `change` event should be fired, returns the target's ID.
			 */
			function getTargetIDForInputEvent(topLevelType, topLevelTarget, topLevelTargetID) {
				if (topLevelType === topLevelTypes.topInput) {
					// In modern browsers (i.e., not IE8 or IE9), the input event is exactly
					// what we want so fall through here and trigger an abstract event
					return topLevelTargetID;
				}
			}

			// For IE8 and IE9.
			function handleEventsForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {
				if (topLevelType === topLevelTypes.topFocus) {
					// In IE8, we can capture almost all .value changes by adding a
					// propertychange handler and looking for events with propertyName
					// equal to 'value'
					// In IE9, propertychange fires for most input events but is buggy and
					// doesn't fire when text is deleted, but conveniently, selectionchange
					// appears to fire in all of the remaining cases so we catch those and
					// forward the event if the value has changed
					// In either case, we don't want to call the event handler if the value
					// is changed from JS so we redefine a setter for `.value` that updates
					// our activeElementValue variable, allowing us to ignore those changes
					//
					// stopWatching() should be a noop here but we call it just in case we
					// missed a blur event somehow.
					stopWatchingForValueChange();
					startWatchingForValueChange(topLevelTarget, topLevelTargetID);
				} else if (topLevelType === topLevelTypes.topBlur) {
					stopWatchingForValueChange();
				}
			}

			// For IE8 and IE9.
			function getTargetIDForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {
				if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {
					// On the selectionchange event, the target is just document which isn't
					// helpful for us so just check activeElement instead.
					//
					// 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
					// propertychange on the first input event after setting `value` from a
					// script and fires only keydown, keypress, keyup. Catching keyup usually
					// gets it and catching keydown lets us fire an event for the first
					// keystroke if user does a key repeat (it'll be a little delayed: right
					// before the second keystroke). Other input methods (e.g., paste) seem to
					// fire selectionchange normally.
					if (activeElement && activeElement.value !== activeElementValue) {
						activeElementValue = activeElement.value;
						return activeElementID;
					}
				}
			}

			/**
			 * SECTION: handle `click` event
			 */
			function shouldUseClickEvent(elem) {
				// Use the `click` event to detect changes to checkbox and radio inputs.
				// This approach works across all browsers, whereas `change` does not fire
				// until `blur` in IE8.
				return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
			}

			function getTargetIDForClickEvent(topLevelType, topLevelTarget, topLevelTargetID) {
				if (topLevelType === topLevelTypes.topClick) {
					return topLevelTargetID;
				}
			}

			/**
			 * This plugin creates an `onChange` event that normalizes change events
			 * across form elements. This event fires at a time when it's possible to
			 * change the element's value without seeing a flicker.
			 *
			 * Supported elements are:
			 * - input (see `isTextInputElement`)
			 * - textarea
			 * - select
			 */
			var ChangeEventPlugin = {

				eventTypes: eventTypes,

				/**
				 * @param {string} topLevelType Record from `EventConstants`.
				 * @param {DOMEventTarget} topLevelTarget The listening component root node.
				 * @param {string} topLevelTargetID ID of `topLevelTarget`.
				 * @param {object} nativeEvent Native browser event.
				 * @return {*} An accumulation of synthetic events.
				 * @see {EventPluginHub.extractEvents}
				 */
				extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {

					var getTargetIDFunc, handleEventFunc;
					if (shouldUseChangeEvent(topLevelTarget)) {
						if (doesChangeEventBubble) {
							getTargetIDFunc = getTargetIDForChangeEvent;
						} else {
							handleEventFunc = handleEventsForChangeEventIE8;
						}
					} else if (isTextInputElement(topLevelTarget)) {
						if (isInputEventSupported) {
							getTargetIDFunc = getTargetIDForInputEvent;
						} else {
							getTargetIDFunc = getTargetIDForInputEventIE;
							handleEventFunc = handleEventsForInputEventIE;
						}
					} else if (shouldUseClickEvent(topLevelTarget)) {
						getTargetIDFunc = getTargetIDForClickEvent;
					}

					if (getTargetIDFunc) {
						var targetID = getTargetIDFunc(topLevelType, topLevelTarget, topLevelTargetID);
						if (targetID) {
							var event = SyntheticEvent.getPooled(eventTypes.change, targetID, nativeEvent, nativeEventTarget);
							event.type = 'change';
							EventPropagators.accumulateTwoPhaseDispatches(event);
							return event;
						}
					}

					if (handleEventFunc) {
						handleEventFunc(topLevelType, topLevelTarget, topLevelTargetID);
					}
				}

			};

			module.exports = ChangeEventPlugin;
		}, { "105": 105, "128": 128, "133": 133, "134": 134, "147": 147, "15": 15, "16": 16, "166": 166, "19": 19, "96": 96 }], 8: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ClientReactRootIndex
			 * @typechecks
			 */

			'use strict';

			var nextReactRootIndex = 0;

			var ClientReactRootIndex = {
				createReactRootIndex: function () {
					return nextReactRootIndex++;
				}
			};

			module.exports = ClientReactRootIndex;
		}, {}], 9: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule DOMChildrenOperations
			 * @typechecks static-only
			 */

			'use strict';

			var Danger = _dereq_(12);
			var ReactMultiChildUpdateTypes = _dereq_(74);
			var ReactPerf = _dereq_(78);

			var setInnerHTML = _dereq_(138);
			var setTextContent = _dereq_(139);
			var invariant = _dereq_(161);

			/**
			 * Inserts `childNode` as a child of `parentNode` at the `index`.
			 *
			 * @param {DOMElement} parentNode Parent node in which to insert.
			 * @param {DOMElement} childNode Child node to insert.
			 * @param {number} index Index at which to insert the child.
			 * @internal
			 */
			function insertChildAt(parentNode, childNode, index) {
				// By exploiting arrays returning `undefined` for an undefined index, we can
				// rely exclusively on `insertBefore(node, null)` instead of also using
				// `appendChild(node)`. However, using `undefined` is not allowed by all
				// browsers so we must replace it with `null`.

				// fix render order error in safari
				// IE8 will throw error when index out of list size.
				var beforeChild = index >= parentNode.childNodes.length ? null : parentNode.childNodes.item(index);

				parentNode.insertBefore(childNode, beforeChild);
			}

			/**
			 * Operations for updating with DOM children.
			 */
			var DOMChildrenOperations = {

				dangerouslyReplaceNodeWithMarkup: Danger.dangerouslyReplaceNodeWithMarkup,

				updateTextContent: setTextContent,

				/**
				 * Updates a component's children by processing a series of updates. The
				 * update configurations are each expected to have a `parentNode` property.
				 *
				 * @param {array<object>} updates List of update configurations.
				 * @param {array<string>} markupList List of markup strings.
				 * @internal
				 */
				processUpdates: function (updates, markupList) {
					var update;
					// Mapping from parent IDs to initial child orderings.
					var initialChildren = null;
					// List of children that will be moved or removed.
					var updatedChildren = null;

					for (var i = 0; i < updates.length; i++) {
						update = updates[i];
						if (update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING || update.type === ReactMultiChildUpdateTypes.REMOVE_NODE) {
							var updatedIndex = update.fromIndex;
							var updatedChild = update.parentNode.childNodes[updatedIndex];
							var parentID = update.parentID;

							!updatedChild ? "development" !== 'production' ? invariant(false, 'processUpdates(): Unable to find child %s of element. This ' + 'probably means the DOM was unexpectedly mutated (e.g., by the ' + 'browser), usually due to forgetting a <tbody> when using tables, ' + 'nesting tags like <form>, <p>, or <a>, or using non-SVG elements ' + 'in an <svg> parent. Try inspecting the child nodes of the element ' + 'with React ID `%s`.', updatedIndex, parentID) : invariant(false) : undefined;

							initialChildren = initialChildren || {};
							initialChildren[parentID] = initialChildren[parentID] || [];
							initialChildren[parentID][updatedIndex] = updatedChild;

							updatedChildren = updatedChildren || [];
							updatedChildren.push(updatedChild);
						}
					}

					var renderedMarkup;
					// markupList is either a list of markup or just a list of elements
					if (markupList.length && typeof markupList[0] === 'string') {
						renderedMarkup = Danger.dangerouslyRenderMarkup(markupList);
					} else {
						renderedMarkup = markupList;
					}

					// Remove updated children first so that `toIndex` is consistent.
					if (updatedChildren) {
						for (var j = 0; j < updatedChildren.length; j++) {
							updatedChildren[j].parentNode.removeChild(updatedChildren[j]);
						}
					}

					for (var k = 0; k < updates.length; k++) {
						update = updates[k];
						switch (update.type) {
							case ReactMultiChildUpdateTypes.INSERT_MARKUP:
								insertChildAt(update.parentNode, renderedMarkup[update.markupIndex], update.toIndex);
								break;
							case ReactMultiChildUpdateTypes.MOVE_EXISTING:
								insertChildAt(update.parentNode, initialChildren[update.parentID][update.fromIndex], update.toIndex);
								break;
							case ReactMultiChildUpdateTypes.SET_MARKUP:
								setInnerHTML(update.parentNode, update.content);
								break;
							case ReactMultiChildUpdateTypes.TEXT_CONTENT:
								setTextContent(update.parentNode, update.content);
								break;
							case ReactMultiChildUpdateTypes.REMOVE_NODE:
								// Already removed by the for-loop above.
								break;
						}
					}
				}

			};

			ReactPerf.measureMethods(DOMChildrenOperations, 'DOMChildrenOperations', {
				updateTextContent: 'updateTextContent'
			});

			module.exports = DOMChildrenOperations;
		}, { "12": 12, "138": 138, "139": 139, "161": 161, "74": 74, "78": 78 }], 10: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule DOMProperty
			 * @typechecks static-only
			 */

			'use strict';

			var invariant = _dereq_(161);

			function checkMask(value, bitmask) {
				return (value & bitmask) === bitmask;
			}

			var DOMPropertyInjection = {
				/**
				 * Mapping from normalized, camelcased property names to a configuration that
				 * specifies how the associated DOM property should be accessed or rendered.
				 */
				MUST_USE_ATTRIBUTE: 0x1,
				MUST_USE_PROPERTY: 0x2,
				HAS_SIDE_EFFECTS: 0x4,
				HAS_BOOLEAN_VALUE: 0x8,
				HAS_NUMERIC_VALUE: 0x10,
				HAS_POSITIVE_NUMERIC_VALUE: 0x20 | 0x10,
				HAS_OVERLOADED_BOOLEAN_VALUE: 0x40,

				/**
				 * Inject some specialized knowledge about the DOM. This takes a config object
				 * with the following properties:
				 *
				 * isCustomAttribute: function that given an attribute name will return true
				 * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
				 * attributes where it's impossible to enumerate all of the possible
				 * attribute names,
				 *
				 * Properties: object mapping DOM property name to one of the
				 * DOMPropertyInjection constants or null. If your attribute isn't in here,
				 * it won't get written to the DOM.
				 *
				 * DOMAttributeNames: object mapping React attribute name to the DOM
				 * attribute name. Attribute names not specified use the **lowercase**
				 * normalized name.
				 *
				 * DOMAttributeNamespaces: object mapping React attribute name to the DOM
				 * attribute namespace URL. (Attribute names not specified use no namespace.)
				 *
				 * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
				 * Property names not specified use the normalized name.
				 *
				 * DOMMutationMethods: Properties that require special mutation methods. If
				 * `value` is undefined, the mutation method should unset the property.
				 *
				 * @param {object} domPropertyConfig the config as described above.
				 */
				injectDOMPropertyConfig: function (domPropertyConfig) {
					var Injection = DOMPropertyInjection;
					var Properties = domPropertyConfig.Properties || {};
					var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
					var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
					var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
					var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

					if (domPropertyConfig.isCustomAttribute) {
						DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
					}

					for (var propName in Properties) {
						!!DOMProperty.properties.hasOwnProperty(propName) ? "development" !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' + '\'%s\' which has already been injected. You may be accidentally ' + 'injecting the same DOM property config twice, or you may be ' + 'injecting two configs that have conflicting property names.', propName) : invariant(false) : undefined;

						var lowerCased = propName.toLowerCase();
						var propConfig = Properties[propName];

						var propertyInfo = {
							attributeName: lowerCased,
							attributeNamespace: null,
							propertyName: propName,
							mutationMethod: null,

							mustUseAttribute: checkMask(propConfig, Injection.MUST_USE_ATTRIBUTE),
							mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
							hasSideEffects: checkMask(propConfig, Injection.HAS_SIDE_EFFECTS),
							hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
							hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
							hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
							hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
						};

						!(!propertyInfo.mustUseAttribute || !propertyInfo.mustUseProperty) ? "development" !== 'production' ? invariant(false, 'DOMProperty: Cannot require using both attribute and property: %s', propName) : invariant(false) : undefined;
						!(propertyInfo.mustUseProperty || !propertyInfo.hasSideEffects) ? "development" !== 'production' ? invariant(false, 'DOMProperty: Properties that have side effects must use property: %s', propName) : invariant(false) : undefined;
						!(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? "development" !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or ' + 'numeric value, but not a combination: %s', propName) : invariant(false) : undefined;

						if ("development" !== 'production') {
							DOMProperty.getPossibleStandardName[lowerCased] = propName;
						}

						if (DOMAttributeNames.hasOwnProperty(propName)) {
							var attributeName = DOMAttributeNames[propName];
							propertyInfo.attributeName = attributeName;
							if ("development" !== 'production') {
								DOMProperty.getPossibleStandardName[attributeName] = propName;
							}
						}

						if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
							propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
						}

						if (DOMPropertyNames.hasOwnProperty(propName)) {
							propertyInfo.propertyName = DOMPropertyNames[propName];
						}

						if (DOMMutationMethods.hasOwnProperty(propName)) {
							propertyInfo.mutationMethod = DOMMutationMethods[propName];
						}

						DOMProperty.properties[propName] = propertyInfo;
					}
				}
			};
			var defaultValueCache = {};

			/**
			 * DOMProperty exports lookup objects that can be used like functions:
			 *
			 *   > DOMProperty.isValid['id']
			 *   true
			 *   > DOMProperty.isValid['foobar']
			 *   undefined
			 *
			 * Although this may be confusing, it performs better in general.
			 *
			 * @see http://jsperf.com/key-exists
			 * @see http://jsperf.com/key-missing
			 */
			var DOMProperty = {

				ID_ATTRIBUTE_NAME: 'data-reactid',

				/**
				 * Map from property "standard name" to an object with info about how to set
				 * the property in the DOM. Each object contains:
				 *
				 * attributeName:
				 *   Used when rendering markup or with `*Attribute()`.
				 * attributeNamespace
				 * propertyName:
				 *   Used on DOM node instances. (This includes properties that mutate due to
				 *   external factors.)
				 * mutationMethod:
				 *   If non-null, used instead of the property or `setAttribute()` after
				 *   initial render.
				 * mustUseAttribute:
				 *   Whether the property must be accessed and mutated using `*Attribute()`.
				 *   (This includes anything that fails `<propName> in <element>`.)
				 * mustUseProperty:
				 *   Whether the property must be accessed and mutated as an object property.
				 * hasSideEffects:
				 *   Whether or not setting a value causes side effects such as triggering
				 *   resources to be loaded or text selection changes. If true, we read from
				 *   the DOM before updating to ensure that the value is only set if it has
				 *   changed.
				 * hasBooleanValue:
				 *   Whether the property should be removed when set to a falsey value.
				 * hasNumericValue:
				 *   Whether the property must be numeric or parse as a numeric and should be
				 *   removed when set to a falsey value.
				 * hasPositiveNumericValue:
				 *   Whether the property must be positive numeric or parse as a positive
				 *   numeric and should be removed when set to a falsey value.
				 * hasOverloadedBooleanValue:
				 *   Whether the property can be used as a flag as well as with a value.
				 *   Removed when strictly equal to false; present without a value when
				 *   strictly equal to true; present with a value otherwise.
				 */
				properties: {},

				/**
				 * Mapping from lowercase property names to the properly cased version, used
				 * to warn in the case of missing properties. Available only in __DEV__.
				 * @type {Object}
				 */
				getPossibleStandardName: "development" !== 'production' ? {} : null,

				/**
				 * All of the isCustomAttribute() functions that have been injected.
				 */
				_isCustomAttributeFunctions: [],

				/**
				 * Checks whether a property name is a custom attribute.
				 * @method
				 */
				isCustomAttribute: function (attributeName) {
					for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
						var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
						if (isCustomAttributeFn(attributeName)) {
							return true;
						}
					}
					return false;
				},

				/**
				 * Returns the default property value for a DOM property (i.e., not an
				 * attribute). Most default values are '' or false, but not all. Worse yet,
				 * some (in particular, `type`) vary depending on the type of element.
				 *
				 * TODO: Is it better to grab all the possible properties when creating an
				 * element to avoid having to create the same element twice?
				 */
				getDefaultValueForProperty: function (nodeName, prop) {
					var nodeDefaults = defaultValueCache[nodeName];
					var testElement;
					if (!nodeDefaults) {
						defaultValueCache[nodeName] = nodeDefaults = {};
					}
					if (!(prop in nodeDefaults)) {
						testElement = document.createElement(nodeName);
						nodeDefaults[prop] = testElement[prop];
					}
					return nodeDefaults[prop];
				},

				injection: DOMPropertyInjection
			};

			module.exports = DOMProperty;
		}, { "161": 161 }], 11: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule DOMPropertyOperations
			 * @typechecks static-only
			 */

			'use strict';

			var DOMProperty = _dereq_(10);
			var ReactPerf = _dereq_(78);

			var quoteAttributeValueForBrowser = _dereq_(136);
			var warning = _dereq_(173);

			// Simplified subset
			var VALID_ATTRIBUTE_NAME_REGEX = /^[a-zA-Z_][\w\.\-]*$/;
			var illegalAttributeNameCache = {};
			var validatedAttributeNameCache = {};

			function isAttributeNameSafe(attributeName) {
				if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
					return true;
				}
				if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
					return false;
				}
				if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
					validatedAttributeNameCache[attributeName] = true;
					return true;
				}
				illegalAttributeNameCache[attributeName] = true;
				"development" !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : undefined;
				return false;
			}

			function shouldIgnoreValue(propertyInfo, value) {
				return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
			}

			if ("development" !== 'production') {
				var reactProps = {
					children: true,
					dangerouslySetInnerHTML: true,
					key: true,
					ref: true
				};
				var warnedProperties = {};

				var warnUnknownProperty = function (name) {
					if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
						return;
					}

					warnedProperties[name] = true;
					var lowerCasedName = name.toLowerCase();

					// data-* attributes should be lowercase; suggest the lowercase version
					var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

					// For now, only warn when we have a suggested correction. This prevents
					// logging too much when using transferPropsTo.
					"development" !== 'production' ? warning(standardName == null, 'Unknown DOM property %s. Did you mean %s?', name, standardName) : undefined;
				};
			}

			/**
			 * Operations for dealing with DOM properties.
			 */
			var DOMPropertyOperations = {

				/**
				 * Creates markup for the ID property.
				 *
				 * @param {string} id Unescaped ID.
				 * @return {string} Markup string.
				 */
				createMarkupForID: function (id) {
					return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
				},

				setAttributeForID: function (node, id) {
					node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
				},

				/**
				 * Creates markup for a property.
				 *
				 * @param {string} name
				 * @param {*} value
				 * @return {?string} Markup string, or null if the property was invalid.
				 */
				createMarkupForProperty: function (name, value) {
					var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
					if (propertyInfo) {
						if (shouldIgnoreValue(propertyInfo, value)) {
							return '';
						}
						var attributeName = propertyInfo.attributeName;
						if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
							return attributeName + '=""';
						}
						return attributeName + '=' + quoteAttributeValueForBrowser(value);
					} else if (DOMProperty.isCustomAttribute(name)) {
						if (value == null) {
							return '';
						}
						return name + '=' + quoteAttributeValueForBrowser(value);
					} else if ("development" !== 'production') {
						warnUnknownProperty(name);
					}
					return null;
				},

				/**
				 * Creates markup for a custom property.
				 *
				 * @param {string} name
				 * @param {*} value
				 * @return {string} Markup string, or empty string if the property was invalid.
				 */
				createMarkupForCustomAttribute: function (name, value) {
					if (!isAttributeNameSafe(name) || value == null) {
						return '';
					}
					return name + '=' + quoteAttributeValueForBrowser(value);
				},

				/**
				 * Sets the value for a property on a node.
				 *
				 * @param {DOMElement} node
				 * @param {string} name
				 * @param {*} value
				 */
				setValueForProperty: function (node, name, value) {
					var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
					if (propertyInfo) {
						var mutationMethod = propertyInfo.mutationMethod;
						if (mutationMethod) {
							mutationMethod(node, value);
						} else if (shouldIgnoreValue(propertyInfo, value)) {
							this.deleteValueForProperty(node, name);
						} else if (propertyInfo.mustUseAttribute) {
							var attributeName = propertyInfo.attributeName;
							var namespace = propertyInfo.attributeNamespace;
							// `setAttribute` with objects becomes only `[object]` in IE8/9,
							// ('' + value) makes it output the correct toString()-value.
							if (namespace) {
								node.setAttributeNS(namespace, attributeName, '' + value);
							} else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
								node.setAttribute(attributeName, '');
							} else {
								node.setAttribute(attributeName, '' + value);
							}
						} else {
							var propName = propertyInfo.propertyName;
							// Must explicitly cast values for HAS_SIDE_EFFECTS-properties to the
							// property type before comparing; only `value` does and is string.
							if (!propertyInfo.hasSideEffects || '' + node[propName] !== '' + value) {
								// Contrary to `setAttribute`, object properties are properly
								// `toString`ed by IE8/9.
								node[propName] = value;
							}
						}
					} else if (DOMProperty.isCustomAttribute(name)) {
						DOMPropertyOperations.setValueForAttribute(node, name, value);
					} else if ("development" !== 'production') {
						warnUnknownProperty(name);
					}
				},

				setValueForAttribute: function (node, name, value) {
					if (!isAttributeNameSafe(name)) {
						return;
					}
					if (value == null) {
						node.removeAttribute(name);
					} else {
						node.setAttribute(name, '' + value);
					}
				},

				/**
				 * Deletes the value for a property on a node.
				 *
				 * @param {DOMElement} node
				 * @param {string} name
				 */
				deleteValueForProperty: function (node, name) {
					var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
					if (propertyInfo) {
						var mutationMethod = propertyInfo.mutationMethod;
						if (mutationMethod) {
							mutationMethod(node, undefined);
						} else if (propertyInfo.mustUseAttribute) {
							node.removeAttribute(propertyInfo.attributeName);
						} else {
							var propName = propertyInfo.propertyName;
							var defaultValue = DOMProperty.getDefaultValueForProperty(node.nodeName, propName);
							if (!propertyInfo.hasSideEffects || '' + node[propName] !== defaultValue) {
								node[propName] = defaultValue;
							}
						}
					} else if (DOMProperty.isCustomAttribute(name)) {
						node.removeAttribute(name);
					} else if ("development" !== 'production') {
						warnUnknownProperty(name);
					}
				}

			};

			ReactPerf.measureMethods(DOMPropertyOperations, 'DOMPropertyOperations', {
				setValueForProperty: 'setValueForProperty',
				setValueForAttribute: 'setValueForAttribute',
				deleteValueForProperty: 'deleteValueForProperty'
			});

			module.exports = DOMPropertyOperations;
		}, { "10": 10, "136": 136, "173": 173, "78": 78 }], 12: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule Danger
			 * @typechecks static-only
			 */

			'use strict';

			var ExecutionEnvironment = _dereq_(147);

			var createNodesFromMarkup = _dereq_(152);
			var emptyFunction = _dereq_(153);
			var getMarkupWrap = _dereq_(157);
			var invariant = _dereq_(161);

			var OPEN_TAG_NAME_EXP = /^(<[^ \/>]+)/;
			var RESULT_INDEX_ATTR = 'data-danger-index';

			/**
			 * Extracts the `nodeName` from a string of markup.
			 *
			 * NOTE: Extracting the `nodeName` does not require a regular expression match
			 * because we make assumptions about React-generated markup (i.e. there are no
			 * spaces surrounding the opening tag and there is at least one attribute).
			 *
			 * @param {string} markup String of markup.
			 * @return {string} Node name of the supplied markup.
			 * @see http://jsperf.com/extract-nodename
			 */
			function getNodeName(markup) {
				return markup.substring(1, markup.indexOf(' '));
			}

			var Danger = {

				/**
				 * Renders markup into an array of nodes. The markup is expected to render
				 * into a list of root nodes. Also, the length of `resultList` and
				 * `markupList` should be the same.
				 *
				 * @param {array<string>} markupList List of markup strings to render.
				 * @return {array<DOMElement>} List of rendered nodes.
				 * @internal
				 */
				dangerouslyRenderMarkup: function (markupList) {
					!ExecutionEnvironment.canUseDOM ? "development" !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Cannot render markup in a worker ' + 'thread. Make sure `window` and `document` are available globally ' + 'before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString for server rendering.') : invariant(false) : undefined;
					var nodeName;
					var markupByNodeName = {};
					// Group markup by `nodeName` if a wrap is necessary, else by '*'.
					for (var i = 0; i < markupList.length; i++) {
						!markupList[i] ? "development" !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Missing markup.') : invariant(false) : undefined;
						nodeName = getNodeName(markupList[i]);
						nodeName = getMarkupWrap(nodeName) ? nodeName : '*';
						markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];
						markupByNodeName[nodeName][i] = markupList[i];
					}
					var resultList = [];
					var resultListAssignmentCount = 0;
					for (nodeName in markupByNodeName) {
						if (!markupByNodeName.hasOwnProperty(nodeName)) {
							continue;
						}
						var markupListByNodeName = markupByNodeName[nodeName];

						// This for-in loop skips the holes of the sparse array. The order of
						// iteration should follow the order of assignment, which happens to match
						// numerical index order, but we don't rely on that.
						var resultIndex;
						for (resultIndex in markupListByNodeName) {
							if (markupListByNodeName.hasOwnProperty(resultIndex)) {
								var markup = markupListByNodeName[resultIndex];

								// Push the requested markup with an additional RESULT_INDEX_ATTR
								// attribute.  If the markup does not start with a < character, it
								// will be discarded below (with an appropriate console.error).
								markupListByNodeName[resultIndex] = markup.replace(OPEN_TAG_NAME_EXP,
								// This index will be parsed back out below.
								'$1 ' + RESULT_INDEX_ATTR + '="' + resultIndex + '" ');
							}
						}

						// Render each group of markup with similar wrapping `nodeName`.
						var renderNodes = createNodesFromMarkup(markupListByNodeName.join(''), emptyFunction // Do nothing special with <script> tags.
						);

						for (var j = 0; j < renderNodes.length; ++j) {
							var renderNode = renderNodes[j];
							if (renderNode.hasAttribute && renderNode.hasAttribute(RESULT_INDEX_ATTR)) {

								resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);
								renderNode.removeAttribute(RESULT_INDEX_ATTR);

								!!resultList.hasOwnProperty(resultIndex) ? "development" !== 'production' ? invariant(false, 'Danger: Assigning to an already-occupied result index.') : invariant(false) : undefined;

								resultList[resultIndex] = renderNode;

								// This should match resultList.length and markupList.length when
								// we're done.
								resultListAssignmentCount += 1;
							} else if ("development" !== 'production') {
								console.error('Danger: Discarding unexpected node:', renderNode);
							}
						}
					}

					// Although resultList was populated out of order, it should now be a dense
					// array.
					!(resultListAssignmentCount === resultList.length) ? "development" !== 'production' ? invariant(false, 'Danger: Did not assign to every index of resultList.') : invariant(false) : undefined;

					!(resultList.length === markupList.length) ? "development" !== 'production' ? invariant(false, 'Danger: Expected markup to render %s nodes, but rendered %s.', markupList.length, resultList.length) : invariant(false) : undefined;

					return resultList;
				},

				/**
				 * Replaces a node with a string of markup at its current position within its
				 * parent. The markup must render into a single root node.
				 *
				 * @param {DOMElement} oldChild Child node to replace.
				 * @param {string} markup Markup to render in place of the child node.
				 * @internal
				 */
				dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
					!ExecutionEnvironment.canUseDOM ? "development" !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' + 'worker thread. Make sure `window` and `document` are available ' + 'globally before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString() for server rendering.') : invariant(false) : undefined;
					!markup ? "development" !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : invariant(false) : undefined;
					!(oldChild.tagName.toLowerCase() !== 'html') ? "development" !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' + '<html> node. This is because browser quirks make this unreliable ' + 'and/or slow. If you want to render to the root you must use ' + 'server rendering. See ReactDOMServer.renderToString().') : invariant(false) : undefined;

					var newChild;
					if (typeof markup === 'string') {
						newChild = createNodesFromMarkup(markup, emptyFunction)[0];
					} else {
						newChild = markup;
					}
					oldChild.parentNode.replaceChild(newChild, oldChild);
				}

			};

			module.exports = Danger;
		}, { "147": 147, "152": 152, "153": 153, "157": 157, "161": 161 }], 13: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule DefaultEventPluginOrder
			 */

			'use strict';

			var keyOf = _dereq_(166);

			/**
			 * Module that is injectable into `EventPluginHub`, that specifies a
			 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
			 * plugins, without having to package every one of them. This is better than
			 * having plugins be ordered in the same order that they are injected because
			 * that ordering would be influenced by the packaging order.
			 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
			 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
			 */
			var DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];

			module.exports = DefaultEventPluginOrder;
		}, { "166": 166 }], 14: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule EnterLeaveEventPlugin
			 * @typechecks static-only
			 */

			'use strict';

			var EventConstants = _dereq_(15);
			var EventPropagators = _dereq_(19);
			var SyntheticMouseEvent = _dereq_(109);

			var ReactMount = _dereq_(72);
			var keyOf = _dereq_(166);

			var topLevelTypes = EventConstants.topLevelTypes;
			var getFirstReactDOM = ReactMount.getFirstReactDOM;

			var eventTypes = {
				mouseEnter: {
					registrationName: keyOf({ onMouseEnter: null }),
					dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
				},
				mouseLeave: {
					registrationName: keyOf({ onMouseLeave: null }),
					dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
				}
			};

			var extractedEvents = [null, null];

			var EnterLeaveEventPlugin = {

				eventTypes: eventTypes,

				/**
				 * For almost every interaction we care about, there will be both a top-level
				 * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
				 * we do not extract duplicate events. However, moving the mouse into the
				 * browser from outside will not fire a `mouseout` event. In this case, we use
				 * the `mouseover` top-level event.
				 *
				 * @param {string} topLevelType Record from `EventConstants`.
				 * @param {DOMEventTarget} topLevelTarget The listening component root node.
				 * @param {string} topLevelTargetID ID of `topLevelTarget`.
				 * @param {object} nativeEvent Native browser event.
				 * @return {*} An accumulation of synthetic events.
				 * @see {EventPluginHub.extractEvents}
				 */
				extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
					if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
						return null;
					}
					if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {
						// Must not be a mouse in or mouse out - ignoring.
						return null;
					}

					var win;
					if (topLevelTarget.window === topLevelTarget) {
						// `topLevelTarget` is probably a window object.
						win = topLevelTarget;
					} else {
						// TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
						var doc = topLevelTarget.ownerDocument;
						if (doc) {
							win = doc.defaultView || doc.parentWindow;
						} else {
							win = window;
						}
					}

					var from;
					var to;
					var fromID = '';
					var toID = '';
					if (topLevelType === topLevelTypes.topMouseOut) {
						from = topLevelTarget;
						fromID = topLevelTargetID;
						to = getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement);
						if (to) {
							toID = ReactMount.getID(to);
						} else {
							to = win;
						}
						to = to || win;
					} else {
						from = win;
						to = topLevelTarget;
						toID = topLevelTargetID;
					}

					if (from === to) {
						// Nothing pertains to our managed components.
						return null;
					}

					var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, fromID, nativeEvent, nativeEventTarget);
					leave.type = 'mouseleave';
					leave.target = from;
					leave.relatedTarget = to;

					var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, toID, nativeEvent, nativeEventTarget);
					enter.type = 'mouseenter';
					enter.target = to;
					enter.relatedTarget = from;

					EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);

					extractedEvents[0] = leave;
					extractedEvents[1] = enter;

					return extractedEvents;
				}

			};

			module.exports = EnterLeaveEventPlugin;
		}, { "109": 109, "15": 15, "166": 166, "19": 19, "72": 72 }], 15: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule EventConstants
			 */

			'use strict';

			var keyMirror = _dereq_(165);

			var PropagationPhases = keyMirror({ bubbled: null, captured: null });

			/**
			 * Types of raw signals from the browser caught at the top level.
			 */
			var topLevelTypes = keyMirror({
				topAbort: null,
				topBlur: null,
				topCanPlay: null,
				topCanPlayThrough: null,
				topChange: null,
				topClick: null,
				topCompositionEnd: null,
				topCompositionStart: null,
				topCompositionUpdate: null,
				topContextMenu: null,
				topCopy: null,
				topCut: null,
				topDoubleClick: null,
				topDrag: null,
				topDragEnd: null,
				topDragEnter: null,
				topDragExit: null,
				topDragLeave: null,
				topDragOver: null,
				topDragStart: null,
				topDrop: null,
				topDurationChange: null,
				topEmptied: null,
				topEncrypted: null,
				topEnded: null,
				topError: null,
				topFocus: null,
				topInput: null,
				topKeyDown: null,
				topKeyPress: null,
				topKeyUp: null,
				topLoad: null,
				topLoadedData: null,
				topLoadedMetadata: null,
				topLoadStart: null,
				topMouseDown: null,
				topMouseMove: null,
				topMouseOut: null,
				topMouseOver: null,
				topMouseUp: null,
				topPaste: null,
				topPause: null,
				topPlay: null,
				topPlaying: null,
				topProgress: null,
				topRateChange: null,
				topReset: null,
				topScroll: null,
				topSeeked: null,
				topSeeking: null,
				topSelectionChange: null,
				topStalled: null,
				topSubmit: null,
				topSuspend: null,
				topTextInput: null,
				topTimeUpdate: null,
				topTouchCancel: null,
				topTouchEnd: null,
				topTouchMove: null,
				topTouchStart: null,
				topVolumeChange: null,
				topWaiting: null,
				topWheel: null
			});

			var EventConstants = {
				topLevelTypes: topLevelTypes,
				PropagationPhases: PropagationPhases
			};

			module.exports = EventConstants;
		}, { "165": 165 }], 16: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule EventPluginHub
			 */

			'use strict';

			var EventPluginRegistry = _dereq_(17);
			var EventPluginUtils = _dereq_(18);
			var ReactErrorUtils = _dereq_(61);

			var accumulateInto = _dereq_(115);
			var forEachAccumulated = _dereq_(124);
			var invariant = _dereq_(161);
			var warning = _dereq_(173);

			/**
			 * Internal store for event listeners
			 */
			var listenerBank = {};

			/**
			 * Internal queue of events that have accumulated their dispatches and are
			 * waiting to have their dispatches executed.
			 */
			var eventQueue = null;

			/**
			 * Dispatches an event and releases it back into the pool, unless persistent.
			 *
			 * @param {?object} event Synthetic event to be dispatched.
			 * @param {boolean} simulated If the event is simulated (changes exn behavior)
			 * @private
			 */
			var executeDispatchesAndRelease = function (event, simulated) {
				if (event) {
					EventPluginUtils.executeDispatchesInOrder(event, simulated);

					if (!event.isPersistent()) {
						event.constructor.release(event);
					}
				}
			};
			var executeDispatchesAndReleaseSimulated = function (e) {
				return executeDispatchesAndRelease(e, true);
			};
			var executeDispatchesAndReleaseTopLevel = function (e) {
				return executeDispatchesAndRelease(e, false);
			};

			/**
			 * - `InstanceHandle`: [required] Module that performs logical traversals of DOM
			 *   hierarchy given ids of the logical DOM elements involved.
			 */
			var InstanceHandle = null;

			function validateInstanceHandle() {
				var valid = InstanceHandle && InstanceHandle.traverseTwoPhase && InstanceHandle.traverseEnterLeave;
				"development" !== 'production' ? warning(valid, 'InstanceHandle not injected before use!') : undefined;
			}

			/**
			 * This is a unified interface for event plugins to be installed and configured.
			 *
			 * Event plugins can implement the following properties:
			 *
			 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
			 *     Required. When a top-level event is fired, this method is expected to
			 *     extract synthetic events that will in turn be queued and dispatched.
			 *
			 *   `eventTypes` {object}
			 *     Optional, plugins that fire events must publish a mapping of registration
			 *     names that are used to register listeners. Values of this mapping must
			 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
			 *
			 *   `executeDispatch` {function(object, function, string)}
			 *     Optional, allows plugins to override how an event gets dispatched. By
			 *     default, the listener is simply invoked.
			 *
			 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
			 *
			 * @public
			 */
			var EventPluginHub = {

				/**
				 * Methods for injecting dependencies.
				 */
				injection: {

					/**
					 * @param {object} InjectedMount
					 * @public
					 */
					injectMount: EventPluginUtils.injection.injectMount,

					/**
					 * @param {object} InjectedInstanceHandle
					 * @public
					 */
					injectInstanceHandle: function (InjectedInstanceHandle) {
						InstanceHandle = InjectedInstanceHandle;
						if ("development" !== 'production') {
							validateInstanceHandle();
						}
					},

					getInstanceHandle: function () {
						if ("development" !== 'production') {
							validateInstanceHandle();
						}
						return InstanceHandle;
					},

					/**
					 * @param {array} InjectedEventPluginOrder
					 * @public
					 */
					injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

					/**
					 * @param {object} injectedNamesToPlugins Map from names to plugin modules.
					 */
					injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

				},

				eventNameDispatchConfigs: EventPluginRegistry.eventNameDispatchConfigs,

				registrationNameModules: EventPluginRegistry.registrationNameModules,

				/**
				 * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.
				 *
				 * @param {string} id ID of the DOM element.
				 * @param {string} registrationName Name of listener (e.g. `onClick`).
				 * @param {?function} listener The callback to store.
				 */
				putListener: function (id, registrationName, listener) {
					!(typeof listener === 'function') ? "development" !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : invariant(false) : undefined;

					var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
					bankForRegistrationName[id] = listener;

					var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
					if (PluginModule && PluginModule.didPutListener) {
						PluginModule.didPutListener(id, registrationName, listener);
					}
				},

				/**
				 * @param {string} id ID of the DOM element.
				 * @param {string} registrationName Name of listener (e.g. `onClick`).
				 * @return {?function} The stored callback.
				 */
				getListener: function (id, registrationName) {
					var bankForRegistrationName = listenerBank[registrationName];
					return bankForRegistrationName && bankForRegistrationName[id];
				},

				/**
				 * Deletes a listener from the registration bank.
				 *
				 * @param {string} id ID of the DOM element.
				 * @param {string} registrationName Name of listener (e.g. `onClick`).
				 */
				deleteListener: function (id, registrationName) {
					var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
					if (PluginModule && PluginModule.willDeleteListener) {
						PluginModule.willDeleteListener(id, registrationName);
					}

					var bankForRegistrationName = listenerBank[registrationName];
					// TODO: This should never be null -- when is it?
					if (bankForRegistrationName) {
						delete bankForRegistrationName[id];
					}
				},

				/**
				 * Deletes all listeners for the DOM element with the supplied ID.
				 *
				 * @param {string} id ID of the DOM element.
				 */
				deleteAllListeners: function (id) {
					for (var registrationName in listenerBank) {
						if (!listenerBank[registrationName][id]) {
							continue;
						}

						var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
						if (PluginModule && PluginModule.willDeleteListener) {
							PluginModule.willDeleteListener(id, registrationName);
						}

						delete listenerBank[registrationName][id];
					}
				},

				/**
				 * Allows registered plugins an opportunity to extract events from top-level
				 * native browser events.
				 *
				 * @param {string} topLevelType Record from `EventConstants`.
				 * @param {DOMEventTarget} topLevelTarget The listening component root node.
				 * @param {string} topLevelTargetID ID of `topLevelTarget`.
				 * @param {object} nativeEvent Native browser event.
				 * @return {*} An accumulation of synthetic events.
				 * @internal
				 */
				extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
					var events;
					var plugins = EventPluginRegistry.plugins;
					for (var i = 0; i < plugins.length; i++) {
						// Not every plugin in the ordering may be loaded at runtime.
						var possiblePlugin = plugins[i];
						if (possiblePlugin) {
							var extractedEvents = possiblePlugin.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget);
							if (extractedEvents) {
								events = accumulateInto(events, extractedEvents);
							}
						}
					}
					return events;
				},

				/**
				 * Enqueues a synthetic event that should be dispatched when
				 * `processEventQueue` is invoked.
				 *
				 * @param {*} events An accumulation of synthetic events.
				 * @internal
				 */
				enqueueEvents: function (events) {
					if (events) {
						eventQueue = accumulateInto(eventQueue, events);
					}
				},

				/**
				 * Dispatches all synthetic events on the event queue.
				 *
				 * @internal
				 */
				processEventQueue: function (simulated) {
					// Set `eventQueue` to null before processing it so that we can tell if more
					// events get enqueued while processing.
					var processingEventQueue = eventQueue;
					eventQueue = null;
					if (simulated) {
						forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
					} else {
						forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
					}
					!!eventQueue ? "development" !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing ' + 'an event queue. Support for this has not yet been implemented.') : invariant(false) : undefined;
					// This would be a good time to rethrow if any of the event handlers threw.
					ReactErrorUtils.rethrowCaughtError();
				},

				/**
				 * These are needed for tests only. Do not use!
				 */
				__purge: function () {
					listenerBank = {};
				},

				__getListenerBank: function () {
					return listenerBank;
				}

			};

			module.exports = EventPluginHub;
		}, { "115": 115, "124": 124, "161": 161, "17": 17, "173": 173, "18": 18, "61": 61 }], 17: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule EventPluginRegistry
			 * @typechecks static-only
			 */

			'use strict';

			var invariant = _dereq_(161);

			/**
			 * Injectable ordering of event plugins.
			 */
			var EventPluginOrder = null;

			/**
			 * Injectable mapping from names to event plugin modules.
			 */
			var namesToPlugins = {};

			/**
			 * Recomputes the plugin list using the injected plugins and plugin ordering.
			 *
			 * @private
			 */
			function recomputePluginOrdering() {
				if (!EventPluginOrder) {
					// Wait until an `EventPluginOrder` is injected.
					return;
				}
				for (var pluginName in namesToPlugins) {
					var PluginModule = namesToPlugins[pluginName];
					var pluginIndex = EventPluginOrder.indexOf(pluginName);
					!(pluginIndex > -1) ? "development" !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in ' + 'the plugin ordering, `%s`.', pluginName) : invariant(false) : undefined;
					if (EventPluginRegistry.plugins[pluginIndex]) {
						continue;
					}
					!PluginModule.extractEvents ? "development" !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` ' + 'method, but `%s` does not.', pluginName) : invariant(false) : undefined;
					EventPluginRegistry.plugins[pluginIndex] = PluginModule;
					var publishedEvents = PluginModule.eventTypes;
					for (var eventName in publishedEvents) {
						!publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ? "development" !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : invariant(false) : undefined;
					}
				}
			}

			/**
			 * Publishes an event so that it can be dispatched by the supplied plugin.
			 *
			 * @param {object} dispatchConfig Dispatch configuration for the event.
			 * @param {object} PluginModule Plugin publishing the event.
			 * @return {boolean} True if the event was successfully published.
			 * @private
			 */
			function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
				!!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? "development" !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'event name, `%s`.', eventName) : invariant(false) : undefined;
				EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

				var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
				if (phasedRegistrationNames) {
					for (var phaseName in phasedRegistrationNames) {
						if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
							var phasedRegistrationName = phasedRegistrationNames[phaseName];
							publishRegistrationName(phasedRegistrationName, PluginModule, eventName);
						}
					}
					return true;
				} else if (dispatchConfig.registrationName) {
					publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);
					return true;
				}
				return false;
			}

			/**
			 * Publishes a registration name that is used to identify dispatched events and
			 * can be used with `EventPluginHub.putListener` to register listeners.
			 *
			 * @param {string} registrationName Registration name to add.
			 * @param {object} PluginModule Plugin publishing the event.
			 * @private
			 */
			function publishRegistrationName(registrationName, PluginModule, eventName) {
				!!EventPluginRegistry.registrationNameModules[registrationName] ? "development" !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'registration name, `%s`.', registrationName) : invariant(false) : undefined;
				EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
				EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;
			}

			/**
			 * Registers plugins so that they can extract and dispatch events.
			 *
			 * @see {EventPluginHub}
			 */
			var EventPluginRegistry = {

				/**
				 * Ordered list of injected plugins.
				 */
				plugins: [],

				/**
				 * Mapping from event name to dispatch config
				 */
				eventNameDispatchConfigs: {},

				/**
				 * Mapping from registration name to plugin module
				 */
				registrationNameModules: {},

				/**
				 * Mapping from registration name to event name
				 */
				registrationNameDependencies: {},

				/**
				 * Injects an ordering of plugins (by plugin name). This allows the ordering
				 * to be decoupled from injection of the actual plugins so that ordering is
				 * always deterministic regardless of packaging, on-the-fly injection, etc.
				 *
				 * @param {array} InjectedEventPluginOrder
				 * @internal
				 * @see {EventPluginHub.injection.injectEventPluginOrder}
				 */
				injectEventPluginOrder: function (InjectedEventPluginOrder) {
					!!EventPluginOrder ? "development" !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than ' + 'once. You are likely trying to load more than one copy of React.') : invariant(false) : undefined;
					// Clone the ordering so it cannot be dynamically mutated.
					EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
					recomputePluginOrdering();
				},

				/**
				 * Injects plugins to be used by `EventPluginHub`. The plugin names must be
				 * in the ordering injected by `injectEventPluginOrder`.
				 *
				 * Plugins can be injected as part of page initialization or on-the-fly.
				 *
				 * @param {object} injectedNamesToPlugins Map from names to plugin modules.
				 * @internal
				 * @see {EventPluginHub.injection.injectEventPluginsByName}
				 */
				injectEventPluginsByName: function (injectedNamesToPlugins) {
					var isOrderingDirty = false;
					for (var pluginName in injectedNamesToPlugins) {
						if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
							continue;
						}
						var PluginModule = injectedNamesToPlugins[pluginName];
						if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {
							!!namesToPlugins[pluginName] ? "development" !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins ' + 'using the same name, `%s`.', pluginName) : invariant(false) : undefined;
							namesToPlugins[pluginName] = PluginModule;
							isOrderingDirty = true;
						}
					}
					if (isOrderingDirty) {
						recomputePluginOrdering();
					}
				},

				/**
				 * Looks up the plugin for the supplied event.
				 *
				 * @param {object} event A synthetic event.
				 * @return {?object} The plugin that created the supplied event.
				 * @internal
				 */
				getPluginModuleForEvent: function (event) {
					var dispatchConfig = event.dispatchConfig;
					if (dispatchConfig.registrationName) {
						return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
					}
					for (var phase in dispatchConfig.phasedRegistrationNames) {
						if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
							continue;
						}
						var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];
						if (PluginModule) {
							return PluginModule;
						}
					}
					return null;
				},

				/**
				 * Exposed for unit testing.
				 * @private
				 */
				_resetEventPlugins: function () {
					EventPluginOrder = null;
					for (var pluginName in namesToPlugins) {
						if (namesToPlugins.hasOwnProperty(pluginName)) {
							delete namesToPlugins[pluginName];
						}
					}
					EventPluginRegistry.plugins.length = 0;

					var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
					for (var eventName in eventNameDispatchConfigs) {
						if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
							delete eventNameDispatchConfigs[eventName];
						}
					}

					var registrationNameModules = EventPluginRegistry.registrationNameModules;
					for (var registrationName in registrationNameModules) {
						if (registrationNameModules.hasOwnProperty(registrationName)) {
							delete registrationNameModules[registrationName];
						}
					}
				}

			};

			module.exports = EventPluginRegistry;
		}, { "161": 161 }], 18: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule EventPluginUtils
			 */

			'use strict';

			var EventConstants = _dereq_(15);
			var ReactErrorUtils = _dereq_(61);

			var invariant = _dereq_(161);
			var warning = _dereq_(173);

			/**
			 * Injected dependencies:
			 */

			/**
			 * - `Mount`: [required] Module that can convert between React dom IDs and
			 *   actual node references.
			 */
			var injection = {
				Mount: null,
				injectMount: function (InjectedMount) {
					injection.Mount = InjectedMount;
					if ("development" !== 'production') {
						"development" !== 'production' ? warning(InjectedMount && InjectedMount.getNode && InjectedMount.getID, 'EventPluginUtils.injection.injectMount(...): Injected Mount ' + 'module is missing getNode or getID.') : undefined;
					}
				}
			};

			var topLevelTypes = EventConstants.topLevelTypes;

			function isEndish(topLevelType) {
				return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;
			}

			function isMoveish(topLevelType) {
				return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;
			}
			function isStartish(topLevelType) {
				return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;
			}

			var validateEventDispatches;
			if ("development" !== 'production') {
				validateEventDispatches = function (event) {
					var dispatchListeners = event._dispatchListeners;
					var dispatchIDs = event._dispatchIDs;

					var listenersIsArr = Array.isArray(dispatchListeners);
					var idsIsArr = Array.isArray(dispatchIDs);
					var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;
					var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

					"development" !== 'production' ? warning(idsIsArr === listenersIsArr && IDsLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : undefined;
				};
			}

			/**
			 * Dispatch the event to the listener.
			 * @param {SyntheticEvent} event SyntheticEvent to handle
			 * @param {boolean} simulated If the event is simulated (changes exn behavior)
			 * @param {function} listener Application-level callback
			 * @param {string} domID DOM id to pass to the callback.
			 */
			function executeDispatch(event, simulated, listener, domID) {
				var type = event.type || 'unknown-event';
				event.currentTarget = injection.Mount.getNode(domID);
				if (simulated) {
					ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event, domID);
				} else {
					ReactErrorUtils.invokeGuardedCallback(type, listener, event, domID);
				}
				event.currentTarget = null;
			}

			/**
			 * Standard/simple iteration through an event's collected dispatches.
			 */
			function executeDispatchesInOrder(event, simulated) {
				var dispatchListeners = event._dispatchListeners;
				var dispatchIDs = event._dispatchIDs;
				if ("development" !== 'production') {
					validateEventDispatches(event);
				}
				if (Array.isArray(dispatchListeners)) {
					for (var i = 0; i < dispatchListeners.length; i++) {
						if (event.isPropagationStopped()) {
							break;
						}
						// Listeners and IDs are two parallel arrays that are always in sync.
						executeDispatch(event, simulated, dispatchListeners[i], dispatchIDs[i]);
					}
				} else if (dispatchListeners) {
					executeDispatch(event, simulated, dispatchListeners, dispatchIDs);
				}
				event._dispatchListeners = null;
				event._dispatchIDs = null;
			}

			/**
			 * Standard/simple iteration through an event's collected dispatches, but stops
			 * at the first dispatch execution returning true, and returns that id.
			 *
			 * @return {?string} id of the first dispatch execution who's listener returns
			 * true, or null if no listener returned true.
			 */
			function executeDispatchesInOrderStopAtTrueImpl(event) {
				var dispatchListeners = event._dispatchListeners;
				var dispatchIDs = event._dispatchIDs;
				if ("development" !== 'production') {
					validateEventDispatches(event);
				}
				if (Array.isArray(dispatchListeners)) {
					for (var i = 0; i < dispatchListeners.length; i++) {
						if (event.isPropagationStopped()) {
							break;
						}
						// Listeners and IDs are two parallel arrays that are always in sync.
						if (dispatchListeners[i](event, dispatchIDs[i])) {
							return dispatchIDs[i];
						}
					}
				} else if (dispatchListeners) {
					if (dispatchListeners(event, dispatchIDs)) {
						return dispatchIDs;
					}
				}
				return null;
			}

			/**
			 * @see executeDispatchesInOrderStopAtTrueImpl
			 */
			function executeDispatchesInOrderStopAtTrue(event) {
				var ret = executeDispatchesInOrderStopAtTrueImpl(event);
				event._dispatchIDs = null;
				event._dispatchListeners = null;
				return ret;
			}

			/**
			 * Execution of a "direct" dispatch - there must be at most one dispatch
			 * accumulated on the event or it is considered an error. It doesn't really make
			 * sense for an event with multiple dispatches (bubbled) to keep track of the
			 * return values at each dispatch execution, but it does tend to make sense when
			 * dealing with "direct" dispatches.
			 *
			 * @return {*} The return value of executing the single dispatch.
			 */
			function executeDirectDispatch(event) {
				if ("development" !== 'production') {
					validateEventDispatches(event);
				}
				var dispatchListener = event._dispatchListeners;
				var dispatchID = event._dispatchIDs;
				!!Array.isArray(dispatchListener) ? "development" !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : invariant(false) : undefined;
				var res = dispatchListener ? dispatchListener(event, dispatchID) : null;
				event._dispatchListeners = null;
				event._dispatchIDs = null;
				return res;
			}

			/**
			 * @param {SyntheticEvent} event
			 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
			 */
			function hasDispatches(event) {
				return !!event._dispatchListeners;
			}

			/**
			 * General utilities that are useful in creating custom Event Plugins.
			 */
			var EventPluginUtils = {
				isEndish: isEndish,
				isMoveish: isMoveish,
				isStartish: isStartish,

				executeDirectDispatch: executeDirectDispatch,
				executeDispatchesInOrder: executeDispatchesInOrder,
				executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
				hasDispatches: hasDispatches,

				getNode: function (id) {
					return injection.Mount.getNode(id);
				},
				getID: function (node) {
					return injection.Mount.getID(node);
				},

				injection: injection
			};

			module.exports = EventPluginUtils;
		}, { "15": 15, "161": 161, "173": 173, "61": 61 }], 19: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule EventPropagators
			 */

			'use strict';

			var EventConstants = _dereq_(15);
			var EventPluginHub = _dereq_(16);

			var warning = _dereq_(173);

			var accumulateInto = _dereq_(115);
			var forEachAccumulated = _dereq_(124);

			var PropagationPhases = EventConstants.PropagationPhases;
			var getListener = EventPluginHub.getListener;

			/**
			 * Some event types have a notion of different registration names for different
			 * "phases" of propagation. This finds listeners by a given phase.
			 */
			function listenerAtPhase(id, event, propagationPhase) {
				var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
				return getListener(id, registrationName);
			}

			/**
			 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
			 * here, allows us to not have to bind or create functions for each event.
			 * Mutating the event's members allows us to not have to create a wrapping
			 * "dispatch" object that pairs the event with the listener.
			 */
			function accumulateDirectionalDispatches(domID, upwards, event) {
				if ("development" !== 'production') {
					"development" !== 'production' ? warning(domID, 'Dispatching id must not be null') : undefined;
				}
				var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
				var listener = listenerAtPhase(domID, event, phase);
				if (listener) {
					event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
					event._dispatchIDs = accumulateInto(event._dispatchIDs, domID);
				}
			}

			/**
			 * Collect dispatches (must be entirely collected before dispatching - see unit
			 * tests). Lazily allocate the array to conserve memory.  We must loop through
			 * each event and perform the traversal for each one. We cannot perform a
			 * single traversal for the entire collection of events because each event may
			 * have a different target.
			 */
			function accumulateTwoPhaseDispatchesSingle(event) {
				if (event && event.dispatchConfig.phasedRegistrationNames) {
					EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(event.dispatchMarker, accumulateDirectionalDispatches, event);
				}
			}

			/**
			 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
			 */
			function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
				if (event && event.dispatchConfig.phasedRegistrationNames) {
					EventPluginHub.injection.getInstanceHandle().traverseTwoPhaseSkipTarget(event.dispatchMarker, accumulateDirectionalDispatches, event);
				}
			}

			/**
			 * Accumulates without regard to direction, does not look for phased
			 * registration names. Same as `accumulateDirectDispatchesSingle` but without
			 * requiring that the `dispatchMarker` be the same as the dispatched ID.
			 */
			function accumulateDispatches(id, ignoredDirection, event) {
				if (event && event.dispatchConfig.registrationName) {
					var registrationName = event.dispatchConfig.registrationName;
					var listener = getListener(id, registrationName);
					if (listener) {
						event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
						event._dispatchIDs = accumulateInto(event._dispatchIDs, id);
					}
				}
			}

			/**
			 * Accumulates dispatches on an `SyntheticEvent`, but only for the
			 * `dispatchMarker`.
			 * @param {SyntheticEvent} event
			 */
			function accumulateDirectDispatchesSingle(event) {
				if (event && event.dispatchConfig.registrationName) {
					accumulateDispatches(event.dispatchMarker, null, event);
				}
			}

			function accumulateTwoPhaseDispatches(events) {
				forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
			}

			function accumulateTwoPhaseDispatchesSkipTarget(events) {
				forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
			}

			function accumulateEnterLeaveDispatches(leave, enter, fromID, toID) {
				EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(fromID, toID, accumulateDispatches, leave, enter);
			}

			function accumulateDirectDispatches(events) {
				forEachAccumulated(events, accumulateDirectDispatchesSingle);
			}

			/**
			 * A small set of propagation patterns, each of which will accept a small amount
			 * of information, and generate a set of "dispatch ready event objects" - which
			 * are sets of events that have already been annotated with a set of dispatched
			 * listener functions/ids. The API is designed this way to discourage these
			 * propagation strategies from actually executing the dispatches, since we
			 * always want to collect the entire set of dispatches before executing event a
			 * single one.
			 *
			 * @constructor EventPropagators
			 */
			var EventPropagators = {
				accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
				accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
				accumulateDirectDispatches: accumulateDirectDispatches,
				accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
			};

			module.exports = EventPropagators;
		}, { "115": 115, "124": 124, "15": 15, "16": 16, "173": 173 }], 20: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule FallbackCompositionState
			 * @typechecks static-only
			 */

			'use strict';

			var PooledClass = _dereq_(25);

			var assign = _dereq_(24);
			var getTextContentAccessor = _dereq_(131);

			/**
			 * This helper class stores information about text content of a target node,
			 * allowing comparison of content before and after a given event.
			 *
			 * Identify the node where selection currently begins, then observe
			 * both its text content and its current position in the DOM. Since the
			 * browser may natively replace the target node during composition, we can
			 * use its position to find its replacement.
			 *
			 * @param {DOMEventTarget} root
			 */
			function FallbackCompositionState(root) {
				this._root = root;
				this._startText = this.getText();
				this._fallbackText = null;
			}

			assign(FallbackCompositionState.prototype, {
				destructor: function () {
					this._root = null;
					this._startText = null;
					this._fallbackText = null;
				},

				/**
				 * Get current text of input.
				 *
				 * @return {string}
				 */
				getText: function () {
					if ('value' in this._root) {
						return this._root.value;
					}
					return this._root[getTextContentAccessor()];
				},

				/**
				 * Determine the differing substring between the initially stored
				 * text content and the current content.
				 *
				 * @return {string}
				 */
				getData: function () {
					if (this._fallbackText) {
						return this._fallbackText;
					}

					var start;
					var startValue = this._startText;
					var startLength = startValue.length;
					var end;
					var endValue = this.getText();
					var endLength = endValue.length;

					for (start = 0; start < startLength; start++) {
						if (startValue[start] !== endValue[start]) {
							break;
						}
					}

					var minEnd = startLength - start;
					for (end = 1; end <= minEnd; end++) {
						if (startValue[startLength - end] !== endValue[endLength - end]) {
							break;
						}
					}

					var sliceTail = end > 1 ? 1 - end : undefined;
					this._fallbackText = endValue.slice(start, sliceTail);
					return this._fallbackText;
				}
			});

			PooledClass.addPoolingTo(FallbackCompositionState);

			module.exports = FallbackCompositionState;
		}, { "131": 131, "24": 24, "25": 25 }], 21: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule HTMLDOMPropertyConfig
			 */

			'use strict';

			var DOMProperty = _dereq_(10);
			var ExecutionEnvironment = _dereq_(147);

			var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;
			var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
			var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
			var HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;
			var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
			var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
			var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

			var hasSVG;
			if (ExecutionEnvironment.canUseDOM) {
				var implementation = document.implementation;
				hasSVG = implementation && implementation.hasFeature && implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1');
			}

			var HTMLDOMPropertyConfig = {
				isCustomAttribute: RegExp.prototype.test.bind(/^(data|aria)-[a-z_][a-z\d_.\-]*$/),
				Properties: {
					/**
					 * Standard Properties
					 */
					accept: null,
					acceptCharset: null,
					accessKey: null,
					action: null,
					allowFullScreen: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
					allowTransparency: MUST_USE_ATTRIBUTE,
					alt: null,
					async: HAS_BOOLEAN_VALUE,
					autoComplete: null,
					// autoFocus is polyfilled/normalized by AutoFocusUtils
					// autoFocus: HAS_BOOLEAN_VALUE,
					autoPlay: HAS_BOOLEAN_VALUE,
					capture: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
					cellPadding: null,
					cellSpacing: null,
					charSet: MUST_USE_ATTRIBUTE,
					challenge: MUST_USE_ATTRIBUTE,
					checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
					classID: MUST_USE_ATTRIBUTE,
					// To set className on SVG elements, it's necessary to use .setAttribute;
					// this works on HTML elements too in all browsers except IE8. Conveniently,
					// IE8 doesn't support SVG and so we can simply use the attribute in
					// browsers that support SVG and the property in browsers that don't,
					// regardless of whether the element is HTML or SVG.
					className: hasSVG ? MUST_USE_ATTRIBUTE : MUST_USE_PROPERTY,
					cols: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
					colSpan: null,
					content: null,
					contentEditable: null,
					contextMenu: MUST_USE_ATTRIBUTE,
					controls: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
					coords: null,
					crossOrigin: null,
					data: null, // For `<object />` acts as `src`.
					dateTime: MUST_USE_ATTRIBUTE,
					'default': HAS_BOOLEAN_VALUE,
					defer: HAS_BOOLEAN_VALUE,
					dir: null,
					disabled: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
					download: HAS_OVERLOADED_BOOLEAN_VALUE,
					draggable: null,
					encType: null,
					form: MUST_USE_ATTRIBUTE,
					formAction: MUST_USE_ATTRIBUTE,
					formEncType: MUST_USE_ATTRIBUTE,
					formMethod: MUST_USE_ATTRIBUTE,
					formNoValidate: HAS_BOOLEAN_VALUE,
					formTarget: MUST_USE_ATTRIBUTE,
					frameBorder: MUST_USE_ATTRIBUTE,
					headers: null,
					height: MUST_USE_ATTRIBUTE,
					hidden: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
					high: null,
					href: null,
					hrefLang: null,
					htmlFor: null,
					httpEquiv: null,
					icon: null,
					id: MUST_USE_PROPERTY,
					inputMode: MUST_USE_ATTRIBUTE,
					integrity: null,
					is: MUST_USE_ATTRIBUTE,
					keyParams: MUST_USE_ATTRIBUTE,
					keyType: MUST_USE_ATTRIBUTE,
					kind: null,
					label: null,
					lang: null,
					list: MUST_USE_ATTRIBUTE,
					loop: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
					low: null,
					manifest: MUST_USE_ATTRIBUTE,
					marginHeight: null,
					marginWidth: null,
					max: null,
					maxLength: MUST_USE_ATTRIBUTE,
					media: MUST_USE_ATTRIBUTE,
					mediaGroup: null,
					method: null,
					min: null,
					minLength: MUST_USE_ATTRIBUTE,
					multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
					muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
					name: null,
					nonce: MUST_USE_ATTRIBUTE,
					noValidate: HAS_BOOLEAN_VALUE,
					open: HAS_BOOLEAN_VALUE,
					optimum: null,
					pattern: null,
					placeholder: null,
					poster: null,
					preload: null,
					radioGroup: null,
					readOnly: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
					rel: null,
					required: HAS_BOOLEAN_VALUE,
					reversed: HAS_BOOLEAN_VALUE,
					role: MUST_USE_ATTRIBUTE,
					rows: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
					rowSpan: null,
					sandbox: null,
					scope: null,
					scoped: HAS_BOOLEAN_VALUE,
					scrolling: null,
					seamless: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
					selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
					shape: null,
					size: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
					sizes: MUST_USE_ATTRIBUTE,
					span: HAS_POSITIVE_NUMERIC_VALUE,
					spellCheck: null,
					src: null,
					srcDoc: MUST_USE_PROPERTY,
					srcLang: null,
					srcSet: MUST_USE_ATTRIBUTE,
					start: HAS_NUMERIC_VALUE,
					step: null,
					style: null,
					summary: null,
					tabIndex: null,
					target: null,
					title: null,
					type: null,
					useMap: null,
					value: MUST_USE_PROPERTY | HAS_SIDE_EFFECTS,
					width: MUST_USE_ATTRIBUTE,
					wmode: MUST_USE_ATTRIBUTE,
					wrap: null,

					/**
					 * RDFa Properties
					 */
					about: MUST_USE_ATTRIBUTE,
					datatype: MUST_USE_ATTRIBUTE,
					inlist: MUST_USE_ATTRIBUTE,
					prefix: MUST_USE_ATTRIBUTE,
					// property is also supported for OpenGraph in meta tags.
					property: MUST_USE_ATTRIBUTE,
					resource: MUST_USE_ATTRIBUTE,
					'typeof': MUST_USE_ATTRIBUTE,
					vocab: MUST_USE_ATTRIBUTE,

					/**
					 * Non-standard Properties
					 */
					// autoCapitalize and autoCorrect are supported in Mobile Safari for
					// keyboard hints.
					autoCapitalize: MUST_USE_ATTRIBUTE,
					autoCorrect: MUST_USE_ATTRIBUTE,
					// autoSave allows WebKit/Blink to persist values of input fields on page reloads
					autoSave: null,
					// color is for Safari mask-icon link
					color: null,
					// itemProp, itemScope, itemType are for
					// Microdata support. See http://schema.org/docs/gs.html
					itemProp: MUST_USE_ATTRIBUTE,
					itemScope: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
					itemType: MUST_USE_ATTRIBUTE,
					// itemID and itemRef are for Microdata support as well but
					// only specified in the the WHATWG spec document. See
					// https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
					itemID: MUST_USE_ATTRIBUTE,
					itemRef: MUST_USE_ATTRIBUTE,
					// results show looking glass icon and recent searches on input
					// search fields in WebKit/Blink
					results: null,
					// IE-only attribute that specifies security restrictions on an iframe
					// as an alternative to the sandbox attribute on IE<10
					security: MUST_USE_ATTRIBUTE,
					// IE-only attribute that controls focus behavior
					unselectable: MUST_USE_ATTRIBUTE
				},
				DOMAttributeNames: {
					acceptCharset: 'accept-charset',
					className: 'class',
					htmlFor: 'for',
					httpEquiv: 'http-equiv'
				},
				DOMPropertyNames: {
					autoComplete: 'autocomplete',
					autoFocus: 'autofocus',
					autoPlay: 'autoplay',
					autoSave: 'autosave',
					// `encoding` is equivalent to `enctype`, IE8 lacks an `enctype` setter.
					// http://www.w3.org/TR/html5/forms.html#dom-fs-encoding
					encType: 'encoding',
					hrefLang: 'hreflang',
					radioGroup: 'radiogroup',
					spellCheck: 'spellcheck',
					srcDoc: 'srcdoc',
					srcSet: 'srcset'
				}
			};

			module.exports = HTMLDOMPropertyConfig;
		}, { "10": 10, "147": 147 }], 22: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule LinkedStateMixin
			 * @typechecks static-only
			 */

			'use strict';

			var ReactLink = _dereq_(70);
			var ReactStateSetters = _dereq_(90);

			/**
			 * A simple mixin around ReactLink.forState().
			 */
			var LinkedStateMixin = {
				/**
				 * Create a ReactLink that's linked to part of this component's state. The
				 * ReactLink will have the current value of this.state[key] and will call
				 * setState() when a change is requested.
				 *
				 * @param {string} key state key to update. Note: you may want to use keyOf()
				 * if you're using Google Closure Compiler advanced mode.
				 * @return {ReactLink} ReactLink instance linking to the state.
				 */
				linkState: function (key) {
					return new ReactLink(this.state[key], ReactStateSetters.createStateKeySetter(this, key));
				}
			};

			module.exports = LinkedStateMixin;
		}, { "70": 70, "90": 90 }], 23: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule LinkedValueUtils
			 * @typechecks static-only
			 */

			'use strict';

			var ReactPropTypes = _dereq_(82);
			var ReactPropTypeLocations = _dereq_(81);

			var invariant = _dereq_(161);
			var warning = _dereq_(173);

			var hasReadOnlyValue = {
				'button': true,
				'checkbox': true,
				'image': true,
				'hidden': true,
				'radio': true,
				'reset': true,
				'submit': true
			};

			function _assertSingleLink(inputProps) {
				!(inputProps.checkedLink == null || inputProps.valueLink == null) ? "development" !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use ' + 'checkedLink, you probably don\'t want to use valueLink and vice versa.') : invariant(false) : undefined;
			}
			function _assertValueLink(inputProps) {
				_assertSingleLink(inputProps);
				!(inputProps.value == null && inputProps.onChange == null) ? "development" !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want ' + 'to use value or onChange, you probably don\'t want to use valueLink.') : invariant(false) : undefined;
			}

			function _assertCheckedLink(inputProps) {
				_assertSingleLink(inputProps);
				!(inputProps.checked == null && inputProps.onChange == null) ? "development" !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. ' + 'If you want to use checked or onChange, you probably don\'t want to ' + 'use checkedLink') : invariant(false) : undefined;
			}

			var propTypes = {
				value: function (props, propName, componentName) {
					if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
						return null;
					}
					return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
				},
				checked: function (props, propName, componentName) {
					if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
						return null;
					}
					return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
				},
				onChange: ReactPropTypes.func
			};

			var loggedTypeFailures = {};
			function getDeclarationErrorAddendum(owner) {
				if (owner) {
					var name = owner.getName();
					if (name) {
						return ' Check the render method of `' + name + '`.';
					}
				}
				return '';
			}

			/**
			 * Provide a linked `value` attribute for controlled forms. You should not use
			 * this outside of the ReactDOM controlled form components.
			 */
			var LinkedValueUtils = {
				checkPropTypes: function (tagName, props, owner) {
					for (var propName in propTypes) {
						if (propTypes.hasOwnProperty(propName)) {
							var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop);
						}
						if (error instanceof Error && !(error.message in loggedTypeFailures)) {
							// Only monitor this failure once because there tends to be a lot of the
							// same error.
							loggedTypeFailures[error.message] = true;

							var addendum = getDeclarationErrorAddendum(owner);
							"development" !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : undefined;
						}
					}
				},

				/**
				 * @param {object} inputProps Props for form component
				 * @return {*} current value of the input either from value prop or link.
				 */
				getValue: function (inputProps) {
					if (inputProps.valueLink) {
						_assertValueLink(inputProps);
						return inputProps.valueLink.value;
					}
					return inputProps.value;
				},

				/**
				 * @param {object} inputProps Props for form component
				 * @return {*} current checked status of the input either from checked prop
				 *             or link.
				 */
				getChecked: function (inputProps) {
					if (inputProps.checkedLink) {
						_assertCheckedLink(inputProps);
						return inputProps.checkedLink.value;
					}
					return inputProps.checked;
				},

				/**
				 * @param {object} inputProps Props for form component
				 * @param {SyntheticEvent} event change event to handle
				 */
				executeOnChange: function (inputProps, event) {
					if (inputProps.valueLink) {
						_assertValueLink(inputProps);
						return inputProps.valueLink.requestChange(event.target.value);
					} else if (inputProps.checkedLink) {
						_assertCheckedLink(inputProps);
						return inputProps.checkedLink.requestChange(event.target.checked);
					} else if (inputProps.onChange) {
						return inputProps.onChange.call(undefined, event);
					}
				}
			};

			module.exports = LinkedValueUtils;
		}, { "161": 161, "173": 173, "81": 81, "82": 82 }], 24: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2014-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule Object.assign
			 */

			// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign

			'use strict';

			function assign(target, sources) {
				if (target == null) {
					throw new TypeError('Object.assign target cannot be null or undefined');
				}

				var to = Object(target);
				var hasOwnProperty = Object.prototype.hasOwnProperty;

				for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {
					var nextSource = arguments[nextIndex];
					if (nextSource == null) {
						continue;
					}

					var from = Object(nextSource);

					// We don't currently support accessors nor proxies. Therefore this
					// copy cannot throw. If we ever supported this then we must handle
					// exceptions and side-effects. We don't support symbols so they won't
					// be transferred.

					for (var key in from) {
						if (hasOwnProperty.call(from, key)) {
							to[key] = from[key];
						}
					}
				}

				return to;
			}

			module.exports = assign;
		}, {}], 25: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule PooledClass
			 */

			'use strict';

			var invariant = _dereq_(161);

			/**
			 * Static poolers. Several custom versions for each potential number of
			 * arguments. A completely generic pooler is easy to implement, but would
			 * require accessing the `arguments` object. In each of these, `this` refers to
			 * the Class itself, not an instance. If any others are needed, simply add them
			 * here, or in their own files.
			 */
			var oneArgumentPooler = function (copyFieldsFrom) {
				var Klass = this;
				if (Klass.instancePool.length) {
					var instance = Klass.instancePool.pop();
					Klass.call(instance, copyFieldsFrom);
					return instance;
				} else {
					return new Klass(copyFieldsFrom);
				}
			};

			var twoArgumentPooler = function (a1, a2) {
				var Klass = this;
				if (Klass.instancePool.length) {
					var instance = Klass.instancePool.pop();
					Klass.call(instance, a1, a2);
					return instance;
				} else {
					return new Klass(a1, a2);
				}
			};

			var threeArgumentPooler = function (a1, a2, a3) {
				var Klass = this;
				if (Klass.instancePool.length) {
					var instance = Klass.instancePool.pop();
					Klass.call(instance, a1, a2, a3);
					return instance;
				} else {
					return new Klass(a1, a2, a3);
				}
			};

			var fourArgumentPooler = function (a1, a2, a3, a4) {
				var Klass = this;
				if (Klass.instancePool.length) {
					var instance = Klass.instancePool.pop();
					Klass.call(instance, a1, a2, a3, a4);
					return instance;
				} else {
					return new Klass(a1, a2, a3, a4);
				}
			};

			var fiveArgumentPooler = function (a1, a2, a3, a4, a5) {
				var Klass = this;
				if (Klass.instancePool.length) {
					var instance = Klass.instancePool.pop();
					Klass.call(instance, a1, a2, a3, a4, a5);
					return instance;
				} else {
					return new Klass(a1, a2, a3, a4, a5);
				}
			};

			var standardReleaser = function (instance) {
				var Klass = this;
				!(instance instanceof Klass) ? "development" !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : invariant(false) : undefined;
				instance.destructor();
				if (Klass.instancePool.length < Klass.poolSize) {
					Klass.instancePool.push(instance);
				}
			};

			var DEFAULT_POOL_SIZE = 10;
			var DEFAULT_POOLER = oneArgumentPooler;

			/**
			 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
			 * itself (statically) not adding any prototypical fields. Any CopyConstructor
			 * you give this may have a `poolSize` property, and will look for a
			 * prototypical `destructor` on instances (optional).
			 *
			 * @param {Function} CopyConstructor Constructor that can be used to reset.
			 * @param {Function} pooler Customizable pooler.
			 */
			var addPoolingTo = function (CopyConstructor, pooler) {
				var NewKlass = CopyConstructor;
				NewKlass.instancePool = [];
				NewKlass.getPooled = pooler || DEFAULT_POOLER;
				if (!NewKlass.poolSize) {
					NewKlass.poolSize = DEFAULT_POOL_SIZE;
				}
				NewKlass.release = standardReleaser;
				return NewKlass;
			};

			var PooledClass = {
				addPoolingTo: addPoolingTo,
				oneArgumentPooler: oneArgumentPooler,
				twoArgumentPooler: twoArgumentPooler,
				threeArgumentPooler: threeArgumentPooler,
				fourArgumentPooler: fourArgumentPooler,
				fiveArgumentPooler: fiveArgumentPooler
			};

			module.exports = PooledClass;
		}, { "161": 161 }], 26: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule React
			 */

			'use strict';

			var ReactDOM = _dereq_(40);
			var ReactDOMServer = _dereq_(50);
			var ReactIsomorphic = _dereq_(69);

			var assign = _dereq_(24);
			var deprecated = _dereq_(120);

			// `version` will be added here by ReactIsomorphic.
			var React = {};

			assign(React, ReactIsomorphic);

			assign(React, {
				// ReactDOM
				findDOMNode: deprecated('findDOMNode', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.findDOMNode),
				render: deprecated('render', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.render),
				unmountComponentAtNode: deprecated('unmountComponentAtNode', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.unmountComponentAtNode),

				// ReactDOMServer
				renderToString: deprecated('renderToString', 'ReactDOMServer', 'react-dom/server', ReactDOMServer, ReactDOMServer.renderToString),
				renderToStaticMarkup: deprecated('renderToStaticMarkup', 'ReactDOMServer', 'react-dom/server', ReactDOMServer, ReactDOMServer.renderToStaticMarkup)
			});

			React.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOM;
			React.__SECRET_DOM_SERVER_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOMServer;

			module.exports = React;
		}, { "120": 120, "24": 24, "40": 40, "50": 50, "69": 69 }], 27: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactBrowserComponentMixin
			 */

			'use strict';

			var ReactInstanceMap = _dereq_(68);

			var findDOMNode = _dereq_(122);
			var warning = _dereq_(173);

			var didWarnKey = '_getDOMNodeDidWarn';

			var ReactBrowserComponentMixin = {
				/**
				 * Returns the DOM node rendered by this component.
				 *
				 * @return {DOMElement} The root node of this component.
				 * @final
				 * @protected
				 */
				getDOMNode: function () {
					"development" !== 'production' ? warning(this.constructor[didWarnKey], '%s.getDOMNode(...) is deprecated. Please use ' + 'ReactDOM.findDOMNode(instance) instead.', ReactInstanceMap.get(this).getName() || this.tagName || 'Unknown') : undefined;
					this.constructor[didWarnKey] = true;
					return findDOMNode(this);
				}
			};

			module.exports = ReactBrowserComponentMixin;
		}, { "122": 122, "173": 173, "68": 68 }], 28: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactBrowserEventEmitter
			 * @typechecks static-only
			 */

			'use strict';

			var EventConstants = _dereq_(15);
			var EventPluginHub = _dereq_(16);
			var EventPluginRegistry = _dereq_(17);
			var ReactEventEmitterMixin = _dereq_(62);
			var ReactPerf = _dereq_(78);
			var ViewportMetrics = _dereq_(114);

			var assign = _dereq_(24);
			var isEventSupported = _dereq_(133);

			/**
			 * Summary of `ReactBrowserEventEmitter` event handling:
			 *
			 *  - Top-level delegation is used to trap most native browser events. This
			 *    may only occur in the main thread and is the responsibility of
			 *    ReactEventListener, which is injected and can therefore support pluggable
			 *    event sources. This is the only work that occurs in the main thread.
			 *
			 *  - We normalize and de-duplicate events to account for browser quirks. This
			 *    may be done in the worker thread.
			 *
			 *  - Forward these native events (with the associated top-level type used to
			 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
			 *    to extract any synthetic events.
			 *
			 *  - The `EventPluginHub` will then process each event by annotating them with
			 *    "dispatches", a sequence of listeners and IDs that care about that event.
			 *
			 *  - The `EventPluginHub` then dispatches the events.
			 *
			 * Overview of React and the event system:
			 *
			 * +------------+    .
			 * |    DOM     |    .
			 * +------------+    .
			 *       |           .
			 *       v           .
			 * +------------+    .
			 * | ReactEvent |    .
			 * |  Listener  |    .
			 * +------------+    .                         +-----------+
			 *       |           .               +--------+|SimpleEvent|
			 *       |           .               |         |Plugin     |
			 * +-----|------+    .               v         +-----------+
			 * |     |      |    .    +--------------+                    +------------+
			 * |     +-----------.--->|EventPluginHub|                    |    Event   |
			 * |            |    .    |              |     +-----------+  | Propagators|
			 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
			 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
			 * |            |    .    |              |     +-----------+  |  utilities |
			 * |     +-----------.--->|              |                    +------------+
			 * |     |      |    .    +--------------+
			 * +-----|------+    .                ^        +-----------+
			 *       |           .                |        |Enter/Leave|
			 *       +           .                +-------+|Plugin     |
			 * +-------------+   .                         +-----------+
			 * | application |   .
			 * |-------------|   .
			 * |             |   .
			 * |             |   .
			 * +-------------+   .
			 *                   .
			 *    React Core     .  General Purpose Event Plugin System
			 */

			var alreadyListeningTo = {};
			var isMonitoringScrollValue = false;
			var reactTopListenersCounter = 0;

			// For events like 'submit' which don't consistently bubble (which we trap at a
			// lower node than `document`), binding at `document` would cause duplicate
			// events so we don't include them here
			var topEventMapping = {
				topAbort: 'abort',
				topBlur: 'blur',
				topCanPlay: 'canplay',
				topCanPlayThrough: 'canplaythrough',
				topChange: 'change',
				topClick: 'click',
				topCompositionEnd: 'compositionend',
				topCompositionStart: 'compositionstart',
				topCompositionUpdate: 'compositionupdate',
				topContextMenu: 'contextmenu',
				topCopy: 'copy',
				topCut: 'cut',
				topDoubleClick: 'dblclick',
				topDrag: 'drag',
				topDragEnd: 'dragend',
				topDragEnter: 'dragenter',
				topDragExit: 'dragexit',
				topDragLeave: 'dragleave',
				topDragOver: 'dragover',
				topDragStart: 'dragstart',
				topDrop: 'drop',
				topDurationChange: 'durationchange',
				topEmptied: 'emptied',
				topEncrypted: 'encrypted',
				topEnded: 'ended',
				topError: 'error',
				topFocus: 'focus',
				topInput: 'input',
				topKeyDown: 'keydown',
				topKeyPress: 'keypress',
				topKeyUp: 'keyup',
				topLoadedData: 'loadeddata',
				topLoadedMetadata: 'loadedmetadata',
				topLoadStart: 'loadstart',
				topMouseDown: 'mousedown',
				topMouseMove: 'mousemove',
				topMouseOut: 'mouseout',
				topMouseOver: 'mouseover',
				topMouseUp: 'mouseup',
				topPaste: 'paste',
				topPause: 'pause',
				topPlay: 'play',
				topPlaying: 'playing',
				topProgress: 'progress',
				topRateChange: 'ratechange',
				topScroll: 'scroll',
				topSeeked: 'seeked',
				topSeeking: 'seeking',
				topSelectionChange: 'selectionchange',
				topStalled: 'stalled',
				topSuspend: 'suspend',
				topTextInput: 'textInput',
				topTimeUpdate: 'timeupdate',
				topTouchCancel: 'touchcancel',
				topTouchEnd: 'touchend',
				topTouchMove: 'touchmove',
				topTouchStart: 'touchstart',
				topVolumeChange: 'volumechange',
				topWaiting: 'waiting',
				topWheel: 'wheel'
			};

			/**
			 * To ensure no conflicts with other potential React instances on the page
			 */
			var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

			function getListeningForDocument(mountAt) {
				// In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
				// directly.
				if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
					mountAt[topListenersIDKey] = reactTopListenersCounter++;
					alreadyListeningTo[mountAt[topListenersIDKey]] = {};
				}
				return alreadyListeningTo[mountAt[topListenersIDKey]];
			}

			/**
			 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
			 * example:
			 *
			 *   ReactBrowserEventEmitter.putListener('myID', 'onClick', myFunction);
			 *
			 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
			 *
			 * @internal
			 */
			var ReactBrowserEventEmitter = assign({}, ReactEventEmitterMixin, {

				/**
				 * Injectable event backend
				 */
				ReactEventListener: null,

				injection: {
					/**
					 * @param {object} ReactEventListener
					 */
					injectReactEventListener: function (ReactEventListener) {
						ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
						ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
					}
				},

				/**
				 * Sets whether or not any created callbacks should be enabled.
				 *
				 * @param {boolean} enabled True if callbacks should be enabled.
				 */
				setEnabled: function (enabled) {
					if (ReactBrowserEventEmitter.ReactEventListener) {
						ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
					}
				},

				/**
				 * @return {boolean} True if callbacks are enabled.
				 */
				isEnabled: function () {
					return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
				},

				/**
				 * We listen for bubbled touch events on the document object.
				 *
				 * Firefox v8.01 (and possibly others) exhibited strange behavior when
				 * mounting `onmousemove` events at some node that was not the document
				 * element. The symptoms were that if your mouse is not moving over something
				 * contained within that mount point (for example on the background) the
				 * top-level listeners for `onmousemove` won't be called. However, if you
				 * register the `mousemove` on the document object, then it will of course
				 * catch all `mousemove`s. This along with iOS quirks, justifies restricting
				 * top-level listeners to the document object only, at least for these
				 * movement types of events and possibly all events.
				 *
				 * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
				 *
				 * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
				 * they bubble to document.
				 *
				 * @param {string} registrationName Name of listener (e.g. `onClick`).
				 * @param {object} contentDocumentHandle Document which owns the container
				 */
				listenTo: function (registrationName, contentDocumentHandle) {
					var mountAt = contentDocumentHandle;
					var isListening = getListeningForDocument(mountAt);
					var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];

					var topLevelTypes = EventConstants.topLevelTypes;
					for (var i = 0; i < dependencies.length; i++) {
						var dependency = dependencies[i];
						if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
							if (dependency === topLevelTypes.topWheel) {
								if (isEventSupported('wheel')) {
									ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);
								} else if (isEventSupported('mousewheel')) {
									ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);
								} else {
									// Firefox needs to capture a different mouse scroll event.
									// @see http://www.quirksmode.org/dom/events/tests/scroll.html
									ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);
								}
							} else if (dependency === topLevelTypes.topScroll) {

								if (isEventSupported('scroll', true)) {
									ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);
								} else {
									ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
								}
							} else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {

								if (isEventSupported('focus', true)) {
									ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);
									ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);
								} else if (isEventSupported('focusin')) {
									// IE has `focusin` and `focusout` events which bubble.
									// @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
									ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);
									ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);
								}

								// to make sure blur and focus event listeners are only attached once
								isListening[topLevelTypes.topBlur] = true;
								isListening[topLevelTypes.topFocus] = true;
							} else if (topEventMapping.hasOwnProperty(dependency)) {
								ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
							}

							isListening[dependency] = true;
						}
					}
				},

				trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
					return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
				},

				trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
					return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
				},

				/**
				 * Listens to window scroll and resize events. We cache scroll values so that
				 * application code can access them without triggering reflows.
				 *
				 * NOTE: Scroll events do not bubble.
				 *
				 * @see http://www.quirksmode.org/dom/events/scroll.html
				 */
				ensureScrollValueMonitoring: function () {
					if (!isMonitoringScrollValue) {
						var refresh = ViewportMetrics.refreshScrollValues;
						ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
						isMonitoringScrollValue = true;
					}
				},

				eventNameDispatchConfigs: EventPluginHub.eventNameDispatchConfigs,

				registrationNameModules: EventPluginHub.registrationNameModules,

				putListener: EventPluginHub.putListener,

				getListener: EventPluginHub.getListener,

				deleteListener: EventPluginHub.deleteListener,

				deleteAllListeners: EventPluginHub.deleteAllListeners

			});

			ReactPerf.measureMethods(ReactBrowserEventEmitter, 'ReactBrowserEventEmitter', {
				putListener: 'putListener',
				deleteListener: 'deleteListener'
			});

			module.exports = ReactBrowserEventEmitter;
		}, { "114": 114, "133": 133, "15": 15, "16": 16, "17": 17, "24": 24, "62": 62, "78": 78 }], 29: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @typechecks
			 * @providesModule ReactCSSTransitionGroup
			 */

			'use strict';

			var React = _dereq_(26);

			var assign = _dereq_(24);

			var ReactTransitionGroup = _dereq_(94);
			var ReactCSSTransitionGroupChild = _dereq_(30);

			function createTransitionTimeoutPropValidator(transitionType) {
				var timeoutPropName = 'transition' + transitionType + 'Timeout';
				var enabledPropName = 'transition' + transitionType;

				return function (props) {
					// If the transition is enabled
					if (props[enabledPropName]) {
						// If no timeout duration is provided
						if (props[timeoutPropName] == null) {
							return new Error(timeoutPropName + ' wasn\'t supplied to ReactCSSTransitionGroup: ' + 'this can cause unreliable animations and won\'t be supported in ' + 'a future version of React. See ' + 'https://fb.me/react-animation-transition-group-timeout for more ' + 'information.');

							// If the duration isn't a number
						} else if (typeof props[timeoutPropName] !== 'number') {
							return new Error(timeoutPropName + ' must be a number (in milliseconds)');
						}
					}
				};
			}

			var ReactCSSTransitionGroup = React.createClass({
				displayName: 'ReactCSSTransitionGroup',

				propTypes: {
					transitionName: ReactCSSTransitionGroupChild.propTypes.name,

					transitionAppear: React.PropTypes.bool,
					transitionEnter: React.PropTypes.bool,
					transitionLeave: React.PropTypes.bool,
					transitionAppearTimeout: createTransitionTimeoutPropValidator('Appear'),
					transitionEnterTimeout: createTransitionTimeoutPropValidator('Enter'),
					transitionLeaveTimeout: createTransitionTimeoutPropValidator('Leave')
				},

				getDefaultProps: function () {
					return {
						transitionAppear: false,
						transitionEnter: true,
						transitionLeave: true
					};
				},

				_wrapChild: function (child) {
					// We need to provide this childFactory so that
					// ReactCSSTransitionGroupChild can receive updates to name, enter, and
					// leave while it is leaving.
					return React.createElement(ReactCSSTransitionGroupChild, {
						name: this.props.transitionName,
						appear: this.props.transitionAppear,
						enter: this.props.transitionEnter,
						leave: this.props.transitionLeave,
						appearTimeout: this.props.transitionAppearTimeout,
						enterTimeout: this.props.transitionEnterTimeout,
						leaveTimeout: this.props.transitionLeaveTimeout
					}, child);
				},

				render: function () {
					return React.createElement(ReactTransitionGroup, assign({}, this.props, { childFactory: this._wrapChild }));
				}
			});

			module.exports = ReactCSSTransitionGroup;
		}, { "24": 24, "26": 26, "30": 30, "94": 94 }], 30: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @typechecks
			 * @providesModule ReactCSSTransitionGroupChild
			 */

			'use strict';

			var React = _dereq_(26);
			var ReactDOM = _dereq_(40);

			var CSSCore = _dereq_(145);
			var ReactTransitionEvents = _dereq_(93);

			var onlyChild = _dereq_(135);

			// We don't remove the element from the DOM until we receive an animationend or
			// transitionend event. If the user screws up and forgets to add an animation
			// their node will be stuck in the DOM forever, so we detect if an animation
			// does not start and if it doesn't, we just call the end listener immediately.
			var TICK = 17;

			var ReactCSSTransitionGroupChild = React.createClass({
				displayName: 'ReactCSSTransitionGroupChild',

				propTypes: {
					name: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.shape({
						enter: React.PropTypes.string,
						leave: React.PropTypes.string,
						active: React.PropTypes.string
					}), React.PropTypes.shape({
						enter: React.PropTypes.string,
						enterActive: React.PropTypes.string,
						leave: React.PropTypes.string,
						leaveActive: React.PropTypes.string,
						appear: React.PropTypes.string,
						appearActive: React.PropTypes.string
					})]).isRequired,

					// Once we require timeouts to be specified, we can remove the
					// boolean flags (appear etc.) and just accept a number
					// or a bool for the timeout flags (appearTimeout etc.)
					appear: React.PropTypes.bool,
					enter: React.PropTypes.bool,
					leave: React.PropTypes.bool,
					appearTimeout: React.PropTypes.number,
					enterTimeout: React.PropTypes.number,
					leaveTimeout: React.PropTypes.number
				},

				transition: function (animationType, finishCallback, userSpecifiedDelay) {
					var node = ReactDOM.findDOMNode(this);

					if (!node) {
						if (finishCallback) {
							finishCallback();
						}
						return;
					}

					var className = this.props.name[animationType] || this.props.name + '-' + animationType;
					var activeClassName = this.props.name[animationType + 'Active'] || className + '-active';
					var timeout = null;

					var endListener = function (e) {
						if (e && e.target !== node) {
							return;
						}

						clearTimeout(timeout);

						CSSCore.removeClass(node, className);
						CSSCore.removeClass(node, activeClassName);

						ReactTransitionEvents.removeEndEventListener(node, endListener);

						// Usually this optional callback is used for informing an owner of
						// a leave animation and telling it to remove the child.
						if (finishCallback) {
							finishCallback();
						}
					};

					CSSCore.addClass(node, className);

					// Need to do this to actually trigger a transition.
					this.queueClass(activeClassName);

					// If the user specified a timeout delay.
					if (userSpecifiedDelay) {
						// Clean-up the animation after the specified delay
						timeout = setTimeout(endListener, userSpecifiedDelay);
						this.transitionTimeouts.push(timeout);
					} else {
						// DEPRECATED: this listener will be removed in a future version of react
						ReactTransitionEvents.addEndEventListener(node, endListener);
					}
				},

				queueClass: function (className) {
					this.classNameQueue.push(className);

					if (!this.timeout) {
						this.timeout = setTimeout(this.flushClassNameQueue, TICK);
					}
				},

				flushClassNameQueue: function () {
					if (this.isMounted()) {
						this.classNameQueue.forEach(CSSCore.addClass.bind(CSSCore, ReactDOM.findDOMNode(this)));
					}
					this.classNameQueue.length = 0;
					this.timeout = null;
				},

				componentWillMount: function () {
					this.classNameQueue = [];
					this.transitionTimeouts = [];
				},

				componentWillUnmount: function () {
					if (this.timeout) {
						clearTimeout(this.timeout);
					}
					this.transitionTimeouts.forEach(function (timeout) {
						clearTimeout(timeout);
					});
				},

				componentWillAppear: function (done) {
					if (this.props.appear) {
						this.transition('appear', done, this.props.appearTimeout);
					} else {
						done();
					}
				},

				componentWillEnter: function (done) {
					if (this.props.enter) {
						this.transition('enter', done, this.props.enterTimeout);
					} else {
						done();
					}
				},

				componentWillLeave: function (done) {
					if (this.props.leave) {
						this.transition('leave', done, this.props.leaveTimeout);
					} else {
						done();
					}
				},

				render: function () {
					return onlyChild(this.props.children);
				}
			});

			module.exports = ReactCSSTransitionGroupChild;
		}, { "135": 135, "145": 145, "26": 26, "40": 40, "93": 93 }], 31: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2014-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactChildReconciler
			 * @typechecks static-only
			 */

			'use strict';

			var ReactReconciler = _dereq_(84);

			var instantiateReactComponent = _dereq_(132);
			var shouldUpdateReactComponent = _dereq_(141);
			var traverseAllChildren = _dereq_(142);
			var warning = _dereq_(173);

			function instantiateChild(childInstances, child, name) {
				// We found a component instance.
				var keyUnique = childInstances[name] === undefined;
				if ("development" !== 'production') {
					"development" !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : undefined;
				}
				if (child != null && keyUnique) {
					childInstances[name] = instantiateReactComponent(child, null);
				}
			}

			/**
			 * ReactChildReconciler provides helpers for initializing or updating a set of
			 * children. Its output is suitable for passing it onto ReactMultiChild which
			 * does diffed reordering and insertion.
			 */
			var ReactChildReconciler = {
				/**
				 * Generates a "mount image" for each of the supplied children. In the case
				 * of `ReactDOMComponent`, a mount image is a string of markup.
				 *
				 * @param {?object} nestedChildNodes Nested child maps.
				 * @return {?object} A set of child instances.
				 * @internal
				 */
				instantiateChildren: function (nestedChildNodes, transaction, context) {
					if (nestedChildNodes == null) {
						return null;
					}
					var childInstances = {};
					traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
					return childInstances;
				},

				/**
				 * Updates the rendered children and returns a new set of children.
				 *
				 * @param {?object} prevChildren Previously initialized set of children.
				 * @param {?object} nextChildren Flat child element maps.
				 * @param {ReactReconcileTransaction} transaction
				 * @param {object} context
				 * @return {?object} A new set of child instances.
				 * @internal
				 */
				updateChildren: function (prevChildren, nextChildren, transaction, context) {
					// We currently don't have a way to track moves here but if we use iterators
					// instead of for..in we can zip the iterators and check if an item has
					// moved.
					// TODO: If nothing has changed, return the prevChildren object so that we
					// can quickly bailout if nothing has changed.
					if (!nextChildren && !prevChildren) {
						return null;
					}
					var name;
					for (name in nextChildren) {
						if (!nextChildren.hasOwnProperty(name)) {
							continue;
						}
						var prevChild = prevChildren && prevChildren[name];
						var prevElement = prevChild && prevChild._currentElement;
						var nextElement = nextChildren[name];
						if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
							ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
							nextChildren[name] = prevChild;
						} else {
							if (prevChild) {
								ReactReconciler.unmountComponent(prevChild, name);
							}
							// The child must be instantiated before it's mounted.
							var nextChildInstance = instantiateReactComponent(nextElement, null);
							nextChildren[name] = nextChildInstance;
						}
					}
					// Unmount children that are no longer present.
					for (name in prevChildren) {
						if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
							ReactReconciler.unmountComponent(prevChildren[name]);
						}
					}
					return nextChildren;
				},

				/**
				 * Unmounts all rendered children. This should be used to clean up children
				 * when this component is unmounted.
				 *
				 * @param {?object} renderedChildren Previously initialized set of children.
				 * @internal
				 */
				unmountChildren: function (renderedChildren) {
					for (var name in renderedChildren) {
						if (renderedChildren.hasOwnProperty(name)) {
							var renderedChild = renderedChildren[name];
							ReactReconciler.unmountComponent(renderedChild);
						}
					}
				}

			};

			module.exports = ReactChildReconciler;
		}, { "132": 132, "141": 141, "142": 142, "173": 173, "84": 84 }], 32: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactChildren
			 */

			'use strict';

			var PooledClass = _dereq_(25);
			var ReactElement = _dereq_(57);

			var emptyFunction = _dereq_(153);
			var traverseAllChildren = _dereq_(142);

			var twoArgumentPooler = PooledClass.twoArgumentPooler;
			var fourArgumentPooler = PooledClass.fourArgumentPooler;

			var userProvidedKeyEscapeRegex = /\/(?!\/)/g;
			function escapeUserProvidedKey(text) {
				return ('' + text).replace(userProvidedKeyEscapeRegex, '//');
			}

			/**
			 * PooledClass representing the bookkeeping associated with performing a child
			 * traversal. Allows avoiding binding callbacks.
			 *
			 * @constructor ForEachBookKeeping
			 * @param {!function} forEachFunction Function to perform traversal with.
			 * @param {?*} forEachContext Context to perform context with.
			 */
			function ForEachBookKeeping(forEachFunction, forEachContext) {
				this.func = forEachFunction;
				this.context = forEachContext;
				this.count = 0;
			}
			ForEachBookKeeping.prototype.destructor = function () {
				this.func = null;
				this.context = null;
				this.count = 0;
			};
			PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

			function forEachSingleChild(bookKeeping, child, name) {
				var func = bookKeeping.func;
				var context = bookKeeping.context;

				func.call(context, child, bookKeeping.count++);
			}

			/**
			 * Iterates through children that are typically specified as `props.children`.
			 *
			 * The provided forEachFunc(child, index) will be called for each
			 * leaf child.
			 *
			 * @param {?*} children Children tree container.
			 * @param {function(*, int)} forEachFunc
			 * @param {*} forEachContext Context for forEachContext.
			 */
			function forEachChildren(children, forEachFunc, forEachContext) {
				if (children == null) {
					return children;
				}
				var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
				traverseAllChildren(children, forEachSingleChild, traverseContext);
				ForEachBookKeeping.release(traverseContext);
			}

			/**
			 * PooledClass representing the bookkeeping associated with performing a child
			 * mapping. Allows avoiding binding callbacks.
			 *
			 * @constructor MapBookKeeping
			 * @param {!*} mapResult Object containing the ordered map of results.
			 * @param {!function} mapFunction Function to perform mapping with.
			 * @param {?*} mapContext Context to perform mapping with.
			 */
			function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
				this.result = mapResult;
				this.keyPrefix = keyPrefix;
				this.func = mapFunction;
				this.context = mapContext;
				this.count = 0;
			}
			MapBookKeeping.prototype.destructor = function () {
				this.result = null;
				this.keyPrefix = null;
				this.func = null;
				this.context = null;
				this.count = 0;
			};
			PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

			function mapSingleChildIntoContext(bookKeeping, child, childKey) {
				var result = bookKeeping.result;
				var keyPrefix = bookKeeping.keyPrefix;
				var func = bookKeeping.func;
				var context = bookKeeping.context;

				var mappedChild = func.call(context, child, bookKeeping.count++);
				if (Array.isArray(mappedChild)) {
					mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
				} else if (mappedChild != null) {
					if (ReactElement.isValidElement(mappedChild)) {
						mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
						// Keep both the (mapped) and old keys if they differ, just as
						// traverseAllChildren used to do for objects as children
						keyPrefix + (mappedChild !== child ? escapeUserProvidedKey(mappedChild.key || '') + '/' : '') + childKey);
					}
					result.push(mappedChild);
				}
			}

			function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
				var escapedPrefix = '';
				if (prefix != null) {
					escapedPrefix = escapeUserProvidedKey(prefix) + '/';
				}
				var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
				traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
				MapBookKeeping.release(traverseContext);
			}

			/**
			 * Maps children that are typically specified as `props.children`.
			 *
			 * The provided mapFunction(child, key, index) will be called for each
			 * leaf child.
			 *
			 * @param {?*} children Children tree container.
			 * @param {function(*, int)} func The map function.
			 * @param {*} context Context for mapFunction.
			 * @return {object} Object containing the ordered map of results.
			 */
			function mapChildren(children, func, context) {
				if (children == null) {
					return children;
				}
				var result = [];
				mapIntoWithKeyPrefixInternal(children, result, null, func, context);
				return result;
			}

			function forEachSingleChildDummy(traverseContext, child, name) {
				return null;
			}

			/**
			 * Count the number of children that are typically specified as
			 * `props.children`.
			 *
			 * @param {?*} children Children tree container.
			 * @return {number} The number of children.
			 */
			function countChildren(children, context) {
				return traverseAllChildren(children, forEachSingleChildDummy, null);
			}

			/**
			 * Flatten a children object (typically specified as `props.children`) and
			 * return an array with appropriately re-keyed children.
			 */
			function toArray(children) {
				var result = [];
				mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
				return result;
			}

			var ReactChildren = {
				forEach: forEachChildren,
				map: mapChildren,
				mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
				count: countChildren,
				toArray: toArray
			};

			module.exports = ReactChildren;
		}, { "142": 142, "153": 153, "25": 25, "57": 57 }], 33: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactClass
			 */

			'use strict';

			var ReactComponent = _dereq_(34);
			var ReactElement = _dereq_(57);
			var ReactPropTypeLocations = _dereq_(81);
			var ReactPropTypeLocationNames = _dereq_(80);
			var ReactNoopUpdateQueue = _dereq_(76);

			var assign = _dereq_(24);
			var emptyObject = _dereq_(154);
			var invariant = _dereq_(161);
			var keyMirror = _dereq_(165);
			var keyOf = _dereq_(166);
			var warning = _dereq_(173);

			var MIXINS_KEY = keyOf({ mixins: null });

			/**
			 * Policies that describe methods in `ReactClassInterface`.
			 */
			var SpecPolicy = keyMirror({
				/**
				 * These methods may be defined only once by the class specification or mixin.
				 */
				DEFINE_ONCE: null,
				/**
				 * These methods may be defined by both the class specification and mixins.
				 * Subsequent definitions will be chained. These methods must return void.
				 */
				DEFINE_MANY: null,
				/**
				 * These methods are overriding the base class.
				 */
				OVERRIDE_BASE: null,
				/**
				 * These methods are similar to DEFINE_MANY, except we assume they return
				 * objects. We try to merge the keys of the return values of all the mixed in
				 * functions. If there is a key conflict we throw.
				 */
				DEFINE_MANY_MERGED: null
			});

			var injectedMixins = [];

			var warnedSetProps = false;
			function warnSetProps() {
				if (!warnedSetProps) {
					warnedSetProps = true;
					"development" !== 'production' ? warning(false, 'setProps(...) and replaceProps(...) are deprecated. ' + 'Instead, call render again at the top level.') : undefined;
				}
			}

			/**
			 * Composite components are higher-level components that compose other composite
			 * or native components.
			 *
			 * To create a new type of `ReactClass`, pass a specification of
			 * your new class to `React.createClass`. The only requirement of your class
			 * specification is that you implement a `render` method.
			 *
			 *   var MyComponent = React.createClass({
			 *     render: function() {
			 *       return <div>Hello World</div>;
			 *     }
			 *   });
			 *
			 * The class specification supports a specific protocol of methods that have
			 * special meaning (e.g. `render`). See `ReactClassInterface` for
			 * more the comprehensive protocol. Any other properties and methods in the
			 * class specification will be available on the prototype.
			 *
			 * @interface ReactClassInterface
			 * @internal
			 */
			var ReactClassInterface = {

				/**
				 * An array of Mixin objects to include when defining your component.
				 *
				 * @type {array}
				 * @optional
				 */
				mixins: SpecPolicy.DEFINE_MANY,

				/**
				 * An object containing properties and methods that should be defined on
				 * the component's constructor instead of its prototype (static methods).
				 *
				 * @type {object}
				 * @optional
				 */
				statics: SpecPolicy.DEFINE_MANY,

				/**
				 * Definition of prop types for this component.
				 *
				 * @type {object}
				 * @optional
				 */
				propTypes: SpecPolicy.DEFINE_MANY,

				/**
				 * Definition of context types for this component.
				 *
				 * @type {object}
				 * @optional
				 */
				contextTypes: SpecPolicy.DEFINE_MANY,

				/**
				 * Definition of context types this component sets for its children.
				 *
				 * @type {object}
				 * @optional
				 */
				childContextTypes: SpecPolicy.DEFINE_MANY,

				// ==== Definition methods ====

				/**
				 * Invoked when the component is mounted. Values in the mapping will be set on
				 * `this.props` if that prop is not specified (i.e. using an `in` check).
				 *
				 * This method is invoked before `getInitialState` and therefore cannot rely
				 * on `this.state` or use `this.setState`.
				 *
				 * @return {object}
				 * @optional
				 */
				getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,

				/**
				 * Invoked once before the component is mounted. The return value will be used
				 * as the initial value of `this.state`.
				 *
				 *   getInitialState: function() {
				 *     return {
				 *       isOn: false,
				 *       fooBaz: new BazFoo()
				 *     }
				 *   }
				 *
				 * @return {object}
				 * @optional
				 */
				getInitialState: SpecPolicy.DEFINE_MANY_MERGED,

				/**
				 * @return {object}
				 * @optional
				 */
				getChildContext: SpecPolicy.DEFINE_MANY_MERGED,

				/**
				 * Uses props from `this.props` and state from `this.state` to render the
				 * structure of the component.
				 *
				 * No guarantees are made about when or how often this method is invoked, so
				 * it must not have side effects.
				 *
				 *   render: function() {
				 *     var name = this.props.name;
				 *     return <div>Hello, {name}!</div>;
				 *   }
				 *
				 * @return {ReactComponent}
				 * @nosideeffects
				 * @required
				 */
				render: SpecPolicy.DEFINE_ONCE,

				// ==== Delegate methods ====

				/**
				 * Invoked when the component is initially created and about to be mounted.
				 * This may have side effects, but any external subscriptions or data created
				 * by this method must be cleaned up in `componentWillUnmount`.
				 *
				 * @optional
				 */
				componentWillMount: SpecPolicy.DEFINE_MANY,

				/**
				 * Invoked when the component has been mounted and has a DOM representation.
				 * However, there is no guarantee that the DOM node is in the document.
				 *
				 * Use this as an opportunity to operate on the DOM when the component has
				 * been mounted (initialized and rendered) for the first time.
				 *
				 * @param {DOMElement} rootNode DOM element representing the component.
				 * @optional
				 */
				componentDidMount: SpecPolicy.DEFINE_MANY,

				/**
				 * Invoked before the component receives new props.
				 *
				 * Use this as an opportunity to react to a prop transition by updating the
				 * state using `this.setState`. Current props are accessed via `this.props`.
				 *
				 *   componentWillReceiveProps: function(nextProps, nextContext) {
				 *     this.setState({
				 *       likesIncreasing: nextProps.likeCount > this.props.likeCount
				 *     });
				 *   }
				 *
				 * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
				 * transition may cause a state change, but the opposite is not true. If you
				 * need it, you are probably looking for `componentWillUpdate`.
				 *
				 * @param {object} nextProps
				 * @optional
				 */
				componentWillReceiveProps: SpecPolicy.DEFINE_MANY,

				/**
				 * Invoked while deciding if the component should be updated as a result of
				 * receiving new props, state and/or context.
				 *
				 * Use this as an opportunity to `return false` when you're certain that the
				 * transition to the new props/state/context will not require a component
				 * update.
				 *
				 *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
				 *     return !equal(nextProps, this.props) ||
				 *       !equal(nextState, this.state) ||
				 *       !equal(nextContext, this.context);
				 *   }
				 *
				 * @param {object} nextProps
				 * @param {?object} nextState
				 * @param {?object} nextContext
				 * @return {boolean} True if the component should update.
				 * @optional
				 */
				shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,

				/**
				 * Invoked when the component is about to update due to a transition from
				 * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
				 * and `nextContext`.
				 *
				 * Use this as an opportunity to perform preparation before an update occurs.
				 *
				 * NOTE: You **cannot** use `this.setState()` in this method.
				 *
				 * @param {object} nextProps
				 * @param {?object} nextState
				 * @param {?object} nextContext
				 * @param {ReactReconcileTransaction} transaction
				 * @optional
				 */
				componentWillUpdate: SpecPolicy.DEFINE_MANY,

				/**
				 * Invoked when the component's DOM representation has been updated.
				 *
				 * Use this as an opportunity to operate on the DOM when the component has
				 * been updated.
				 *
				 * @param {object} prevProps
				 * @param {?object} prevState
				 * @param {?object} prevContext
				 * @param {DOMElement} rootNode DOM element representing the component.
				 * @optional
				 */
				componentDidUpdate: SpecPolicy.DEFINE_MANY,

				/**
				 * Invoked when the component is about to be removed from its parent and have
				 * its DOM representation destroyed.
				 *
				 * Use this as an opportunity to deallocate any external resources.
				 *
				 * NOTE: There is no `componentDidUnmount` since your component will have been
				 * destroyed by that point.
				 *
				 * @optional
				 */
				componentWillUnmount: SpecPolicy.DEFINE_MANY,

				// ==== Advanced methods ====

				/**
				 * Updates the component's currently mounted DOM representation.
				 *
				 * By default, this implements React's rendering and reconciliation algorithm.
				 * Sophisticated clients may wish to override this.
				 *
				 * @param {ReactReconcileTransaction} transaction
				 * @internal
				 * @overridable
				 */
				updateComponent: SpecPolicy.OVERRIDE_BASE

			};

			/**
			 * Mapping from class specification keys to special processing functions.
			 *
			 * Although these are declared like instance properties in the specification
			 * when defining classes using `React.createClass`, they are actually static
			 * and are accessible on the constructor instead of the prototype. Despite
			 * being static, they must be defined outside of the "statics" key under
			 * which all other static methods are defined.
			 */
			var RESERVED_SPEC_KEYS = {
				displayName: function (Constructor, displayName) {
					Constructor.displayName = displayName;
				},
				mixins: function (Constructor, mixins) {
					if (mixins) {
						for (var i = 0; i < mixins.length; i++) {
							mixSpecIntoComponent(Constructor, mixins[i]);
						}
					}
				},
				childContextTypes: function (Constructor, childContextTypes) {
					if ("development" !== 'production') {
						validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);
					}
					Constructor.childContextTypes = assign({}, Constructor.childContextTypes, childContextTypes);
				},
				contextTypes: function (Constructor, contextTypes) {
					if ("development" !== 'production') {
						validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);
					}
					Constructor.contextTypes = assign({}, Constructor.contextTypes, contextTypes);
				},
				/**
				 * Special case getDefaultProps which should move into statics but requires
				 * automatic merging.
				 */
				getDefaultProps: function (Constructor, getDefaultProps) {
					if (Constructor.getDefaultProps) {
						Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
					} else {
						Constructor.getDefaultProps = getDefaultProps;
					}
				},
				propTypes: function (Constructor, propTypes) {
					if ("development" !== 'production') {
						validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);
					}
					Constructor.propTypes = assign({}, Constructor.propTypes, propTypes);
				},
				statics: function (Constructor, statics) {
					mixStaticSpecIntoComponent(Constructor, statics);
				},
				autobind: function () { }
			};

			// noop
			function validateTypeDef(Constructor, typeDef, location) {
				for (var propName in typeDef) {
					if (typeDef.hasOwnProperty(propName)) {
						// use a warning instead of an invariant so components
						// don't show up in prod but not in __DEV__
						"development" !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : undefined;
					}
				}
			}

			function validateMethodOverride(proto, name) {
				var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

				// Disallow overriding of base class methods unless explicitly allowed.
				if (ReactClassMixin.hasOwnProperty(name)) {
					!(specPolicy === SpecPolicy.OVERRIDE_BASE) ? "development" !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override ' + '`%s` from your class specification. Ensure that your method names ' + 'do not overlap with React methods.', name) : invariant(false) : undefined;
				}

				// Disallow defining methods more than once unless explicitly allowed.
				if (proto.hasOwnProperty(name)) {
					!(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ? "development" !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define ' + '`%s` on your component more than once. This conflict may be due ' + 'to a mixin.', name) : invariant(false) : undefined;
				}
			}

			/**
			 * Mixin helper which handles policy validation and reserved
			 * specification keys when building React classses.
			 */
			function mixSpecIntoComponent(Constructor, spec) {
				if (!spec) {
					return;
				}

				!(typeof spec !== 'function') ? "development" !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to ' + 'use a component class as a mixin. Instead, just use a regular object.') : invariant(false) : undefined;
				!!ReactElement.isValidElement(spec) ? "development" !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to ' + 'use a component as a mixin. Instead, just use a regular object.') : invariant(false) : undefined;

				var proto = Constructor.prototype;

				// By handling mixins before any other properties, we ensure the same
				// chaining order is applied to methods with DEFINE_MANY policy, whether
				// mixins are listed before or after these methods in the spec.
				if (spec.hasOwnProperty(MIXINS_KEY)) {
					RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
				}

				for (var name in spec) {
					if (!spec.hasOwnProperty(name)) {
						continue;
					}

					if (name === MIXINS_KEY) {
						// We have already handled mixins in a special case above.
						continue;
					}

					var property = spec[name];
					validateMethodOverride(proto, name);

					if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
						RESERVED_SPEC_KEYS[name](Constructor, property);
					} else {
						// Setup methods on prototype:
						// The following member methods should not be automatically bound:
						// 1. Expected ReactClass methods (in the "interface").
						// 2. Overridden methods (that were mixed in).
						var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
						var isAlreadyDefined = proto.hasOwnProperty(name);
						var isFunction = typeof property === 'function';
						var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

						if (shouldAutoBind) {
							if (!proto.__reactAutoBindMap) {
								proto.__reactAutoBindMap = {};
							}
							proto.__reactAutoBindMap[name] = property;
							proto[name] = property;
						} else {
							if (isAlreadyDefined) {
								var specPolicy = ReactClassInterface[name];

								// These cases should already be caught by validateMethodOverride.
								!(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ? "development" !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s ' + 'when mixing in component specs.', specPolicy, name) : invariant(false) : undefined;

								// For methods which are defined more than once, call the existing
								// methods before calling the new property, merging if appropriate.
								if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
									proto[name] = createMergedResultFunction(proto[name], property);
								} else if (specPolicy === SpecPolicy.DEFINE_MANY) {
									proto[name] = createChainedFunction(proto[name], property);
								}
							} else {
								proto[name] = property;
								if ("development" !== 'production') {
									// Add verbose displayName to the function, which helps when looking
									// at profiling tools.
									if (typeof property === 'function' && spec.displayName) {
										proto[name].displayName = spec.displayName + '_' + name;
									}
								}
							}
						}
					}
				}
			}

			function mixStaticSpecIntoComponent(Constructor, statics) {
				if (!statics) {
					return;
				}
				for (var name in statics) {
					var property = statics[name];
					if (!statics.hasOwnProperty(name)) {
						continue;
					}

					var isReserved = (name in RESERVED_SPEC_KEYS);
					!!isReserved ? "development" !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved ' + 'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' + 'as an instance property instead; it will still be accessible on the ' + 'constructor.', name) : invariant(false) : undefined;

					var isInherited = (name in Constructor);
					!!isInherited ? "development" !== 'production' ? invariant(false, 'ReactClass: You are attempting to define ' + '`%s` on your component more than once. This conflict may be ' + 'due to a mixin.', name) : invariant(false) : undefined;
					Constructor[name] = property;
				}
			}

			/**
			 * Merge two objects, but throw if both contain the same key.
			 *
			 * @param {object} one The first object, which is mutated.
			 * @param {object} two The second object
			 * @return {object} one after it has been mutated to contain everything in two.
			 */
			function mergeIntoWithNoDuplicateKeys(one, two) {
				!(one && two && typeof one === 'object' && typeof two === 'object') ? "development" !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : invariant(false) : undefined;

				for (var key in two) {
					if (two.hasOwnProperty(key)) {
						!(one[key] === undefined) ? "development" !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): ' + 'Tried to merge two objects with the same key: `%s`. This conflict ' + 'may be due to a mixin; in particular, this may be caused by two ' + 'getInitialState() or getDefaultProps() methods returning objects ' + 'with clashing keys.', key) : invariant(false) : undefined;
						one[key] = two[key];
					}
				}
				return one;
			}

			/**
			 * Creates a function that invokes two functions and merges their return values.
			 *
			 * @param {function} one Function to invoke first.
			 * @param {function} two Function to invoke second.
			 * @return {function} Function that invokes the two argument functions.
			 * @private
			 */
			function createMergedResultFunction(one, two) {
				return function mergedResult() {
					var a = one.apply(this, arguments);
					var b = two.apply(this, arguments);
					if (a == null) {
						return b;
					} else if (b == null) {
						return a;
					}
					var c = {};
					mergeIntoWithNoDuplicateKeys(c, a);
					mergeIntoWithNoDuplicateKeys(c, b);
					return c;
				};
			}

			/**
			 * Creates a function that invokes two functions and ignores their return vales.
			 *
			 * @param {function} one Function to invoke first.
			 * @param {function} two Function to invoke second.
			 * @return {function} Function that invokes the two argument functions.
			 * @private
			 */
			function createChainedFunction(one, two) {
				return function chainedFunction() {
					one.apply(this, arguments);
					two.apply(this, arguments);
				};
			}

			/**
			 * Binds a method to the component.
			 *
			 * @param {object} component Component whose method is going to be bound.
			 * @param {function} method Method to be bound.
			 * @return {function} The bound method.
			 */
			function bindAutoBindMethod(component, method) {
				var boundMethod = method.bind(component);
				if ("development" !== 'production') {
					boundMethod.__reactBoundContext = component;
					boundMethod.__reactBoundMethod = method;
					boundMethod.__reactBoundArguments = null;
					var componentName = component.constructor.displayName;
					var _bind = boundMethod.bind;
					/* eslint-disable block-scoped-var, no-undef */
					boundMethod.bind = function (newThis) {
						for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
							args[_key - 1] = arguments[_key];
						}

						// User is trying to bind() an autobound method; we effectively will
						// ignore the value of "this" that the user is trying to use, so
						// let's warn.
						if (newThis !== component && newThis !== null) {
							"development" !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : undefined;
						} else if (!args.length) {
							"development" !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : undefined;
							return boundMethod;
						}
						var reboundMethod = _bind.apply(boundMethod, arguments);
						reboundMethod.__reactBoundContext = component;
						reboundMethod.__reactBoundMethod = method;
						reboundMethod.__reactBoundArguments = args;
						return reboundMethod;
						/* eslint-enable */
					};
				}
				return boundMethod;
			}

			/**
			 * Binds all auto-bound methods in a component.
			 *
			 * @param {object} component Component whose method is going to be bound.
			 */
			function bindAutoBindMethods(component) {
				for (var autoBindKey in component.__reactAutoBindMap) {
					if (component.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {
						var method = component.__reactAutoBindMap[autoBindKey];
						component[autoBindKey] = bindAutoBindMethod(component, method);
					}
				}
			}

			/**
			 * Add more to the ReactClass base class. These are all legacy features and
			 * therefore not already part of the modern ReactComponent.
			 */
			var ReactClassMixin = {

				/**
				 * TODO: This will be deprecated because state should always keep a consistent
				 * type signature and the only use case for this, is to avoid that.
				 */
				replaceState: function (newState, callback) {
					this.updater.enqueueReplaceState(this, newState);
					if (callback) {
						this.updater.enqueueCallback(this, callback);
					}
				},

				/**
				 * Checks whether or not this composite component is mounted.
				 * @return {boolean} True if mounted, false otherwise.
				 * @protected
				 * @final
				 */
				isMounted: function () {
					return this.updater.isMounted(this);
				},

				/**
				 * Sets a subset of the props.
				 *
				 * @param {object} partialProps Subset of the next props.
				 * @param {?function} callback Called after props are updated.
				 * @final
				 * @public
				 * @deprecated
				 */
				setProps: function (partialProps, callback) {
					if ("development" !== 'production') {
						warnSetProps();
					}
					this.updater.enqueueSetProps(this, partialProps);
					if (callback) {
						this.updater.enqueueCallback(this, callback);
					}
				},

				/**
				 * Replace all the props.
				 *
				 * @param {object} newProps Subset of the next props.
				 * @param {?function} callback Called after props are updated.
				 * @final
				 * @public
				 * @deprecated
				 */
				replaceProps: function (newProps, callback) {
					if ("development" !== 'production') {
						warnSetProps();
					}
					this.updater.enqueueReplaceProps(this, newProps);
					if (callback) {
						this.updater.enqueueCallback(this, callback);
					}
				}
			};

			var ReactClassComponent = function () { };
			assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

			/**
			 * Module for creating composite components.
			 *
			 * @class ReactClass
			 */
			var ReactClass = {

				/**
				 * Creates a composite component class given a class specification.
				 *
				 * @param {object} spec Class specification (which must define `render`).
				 * @return {function} Component constructor function.
				 * @public
				 */
				createClass: function (spec) {
					var Constructor = function (props, context, updater) {
						// This constructor is overridden by mocks. The argument is used
						// by mocks to assert on what gets mounted.

						if ("development" !== 'production') {
							"development" !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : undefined;
						}

						// Wire up auto-binding
						if (this.__reactAutoBindMap) {
							bindAutoBindMethods(this);
						}

						this.props = props;
						this.context = context;
						this.refs = emptyObject;
						this.updater = updater || ReactNoopUpdateQueue;

						this.state = null;

						// ReactClasses doesn't have constructors. Instead, they use the
						// getInitialState and componentWillMount methods for initialization.

						var initialState = this.getInitialState ? this.getInitialState() : null;
						if ("development" !== 'production') {
							// We allow auto-mocks to proceed as if they're returning null.
							if (typeof initialState === 'undefined' && this.getInitialState._isMockFunction) {
								// This is probably bad practice. Consider warning here and
								// deprecating this convenience.
								initialState = null;
							}
						}
						!(typeof initialState === 'object' && !Array.isArray(initialState)) ? "development" !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : invariant(false) : undefined;

						this.state = initialState;
					};
					Constructor.prototype = new ReactClassComponent();
					Constructor.prototype.constructor = Constructor;

					injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

					mixSpecIntoComponent(Constructor, spec);

					// Initialize the defaultProps property after all mixins have been merged.
					if (Constructor.getDefaultProps) {
						Constructor.defaultProps = Constructor.getDefaultProps();
					}

					if ("development" !== 'production') {
						// This is a tag to indicate that the use of these method names is ok,
						// since it's used with createClass. If it's not, then it's likely a
						// mistake so we'll warn you to use the static property, property
						// initializer or constructor respectively.
						if (Constructor.getDefaultProps) {
							Constructor.getDefaultProps.isReactClassApproved = {};
						}
						if (Constructor.prototype.getInitialState) {
							Constructor.prototype.getInitialState.isReactClassApproved = {};
						}
					}

					!Constructor.prototype.render ? "development" !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : invariant(false) : undefined;

					if ("development" !== 'production') {
						"development" !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : undefined;
						"development" !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : undefined;
					}

					// Reduce time spent doing lookups by setting these on the prototype.
					for (var methodName in ReactClassInterface) {
						if (!Constructor.prototype[methodName]) {
							Constructor.prototype[methodName] = null;
						}
					}

					return Constructor;
				},

				injection: {
					injectMixin: function (mixin) {
						injectedMixins.push(mixin);
					}
				}

			};

			module.exports = ReactClass;
		}, { "154": 154, "161": 161, "165": 165, "166": 166, "173": 173, "24": 24, "34": 34, "57": 57, "76": 76, "80": 80, "81": 81 }], 34: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactComponent
			 */

			'use strict';

			var ReactNoopUpdateQueue = _dereq_(76);

			var canDefineProperty = _dereq_(117);
			var emptyObject = _dereq_(154);
			var invariant = _dereq_(161);
			var warning = _dereq_(173);

			/**
			 * Base class helpers for the updating state of a component.
			 */
			function ReactComponent(props, context, updater) {
				this.props = props;
				this.context = context;
				this.refs = emptyObject;
				// We initialize the default updater but the real one gets injected by the
				// renderer.
				this.updater = updater || ReactNoopUpdateQueue;
			}

			ReactComponent.prototype.isReactComponent = {};

			/**
			 * Sets a subset of the state. Always use this to mutate
			 * state. You should treat `this.state` as immutable.
			 *
			 * There is no guarantee that `this.state` will be immediately updated, so
			 * accessing `this.state` after calling this method may return the old value.
			 *
			 * There is no guarantee that calls to `setState` will run synchronously,
			 * as they may eventually be batched together.  You can provide an optional
			 * callback that will be executed when the call to setState is actually
			 * completed.
			 *
			 * When a function is provided to setState, it will be called at some point in
			 * the future (not synchronously). It will be called with the up to date
			 * component arguments (state, props, context). These values can be different
			 * from this.* because your function may be called after receiveProps but before
			 * shouldComponentUpdate, and this new state, props, and context will not yet be
			 * assigned to this.
			 *
			 * @param {object|function} partialState Next partial state or function to
			 *        produce next partial state to be merged with current state.
			 * @param {?function} callback Called after state is updated.
			 * @final
			 * @protected
			 */
			ReactComponent.prototype.setState = function (partialState, callback) {
				!(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? "development" !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.') : invariant(false) : undefined;
				if ("development" !== 'production') {
					"development" !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : undefined;
				}
				this.updater.enqueueSetState(this, partialState);
				if (callback) {
					this.updater.enqueueCallback(this, callback);
				}
			};

			/**
			 * Forces an update. This should only be invoked when it is known with
			 * certainty that we are **not** in a DOM transaction.
			 *
			 * You may want to call this when you know that some deeper aspect of the
			 * component's state has changed but `setState` was not called.
			 *
			 * This will not invoke `shouldComponentUpdate`, but it will invoke
			 * `componentWillUpdate` and `componentDidUpdate`.
			 *
			 * @param {?function} callback Called after update is complete.
			 * @final
			 * @protected
			 */
			ReactComponent.prototype.forceUpdate = function (callback) {
				this.updater.enqueueForceUpdate(this);
				if (callback) {
					this.updater.enqueueCallback(this, callback);
				}
			};

			/**
			 * Deprecated APIs. These APIs used to exist on classic React classes but since
			 * we would like to deprecate them, we're not going to move them over to this
			 * modern base class. Instead, we define a getter that warns if it's accessed.
			 */
			if ("development" !== 'production') {
				var deprecatedAPIs = {
					getDOMNode: ['getDOMNode', 'Use ReactDOM.findDOMNode(component) instead.'],
					isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
					replaceProps: ['replaceProps', 'Instead, call render again at the top level.'],
					replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).'],
					setProps: ['setProps', 'Instead, call render again at the top level.']
				};
				var defineDeprecationWarning = function (methodName, info) {
					if (canDefineProperty) {
						Object.defineProperty(ReactComponent.prototype, methodName, {
							get: function () {
								"development" !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : undefined;
								return undefined;
							}
						});
					}
				};
				for (var fnName in deprecatedAPIs) {
					if (deprecatedAPIs.hasOwnProperty(fnName)) {
						defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
					}
				}
			}

			module.exports = ReactComponent;
		}, { "117": 117, "154": 154, "161": 161, "173": 173, "76": 76 }], 35: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactComponentBrowserEnvironment
			 */

			'use strict';

			var ReactDOMIDOperations = _dereq_(45);
			var ReactMount = _dereq_(72);

			/**
			 * Abstracts away all functionality of the reconciler that requires knowledge of
			 * the browser context. TODO: These callers should be refactored to avoid the
			 * need for this injection.
			 */
			var ReactComponentBrowserEnvironment = {

				processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

				replaceNodeWithMarkupByID: ReactDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,

				/**
				 * If a particular environment requires that some resources be cleaned up,
				 * specify this in the injected Mixin. In the DOM, we would likely want to
				 * purge any cached node ID lookups.
				 *
				 * @private
				 */
				unmountIDFromEnvironment: function (rootNodeID) {
					ReactMount.purgeID(rootNodeID);
				}

			};

			module.exports = ReactComponentBrowserEnvironment;
		}, { "45": 45, "72": 72 }], 36: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2014-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactComponentEnvironment
			 */

			'use strict';

			var invariant = _dereq_(161);

			var injected = false;

			var ReactComponentEnvironment = {

				/**
				 * Optionally injectable environment dependent cleanup hook. (server vs.
				 * browser etc). Example: A browser system caches DOM nodes based on component
				 * ID and must remove that cache entry when this instance is unmounted.
				 */
				unmountIDFromEnvironment: null,

				/**
				 * Optionally injectable hook for swapping out mount images in the middle of
				 * the tree.
				 */
				replaceNodeWithMarkupByID: null,

				/**
				 * Optionally injectable hook for processing a queue of child updates. Will
				 * later move into MultiChildComponents.
				 */
				processChildrenUpdates: null,

				injection: {
					injectEnvironment: function (environment) {
						!!injected ? "development" !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : invariant(false) : undefined;
						ReactComponentEnvironment.unmountIDFromEnvironment = environment.unmountIDFromEnvironment;
						ReactComponentEnvironment.replaceNodeWithMarkupByID = environment.replaceNodeWithMarkupByID;
						ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
						injected = true;
					}
				}

			};

			module.exports = ReactComponentEnvironment;
		}, { "161": 161 }], 37: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactComponentWithPureRenderMixin
			 */

			'use strict';

			var shallowCompare = _dereq_(140);

			/**
			 * If your React component's render function is "pure", e.g. it will render the
			 * same result given the same props and state, provide this Mixin for a
			 * considerable performance boost.
			 *
			 * Most React components have pure render functions.
			 *
			 * Example:
			 *
			 *   var ReactComponentWithPureRenderMixin =
			 *     require('ReactComponentWithPureRenderMixin');
			 *   React.createClass({
			 *     mixins: [ReactComponentWithPureRenderMixin],
			 *
			 *     render: function() {
			 *       return <div className={this.props.className}>foo</div>;
			 *     }
			 *   });
			 *
			 * Note: This only checks shallow equality for props and state. If these contain
			 * complex data structures this mixin may have false-negatives for deeper
			 * differences. Only mixin to components which have simple props and state, or
			 * use `forceUpdate()` when you know deep data structures have changed.
			 */
			var ReactComponentWithPureRenderMixin = {
				shouldComponentUpdate: function (nextProps, nextState) {
					return shallowCompare(this, nextProps, nextState);
				}
			};

			module.exports = ReactComponentWithPureRenderMixin;
		}, { "140": 140 }], 38: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactCompositeComponent
			 */

			'use strict';

			var ReactComponentEnvironment = _dereq_(36);
			var ReactCurrentOwner = _dereq_(39);
			var ReactElement = _dereq_(57);
			var ReactInstanceMap = _dereq_(68);
			var ReactPerf = _dereq_(78);
			var ReactPropTypeLocations = _dereq_(81);
			var ReactPropTypeLocationNames = _dereq_(80);
			var ReactReconciler = _dereq_(84);
			var ReactUpdateQueue = _dereq_(95);

			var assign = _dereq_(24);
			var emptyObject = _dereq_(154);
			var invariant = _dereq_(161);
			var shouldUpdateReactComponent = _dereq_(141);
			var warning = _dereq_(173);

			function getDeclarationErrorAddendum(component) {
				var owner = component._currentElement._owner || null;
				if (owner) {
					var name = owner.getName();
					if (name) {
						return ' Check the render method of `' + name + '`.';
					}
				}
				return '';
			}

			function StatelessComponent(Component) { }
			StatelessComponent.prototype.render = function () {
				var Component = ReactInstanceMap.get(this)._currentElement.type;
				return Component(this.props, this.context, this.updater);
			};

			/**
			 * ------------------ The Life-Cycle of a Composite Component ------------------
			 *
			 * - constructor: Initialization of state. The instance is now retained.
			 *   - componentWillMount
			 *   - render
			 *   - [children's constructors]
			 *     - [children's componentWillMount and render]
			 *     - [children's componentDidMount]
			 *     - componentDidMount
			 *
			 *       Update Phases:
			 *       - componentWillReceiveProps (only called if parent updated)
			 *       - shouldComponentUpdate
			 *         - componentWillUpdate
			 *           - render
			 *           - [children's constructors or receive props phases]
			 *         - componentDidUpdate
			 *
			 *     - componentWillUnmount
			 *     - [children's componentWillUnmount]
			 *   - [children destroyed]
			 * - (destroyed): The instance is now blank, released by React and ready for GC.
			 *
			 * -----------------------------------------------------------------------------
			 */

			/**
			 * An incrementing ID assigned to each component when it is mounted. This is
			 * used to enforce the order in which `ReactUpdates` updates dirty components.
			 *
			 * @private
			 */
			var nextMountID = 1;

			/**
			 * @lends {ReactCompositeComponent.prototype}
			 */
			var ReactCompositeComponentMixin = {

				/**
				 * Base constructor for all composite component.
				 *
				 * @param {ReactElement} element
				 * @final
				 * @internal
				 */
				construct: function (element) {
					this._currentElement = element;
					this._rootNodeID = null;
					this._instance = null;

					// See ReactUpdateQueue
					this._pendingElement = null;
					this._pendingStateQueue = null;
					this._pendingReplaceState = false;
					this._pendingForceUpdate = false;

					this._renderedComponent = null;

					this._context = null;
					this._mountOrder = 0;
					this._topLevelWrapper = null;

					// See ReactUpdates and ReactUpdateQueue.
					this._pendingCallbacks = null;
				},

				/**
				 * Initializes the component, renders markup, and registers event listeners.
				 *
				 * @param {string} rootID DOM ID of the root node.
				 * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
				 * @return {?string} Rendered markup to be inserted into the DOM.
				 * @final
				 * @internal
				 */
				mountComponent: function (rootID, transaction, context) {
					this._context = context;
					this._mountOrder = nextMountID++;
					this._rootNodeID = rootID;

					var publicProps = this._processProps(this._currentElement.props);
					var publicContext = this._processContext(context);

					var Component = this._currentElement.type;

					// Initialize the public class
					var inst;
					var renderedElement;

					// This is a way to detect if Component is a stateless arrow function
					// component, which is not newable. It might not be 100% reliable but is
					// something we can do until we start detecting that Component extends
					// React.Component. We already assume that typeof Component === 'function'.
					var canInstantiate = ('prototype' in Component);

					if (canInstantiate) {
						if ("development" !== 'production') {
							ReactCurrentOwner.current = this;
							try {
								inst = new Component(publicProps, publicContext, ReactUpdateQueue);
							} finally {
								ReactCurrentOwner.current = null;
							}
						} else {
							inst = new Component(publicProps, publicContext, ReactUpdateQueue);
						}
					}

					if (!canInstantiate || inst === null || inst === false || ReactElement.isValidElement(inst)) {
						renderedElement = inst;
						inst = new StatelessComponent(Component);
					}

					if ("development" !== 'production') {
						// This will throw later in _renderValidatedComponent, but add an early
						// warning now to help debugging
						if (inst.render == null) {
							"development" !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`, returned ' + 'null/false from a stateless component, or tried to render an ' + 'element whose type is a function that isn\'t a React component.', Component.displayName || Component.name || 'Component') : undefined;
						} else {
							// We support ES6 inheriting from React.Component, the module pattern,
							// and stateless components, but not ES6 classes that don't extend
							"development" !== 'production' ? warning(Component.prototype && Component.prototype.isReactComponent || !canInstantiate || !(inst instanceof Component), '%s(...): React component classes must extend React.Component.', Component.displayName || Component.name || 'Component') : undefined;
						}
					}

					// These should be set up in the constructor, but as a convenience for
					// simpler class abstractions, we set them up after the fact.
					inst.props = publicProps;
					inst.context = publicContext;
					inst.refs = emptyObject;
					inst.updater = ReactUpdateQueue;

					this._instance = inst;

					// Store a reference from the instance back to the internal representation
					ReactInstanceMap.set(inst, this);

					if ("development" !== 'production') {
						// Since plain JS classes are defined without any special initialization
						// logic, we can not catch common errors early. Therefore, we have to
						// catch them here, at initialization time, instead.
						"development" !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : undefined;
						"development" !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : undefined;
						"development" !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : undefined;
						"development" !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : undefined;
						"development" !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : undefined;
						"development" !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : undefined;
						"development" !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : undefined;
					}

					var initialState = inst.state;
					if (initialState === undefined) {
						inst.state = initialState = null;
					}
					!(typeof initialState === 'object' && !Array.isArray(initialState)) ? "development" !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;

					this._pendingStateQueue = null;
					this._pendingReplaceState = false;
					this._pendingForceUpdate = false;

					if (inst.componentWillMount) {
						inst.componentWillMount();
						// When mounting, calls to `setState` by `componentWillMount` will set
						// `this._pendingStateQueue` without triggering a re-render.
						if (this._pendingStateQueue) {
							inst.state = this._processPendingState(inst.props, inst.context);
						}
					}

					// If not a stateless component, we now render
					if (renderedElement === undefined) {
						renderedElement = this._renderValidatedComponent();
					}

					this._renderedComponent = this._instantiateReactComponent(renderedElement);

					var markup = ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, this._processChildContext(context));
					if (inst.componentDidMount) {
						transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
					}

					return markup;
				},

				/**
				 * Releases any resources allocated by `mountComponent`.
				 *
				 * @final
				 * @internal
				 */
				unmountComponent: function () {
					var inst = this._instance;

					if (inst.componentWillUnmount) {
						inst.componentWillUnmount();
					}

					ReactReconciler.unmountComponent(this._renderedComponent);
					this._renderedComponent = null;
					this._instance = null;

					// Reset pending fields
					// Even if this component is scheduled for another update in ReactUpdates,
					// it would still be ignored because these fields are reset.
					this._pendingStateQueue = null;
					this._pendingReplaceState = false;
					this._pendingForceUpdate = false;
					this._pendingCallbacks = null;
					this._pendingElement = null;

					// These fields do not really need to be reset since this object is no
					// longer accessible.
					this._context = null;
					this._rootNodeID = null;
					this._topLevelWrapper = null;

					// Delete the reference from the instance to this internal representation
					// which allow the internals to be properly cleaned up even if the user
					// leaks a reference to the public instance.
					ReactInstanceMap.remove(inst);

					// Some existing components rely on inst.props even after they've been
					// destroyed (in event handlers).
					// TODO: inst.props = null;
					// TODO: inst.state = null;
					// TODO: inst.context = null;
				},

				/**
				 * Filters the context object to only contain keys specified in
				 * `contextTypes`
				 *
				 * @param {object} context
				 * @return {?object}
				 * @private
				 */
				_maskContext: function (context) {
					var maskedContext = null;
					var Component = this._currentElement.type;
					var contextTypes = Component.contextTypes;
					if (!contextTypes) {
						return emptyObject;
					}
					maskedContext = {};
					for (var contextName in contextTypes) {
						maskedContext[contextName] = context[contextName];
					}
					return maskedContext;
				},

				/**
				 * Filters the context object to only contain keys specified in
				 * `contextTypes`, and asserts that they are valid.
				 *
				 * @param {object} context
				 * @return {?object}
				 * @private
				 */
				_processContext: function (context) {
					var maskedContext = this._maskContext(context);
					if ("development" !== 'production') {
						var Component = this._currentElement.type;
						if (Component.contextTypes) {
							this._checkPropTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);
						}
					}
					return maskedContext;
				},

				/**
				 * @param {object} currentContext
				 * @return {object}
				 * @private
				 */
				_processChildContext: function (currentContext) {
					var Component = this._currentElement.type;
					var inst = this._instance;
					var childContext = inst.getChildContext && inst.getChildContext();
					if (childContext) {
						!(typeof Component.childContextTypes === 'object') ? "development" !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;
						if ("development" !== 'production') {
							this._checkPropTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);
						}
						for (var name in childContext) {
							!(name in Component.childContextTypes) ? "development" !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : invariant(false) : undefined;
						}
						return assign({}, currentContext, childContext);
					}
					return currentContext;
				},

				/**
				 * Processes props by setting default values for unspecified props and
				 * asserting that the props are valid. Does not mutate its argument; returns
				 * a new props object with defaults merged in.
				 *
				 * @param {object} newProps
				 * @return {object}
				 * @private
				 */
				_processProps: function (newProps) {
					if ("development" !== 'production') {
						var Component = this._currentElement.type;
						if (Component.propTypes) {
							this._checkPropTypes(Component.propTypes, newProps, ReactPropTypeLocations.prop);
						}
					}
					return newProps;
				},

				/**
				 * Assert that the props are valid
				 *
				 * @param {object} propTypes Map of prop name to a ReactPropType
				 * @param {object} props
				 * @param {string} location e.g. "prop", "context", "child context"
				 * @private
				 */
				_checkPropTypes: function (propTypes, props, location) {
					// TODO: Stop validating prop types here and only use the element
					// validation.
					var componentName = this.getName();
					for (var propName in propTypes) {
						if (propTypes.hasOwnProperty(propName)) {
							var error;
							try {
								// This is intentionally an invariant that gets caught. It's the same
								// behavior as without this statement except with a better message.
								!(typeof propTypes[propName] === 'function') ? "development" !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually ' + 'from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : undefined;
								error = propTypes[propName](props, propName, componentName, location);
							} catch (ex) {
								error = ex;
							}
							if (error instanceof Error) {
								// We may want to extend this logic for similar errors in
								// top-level render calls, so I'm abstracting it away into
								// a function to minimize refactoring in the future
								var addendum = getDeclarationErrorAddendum(this);

								if (location === ReactPropTypeLocations.prop) {
									// Preface gives us something to blacklist in warning module
									"development" !== 'production' ? warning(false, 'Failed Composite propType: %s%s', error.message, addendum) : undefined;
								} else {
									"development" !== 'production' ? warning(false, 'Failed Context Types: %s%s', error.message, addendum) : undefined;
								}
							}
						}
					}
				},

				receiveComponent: function (nextElement, transaction, nextContext) {
					var prevElement = this._currentElement;
					var prevContext = this._context;

					this._pendingElement = null;

					this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
				},

				/**
				 * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
				 * is set, update the component.
				 *
				 * @param {ReactReconcileTransaction} transaction
				 * @internal
				 */
				performUpdateIfNecessary: function (transaction) {
					if (this._pendingElement != null) {
						ReactReconciler.receiveComponent(this, this._pendingElement || this._currentElement, transaction, this._context);
					}

					if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
						this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
					}
				},

				/**
				 * Perform an update to a mounted component. The componentWillReceiveProps and
				 * shouldComponentUpdate methods are called, then (assuming the update isn't
				 * skipped) the remaining update lifecycle methods are called and the DOM
				 * representation is updated.
				 *
				 * By default, this implements React's rendering and reconciliation algorithm.
				 * Sophisticated clients may wish to override this.
				 *
				 * @param {ReactReconcileTransaction} transaction
				 * @param {ReactElement} prevParentElement
				 * @param {ReactElement} nextParentElement
				 * @internal
				 * @overridable
				 */
				updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
					var inst = this._instance;

					var nextContext = this._context === nextUnmaskedContext ? inst.context : this._processContext(nextUnmaskedContext);
					var nextProps;

					// Distinguish between a props update versus a simple state update
					if (prevParentElement === nextParentElement) {
						// Skip checking prop types again -- we don't read inst.props to avoid
						// warning for DOM component props in this upgrade
						nextProps = nextParentElement.props;
					} else {
						nextProps = this._processProps(nextParentElement.props);
						// An update here will schedule an update but immediately set
						// _pendingStateQueue which will ensure that any state updates gets
						// immediately reconciled instead of waiting for the next batch.

						if (inst.componentWillReceiveProps) {
							inst.componentWillReceiveProps(nextProps, nextContext);
						}
					}

					var nextState = this._processPendingState(nextProps, nextContext);

					var shouldUpdate = this._pendingForceUpdate || !inst.shouldComponentUpdate || inst.shouldComponentUpdate(nextProps, nextState, nextContext);

					if ("development" !== 'production') {
						"development" !== 'production' ? warning(typeof shouldUpdate !== 'undefined', '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : undefined;
					}

					if (shouldUpdate) {
						this._pendingForceUpdate = false;
						// Will set `this.props`, `this.state` and `this.context`.
						this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
					} else {
						// If it's determined that a component should not update, we still want
						// to set props and state but we shortcut the rest of the update.
						this._currentElement = nextParentElement;
						this._context = nextUnmaskedContext;
						inst.props = nextProps;
						inst.state = nextState;
						inst.context = nextContext;
					}
				},

				_processPendingState: function (props, context) {
					var inst = this._instance;
					var queue = this._pendingStateQueue;
					var replace = this._pendingReplaceState;
					this._pendingReplaceState = false;
					this._pendingStateQueue = null;

					if (!queue) {
						return inst.state;
					}

					if (replace && queue.length === 1) {
						return queue[0];
					}

					var nextState = assign({}, replace ? queue[0] : inst.state);
					for (var i = replace ? 1 : 0; i < queue.length; i++) {
						var partial = queue[i];
						assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
					}

					return nextState;
				},

				/**
				 * Merges new props and state, notifies delegate methods of update and
				 * performs update.
				 *
				 * @param {ReactElement} nextElement Next element
				 * @param {object} nextProps Next public object to set as properties.
				 * @param {?object} nextState Next object to set as state.
				 * @param {?object} nextContext Next public object to set as context.
				 * @param {ReactReconcileTransaction} transaction
				 * @param {?object} unmaskedContext
				 * @private
				 */
				_performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
					var inst = this._instance;

					var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
					var prevProps;
					var prevState;
					var prevContext;
					if (hasComponentDidUpdate) {
						prevProps = inst.props;
						prevState = inst.state;
						prevContext = inst.context;
					}

					if (inst.componentWillUpdate) {
						inst.componentWillUpdate(nextProps, nextState, nextContext);
					}

					this._currentElement = nextElement;
					this._context = unmaskedContext;
					inst.props = nextProps;
					inst.state = nextState;
					inst.context = nextContext;

					this._updateRenderedComponent(transaction, unmaskedContext);

					if (hasComponentDidUpdate) {
						transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
					}
				},

				/**
				 * Call the component's `render` method and update the DOM accordingly.
				 *
				 * @param {ReactReconcileTransaction} transaction
				 * @internal
				 */
				_updateRenderedComponent: function (transaction, context) {
					var prevComponentInstance = this._renderedComponent;
					var prevRenderedElement = prevComponentInstance._currentElement;
					var nextRenderedElement = this._renderValidatedComponent();
					if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
						ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
					} else {
						// These two IDs are actually the same! But nothing should rely on that.
						var thisID = this._rootNodeID;
						var prevComponentID = prevComponentInstance._rootNodeID;
						ReactReconciler.unmountComponent(prevComponentInstance);

						this._renderedComponent = this._instantiateReactComponent(nextRenderedElement);
						var nextMarkup = ReactReconciler.mountComponent(this._renderedComponent, thisID, transaction, this._processChildContext(context));
						this._replaceNodeWithMarkupByID(prevComponentID, nextMarkup);
					}
				},

				/**
				 * @protected
				 */
				_replaceNodeWithMarkupByID: function (prevComponentID, nextMarkup) {
					ReactComponentEnvironment.replaceNodeWithMarkupByID(prevComponentID, nextMarkup);
				},

				/**
				 * @protected
				 */
				_renderValidatedComponentWithoutOwnerOrContext: function () {
					var inst = this._instance;
					var renderedComponent = inst.render();
					if ("development" !== 'production') {
						// We allow auto-mocks to proceed as if they're returning null.
						if (typeof renderedComponent === 'undefined' && inst.render._isMockFunction) {
							// This is probably bad practice. Consider warning here and
							// deprecating this convenience.
							renderedComponent = null;
						}
					}

					return renderedComponent;
				},

				/**
				 * @private
				 */
				_renderValidatedComponent: function () {
					var renderedComponent;
					ReactCurrentOwner.current = this;
					try {
						renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
					} finally {
						ReactCurrentOwner.current = null;
					}
					!(
					// TODO: An `isValidNode` function would probably be more appropriate
					renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ? "development" !== 'production' ? invariant(false, '%s.render(): A valid ReactComponent must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;
					return renderedComponent;
				},

				/**
				 * Lazily allocates the refs object and stores `component` as `ref`.
				 *
				 * @param {string} ref Reference name.
				 * @param {component} component Component to store as `ref`.
				 * @final
				 * @private
				 */
				attachRef: function (ref, component) {
					var inst = this.getPublicInstance();
					!(inst != null) ? "development" !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : invariant(false) : undefined;
					var publicComponentInstance = component.getPublicInstance();
					if ("development" !== 'production') {
						var componentName = component && component.getName ? component.getName() : 'a component';
						"development" !== 'production' ? warning(publicComponentInstance != null, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : undefined;
					}
					var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
					refs[ref] = publicComponentInstance;
				},

				/**
				 * Detaches a reference name.
				 *
				 * @param {string} ref Name to dereference.
				 * @final
				 * @private
				 */
				detachRef: function (ref) {
					var refs = this.getPublicInstance().refs;
					delete refs[ref];
				},

				/**
				 * Get a text description of the component that can be used to identify it
				 * in error messages.
				 * @return {string} The name or null.
				 * @internal
				 */
				getName: function () {
					var type = this._currentElement.type;
					var constructor = this._instance && this._instance.constructor;
					return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
				},

				/**
				 * Get the publicly accessible representation of this component - i.e. what
				 * is exposed by refs and returned by render. Can be null for stateless
				 * components.
				 *
				 * @return {ReactComponent} the public component instance.
				 * @internal
				 */
				getPublicInstance: function () {
					var inst = this._instance;
					if (inst instanceof StatelessComponent) {
						return null;
					}
					return inst;
				},

				// Stub
				_instantiateReactComponent: null

			};

			ReactPerf.measureMethods(ReactCompositeComponentMixin, 'ReactCompositeComponent', {
				mountComponent: 'mountComponent',
				updateComponent: 'updateComponent',
				_renderValidatedComponent: '_renderValidatedComponent'
			});

			var ReactCompositeComponent = {

				Mixin: ReactCompositeComponentMixin

			};

			module.exports = ReactCompositeComponent;
		}, { "141": 141, "154": 154, "161": 161, "173": 173, "24": 24, "36": 36, "39": 39, "57": 57, "68": 68, "78": 78, "80": 80, "81": 81, "84": 84, "95": 95 }], 39: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactCurrentOwner
			 */

			'use strict';

			/**
			 * Keeps track of the current owner.
			 *
			 * The current owner is the component who should own any components that are
			 * currently being constructed.
			 */
			var ReactCurrentOwner = {

				/**
				 * @internal
				 * @type {ReactComponent}
				 */
				current: null

			};

			module.exports = ReactCurrentOwner;
		}, {}], 40: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactDOM
			 */

			/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/

			'use strict';

			var ReactCurrentOwner = _dereq_(39);
			var ReactDOMTextComponent = _dereq_(51);
			var ReactDefaultInjection = _dereq_(54);
			var ReactInstanceHandles = _dereq_(67);
			var ReactMount = _dereq_(72);
			var ReactPerf = _dereq_(78);
			var ReactReconciler = _dereq_(84);
			var ReactUpdates = _dereq_(96);
			var ReactVersion = _dereq_(97);

			var findDOMNode = _dereq_(122);
			var renderSubtreeIntoContainer = _dereq_(137);
			var warning = _dereq_(173);

			ReactDefaultInjection.inject();

			var render = ReactPerf.measure('React', 'render', ReactMount.render);

			var React = {
				findDOMNode: findDOMNode,
				render: render,
				unmountComponentAtNode: ReactMount.unmountComponentAtNode,
				version: ReactVersion,

				/* eslint-disable camelcase */
				unstable_batchedUpdates: ReactUpdates.batchedUpdates,
				unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
			};

			// Inject the runtime into a devtools global hook regardless of browser.
			// Allows for debugging when the hook is injected on the page.
			/* eslint-enable camelcase */
			if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
				__REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
					CurrentOwner: ReactCurrentOwner,
					InstanceHandles: ReactInstanceHandles,
					Mount: ReactMount,
					Reconciler: ReactReconciler,
					TextComponent: ReactDOMTextComponent
				});
			}

			if ("development" !== 'production') {
				var ExecutionEnvironment = _dereq_(147);
				if (ExecutionEnvironment.canUseDOM && window.top === window.self) {

					// First check if devtools is not installed
					if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
						// If we're in Chrome or Firefox, provide a download link if not installed.
						if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
							console.debug('Download the React DevTools for a better development experience: ' + 'https://fb.me/react-devtools');
						}
					}

					// If we're in IE8, check to see if we are in compatibility mode and provide
					// information on preventing compatibility mode
					var ieCompatibilityMode = document.documentMode && document.documentMode < 8;

					"development" !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : undefined;

					var expectedFeatures = [
					// shims
					Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim,

					// shams
					Object.create, Object.freeze];

					for (var i = 0; i < expectedFeatures.length; i++) {
						if (!expectedFeatures[i]) {
							console.error('One or more ES5 shim/shams expected by React are not available: ' + 'https://fb.me/react-warning-polyfills');
							break;
						}
					}
				}
			}

			module.exports = React;
		}, { "122": 122, "137": 137, "147": 147, "173": 173, "39": 39, "51": 51, "54": 54, "67": 67, "72": 72, "78": 78, "84": 84, "96": 96, "97": 97 }], 41: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactDOMButton
			 */

			'use strict';

			var mouseListenerNames = {
				onClick: true,
				onDoubleClick: true,
				onMouseDown: true,
				onMouseMove: true,
				onMouseUp: true,

				onClickCapture: true,
				onDoubleClickCapture: true,
				onMouseDownCapture: true,
				onMouseMoveCapture: true,
				onMouseUpCapture: true
			};

			/**
			 * Implements a <button> native component that does not receive mouse events
			 * when `disabled` is set.
			 */
			var ReactDOMButton = {
				getNativeProps: function (inst, props, context) {
					if (!props.disabled) {
						return props;
					}

					// Copy the props, except the mouse listeners
					var nativeProps = {};
					for (var key in props) {
						if (props.hasOwnProperty(key) && !mouseListenerNames[key]) {
							nativeProps[key] = props[key];
						}
					}

					return nativeProps;
				}
			};

			module.exports = ReactDOMButton;
		}, {}], 42: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactDOMComponent
			 * @typechecks static-only
			 */

			/* global hasOwnProperty:true */

			'use strict';

			var AutoFocusUtils = _dereq_(2);
			var CSSPropertyOperations = _dereq_(5);
			var DOMProperty = _dereq_(10);
			var DOMPropertyOperations = _dereq_(11);
			var EventConstants = _dereq_(15);
			var ReactBrowserEventEmitter = _dereq_(28);
			var ReactComponentBrowserEnvironment = _dereq_(35);
			var ReactDOMButton = _dereq_(41);
			var ReactDOMInput = _dereq_(46);
			var ReactDOMOption = _dereq_(47);
			var ReactDOMSelect = _dereq_(48);
			var ReactDOMTextarea = _dereq_(52);
			var ReactMount = _dereq_(72);
			var ReactMultiChild = _dereq_(73);
			var ReactPerf = _dereq_(78);
			var ReactUpdateQueue = _dereq_(95);

			var assign = _dereq_(24);
			var canDefineProperty = _dereq_(117);
			var escapeTextContentForBrowser = _dereq_(121);
			var invariant = _dereq_(161);
			var isEventSupported = _dereq_(133);
			var keyOf = _dereq_(166);
			var setInnerHTML = _dereq_(138);
			var setTextContent = _dereq_(139);
			var shallowEqual = _dereq_(171);
			var validateDOMNesting = _dereq_(144);
			var warning = _dereq_(173);

			var deleteListener = ReactBrowserEventEmitter.deleteListener;
			var listenTo = ReactBrowserEventEmitter.listenTo;
			var registrationNameModules = ReactBrowserEventEmitter.registrationNameModules;

			// For quickly matching children type, to test if can be treated as content.
			var CONTENT_TYPES = { 'string': true, 'number': true };

			var CHILDREN = keyOf({ children: null });
			var STYLE = keyOf({ style: null });
			var HTML = keyOf({ __html: null });

			var ELEMENT_NODE_TYPE = 1;

			function getDeclarationErrorAddendum(internalInstance) {
				if (internalInstance) {
					var owner = internalInstance._currentElement._owner || null;
					if (owner) {
						var name = owner.getName();
						if (name) {
							return ' This DOM node was rendered by `' + name + '`.';
						}
					}
				}
				return '';
			}

			var legacyPropsDescriptor;
			if ("development" !== 'production') {
				legacyPropsDescriptor = {
					props: {
						enumerable: false,
						get: function () {
							var component = this._reactInternalComponent;
							"development" !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .props of a DOM node; instead, ' + 'recreate the props as `render` did originally or read the DOM ' + 'properties/attributes directly from this node (e.g., ' + 'this.refs.box.className).%s', getDeclarationErrorAddendum(component)) : undefined;
							return component._currentElement.props;
						}
					}
				};
			}

			function legacyGetDOMNode() {
				if ("development" !== 'production') {
					var component = this._reactInternalComponent;
					"development" !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .getDOMNode() of a DOM node; ' + 'instead, use the node directly.%s', getDeclarationErrorAddendum(component)) : undefined;
				}
				return this;
			}

			function legacyIsMounted() {
				var component = this._reactInternalComponent;
				if ("development" !== 'production') {
					"development" !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .isMounted() of a DOM node.%s', getDeclarationErrorAddendum(component)) : undefined;
				}
				return !!component;
			}

			function legacySetStateEtc() {
				if ("development" !== 'production') {
					var component = this._reactInternalComponent;
					"development" !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .setState(), .replaceState(), or ' + '.forceUpdate() of a DOM node. This is a no-op.%s', getDeclarationErrorAddendum(component)) : undefined;
				}
			}

			function legacySetProps(partialProps, callback) {
				var component = this._reactInternalComponent;
				if ("development" !== 'production') {
					"development" !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .setProps() of a DOM node. ' + 'Instead, call ReactDOM.render again at the top level.%s', getDeclarationErrorAddendum(component)) : undefined;
				}
				if (!component) {
					return;
				}
				ReactUpdateQueue.enqueueSetPropsInternal(component, partialProps);
				if (callback) {
					ReactUpdateQueue.enqueueCallbackInternal(component, callback);
				}
			}

			function legacyReplaceProps(partialProps, callback) {
				var component = this._reactInternalComponent;
				if ("development" !== 'production') {
					"development" !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .replaceProps() of a DOM node. ' + 'Instead, call ReactDOM.render again at the top level.%s', getDeclarationErrorAddendum(component)) : undefined;
				}
				if (!component) {
					return;
				}
				ReactUpdateQueue.enqueueReplacePropsInternal(component, partialProps);
				if (callback) {
					ReactUpdateQueue.enqueueCallbackInternal(component, callback);
				}
			}

			function friendlyStringify(obj) {
				if (typeof obj === 'object') {
					if (Array.isArray(obj)) {
						return '[' + obj.map(friendlyStringify).join(', ') + ']';
					} else {
						var pairs = [];
						for (var key in obj) {
							if (Object.prototype.hasOwnProperty.call(obj, key)) {
								var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
								pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
							}
						}
						return '{' + pairs.join(', ') + '}';
					}
				} else if (typeof obj === 'string') {
					return JSON.stringify(obj);
				} else if (typeof obj === 'function') {
					return '[function object]';
				}
				// Differs from JSON.stringify in that undefined becauses undefined and that
				// inf and nan don't become null
				return String(obj);
			}

			var styleMutationWarning = {};

			function checkAndWarnForMutatedStyle(style1, style2, component) {
				if (style1 == null || style2 == null) {
					return;
				}
				if (shallowEqual(style1, style2)) {
					return;
				}

				var componentName = component._tag;
				var owner = component._currentElement._owner;
				var ownerName;
				if (owner) {
					ownerName = owner.getName();
				}

				var hash = ownerName + '|' + componentName;

				if (styleMutationWarning.hasOwnProperty(hash)) {
					return;
				}

				styleMutationWarning[hash] = true;

				"development" !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : undefined;
			}

			/**
			 * @param {object} component
			 * @param {?object} props
			 */
			function assertValidProps(component, props) {
				if (!props) {
					return;
				}
				// Note the use of `==` which checks for null or undefined.
				if ("development" !== 'production') {
					if (voidElementTags[component._tag]) {
						"development" !== 'production' ? warning(props.children == null && props.dangerouslySetInnerHTML == null, '%s is a void element tag and must not have `children` or ' + 'use `props.dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : undefined;
					}
				}
				if (props.dangerouslySetInnerHTML != null) {
					!(props.children == null) ? "development" !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : invariant(false) : undefined;
					!(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? "development" !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' + 'Please visit https://fb.me/react-invariant-dangerously-set-inner-html ' + 'for more information.') : invariant(false) : undefined;
				}
				if ("development" !== 'production') {
					"development" !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : undefined;
					"development" !== 'production' ? warning(!props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : undefined;
				}
				!(props.style == null || typeof props.style === 'object') ? "development" !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, ' + 'not a string. For example, style={{marginRight: spacing + \'em\'}} when ' + 'using JSX.%s', getDeclarationErrorAddendum(component)) : invariant(false) : undefined;
			}

			function enqueuePutListener(id, registrationName, listener, transaction) {
				if ("development" !== 'production') {
					// IE8 has no API for event capturing and the `onScroll` event doesn't
					// bubble.
					"development" !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : undefined;
				}
				var container = ReactMount.findReactContainerForID(id);
				if (container) {
					var doc = container.nodeType === ELEMENT_NODE_TYPE ? container.ownerDocument : container;
					listenTo(registrationName, doc);
				}
				transaction.getReactMountReady().enqueue(putListener, {
					id: id,
					registrationName: registrationName,
					listener: listener
				});
			}

			function putListener() {
				var listenerToPut = this;
				ReactBrowserEventEmitter.putListener(listenerToPut.id, listenerToPut.registrationName, listenerToPut.listener);
			}

			// There are so many media events, it makes sense to just
			// maintain a list rather than create a `trapBubbledEvent` for each
			var mediaEvents = {
				topAbort: 'abort',
				topCanPlay: 'canplay',
				topCanPlayThrough: 'canplaythrough',
				topDurationChange: 'durationchange',
				topEmptied: 'emptied',
				topEncrypted: 'encrypted',
				topEnded: 'ended',
				topError: 'error',
				topLoadedData: 'loadeddata',
				topLoadedMetadata: 'loadedmetadata',
				topLoadStart: 'loadstart',
				topPause: 'pause',
				topPlay: 'play',
				topPlaying: 'playing',
				topProgress: 'progress',
				topRateChange: 'ratechange',
				topSeeked: 'seeked',
				topSeeking: 'seeking',
				topStalled: 'stalled',
				topSuspend: 'suspend',
				topTimeUpdate: 'timeupdate',
				topVolumeChange: 'volumechange',
				topWaiting: 'waiting'
			};

			function trapBubbledEventsLocal() {
				var inst = this;
				// If a component renders to null or if another component fatals and causes
				// the state of the tree to be corrupted, `node` here can be null.
				!inst._rootNodeID ? "development" !== 'production' ? invariant(false, 'Must be mounted to trap events') : invariant(false) : undefined;
				var node = ReactMount.getNode(inst._rootNodeID);
				!node ? "development" !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : invariant(false) : undefined;

				switch (inst._tag) {
					case 'iframe':
						inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
						break;
					case 'video':
					case 'audio':

						inst._wrapperState.listeners = [];
						// create listener for each media event
						for (var event in mediaEvents) {
							if (mediaEvents.hasOwnProperty(event)) {
								inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));
							}
						}

						break;
					case 'img':
						inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
						break;
					case 'form':
						inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];
						break;
				}
			}

			function mountReadyInputWrapper() {
				ReactDOMInput.mountReadyWrapper(this);
			}

			function postUpdateSelectWrapper() {
				ReactDOMSelect.postUpdateWrapper(this);
			}

			// For HTML, certain tags should omit their close tag. We keep a whitelist for
			// those special cased tags.

			var omittedCloseTags = {
				'area': true,
				'base': true,
				'br': true,
				'col': true,
				'embed': true,
				'hr': true,
				'img': true,
				'input': true,
				'keygen': true,
				'link': true,
				'meta': true,
				'param': true,
				'source': true,
				'track': true,
				'wbr': true
			};

			// NOTE: menuitem's close tag should be omitted, but that causes problems.
			var newlineEatingTags = {
				'listing': true,
				'pre': true,
				'textarea': true
			};

			// For HTML, certain tags cannot have children. This has the same purpose as
			// `omittedCloseTags` except that `menuitem` should still have its closing tag.

			var voidElementTags = assign({
				'menuitem': true
			}, omittedCloseTags);

			// We accept any tag to be rendered but since this gets injected into arbitrary
			// HTML, we want to make sure that it's a safe tag.
			// http://www.w3.org/TR/REC-xml/#NT-Name

			var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
			var validatedTagCache = {};
			var hasOwnProperty = ({}).hasOwnProperty;

			function validateDangerousTag(tag) {
				if (!hasOwnProperty.call(validatedTagCache, tag)) {
					!VALID_TAG_REGEX.test(tag) ? "development" !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : invariant(false) : undefined;
					validatedTagCache[tag] = true;
				}
			}

			function processChildContextDev(context, inst) {
				// Pass down our tag name to child components for validation purposes
				context = assign({}, context);
				var info = context[validateDOMNesting.ancestorInfoContextKey];
				context[validateDOMNesting.ancestorInfoContextKey] = validateDOMNesting.updatedAncestorInfo(info, inst._tag, inst);
				return context;
			}

			function isCustomComponent(tagName, props) {
				return tagName.indexOf('-') >= 0 || props.is != null;
			}

			/**
			 * Creates a new React class that is idempotent and capable of containing other
			 * React components. It accepts event listeners and DOM properties that are
			 * valid according to `DOMProperty`.
			 *
			 *  - Event listeners: `onClick`, `onMouseDown`, etc.
			 *  - DOM properties: `className`, `name`, `title`, etc.
			 *
			 * The `style` property functions differently from the DOM API. It accepts an
			 * object mapping of style properties to values.
			 *
			 * @constructor ReactDOMComponent
			 * @extends ReactMultiChild
			 */
			function ReactDOMComponent(tag) {
				validateDangerousTag(tag);
				this._tag = tag.toLowerCase();
				this._renderedChildren = null;
				this._previousStyle = null;
				this._previousStyleCopy = null;
				this._rootNodeID = null;
				this._wrapperState = null;
				this._topLevelWrapper = null;
				this._nodeWithLegacyProperties = null;
				if ("development" !== 'production') {
					this._unprocessedContextDev = null;
					this._processedContextDev = null;
				}
			}

			ReactDOMComponent.displayName = 'ReactDOMComponent';

			ReactDOMComponent.Mixin = {

				construct: function (element) {
					this._currentElement = element;
				},

				/**
				 * Generates root tag markup then recurses. This method has side effects and
				 * is not idempotent.
				 *
				 * @internal
				 * @param {string} rootID The root DOM ID for this node.
				 * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
				 * @param {object} context
				 * @return {string} The computed markup.
				 */
				mountComponent: function (rootID, transaction, context) {
					this._rootNodeID = rootID;

					var props = this._currentElement.props;

					switch (this._tag) {
						case 'iframe':
						case 'img':
						case 'form':
						case 'video':
						case 'audio':
							this._wrapperState = {
								listeners: null
							};
							transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
							break;
						case 'button':
							props = ReactDOMButton.getNativeProps(this, props, context);
							break;
						case 'input':
							ReactDOMInput.mountWrapper(this, props, context);
							props = ReactDOMInput.getNativeProps(this, props, context);
							break;
						case 'option':
							ReactDOMOption.mountWrapper(this, props, context);
							props = ReactDOMOption.getNativeProps(this, props, context);
							break;
						case 'select':
							ReactDOMSelect.mountWrapper(this, props, context);
							props = ReactDOMSelect.getNativeProps(this, props, context);
							context = ReactDOMSelect.processChildContext(this, props, context);
							break;
						case 'textarea':
							ReactDOMTextarea.mountWrapper(this, props, context);
							props = ReactDOMTextarea.getNativeProps(this, props, context);
							break;
					}

					assertValidProps(this, props);
					if ("development" !== 'production') {
						if (context[validateDOMNesting.ancestorInfoContextKey]) {
							validateDOMNesting(this._tag, this, context[validateDOMNesting.ancestorInfoContextKey]);
						}
					}

					if ("development" !== 'production') {
						this._unprocessedContextDev = context;
						this._processedContextDev = processChildContextDev(context, this);
						context = this._processedContextDev;
					}

					var mountImage;
					if (transaction.useCreateElement) {
						var ownerDocument = context[ReactMount.ownerDocumentContextKey];
						var el = ownerDocument.createElement(this._currentElement.type);
						DOMPropertyOperations.setAttributeForID(el, this._rootNodeID);
						// Populate node cache
						ReactMount.getID(el);
						this._updateDOMProperties({}, props, transaction, el);
						this._createInitialChildren(transaction, props, context, el);
						mountImage = el;
					} else {
						var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
						var tagContent = this._createContentMarkup(transaction, props, context);
						if (!tagContent && omittedCloseTags[this._tag]) {
							mountImage = tagOpen + '/>';
						} else {
							mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
						}
					}

					switch (this._tag) {
						case 'input':
							transaction.getReactMountReady().enqueue(mountReadyInputWrapper, this);
							// falls through
						case 'button':
						case 'select':
						case 'textarea':
							if (props.autoFocus) {
								transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
							}
							break;
					}

					return mountImage;
				},

				/**
				 * Creates markup for the open tag and all attributes.
				 *
				 * This method has side effects because events get registered.
				 *
				 * Iterating over object properties is faster than iterating over arrays.
				 * @see http://jsperf.com/obj-vs-arr-iteration
				 *
				 * @private
				 * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
				 * @param {object} props
				 * @return {string} Markup of opening tag.
				 */
				_createOpenTagMarkupAndPutListeners: function (transaction, props) {
					var ret = '<' + this._currentElement.type;

					for (var propKey in props) {
						if (!props.hasOwnProperty(propKey)) {
							continue;
						}
						var propValue = props[propKey];
						if (propValue == null) {
							continue;
						}
						if (registrationNameModules.hasOwnProperty(propKey)) {
							if (propValue) {
								enqueuePutListener(this._rootNodeID, propKey, propValue, transaction);
							}
						} else {
							if (propKey === STYLE) {
								if (propValue) {
									if ("development" !== 'production') {
										// See `_updateDOMProperties`. style block
										this._previousStyle = propValue;
									}
									propValue = this._previousStyleCopy = assign({}, props.style);
								}
								propValue = CSSPropertyOperations.createMarkupForStyles(propValue);
							}
							var markup = null;
							if (this._tag != null && isCustomComponent(this._tag, props)) {
								if (propKey !== CHILDREN) {
									markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
								}
							} else {
								markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
							}
							if (markup) {
								ret += ' ' + markup;
							}
						}
					}

					// For static pages, no need to put React ID and checksum. Saves lots of
					// bytes.
					if (transaction.renderToStaticMarkup) {
						return ret;
					}

					var markupForID = DOMPropertyOperations.createMarkupForID(this._rootNodeID);
					return ret + ' ' + markupForID;
				},

				/**
				 * Creates markup for the content between the tags.
				 *
				 * @private
				 * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
				 * @param {object} props
				 * @param {object} context
				 * @return {string} Content markup.
				 */
				_createContentMarkup: function (transaction, props, context) {
					var ret = '';

					// Intentional use of != to avoid catching zero/false.
					var innerHTML = props.dangerouslySetInnerHTML;
					if (innerHTML != null) {
						if (innerHTML.__html != null) {
							ret = innerHTML.__html;
						}
					} else {
						var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
						var childrenToUse = contentToUse != null ? null : props.children;
						if (contentToUse != null) {
							// TODO: Validate that text is allowed as a child of this node
							ret = escapeTextContentForBrowser(contentToUse);
						} else if (childrenToUse != null) {
							var mountImages = this.mountChildren(childrenToUse, transaction, context);
							ret = mountImages.join('');
						}
					}
					if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
						// text/html ignores the first character in these tags if it's a newline
						// Prefer to break application/xml over text/html (for now) by adding
						// a newline specifically to get eaten by the parser. (Alternately for
						// textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
						// \r is normalized out by HTMLTextAreaElement#value.)
						// See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
						// See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
						// See: <http://www.w3.org/TR/html5/syntax.html#newlines>
						// See: Parsing of "textarea" "listing" and "pre" elements
						//  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
						return '\n' + ret;
					} else {
						return ret;
					}
				},

				_createInitialChildren: function (transaction, props, context, el) {
					// Intentional use of != to avoid catching zero/false.
					var innerHTML = props.dangerouslySetInnerHTML;
					if (innerHTML != null) {
						if (innerHTML.__html != null) {
							setInnerHTML(el, innerHTML.__html);
						}
					} else {
						var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
						var childrenToUse = contentToUse != null ? null : props.children;
						if (contentToUse != null) {
							// TODO: Validate that text is allowed as a child of this node
							setTextContent(el, contentToUse);
						} else if (childrenToUse != null) {
							var mountImages = this.mountChildren(childrenToUse, transaction, context);
							for (var i = 0; i < mountImages.length; i++) {
								el.appendChild(mountImages[i]);
							}
						}
					}
				},

				/**
				 * Receives a next element and updates the component.
				 *
				 * @internal
				 * @param {ReactElement} nextElement
				 * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
				 * @param {object} context
				 */
				receiveComponent: function (nextElement, transaction, context) {
					var prevElement = this._currentElement;
					this._currentElement = nextElement;
					this.updateComponent(transaction, prevElement, nextElement, context);
				},

				/**
				 * Updates a native DOM component after it has already been allocated and
				 * attached to the DOM. Reconciles the root DOM node, then recurses.
				 *
				 * @param {ReactReconcileTransaction} transaction
				 * @param {ReactElement} prevElement
				 * @param {ReactElement} nextElement
				 * @internal
				 * @overridable
				 */
				updateComponent: function (transaction, prevElement, nextElement, context) {
					var lastProps = prevElement.props;
					var nextProps = this._currentElement.props;

					switch (this._tag) {
						case 'button':
							lastProps = ReactDOMButton.getNativeProps(this, lastProps);
							nextProps = ReactDOMButton.getNativeProps(this, nextProps);
							break;
						case 'input':
							ReactDOMInput.updateWrapper(this);
							lastProps = ReactDOMInput.getNativeProps(this, lastProps);
							nextProps = ReactDOMInput.getNativeProps(this, nextProps);
							break;
						case 'option':
							lastProps = ReactDOMOption.getNativeProps(this, lastProps);
							nextProps = ReactDOMOption.getNativeProps(this, nextProps);
							break;
						case 'select':
							lastProps = ReactDOMSelect.getNativeProps(this, lastProps);
							nextProps = ReactDOMSelect.getNativeProps(this, nextProps);
							break;
						case 'textarea':
							ReactDOMTextarea.updateWrapper(this);
							lastProps = ReactDOMTextarea.getNativeProps(this, lastProps);
							nextProps = ReactDOMTextarea.getNativeProps(this, nextProps);
							break;
					}

					if ("development" !== 'production') {
						// If the context is reference-equal to the old one, pass down the same
						// processed object so the update bailout in ReactReconciler behaves
						// correctly (and identically in dev and prod). See #5005.
						if (this._unprocessedContextDev !== context) {
							this._unprocessedContextDev = context;
							this._processedContextDev = processChildContextDev(context, this);
						}
						context = this._processedContextDev;
					}

					assertValidProps(this, nextProps);
					this._updateDOMProperties(lastProps, nextProps, transaction, null);
					this._updateDOMChildren(lastProps, nextProps, transaction, context);

					if (!canDefineProperty && this._nodeWithLegacyProperties) {
						this._nodeWithLegacyProperties.props = nextProps;
					}

					if (this._tag === 'select') {
						// <select> value update needs to occur after <option> children
						// reconciliation
						transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
					}
				},

				/**
				 * Reconciles the properties by detecting differences in property values and
				 * updating the DOM as necessary. This function is probably the single most
				 * critical path for performance optimization.
				 *
				 * TODO: Benchmark whether checking for changed values in memory actually
				 *       improves performance (especially statically positioned elements).
				 * TODO: Benchmark the effects of putting this at the top since 99% of props
				 *       do not change for a given reconciliation.
				 * TODO: Benchmark areas that can be improved with caching.
				 *
				 * @private
				 * @param {object} lastProps
				 * @param {object} nextProps
				 * @param {ReactReconcileTransaction} transaction
				 * @param {?DOMElement} node
				 */
				_updateDOMProperties: function (lastProps, nextProps, transaction, node) {
					var propKey;
					var styleName;
					var styleUpdates;
					for (propKey in lastProps) {
						if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey)) {
							continue;
						}
						if (propKey === STYLE) {
							var lastStyle = this._previousStyleCopy;
							for (styleName in lastStyle) {
								if (lastStyle.hasOwnProperty(styleName)) {
									styleUpdates = styleUpdates || {};
									styleUpdates[styleName] = '';
								}
							}
							this._previousStyleCopy = null;
						} else if (registrationNameModules.hasOwnProperty(propKey)) {
							if (lastProps[propKey]) {
								// Only call deleteListener if there was a listener previously or
								// else willDeleteListener gets called when there wasn't actually a
								// listener (e.g., onClick={null})
								deleteListener(this._rootNodeID, propKey);
							}
						} else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
							if (!node) {
								node = ReactMount.getNode(this._rootNodeID);
							}
							DOMPropertyOperations.deleteValueForProperty(node, propKey);
						}
					}
					for (propKey in nextProps) {
						var nextProp = nextProps[propKey];
						var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps[propKey];
						if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp) {
							continue;
						}
						if (propKey === STYLE) {
							if (nextProp) {
								if ("development" !== 'production') {
									checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
									this._previousStyle = nextProp;
								}
								nextProp = this._previousStyleCopy = assign({}, nextProp);
							} else {
								this._previousStyleCopy = null;
							}
							if (lastProp) {
								// Unset styles on `lastProp` but not on `nextProp`.
								for (styleName in lastProp) {
									if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
										styleUpdates = styleUpdates || {};
										styleUpdates[styleName] = '';
									}
								}
								// Update styles that changed since `lastProp`.
								for (styleName in nextProp) {
									if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
										styleUpdates = styleUpdates || {};
										styleUpdates[styleName] = nextProp[styleName];
									}
								}
							} else {
								// Relies on `updateStylesByID` not mutating `styleUpdates`.
								styleUpdates = nextProp;
							}
						} else if (registrationNameModules.hasOwnProperty(propKey)) {
							if (nextProp) {
								enqueuePutListener(this._rootNodeID, propKey, nextProp, transaction);
							} else if (lastProp) {
								deleteListener(this._rootNodeID, propKey);
							}
						} else if (isCustomComponent(this._tag, nextProps)) {
							if (!node) {
								node = ReactMount.getNode(this._rootNodeID);
							}
							if (propKey === CHILDREN) {
								nextProp = null;
							}
							DOMPropertyOperations.setValueForAttribute(node, propKey, nextProp);
						} else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
							if (!node) {
								node = ReactMount.getNode(this._rootNodeID);
							}
							// If we're updating to null or undefined, we should remove the property
							// from the DOM node instead of inadvertantly setting to a string. This
							// brings us in line with the same behavior we have on initial render.
							if (nextProp != null) {
								DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
							} else {
								DOMPropertyOperations.deleteValueForProperty(node, propKey);
							}
						}
					}
					if (styleUpdates) {
						if (!node) {
							node = ReactMount.getNode(this._rootNodeID);
						}
						CSSPropertyOperations.setValueForStyles(node, styleUpdates);
					}
				},

				/**
				 * Reconciles the children with the various properties that affect the
				 * children content.
				 *
				 * @param {object} lastProps
				 * @param {object} nextProps
				 * @param {ReactReconcileTransaction} transaction
				 * @param {object} context
				 */
				_updateDOMChildren: function (lastProps, nextProps, transaction, context) {
					var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
					var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

					var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
					var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;

					// Note the use of `!=` which checks for null or undefined.
					var lastChildren = lastContent != null ? null : lastProps.children;
					var nextChildren = nextContent != null ? null : nextProps.children;

					// If we're switching from children to content/html or vice versa, remove
					// the old content
					var lastHasContentOrHtml = lastContent != null || lastHtml != null;
					var nextHasContentOrHtml = nextContent != null || nextHtml != null;
					if (lastChildren != null && nextChildren == null) {
						this.updateChildren(null, transaction, context);
					} else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
						this.updateTextContent('');
					}

					if (nextContent != null) {
						if (lastContent !== nextContent) {
							this.updateTextContent('' + nextContent);
						}
					} else if (nextHtml != null) {
						if (lastHtml !== nextHtml) {
							this.updateMarkup('' + nextHtml);
						}
					} else if (nextChildren != null) {
						this.updateChildren(nextChildren, transaction, context);
					}
				},

				/**
				 * Destroys all event registrations for this instance. Does not remove from
				 * the DOM. That must be done by the parent.
				 *
				 * @internal
				 */
				unmountComponent: function () {
					switch (this._tag) {
						case 'iframe':
						case 'img':
						case 'form':
						case 'video':
						case 'audio':
							var listeners = this._wrapperState.listeners;
							if (listeners) {
								for (var i = 0; i < listeners.length; i++) {
									listeners[i].remove();
								}
							}
							break;
						case 'input':
							ReactDOMInput.unmountWrapper(this);
							break;
						case 'html':
						case 'head':
						case 'body':
							/**
							 * Components like <html> <head> and <body> can't be removed or added
							 * easily in a cross-browser way, however it's valuable to be able to
							 * take advantage of React's reconciliation for styling and <title>
							 * management. So we just document it and throw in dangerous cases.
							 */
							!false ? "development" !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is ' + 'impossible to unmount some top-level components (eg <html>, ' + '<head>, and <body>) reliably and efficiently. To fix this, have a ' + 'single top-level component that never unmounts render these ' + 'elements.', this._tag) : invariant(false) : undefined;
							break;
					}

					this.unmountChildren();
					ReactBrowserEventEmitter.deleteAllListeners(this._rootNodeID);
					ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
					this._rootNodeID = null;
					this._wrapperState = null;
					if (this._nodeWithLegacyProperties) {
						var node = this._nodeWithLegacyProperties;
						node._reactInternalComponent = null;
						this._nodeWithLegacyProperties = null;
					}
				},

				getPublicInstance: function () {
					if (!this._nodeWithLegacyProperties) {
						var node = ReactMount.getNode(this._rootNodeID);

						node._reactInternalComponent = this;
						node.getDOMNode = legacyGetDOMNode;
						node.isMounted = legacyIsMounted;
						node.setState = legacySetStateEtc;
						node.replaceState = legacySetStateEtc;
						node.forceUpdate = legacySetStateEtc;
						node.setProps = legacySetProps;
						node.replaceProps = legacyReplaceProps;

						if ("development" !== 'production') {
							if (canDefineProperty) {
								Object.defineProperties(node, legacyPropsDescriptor);
							} else {
								// updateComponent will update this property on subsequent renders
								node.props = this._currentElement.props;
							}
						} else {
							// updateComponent will update this property on subsequent renders
							node.props = this._currentElement.props;
						}

						this._nodeWithLegacyProperties = node;
					}
					return this._nodeWithLegacyProperties;
				}

			};

			ReactPerf.measureMethods(ReactDOMComponent, 'ReactDOMComponent', {
				mountComponent: 'mountComponent',
				updateComponent: 'updateComponent'
			});

			assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);

			module.exports = ReactDOMComponent;
		}, { "10": 10, "11": 11, "117": 117, "121": 121, "133": 133, "138": 138, "139": 139, "144": 144, "15": 15, "161": 161, "166": 166, "171": 171, "173": 173, "2": 2, "24": 24, "28": 28, "35": 35, "41": 41, "46": 46, "47": 47, "48": 48, "5": 5, "52": 52, "72": 72, "73": 73, "78": 78, "95": 95 }], 43: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactDOMFactories
			 * @typechecks static-only
			 */

			'use strict';

			var ReactElement = _dereq_(57);
			var ReactElementValidator = _dereq_(58);

			var mapObject = _dereq_(167);

			/**
			 * Create a factory that creates HTML tag elements.
			 *
			 * @param {string} tag Tag name (e.g. `div`).
			 * @private
			 */
			function createDOMFactory(tag) {
				if ("development" !== 'production') {
					return ReactElementValidator.createFactory(tag);
				}
				return ReactElement.createFactory(tag);
			}

			/**
			 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
			 * This is also accessible via `React.DOM`.
			 *
			 * @public
			 */
			var ReactDOMFactories = mapObject({
				a: 'a',
				abbr: 'abbr',
				address: 'address',
				area: 'area',
				article: 'article',
				aside: 'aside',
				audio: 'audio',
				b: 'b',
				base: 'base',
				bdi: 'bdi',
				bdo: 'bdo',
				big: 'big',
				blockquote: 'blockquote',
				body: 'body',
				br: 'br',
				button: 'button',
				canvas: 'canvas',
				caption: 'caption',
				cite: 'cite',
				code: 'code',
				col: 'col',
				colgroup: 'colgroup',
				data: 'data',
				datalist: 'datalist',
				dd: 'dd',
				del: 'del',
				details: 'details',
				dfn: 'dfn',
				dialog: 'dialog',
				div: 'div',
				dl: 'dl',
				dt: 'dt',
				em: 'em',
				embed: 'embed',
				fieldset: 'fieldset',
				figcaption: 'figcaption',
				figure: 'figure',
				footer: 'footer',
				form: 'form',
				h1: 'h1',
				h2: 'h2',
				h3: 'h3',
				h4: 'h4',
				h5: 'h5',
				h6: 'h6',
				head: 'head',
				header: 'header',
				hgroup: 'hgroup',
				hr: 'hr',
				html: 'html',
				i: 'i',
				iframe: 'iframe',
				img: 'img',
				input: 'input',
				ins: 'ins',
				kbd: 'kbd',
				keygen: 'keygen',
				label: 'label',
				legend: 'legend',
				li: 'li',
				link: 'link',
				main: 'main',
				map: 'map',
				mark: 'mark',
				menu: 'menu',
				menuitem: 'menuitem',
				meta: 'meta',
				meter: 'meter',
				nav: 'nav',
				noscript: 'noscript',
				object: 'object',
				ol: 'ol',
				optgroup: 'optgroup',
				option: 'option',
				output: 'output',
				p: 'p',
				param: 'param',
				picture: 'picture',
				pre: 'pre',
				progress: 'progress',
				q: 'q',
				rp: 'rp',
				rt: 'rt',
				ruby: 'ruby',
				s: 's',
				samp: 'samp',
				script: 'script',
				section: 'section',
				select: 'select',
				small: 'small',
				source: 'source',
				span: 'span',
				strong: 'strong',
				style: 'style',
				sub: 'sub',
				summary: 'summary',
				sup: 'sup',
				table: 'table',
				tbody: 'tbody',
				td: 'td',
				textarea: 'textarea',
				tfoot: 'tfoot',
				th: 'th',
				thead: 'thead',
				time: 'time',
				title: 'title',
				tr: 'tr',
				track: 'track',
				u: 'u',
				ul: 'ul',
				'var': 'var',
				video: 'video',
				wbr: 'wbr',

				// SVG
				circle: 'circle',
				clipPath: 'clipPath',
				defs: 'defs',
				ellipse: 'ellipse',
				g: 'g',
				image: 'image',
				line: 'line',
				linearGradient: 'linearGradient',
				mask: 'mask',
				path: 'path',
				pattern: 'pattern',
				polygon: 'polygon',
				polyline: 'polyline',
				radialGradient: 'radialGradient',
				rect: 'rect',
				stop: 'stop',
				svg: 'svg',
				text: 'text',
				tspan: 'tspan'

			}, createDOMFactory);

			module.exports = ReactDOMFactories;
		}, { "167": 167, "57": 57, "58": 58 }], 44: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactDOMFeatureFlags
			 */

			'use strict';

			var ReactDOMFeatureFlags = {
				useCreateElement: false
			};

			module.exports = ReactDOMFeatureFlags;
		}, {}], 45: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactDOMIDOperations
			 * @typechecks static-only
			 */

			'use strict';

			var DOMChildrenOperations = _dereq_(9);
			var DOMPropertyOperations = _dereq_(11);
			var ReactMount = _dereq_(72);
			var ReactPerf = _dereq_(78);

			var invariant = _dereq_(161);

			/**
			 * Errors for properties that should not be updated with `updatePropertyByID()`.
			 *
			 * @type {object}
			 * @private
			 */
			var INVALID_PROPERTY_ERRORS = {
				dangerouslySetInnerHTML: '`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.',
				style: '`style` must be set using `updateStylesByID()`.'
			};

			/**
			 * Operations used to process updates to DOM nodes.
			 */
			var ReactDOMIDOperations = {

				/**
				 * Updates a DOM node with new property values. This should only be used to
				 * update DOM properties in `DOMProperty`.
				 *
				 * @param {string} id ID of the node to update.
				 * @param {string} name A valid property name, see `DOMProperty`.
				 * @param {*} value New value of the property.
				 * @internal
				 */
				updatePropertyByID: function (id, name, value) {
					var node = ReactMount.getNode(id);
					!!INVALID_PROPERTY_ERRORS.hasOwnProperty(name) ? "development" !== 'production' ? invariant(false, 'updatePropertyByID(...): %s', INVALID_PROPERTY_ERRORS[name]) : invariant(false) : undefined;

					// If we're updating to null or undefined, we should remove the property
					// from the DOM node instead of inadvertantly setting to a string. This
					// brings us in line with the same behavior we have on initial render.
					if (value != null) {
						DOMPropertyOperations.setValueForProperty(node, name, value);
					} else {
						DOMPropertyOperations.deleteValueForProperty(node, name);
					}
				},

				/**
				 * Replaces a DOM node that exists in the document with markup.
				 *
				 * @param {string} id ID of child to be replaced.
				 * @param {string} markup Dangerous markup to inject in place of child.
				 * @internal
				 * @see {Danger.dangerouslyReplaceNodeWithMarkup}
				 */
				dangerouslyReplaceNodeWithMarkupByID: function (id, markup) {
					var node = ReactMount.getNode(id);
					DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup(node, markup);
				},

				/**
				 * Updates a component's children by processing a series of updates.
				 *
				 * @param {array<object>} updates List of update configurations.
				 * @param {array<string>} markup List of markup strings.
				 * @internal
				 */
				dangerouslyProcessChildrenUpdates: function (updates, markup) {
					for (var i = 0; i < updates.length; i++) {
						updates[i].parentNode = ReactMount.getNode(updates[i].parentID);
					}
					DOMChildrenOperations.processUpdates(updates, markup);
				}
			};

			ReactPerf.measureMethods(ReactDOMIDOperations, 'ReactDOMIDOperations', {
				dangerouslyReplaceNodeWithMarkupByID: 'dangerouslyReplaceNodeWithMarkupByID',
				dangerouslyProcessChildrenUpdates: 'dangerouslyProcessChildrenUpdates'
			});

			module.exports = ReactDOMIDOperations;
		}, { "11": 11, "161": 161, "72": 72, "78": 78, "9": 9 }], 46: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactDOMInput
			 */

			'use strict';

			var ReactDOMIDOperations = _dereq_(45);
			var LinkedValueUtils = _dereq_(23);
			var ReactMount = _dereq_(72);
			var ReactUpdates = _dereq_(96);

			var assign = _dereq_(24);
			var invariant = _dereq_(161);

			var instancesByReactID = {};

			function forceUpdateIfMounted() {
				if (this._rootNodeID) {
					// DOM component is still mounted; update
					ReactDOMInput.updateWrapper(this);
				}
			}

			/**
			 * Implements an <input> native component that allows setting these optional
			 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
			 *
			 * If `checked` or `value` are not supplied (or null/undefined), user actions
			 * that affect the checked state or value will trigger updates to the element.
			 *
			 * If they are supplied (and not null/undefined), the rendered element will not
			 * trigger updates to the element. Instead, the props must change in order for
			 * the rendered element to be updated.
			 *
			 * The rendered element will be initialized as unchecked (or `defaultChecked`)
			 * with an empty value (or `defaultValue`).
			 *
			 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
			 */
			var ReactDOMInput = {
				getNativeProps: function (inst, props, context) {
					var value = LinkedValueUtils.getValue(props);
					var checked = LinkedValueUtils.getChecked(props);

					var nativeProps = assign({}, props, {
						defaultChecked: undefined,
						defaultValue: undefined,
						value: value != null ? value : inst._wrapperState.initialValue,
						checked: checked != null ? checked : inst._wrapperState.initialChecked,
						onChange: inst._wrapperState.onChange
					});

					return nativeProps;
				},

				mountWrapper: function (inst, props) {
					if ("development" !== 'production') {
						LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);
					}

					var defaultValue = props.defaultValue;
					inst._wrapperState = {
						initialChecked: props.defaultChecked || false,
						initialValue: defaultValue != null ? defaultValue : null,
						onChange: _handleChange.bind(inst)
					};
				},

				mountReadyWrapper: function (inst) {
					// Can't be in mountWrapper or else server rendering leaks.
					instancesByReactID[inst._rootNodeID] = inst;
				},

				unmountWrapper: function (inst) {
					delete instancesByReactID[inst._rootNodeID];
				},

				updateWrapper: function (inst) {
					var props = inst._currentElement.props;

					// TODO: Shouldn't this be getChecked(props)?
					var checked = props.checked;
					if (checked != null) {
						ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'checked', checked || false);
					}

					var value = LinkedValueUtils.getValue(props);
					if (value != null) {
						// Cast `value` to a string to ensure the value is set correctly. While
						// browsers typically do this as necessary, jsdom doesn't.
						ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'value', '' + value);
					}
				}
			};

			function _handleChange(event) {
				var props = this._currentElement.props;

				var returnValue = LinkedValueUtils.executeOnChange(props, event);

				// Here we use asap to wait until all updates have propagated, which
				// is important when using controlled components within layers:
				// https://github.com/facebook/react/issues/1698
				ReactUpdates.asap(forceUpdateIfMounted, this);

				var name = props.name;
				if (props.type === 'radio' && name != null) {
					var rootNode = ReactMount.getNode(this._rootNodeID);
					var queryRoot = rootNode;

					while (queryRoot.parentNode) {
						queryRoot = queryRoot.parentNode;
					}

					// If `rootNode.form` was non-null, then we could try `form.elements`,
					// but that sometimes behaves strangely in IE8. We could also try using
					// `form.getElementsByName`, but that will only return direct children
					// and won't include inputs that use the HTML5 `form=` attribute. Since
					// the input might not even be in a form, let's just use the global
					// `querySelectorAll` to ensure we don't miss anything.
					var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

					for (var i = 0; i < group.length; i++) {
						var otherNode = group[i];
						if (otherNode === rootNode || otherNode.form !== rootNode.form) {
							continue;
						}
						// This will throw if radio buttons rendered by different copies of React
						// and the same name are rendered into the same form (same as #1939).
						// That's probably okay; we don't support it just as we don't support
						// mixing React with non-React.
						var otherID = ReactMount.getID(otherNode);
						!otherID ? "development" !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the ' + 'same `name` is not supported.') : invariant(false) : undefined;
						var otherInstance = instancesByReactID[otherID];
						!otherInstance ? "development" !== 'production' ? invariant(false, 'ReactDOMInput: Unknown radio button ID %s.', otherID) : invariant(false) : undefined;
						// If this is a controlled radio button group, forcing the input that
						// was previously checked to update will cause it to be come re-checked
						// as appropriate.
						ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
					}
				}

				return returnValue;
			}

			module.exports = ReactDOMInput;
		}, { "161": 161, "23": 23, "24": 24, "45": 45, "72": 72, "96": 96 }], 47: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactDOMOption
			 */

			'use strict';

			var ReactChildren = _dereq_(32);
			var ReactDOMSelect = _dereq_(48);

			var assign = _dereq_(24);
			var warning = _dereq_(173);

			var valueContextKey = ReactDOMSelect.valueContextKey;

			/**
			 * Implements an <option> native component that warns when `selected` is set.
			 */
			var ReactDOMOption = {
				mountWrapper: function (inst, props, context) {
					// TODO (yungsters): Remove support for `selected` in <option>.
					if ("development" !== 'production') {
						"development" !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : undefined;
					}

					// Look up whether this option is 'selected' via context
					var selectValue = context[valueContextKey];

					// If context key is null (e.g., no specified value or after initial mount)
					// or missing (e.g., for <datalist>), we don't change props.selected
					var selected = null;
					if (selectValue != null) {
						selected = false;
						if (Array.isArray(selectValue)) {
							// multiple
							for (var i = 0; i < selectValue.length; i++) {
								if ('' + selectValue[i] === '' + props.value) {
									selected = true;
									break;
								}
							}
						} else {
							selected = '' + selectValue === '' + props.value;
						}
					}

					inst._wrapperState = { selected: selected };
				},

				getNativeProps: function (inst, props, context) {
					var nativeProps = assign({ selected: undefined, children: undefined }, props);

					// Read state only from initial mount because <select> updates value
					// manually; we need the initial state only for server rendering
					if (inst._wrapperState.selected != null) {
						nativeProps.selected = inst._wrapperState.selected;
					}

					var content = '';

					// Flatten children and warn if they aren't strings or numbers;
					// invalid types are ignored.
					ReactChildren.forEach(props.children, function (child) {
						if (child == null) {
							return;
						}
						if (typeof child === 'string' || typeof child === 'number') {
							content += child;
						} else {
							"development" !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : undefined;
						}
					});

					if (content) {
						nativeProps.children = content;
					}

					return nativeProps;
				}

			};

			module.exports = ReactDOMOption;
		}, { "173": 173, "24": 24, "32": 32, "48": 48 }], 48: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactDOMSelect
			 */

			'use strict';

			var LinkedValueUtils = _dereq_(23);
			var ReactMount = _dereq_(72);
			var ReactUpdates = _dereq_(96);

			var assign = _dereq_(24);
			var warning = _dereq_(173);

			var valueContextKey = '__ReactDOMSelect_value$' + Math.random().toString(36).slice(2);

			function updateOptionsIfPendingUpdateAndMounted() {
				if (this._rootNodeID && this._wrapperState.pendingUpdate) {
					this._wrapperState.pendingUpdate = false;

					var props = this._currentElement.props;
					var value = LinkedValueUtils.getValue(props);

					if (value != null) {
						updateOptions(this, Boolean(props.multiple), value);
					}
				}
			}

			function getDeclarationErrorAddendum(owner) {
				if (owner) {
					var name = owner.getName();
					if (name) {
						return ' Check the render method of `' + name + '`.';
					}
				}
				return '';
			}

			var valuePropNames = ['value', 'defaultValue'];

			/**
			 * Validation function for `value` and `defaultValue`.
			 * @private
			 */
			function checkSelectPropTypes(inst, props) {
				var owner = inst._currentElement._owner;
				LinkedValueUtils.checkPropTypes('select', props, owner);

				for (var i = 0; i < valuePropNames.length; i++) {
					var propName = valuePropNames[i];
					if (props[propName] == null) {
						continue;
					}
					if (props.multiple) {
						"development" !== 'production' ? warning(Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : undefined;
					} else {
						"development" !== 'production' ? warning(!Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : undefined;
					}
				}
			}

			/**
			 * @param {ReactDOMComponent} inst
			 * @param {boolean} multiple
			 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
			 * @private
			 */
			function updateOptions(inst, multiple, propValue) {
				var selectedValue, i;
				var options = ReactMount.getNode(inst._rootNodeID).options;

				if (multiple) {
					selectedValue = {};
					for (i = 0; i < propValue.length; i++) {
						selectedValue['' + propValue[i]] = true;
					}
					for (i = 0; i < options.length; i++) {
						var selected = selectedValue.hasOwnProperty(options[i].value);
						if (options[i].selected !== selected) {
							options[i].selected = selected;
						}
					}
				} else {
					// Do not set `select.value` as exact behavior isn't consistent across all
					// browsers for all cases.
					selectedValue = '' + propValue;
					for (i = 0; i < options.length; i++) {
						if (options[i].value === selectedValue) {
							options[i].selected = true;
							return;
						}
					}
					if (options.length) {
						options[0].selected = true;
					}
				}
			}

			/**
			 * Implements a <select> native component that allows optionally setting the
			 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
			 * stringable. If `multiple` is true, the prop must be an array of stringables.
			 *
			 * If `value` is not supplied (or null/undefined), user actions that change the
			 * selected option will trigger updates to the rendered options.
			 *
			 * If it is supplied (and not null/undefined), the rendered options will not
			 * update in response to user actions. Instead, the `value` prop must change in
			 * order for the rendered options to update.
			 *
			 * If `defaultValue` is provided, any options with the supplied values will be
			 * selected.
			 */
			var ReactDOMSelect = {
				valueContextKey: valueContextKey,

				getNativeProps: function (inst, props, context) {
					return assign({}, props, {
						onChange: inst._wrapperState.onChange,
						value: undefined
					});
				},

				mountWrapper: function (inst, props) {
					if ("development" !== 'production') {
						checkSelectPropTypes(inst, props);
					}

					var value = LinkedValueUtils.getValue(props);
					inst._wrapperState = {
						pendingUpdate: false,
						initialValue: value != null ? value : props.defaultValue,
						onChange: _handleChange.bind(inst),
						wasMultiple: Boolean(props.multiple)
					};
				},

				processChildContext: function (inst, props, context) {
					// Pass down initial value so initial generated markup has correct
					// `selected` attributes
					var childContext = assign({}, context);
					childContext[valueContextKey] = inst._wrapperState.initialValue;
					return childContext;
				},

				postUpdateWrapper: function (inst) {
					var props = inst._currentElement.props;

					// After the initial mount, we control selected-ness manually so don't pass
					// the context value down
					inst._wrapperState.initialValue = undefined;

					var wasMultiple = inst._wrapperState.wasMultiple;
					inst._wrapperState.wasMultiple = Boolean(props.multiple);

					var value = LinkedValueUtils.getValue(props);
					if (value != null) {
						inst._wrapperState.pendingUpdate = false;
						updateOptions(inst, Boolean(props.multiple), value);
					} else if (wasMultiple !== Boolean(props.multiple)) {
						// For simplicity, reapply `defaultValue` if `multiple` is toggled.
						if (props.defaultValue != null) {
							updateOptions(inst, Boolean(props.multiple), props.defaultValue);
						} else {
							// Revert the select back to its default unselected state.
							updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
						}
					}
				}
			};

			function _handleChange(event) {
				var props = this._currentElement.props;
				var returnValue = LinkedValueUtils.executeOnChange(props, event);

				this._wrapperState.pendingUpdate = true;
				ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
				return returnValue;
			}

			module.exports = ReactDOMSelect;
		}, { "173": 173, "23": 23, "24": 24, "72": 72, "96": 96 }], 49: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactDOMSelection
			 */

			'use strict';

			var ExecutionEnvironment = _dereq_(147);

			var getNodeForCharacterOffset = _dereq_(130);
			var getTextContentAccessor = _dereq_(131);

			/**
			 * While `isCollapsed` is available on the Selection object and `collapsed`
			 * is available on the Range object, IE11 sometimes gets them wrong.
			 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
			 */
			function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
				return anchorNode === focusNode && anchorOffset === focusOffset;
			}

			/**
			 * Get the appropriate anchor and focus node/offset pairs for IE.
			 *
			 * The catch here is that IE's selection API doesn't provide information
			 * about whether the selection is forward or backward, so we have to
			 * behave as though it's always forward.
			 *
			 * IE text differs from modern selection in that it behaves as though
			 * block elements end with a new line. This means character offsets will
			 * differ between the two APIs.
			 *
			 * @param {DOMElement} node
			 * @return {object}
			 */
			function getIEOffsets(node) {
				var selection = document.selection;
				var selectedRange = selection.createRange();
				var selectedLength = selectedRange.text.length;

				// Duplicate selection so we can move range without breaking user selection.
				var fromStart = selectedRange.duplicate();
				fromStart.moveToElementText(node);
				fromStart.setEndPoint('EndToStart', selectedRange);

				var startOffset = fromStart.text.length;
				var endOffset = startOffset + selectedLength;

				return {
					start: startOffset,
					end: endOffset
				};
			}

			/**
			 * @param {DOMElement} node
			 * @return {?object}
			 */
			function getModernOffsets(node) {
				var selection = window.getSelection && window.getSelection();

				if (!selection || selection.rangeCount === 0) {
					return null;
				}

				var anchorNode = selection.anchorNode;
				var anchorOffset = selection.anchorOffset;
				var focusNode = selection.focusNode;
				var focusOffset = selection.focusOffset;

				var currentRange = selection.getRangeAt(0);

				// In Firefox, range.startContainer and range.endContainer can be "anonymous
				// divs", e.g. the up/down buttons on an <input type="number">. Anonymous
				// divs do not seem to expose properties, triggering a "Permission denied
				// error" if any of its properties are accessed. The only seemingly possible
				// way to avoid erroring is to access a property that typically works for
				// non-anonymous divs and catch any error that may otherwise arise. See
				// https://bugzilla.mozilla.org/show_bug.cgi?id=208427
				try {
					/* eslint-disable no-unused-expressions */
					currentRange.startContainer.nodeType;
					currentRange.endContainer.nodeType;
					/* eslint-enable no-unused-expressions */
				} catch (e) {
					return null;
				}

				// If the node and offset values are the same, the selection is collapsed.
				// `Selection.isCollapsed` is available natively, but IE sometimes gets
				// this value wrong.
				var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);

				var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

				var tempRange = currentRange.cloneRange();
				tempRange.selectNodeContents(node);
				tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

				var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);

				var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
				var end = start + rangeLength;

				// Detect whether the selection is backward.
				var detectionRange = document.createRange();
				detectionRange.setStart(anchorNode, anchorOffset);
				detectionRange.setEnd(focusNode, focusOffset);
				var isBackward = detectionRange.collapsed;

				return {
					start: isBackward ? end : start,
					end: isBackward ? start : end
				};
			}

			/**
			 * @param {DOMElement|DOMTextNode} node
			 * @param {object} offsets
			 */
			function setIEOffsets(node, offsets) {
				var range = document.selection.createRange().duplicate();
				var start, end;

				if (typeof offsets.end === 'undefined') {
					start = offsets.start;
					end = start;
				} else if (offsets.start > offsets.end) {
					start = offsets.end;
					end = offsets.start;
				} else {
					start = offsets.start;
					end = offsets.end;
				}

				range.moveToElementText(node);
				range.moveStart('character', start);
				range.setEndPoint('EndToStart', range);
				range.moveEnd('character', end - start);
				range.select();
			}

			/**
			 * In modern non-IE browsers, we can support both forward and backward
			 * selections.
			 *
			 * Note: IE10+ supports the Selection object, but it does not support
			 * the `extend` method, which means that even in modern IE, it's not possible
			 * to programatically create a backward selection. Thus, for all IE
			 * versions, we use the old IE API to create our selections.
			 *
			 * @param {DOMElement|DOMTextNode} node
			 * @param {object} offsets
			 */
			function setModernOffsets(node, offsets) {
				if (!window.getSelection) {
					return;
				}

				var selection = window.getSelection();
				var length = node[getTextContentAccessor()].length;
				var start = Math.min(offsets.start, length);
				var end = typeof offsets.end === 'undefined' ? start : Math.min(offsets.end, length);

				// IE 11 uses modern selection, but doesn't support the extend method.
				// Flip backward selections, so we can set with a single range.
				if (!selection.extend && start > end) {
					var temp = end;
					end = start;
					start = temp;
				}

				var startMarker = getNodeForCharacterOffset(node, start);
				var endMarker = getNodeForCharacterOffset(node, end);

				if (startMarker && endMarker) {
					var range = document.createRange();
					range.setStart(startMarker.node, startMarker.offset);
					selection.removeAllRanges();

					if (start > end) {
						selection.addRange(range);
						selection.extend(endMarker.node, endMarker.offset);
					} else {
						range.setEnd(endMarker.node, endMarker.offset);
						selection.addRange(range);
					}
				}
			}

			var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);

			var ReactDOMSelection = {
				/**
				 * @param {DOMElement} node
				 */
				getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

				/**
				 * @param {DOMElement|DOMTextNode} node
				 * @param {object} offsets
				 */
				setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
			};

			module.exports = ReactDOMSelection;
		}, { "130": 130, "131": 131, "147": 147 }], 50: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactDOMServer
			 */

			'use strict';

			var ReactDefaultInjection = _dereq_(54);
			var ReactServerRendering = _dereq_(88);
			var ReactVersion = _dereq_(97);

			ReactDefaultInjection.inject();

			var ReactDOMServer = {
				renderToString: ReactServerRendering.renderToString,
				renderToStaticMarkup: ReactServerRendering.renderToStaticMarkup,
				version: ReactVersion
			};

			module.exports = ReactDOMServer;
		}, { "54": 54, "88": 88, "97": 97 }], 51: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactDOMTextComponent
			 * @typechecks static-only
			 */

			'use strict';

			var DOMChildrenOperations = _dereq_(9);
			var DOMPropertyOperations = _dereq_(11);
			var ReactComponentBrowserEnvironment = _dereq_(35);
			var ReactMount = _dereq_(72);

			var assign = _dereq_(24);
			var escapeTextContentForBrowser = _dereq_(121);
			var setTextContent = _dereq_(139);
			var validateDOMNesting = _dereq_(144);

			/**
			 * Text nodes violate a couple assumptions that React makes about components:
			 *
			 *  - When mounting text into the DOM, adjacent text nodes are merged.
			 *  - Text nodes cannot be assigned a React root ID.
			 *
			 * This component is used to wrap strings in elements so that they can undergo
			 * the same reconciliation that is applied to elements.
			 *
			 * TODO: Investigate representing React components in the DOM with text nodes.
			 *
			 * @class ReactDOMTextComponent
			 * @extends ReactComponent
			 * @internal
			 */
			var ReactDOMTextComponent = function (props) {
				// This constructor and its argument is currently used by mocks.
			};

			assign(ReactDOMTextComponent.prototype, {

				/**
				 * @param {ReactText} text
				 * @internal
				 */
				construct: function (text) {
					// TODO: This is really a ReactText (ReactNode), not a ReactElement
					this._currentElement = text;
					this._stringText = '' + text;

					// Properties
					this._rootNodeID = null;
					this._mountIndex = 0;
				},

				/**
				 * Creates the markup for this text node. This node is not intended to have
				 * any features besides containing text content.
				 *
				 * @param {string} rootID DOM ID of the root node.
				 * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
				 * @return {string} Markup for this text node.
				 * @internal
				 */
				mountComponent: function (rootID, transaction, context) {
					if ("development" !== 'production') {
						if (context[validateDOMNesting.ancestorInfoContextKey]) {
							validateDOMNesting('span', null, context[validateDOMNesting.ancestorInfoContextKey]);
						}
					}

					this._rootNodeID = rootID;
					if (transaction.useCreateElement) {
						var ownerDocument = context[ReactMount.ownerDocumentContextKey];
						var el = ownerDocument.createElement('span');
						DOMPropertyOperations.setAttributeForID(el, rootID);
						// Populate node cache
						ReactMount.getID(el);
						setTextContent(el, this._stringText);
						return el;
					} else {
						var escapedText = escapeTextContentForBrowser(this._stringText);

						if (transaction.renderToStaticMarkup) {
							// Normally we'd wrap this in a `span` for the reasons stated above, but
							// since this is a situation where React won't take over (static pages),
							// we can simply return the text as it is.
							return escapedText;
						}

						return '<span ' + DOMPropertyOperations.createMarkupForID(rootID) + '>' + escapedText + '</span>';
					}
				},

				/**
				 * Updates this component by updating the text content.
				 *
				 * @param {ReactText} nextText The next text content
				 * @param {ReactReconcileTransaction} transaction
				 * @internal
				 */
				receiveComponent: function (nextText, transaction) {
					if (nextText !== this._currentElement) {
						this._currentElement = nextText;
						var nextStringText = '' + nextText;
						if (nextStringText !== this._stringText) {
							// TODO: Save this as pending props and use performUpdateIfNecessary
							// and/or updateComponent to do the actual update for consistency with
							// other component types?
							this._stringText = nextStringText;
							var node = ReactMount.getNode(this._rootNodeID);
							DOMChildrenOperations.updateTextContent(node, nextStringText);
						}
					}
				},

				unmountComponent: function () {
					ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
				}

			});

			module.exports = ReactDOMTextComponent;
		}, { "11": 11, "121": 121, "139": 139, "144": 144, "24": 24, "35": 35, "72": 72, "9": 9 }], 52: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactDOMTextarea
			 */

			'use strict';

			var LinkedValueUtils = _dereq_(23);
			var ReactDOMIDOperations = _dereq_(45);
			var ReactUpdates = _dereq_(96);

			var assign = _dereq_(24);
			var invariant = _dereq_(161);
			var warning = _dereq_(173);

			function forceUpdateIfMounted() {
				if (this._rootNodeID) {
					// DOM component is still mounted; update
					ReactDOMTextarea.updateWrapper(this);
				}
			}

			/**
			 * Implements a <textarea> native component that allows setting `value`, and
			 * `defaultValue`. This differs from the traditional DOM API because value is
			 * usually set as PCDATA children.
			 *
			 * If `value` is not supplied (or null/undefined), user actions that affect the
			 * value will trigger updates to the element.
			 *
			 * If `value` is supplied (and not null/undefined), the rendered element will
			 * not trigger updates to the element. Instead, the `value` prop must change in
			 * order for the rendered element to be updated.
			 *
			 * The rendered element will be initialized with an empty value, the prop
			 * `defaultValue` if specified, or the children content (deprecated).
			 */
			var ReactDOMTextarea = {
				getNativeProps: function (inst, props, context) {
					!(props.dangerouslySetInnerHTML == null) ? "development" !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : invariant(false) : undefined;

					// Always set children to the same thing. In IE9, the selection range will
					// get reset if `textContent` is mutated.
					var nativeProps = assign({}, props, {
						defaultValue: undefined,
						value: undefined,
						children: inst._wrapperState.initialValue,
						onChange: inst._wrapperState.onChange
					});

					return nativeProps;
				},

				mountWrapper: function (inst, props) {
					if ("development" !== 'production') {
						LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
					}

					var defaultValue = props.defaultValue;
					// TODO (yungsters): Remove support for children content in <textarea>.
					var children = props.children;
					if (children != null) {
						if ("development" !== 'production') {
							"development" !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : undefined;
						}
						!(defaultValue == null) ? "development" !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : invariant(false) : undefined;
						if (Array.isArray(children)) {
							!(children.length <= 1) ? "development" !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : invariant(false) : undefined;
							children = children[0];
						}

						defaultValue = '' + children;
					}
					if (defaultValue == null) {
						defaultValue = '';
					}
					var value = LinkedValueUtils.getValue(props);

					inst._wrapperState = {
						// We save the initial value so that `ReactDOMComponent` doesn't update
						// `textContent` (unnecessary since we update value).
						// The initial value can be a boolean or object so that's why it's
						// forced to be a string.
						initialValue: '' + (value != null ? value : defaultValue),
						onChange: _handleChange.bind(inst)
					};
				},

				updateWrapper: function (inst) {
					var props = inst._currentElement.props;
					var value = LinkedValueUtils.getValue(props);
					if (value != null) {
						// Cast `value` to a string to ensure the value is set correctly. While
						// browsers typically do this as necessary, jsdom doesn't.
						ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'value', '' + value);
					}
				}
			};

			function _handleChange(event) {
				var props = this._currentElement.props;
				var returnValue = LinkedValueUtils.executeOnChange(props, event);
				ReactUpdates.asap(forceUpdateIfMounted, this);
				return returnValue;
			}

			module.exports = ReactDOMTextarea;
		}, { "161": 161, "173": 173, "23": 23, "24": 24, "45": 45, "96": 96 }], 53: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactDefaultBatchingStrategy
			 */

			'use strict';

			var ReactUpdates = _dereq_(96);
			var Transaction = _dereq_(113);

			var assign = _dereq_(24);
			var emptyFunction = _dereq_(153);

			var RESET_BATCHED_UPDATES = {
				initialize: emptyFunction,
				close: function () {
					ReactDefaultBatchingStrategy.isBatchingUpdates = false;
				}
			};

			var FLUSH_BATCHED_UPDATES = {
				initialize: emptyFunction,
				close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
			};

			var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

			function ReactDefaultBatchingStrategyTransaction() {
				this.reinitializeTransaction();
			}

			assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {
				getTransactionWrappers: function () {
					return TRANSACTION_WRAPPERS;
				}
			});

			var transaction = new ReactDefaultBatchingStrategyTransaction();

			var ReactDefaultBatchingStrategy = {
				isBatchingUpdates: false,

				/**
				 * Call the provided function in a context within which calls to `setState`
				 * and friends are batched such that components aren't updated unnecessarily.
				 */
				batchedUpdates: function (callback, a, b, c, d, e) {
					var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

					ReactDefaultBatchingStrategy.isBatchingUpdates = true;

					// The code is written this way to avoid extra allocations
					if (alreadyBatchingUpdates) {
						callback(a, b, c, d, e);
					} else {
						transaction.perform(callback, null, a, b, c, d, e);
					}
				}
			};

			module.exports = ReactDefaultBatchingStrategy;
		}, { "113": 113, "153": 153, "24": 24, "96": 96 }], 54: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactDefaultInjection
			 */

			'use strict';

			var BeforeInputEventPlugin = _dereq_(3);
			var ChangeEventPlugin = _dereq_(7);
			var ClientReactRootIndex = _dereq_(8);
			var DefaultEventPluginOrder = _dereq_(13);
			var EnterLeaveEventPlugin = _dereq_(14);
			var ExecutionEnvironment = _dereq_(147);
			var HTMLDOMPropertyConfig = _dereq_(21);
			var ReactBrowserComponentMixin = _dereq_(27);
			var ReactComponentBrowserEnvironment = _dereq_(35);
			var ReactDefaultBatchingStrategy = _dereq_(53);
			var ReactDOMComponent = _dereq_(42);
			var ReactDOMTextComponent = _dereq_(51);
			var ReactEventListener = _dereq_(63);
			var ReactInjection = _dereq_(65);
			var ReactInstanceHandles = _dereq_(67);
			var ReactMount = _dereq_(72);
			var ReactReconcileTransaction = _dereq_(83);
			var SelectEventPlugin = _dereq_(99);
			var ServerReactRootIndex = _dereq_(100);
			var SimpleEventPlugin = _dereq_(101);
			var SVGDOMPropertyConfig = _dereq_(98);

			var alreadyInjected = false;

			function inject() {
				if (alreadyInjected) {
					// TODO: This is currently true because these injections are shared between
					// the client and the server package. They should be built independently
					// and not share any injection state. Then this problem will be solved.
					return;
				}
				alreadyInjected = true;

				ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);

				/**
				 * Inject modules for resolving DOM hierarchy and plugin ordering.
				 */
				ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
				ReactInjection.EventPluginHub.injectInstanceHandle(ReactInstanceHandles);
				ReactInjection.EventPluginHub.injectMount(ReactMount);

				/**
				 * Some important event plugins included by default (without having to require
				 * them).
				 */
				ReactInjection.EventPluginHub.injectEventPluginsByName({
					SimpleEventPlugin: SimpleEventPlugin,
					EnterLeaveEventPlugin: EnterLeaveEventPlugin,
					ChangeEventPlugin: ChangeEventPlugin,
					SelectEventPlugin: SelectEventPlugin,
					BeforeInputEventPlugin: BeforeInputEventPlugin
				});

				ReactInjection.NativeComponent.injectGenericComponentClass(ReactDOMComponent);

				ReactInjection.NativeComponent.injectTextComponentClass(ReactDOMTextComponent);

				ReactInjection.Class.injectMixin(ReactBrowserComponentMixin);

				ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
				ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

				ReactInjection.EmptyComponent.injectEmptyComponent('noscript');

				ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
				ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);

				ReactInjection.RootIndex.injectCreateReactRootIndex(ExecutionEnvironment.canUseDOM ? ClientReactRootIndex.createReactRootIndex : ServerReactRootIndex.createReactRootIndex);

				ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);

				if ("development" !== 'production') {
					var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
					if (/[?&]react_perf\b/.test(url)) {
						var ReactDefaultPerf = _dereq_(55);
						ReactDefaultPerf.start();
					}
				}
			}

			module.exports = {
				inject: inject
			};
		}, { "100": 100, "101": 101, "13": 13, "14": 14, "147": 147, "21": 21, "27": 27, "3": 3, "35": 35, "42": 42, "51": 51, "53": 53, "55": 55, "63": 63, "65": 65, "67": 67, "7": 7, "72": 72, "8": 8, "83": 83, "98": 98, "99": 99 }], 55: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactDefaultPerf
			 * @typechecks static-only
			 */

			'use strict';

			var DOMProperty = _dereq_(10);
			var ReactDefaultPerfAnalysis = _dereq_(56);
			var ReactMount = _dereq_(72);
			var ReactPerf = _dereq_(78);

			var performanceNow = _dereq_(170);

			function roundFloat(val) {
				return Math.floor(val * 100) / 100;
			}

			function addValue(obj, key, val) {
				obj[key] = (obj[key] || 0) + val;
			}

			var ReactDefaultPerf = {
				_allMeasurements: [], // last item in the list is the current one
				_mountStack: [0],
				_injected: false,

				start: function () {
					if (!ReactDefaultPerf._injected) {
						ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);
					}

					ReactDefaultPerf._allMeasurements.length = 0;
					ReactPerf.enableMeasure = true;
				},

				stop: function () {
					ReactPerf.enableMeasure = false;
				},

				getLastMeasurements: function () {
					return ReactDefaultPerf._allMeasurements;
				},

				printExclusive: function (measurements) {
					measurements = measurements || ReactDefaultPerf._allMeasurements;
					var summary = ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);
					console.table(summary.map(function (item) {
						return {
							'Component class name': item.componentName,
							'Total inclusive time (ms)': roundFloat(item.inclusive),
							'Exclusive mount time (ms)': roundFloat(item.exclusive),
							'Exclusive render time (ms)': roundFloat(item.render),
							'Mount time per instance (ms)': roundFloat(item.exclusive / item.count),
							'Render time per instance (ms)': roundFloat(item.render / item.count),
							'Instances': item.count
						};
					}));
					// TODO: ReactDefaultPerfAnalysis.getTotalTime() does not return the correct
					// number.
				},

				printInclusive: function (measurements) {
					measurements = measurements || ReactDefaultPerf._allMeasurements;
					var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);
					console.table(summary.map(function (item) {
						return {
							'Owner > component': item.componentName,
							'Inclusive time (ms)': roundFloat(item.time),
							'Instances': item.count
						};
					}));
					console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');
				},

				getMeasurementsSummaryMap: function (measurements) {
					var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements, true);
					return summary.map(function (item) {
						return {
							'Owner > component': item.componentName,
							'Wasted time (ms)': item.time,
							'Instances': item.count
						};
					});
				},

				printWasted: function (measurements) {
					measurements = measurements || ReactDefaultPerf._allMeasurements;
					console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));
					console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');
				},

				printDOM: function (measurements) {
					measurements = measurements || ReactDefaultPerf._allMeasurements;
					var summary = ReactDefaultPerfAnalysis.getDOMSummary(measurements);
					console.table(summary.map(function (item) {
						var result = {};
						result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;
						result.type = item.type;
						result.args = JSON.stringify(item.args);
						return result;
					}));
					console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');
				},

				_recordWrite: function (id, fnName, totalTime, args) {
					// TODO: totalTime isn't that useful since it doesn't count paints/reflows
					var writes = ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].writes;
					writes[id] = writes[id] || [];
					writes[id].push({
						type: fnName,
						time: totalTime,
						args: args
					});
				},

				measure: function (moduleName, fnName, func) {
					return function () {
						for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
							args[_key] = arguments[_key];
						}

						var totalTime;
						var rv;
						var start;

						if (fnName === '_renderNewRootComponent' || fnName === 'flushBatchedUpdates') {
							// A "measurement" is a set of metrics recorded for each flush. We want
							// to group the metrics for a given flush together so we can look at the
							// components that rendered and the DOM operations that actually
							// happened to determine the amount of "wasted work" performed.
							ReactDefaultPerf._allMeasurements.push({
								exclusive: {},
								inclusive: {},
								render: {},
								counts: {},
								writes: {},
								displayNames: {},
								totalTime: 0,
								created: {}
							});
							start = performanceNow();
							rv = func.apply(this, args);
							ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].totalTime = performanceNow() - start;
							return rv;
						} else if (fnName === '_mountImageIntoNode' || moduleName === 'ReactBrowserEventEmitter' || moduleName === 'ReactDOMIDOperations' || moduleName === 'CSSPropertyOperations' || moduleName === 'DOMChildrenOperations' || moduleName === 'DOMPropertyOperations') {
							start = performanceNow();
							rv = func.apply(this, args);
							totalTime = performanceNow() - start;

							if (fnName === '_mountImageIntoNode') {
								var mountID = ReactMount.getID(args[1]);
								ReactDefaultPerf._recordWrite(mountID, fnName, totalTime, args[0]);
							} else if (fnName === 'dangerouslyProcessChildrenUpdates') {
								// special format
								args[0].forEach(function (update) {
									var writeArgs = {};
									if (update.fromIndex !== null) {
										writeArgs.fromIndex = update.fromIndex;
									}
									if (update.toIndex !== null) {
										writeArgs.toIndex = update.toIndex;
									}
									if (update.textContent !== null) {
										writeArgs.textContent = update.textContent;
									}
									if (update.markupIndex !== null) {
										writeArgs.markup = args[1][update.markupIndex];
									}
									ReactDefaultPerf._recordWrite(update.parentID, update.type, totalTime, writeArgs);
								});
							} else {
								// basic format
								var id = args[0];
								if (typeof id === 'object') {
									id = ReactMount.getID(args[0]);
								}
								ReactDefaultPerf._recordWrite(id, fnName, totalTime, Array.prototype.slice.call(args, 1));
							}
							return rv;
						} else if (moduleName === 'ReactCompositeComponent' && (fnName === 'mountComponent' || fnName === 'updateComponent' || // TODO: receiveComponent()?
						fnName === '_renderValidatedComponent')) {

							if (this._currentElement.type === ReactMount.TopLevelWrapper) {
								return func.apply(this, args);
							}

							var rootNodeID = fnName === 'mountComponent' ? args[0] : this._rootNodeID;
							var isRender = fnName === '_renderValidatedComponent';
							var isMount = fnName === 'mountComponent';

							var mountStack = ReactDefaultPerf._mountStack;
							var entry = ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1];

							if (isRender) {
								addValue(entry.counts, rootNodeID, 1);
							} else if (isMount) {
								entry.created[rootNodeID] = true;
								mountStack.push(0);
							}

							start = performanceNow();
							rv = func.apply(this, args);
							totalTime = performanceNow() - start;

							if (isRender) {
								addValue(entry.render, rootNodeID, totalTime);
							} else if (isMount) {
								var subMountTime = mountStack.pop();
								mountStack[mountStack.length - 1] += totalTime;
								addValue(entry.exclusive, rootNodeID, totalTime - subMountTime);
								addValue(entry.inclusive, rootNodeID, totalTime);
							} else {
								addValue(entry.inclusive, rootNodeID, totalTime);
							}

							entry.displayNames[rootNodeID] = {
								current: this.getName(),
								owner: this._currentElement._owner ? this._currentElement._owner.getName() : '<root>'
							};

							return rv;
						} else {
							return func.apply(this, args);
						}
					};
				}
			};

			module.exports = ReactDefaultPerf;
		}, { "10": 10, "170": 170, "56": 56, "72": 72, "78": 78 }], 56: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactDefaultPerfAnalysis
			 */

			'use strict';

			var assign = _dereq_(24);

			// Don't try to save users less than 1.2ms (a number I made up)
			var DONT_CARE_THRESHOLD = 1.2;
			var DOM_OPERATION_TYPES = {
				'_mountImageIntoNode': 'set innerHTML',
				INSERT_MARKUP: 'set innerHTML',
				MOVE_EXISTING: 'move',
				REMOVE_NODE: 'remove',
				SET_MARKUP: 'set innerHTML',
				TEXT_CONTENT: 'set textContent',
				'setValueForProperty': 'update attribute',
				'setValueForAttribute': 'update attribute',
				'deleteValueForProperty': 'remove attribute',
				'setValueForStyles': 'update styles',
				'replaceNodeWithMarkup': 'replace',
				'updateTextContent': 'set textContent'
			};

			function getTotalTime(measurements) {
				// TODO: return number of DOM ops? could be misleading.
				// TODO: measure dropped frames after reconcile?
				// TODO: log total time of each reconcile and the top-level component
				// class that triggered it.
				var totalTime = 0;
				for (var i = 0; i < measurements.length; i++) {
					var measurement = measurements[i];
					totalTime += measurement.totalTime;
				}
				return totalTime;
			}

			function getDOMSummary(measurements) {
				var items = [];
				measurements.forEach(function (measurement) {
					Object.keys(measurement.writes).forEach(function (id) {
						measurement.writes[id].forEach(function (write) {
							items.push({
								id: id,
								type: DOM_OPERATION_TYPES[write.type] || write.type,
								args: write.args
							});
						});
					});
				});
				return items;
			}

			function getExclusiveSummary(measurements) {
				var candidates = {};
				var displayName;

				for (var i = 0; i < measurements.length; i++) {
					var measurement = measurements[i];
					var allIDs = assign({}, measurement.exclusive, measurement.inclusive);

					for (var id in allIDs) {
						displayName = measurement.displayNames[id].current;

						candidates[displayName] = candidates[displayName] || {
							componentName: displayName,
							inclusive: 0,
							exclusive: 0,
							render: 0,
							count: 0
						};
						if (measurement.render[id]) {
							candidates[displayName].render += measurement.render[id];
						}
						if (measurement.exclusive[id]) {
							candidates[displayName].exclusive += measurement.exclusive[id];
						}
						if (measurement.inclusive[id]) {
							candidates[displayName].inclusive += measurement.inclusive[id];
						}
						if (measurement.counts[id]) {
							candidates[displayName].count += measurement.counts[id];
						}
					}
				}

				// Now make a sorted array with the results.
				var arr = [];
				for (displayName in candidates) {
					if (candidates[displayName].exclusive >= DONT_CARE_THRESHOLD) {
						arr.push(candidates[displayName]);
					}
				}

				arr.sort(function (a, b) {
					return b.exclusive - a.exclusive;
				});

				return arr;
			}

			function getInclusiveSummary(measurements, onlyClean) {
				var candidates = {};
				var inclusiveKey;

				for (var i = 0; i < measurements.length; i++) {
					var measurement = measurements[i];
					var allIDs = assign({}, measurement.exclusive, measurement.inclusive);
					var cleanComponents;

					if (onlyClean) {
						cleanComponents = getUnchangedComponents(measurement);
					}

					for (var id in allIDs) {
						if (onlyClean && !cleanComponents[id]) {
							continue;
						}

						var displayName = measurement.displayNames[id];

						// Inclusive time is not useful for many components without knowing where
						// they are instantiated. So we aggregate inclusive time with both the
						// owner and current displayName as the key.
						inclusiveKey = displayName.owner + ' > ' + displayName.current;

						candidates[inclusiveKey] = candidates[inclusiveKey] || {
							componentName: inclusiveKey,
							time: 0,
							count: 0
						};

						if (measurement.inclusive[id]) {
							candidates[inclusiveKey].time += measurement.inclusive[id];
						}
						if (measurement.counts[id]) {
							candidates[inclusiveKey].count += measurement.counts[id];
						}
					}
				}

				// Now make a sorted array with the results.
				var arr = [];
				for (inclusiveKey in candidates) {
					if (candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD) {
						arr.push(candidates[inclusiveKey]);
					}
				}

				arr.sort(function (a, b) {
					return b.time - a.time;
				});

				return arr;
			}

			function getUnchangedComponents(measurement) {
				// For a given reconcile, look at which components did not actually
				// render anything to the DOM and return a mapping of their ID to
				// the amount of time it took to render the entire subtree.
				var cleanComponents = {};
				var dirtyLeafIDs = Object.keys(measurement.writes);
				var allIDs = assign({}, measurement.exclusive, measurement.inclusive);

				for (var id in allIDs) {
					var isDirty = false;
					// For each component that rendered, see if a component that triggered
					// a DOM op is in its subtree.
					for (var i = 0; i < dirtyLeafIDs.length; i++) {
						if (dirtyLeafIDs[i].indexOf(id) === 0) {
							isDirty = true;
							break;
						}
					}
					// check if component newly created
					if (measurement.created[id]) {
						isDirty = true;
					}
					if (!isDirty && measurement.counts[id] > 0) {
						cleanComponents[id] = true;
					}
				}
				return cleanComponents;
			}

			var ReactDefaultPerfAnalysis = {
				getExclusiveSummary: getExclusiveSummary,
				getInclusiveSummary: getInclusiveSummary,
				getDOMSummary: getDOMSummary,
				getTotalTime: getTotalTime
			};

			module.exports = ReactDefaultPerfAnalysis;
		}, { "24": 24 }], 57: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2014-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactElement
			 */

			'use strict';

			var ReactCurrentOwner = _dereq_(39);

			var assign = _dereq_(24);
			var canDefineProperty = _dereq_(117);

			// The Symbol used to tag the ReactElement type. If there is no native Symbol
			// nor polyfill, then a plain number is used for performance.
			var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

			var RESERVED_PROPS = {
				key: true,
				ref: true,
				__self: true,
				__source: true
			};

			/**
			 * Base constructor for all React elements. This is only used to make this
			 * work with a dynamic instanceof check. Nothing should live on this prototype.
			 *
			 * @param {*} type
			 * @param {*} key
			 * @param {string|object} ref
			 * @param {*} self A *temporary* helper to detect places where `this` is
			 * different from the `owner` when React.createElement is called, so that we
			 * can warn. We want to get rid of owner and replace string `ref`s with arrow
			 * functions, and as long as `this` and owner are the same, there will be no
			 * change in behavior.
			 * @param {*} source An annotation object (added by a transpiler or otherwise)
			 * indicating filename, line number, and/or other information.
			 * @param {*} owner
			 * @param {*} props
			 * @internal
			 */
			var ReactElement = function (type, key, ref, self, source, owner, props) {
				var element = {
					// This tag allow us to uniquely identify this as a React Element
					$$typeof: REACT_ELEMENT_TYPE,

					// Built-in properties that belong on the element
					type: type,
					key: key,
					ref: ref,
					props: props,

					// Record the component responsible for creating this element.
					_owner: owner
				};

				if ("development" !== 'production') {
					// The validation flag is currently mutative. We put it on
					// an external backing store so that we can freeze the whole object.
					// This can be replaced with a WeakMap once they are implemented in
					// commonly used development environments.
					element._store = {};

					// To make comparing ReactElements easier for testing purposes, we make
					// the validation flag non-enumerable (where possible, which should
					// include every environment we run tests in), so the test framework
					// ignores it.
					if (canDefineProperty) {
						Object.defineProperty(element._store, 'validated', {
							configurable: false,
							enumerable: false,
							writable: true,
							value: false
						});
						// self and source are DEV only properties.
						Object.defineProperty(element, '_self', {
							configurable: false,
							enumerable: false,
							writable: false,
							value: self
						});
						// Two elements created in two different places should be considered
						// equal for testing purposes and therefore we hide it from enumeration.
						Object.defineProperty(element, '_source', {
							configurable: false,
							enumerable: false,
							writable: false,
							value: source
						});
					} else {
						element._store.validated = false;
						element._self = self;
						element._source = source;
					}
					Object.freeze(element.props);
					Object.freeze(element);
				}

				return element;
			};

			ReactElement.createElement = function (type, config, children) {
				var propName;

				// Reserved names are extracted
				var props = {};

				var key = null;
				var ref = null;
				var self = null;
				var source = null;

				if (config != null) {
					ref = config.ref === undefined ? null : config.ref;
					key = config.key === undefined ? null : '' + config.key;
					self = config.__self === undefined ? null : config.__self;
					source = config.__source === undefined ? null : config.__source;
					// Remaining properties are added to a new props object
					for (propName in config) {
						if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
							props[propName] = config[propName];
						}
					}
				}

				// Children can be more than one argument, and those are transferred onto
				// the newly allocated props object.
				var childrenLength = arguments.length - 2;
				if (childrenLength === 1) {
					props.children = children;
				} else if (childrenLength > 1) {
					var childArray = Array(childrenLength);
					for (var i = 0; i < childrenLength; i++) {
						childArray[i] = arguments[i + 2];
					}
					props.children = childArray;
				}

				// Resolve default props
				if (type && type.defaultProps) {
					var defaultProps = type.defaultProps;
					for (propName in defaultProps) {
						if (typeof props[propName] === 'undefined') {
							props[propName] = defaultProps[propName];
						}
					}
				}

				return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
			};

			ReactElement.createFactory = function (type) {
				var factory = ReactElement.createElement.bind(null, type);
				// Expose the type on the factory and the prototype so that it can be
				// easily accessed on elements. E.g. `<Foo />.type === Foo`.
				// This should not be named `constructor` since this may not be the function
				// that created the element, and it may not even be a constructor.
				// Legacy hook TODO: Warn if this is accessed
				factory.type = type;
				return factory;
			};

			ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
				var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

				return newElement;
			};

			ReactElement.cloneAndReplaceProps = function (oldElement, newProps) {
				var newElement = ReactElement(oldElement.type, oldElement.key, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, newProps);

				if ("development" !== 'production') {
					// If the key on the original is valid, then the clone is valid
					newElement._store.validated = oldElement._store.validated;
				}

				return newElement;
			};

			ReactElement.cloneElement = function (element, config, children) {
				var propName;

				// Original props are copied
				var props = assign({}, element.props);

				// Reserved names are extracted
				var key = element.key;
				var ref = element.ref;
				// Self is preserved since the owner is preserved.
				var self = element._self;
				// Source is preserved since cloneElement is unlikely to be targeted by a
				// transpiler, and the original source is probably a better indicator of the
				// true owner.
				var source = element._source;

				// Owner will be preserved, unless ref is overridden
				var owner = element._owner;

				if (config != null) {
					if (config.ref !== undefined) {
						// Silently steal the ref from the parent.
						ref = config.ref;
						owner = ReactCurrentOwner.current;
					}
					if (config.key !== undefined) {
						key = '' + config.key;
					}
					// Remaining properties override existing props
					for (propName in config) {
						if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
							props[propName] = config[propName];
						}
					}
				}

				// Children can be more than one argument, and those are transferred onto
				// the newly allocated props object.
				var childrenLength = arguments.length - 2;
				if (childrenLength === 1) {
					props.children = children;
				} else if (childrenLength > 1) {
					var childArray = Array(childrenLength);
					for (var i = 0; i < childrenLength; i++) {
						childArray[i] = arguments[i + 2];
					}
					props.children = childArray;
				}

				return ReactElement(element.type, key, ref, self, source, owner, props);
			};

			/**
			 * @param {?object} object
			 * @return {boolean} True if `object` is a valid component.
			 * @final
			 */
			ReactElement.isValidElement = function (object) {
				return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
			};

			module.exports = ReactElement;
		}, { "117": 117, "24": 24, "39": 39 }], 58: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2014-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactElementValidator
			 */

			/**
			 * ReactElementValidator provides a wrapper around a element factory
			 * which validates the props passed to the element. This is intended to be
			 * used only in DEV and could be replaced by a static type checker for languages
			 * that support it.
			 */

			'use strict';

			var ReactElement = _dereq_(57);
			var ReactPropTypeLocations = _dereq_(81);
			var ReactPropTypeLocationNames = _dereq_(80);
			var ReactCurrentOwner = _dereq_(39);

			var canDefineProperty = _dereq_(117);
			var getIteratorFn = _dereq_(129);
			var invariant = _dereq_(161);
			var warning = _dereq_(173);

			function getDeclarationErrorAddendum() {
				if (ReactCurrentOwner.current) {
					var name = ReactCurrentOwner.current.getName();
					if (name) {
						return ' Check the render method of `' + name + '`.';
					}
				}
				return '';
			}

			/**
			 * Warn if there's no key explicitly set on dynamic arrays of children or
			 * object keys are not valid. This allows us to keep track of children between
			 * updates.
			 */
			var ownerHasKeyUseWarning = {};

			var loggedTypeFailures = {};

			/**
			 * Warn if the element doesn't have an explicit key assigned to it.
			 * This element is in an array. The array could grow and shrink or be
			 * reordered. All children that haven't already been validated are required to
			 * have a "key" property assigned to it.
			 *
			 * @internal
			 * @param {ReactElement} element Element that requires a key.
			 * @param {*} parentType element's parent's type.
			 */
			function validateExplicitKey(element, parentType) {
				if (!element._store || element._store.validated || element.key != null) {
					return;
				}
				element._store.validated = true;

				var addenda = getAddendaForKeyUse('uniqueKey', element, parentType);
				if (addenda === null) {
					// we already showed the warning
					return;
				}
				"development" !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s%s', addenda.parentOrOwner || '', addenda.childOwner || '', addenda.url || '') : undefined;
			}

			/**
			 * Shared warning and monitoring code for the key warnings.
			 *
			 * @internal
			 * @param {string} messageType A key used for de-duping warnings.
			 * @param {ReactElement} element Component that requires a key.
			 * @param {*} parentType element's parent's type.
			 * @returns {?object} A set of addenda to use in the warning message, or null
			 * if the warning has already been shown before (and shouldn't be shown again).
			 */
			function getAddendaForKeyUse(messageType, element, parentType) {
				var addendum = getDeclarationErrorAddendum();
				if (!addendum) {
					var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
					if (parentName) {
						addendum = ' Check the top-level render call using <' + parentName + '>.';
					}
				}

				var memoizer = ownerHasKeyUseWarning[messageType] || (ownerHasKeyUseWarning[messageType] = {});
				if (memoizer[addendum]) {
					return null;
				}
				memoizer[addendum] = true;

				var addenda = {
					parentOrOwner: addendum,
					url: ' See https://fb.me/react-warning-keys for more information.',
					childOwner: null
				};

				// Usually the current owner is the offender, but if it accepts children as a
				// property, it may be the creator of the child that's responsible for
				// assigning it a key.
				if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
					// Give the component that originally created this child.
					addenda.childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
				}

				return addenda;
			}

			/**
			 * Ensure that every element either is passed in a static location, in an
			 * array with an explicit keys property defined, or in an object literal
			 * with valid key property.
			 *
			 * @internal
			 * @param {ReactNode} node Statically passed child of any type.
			 * @param {*} parentType node's parent's type.
			 */
			function validateChildKeys(node, parentType) {
				if (typeof node !== 'object') {
					return;
				}
				if (Array.isArray(node)) {
					for (var i = 0; i < node.length; i++) {
						var child = node[i];
						if (ReactElement.isValidElement(child)) {
							validateExplicitKey(child, parentType);
						}
					}
				} else if (ReactElement.isValidElement(node)) {
					// This element was passed in a valid location.
					if (node._store) {
						node._store.validated = true;
					}
				} else if (node) {
					var iteratorFn = getIteratorFn(node);
					// Entry iterators provide implicit keys.
					if (iteratorFn) {
						if (iteratorFn !== node.entries) {
							var iterator = iteratorFn.call(node);
							var step;
							while (!(step = iterator.next()).done) {
								if (ReactElement.isValidElement(step.value)) {
									validateExplicitKey(step.value, parentType);
								}
							}
						}
					}
				}
			}

			/**
			 * Assert that the props are valid
			 *
			 * @param {string} componentName Name of the component for error messages.
			 * @param {object} propTypes Map of prop name to a ReactPropType
			 * @param {object} props
			 * @param {string} location e.g. "prop", "context", "child context"
			 * @private
			 */
			function checkPropTypes(componentName, propTypes, props, location) {
				for (var propName in propTypes) {
					if (propTypes.hasOwnProperty(propName)) {
						var error;
						// Prop type validation may throw. In case they do, we don't want to
						// fail the render phase where it didn't fail before. So we log it.
						// After these have been cleaned up, we'll let them throw.
						try {
							// This is intentionally an invariant that gets caught. It's the same
							// behavior as without this statement except with a better message.
							!(typeof propTypes[propName] === 'function') ? "development" !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : undefined;
							error = propTypes[propName](props, propName, componentName, location);
						} catch (ex) {
							error = ex;
						}
						"development" !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], propName, typeof error) : undefined;
						if (error instanceof Error && !(error.message in loggedTypeFailures)) {
							// Only monitor this failure once because there tends to be a lot of the
							// same error.
							loggedTypeFailures[error.message] = true;

							var addendum = getDeclarationErrorAddendum();
							"development" !== 'production' ? warning(false, 'Failed propType: %s%s', error.message, addendum) : undefined;
						}
					}
				}
			}

			/**
			 * Given an element, validate that its props follow the propTypes definition,
			 * provided by the type.
			 *
			 * @param {ReactElement} element
			 */
			function validatePropTypes(element) {
				var componentClass = element.type;
				if (typeof componentClass !== 'function') {
					return;
				}
				var name = componentClass.displayName || componentClass.name;
				if (componentClass.propTypes) {
					checkPropTypes(name, componentClass.propTypes, element.props, ReactPropTypeLocations.prop);
				}
				if (typeof componentClass.getDefaultProps === 'function') {
					"development" !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : undefined;
				}
			}

			var ReactElementValidator = {

				createElement: function (type, props, children) {
					var validType = typeof type === 'string' || typeof type === 'function';
					// We warn in this case but don't throw. We expect the element creation to
					// succeed and there will likely be errors in render.
					"development" !== 'production' ? warning(validType, 'React.createElement: type should not be null, undefined, boolean, or ' + 'number. It should be a string (for DOM elements) or a ReactClass ' + '(for composite components).%s', getDeclarationErrorAddendum()) : undefined;

					var element = ReactElement.createElement.apply(this, arguments);

					// The result can be nullish if a mock or a custom function is used.
					// TODO: Drop this when these are no longer allowed as the type argument.
					if (element == null) {
						return element;
					}

					// Skip key warning if the type isn't valid since our key validation logic
					// doesn't expect a non-string/function type and can throw confusing errors.
					// We don't want exception behavior to differ between dev and prod.
					// (Rendering will throw with a helpful message and as soon as the type is
					// fixed, the key warnings will appear.)
					if (validType) {
						for (var i = 2; i < arguments.length; i++) {
							validateChildKeys(arguments[i], type);
						}
					}

					validatePropTypes(element);

					return element;
				},

				createFactory: function (type) {
					var validatedFactory = ReactElementValidator.createElement.bind(null, type);
					// Legacy hook TODO: Warn if this is accessed
					validatedFactory.type = type;

					if ("development" !== 'production') {
						if (canDefineProperty) {
							Object.defineProperty(validatedFactory, 'type', {
								enumerable: false,
								get: function () {
									"development" !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : undefined;
									Object.defineProperty(this, 'type', {
										value: type
									});
									return type;
								}
							});
						}
					}

					return validatedFactory;
				},

				cloneElement: function (element, props, children) {
					var newElement = ReactElement.cloneElement.apply(this, arguments);
					for (var i = 2; i < arguments.length; i++) {
						validateChildKeys(arguments[i], newElement.type);
					}
					validatePropTypes(newElement);
					return newElement;
				}

			};

			module.exports = ReactElementValidator;
		}, { "117": 117, "129": 129, "161": 161, "173": 173, "39": 39, "57": 57, "80": 80, "81": 81 }], 59: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2014-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactEmptyComponent
			 */

			'use strict';

			var ReactElement = _dereq_(57);
			var ReactEmptyComponentRegistry = _dereq_(60);
			var ReactReconciler = _dereq_(84);

			var assign = _dereq_(24);

			var placeholderElement;

			var ReactEmptyComponentInjection = {
				injectEmptyComponent: function (component) {
					placeholderElement = ReactElement.createElement(component);
				}
			};

			var ReactEmptyComponent = function (instantiate) {
				this._currentElement = null;
				this._rootNodeID = null;
				this._renderedComponent = instantiate(placeholderElement);
			};
			assign(ReactEmptyComponent.prototype, {
				construct: function (element) { },
				mountComponent: function (rootID, transaction, context) {
					ReactEmptyComponentRegistry.registerNullComponentID(rootID);
					this._rootNodeID = rootID;
					return ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, context);
				},
				receiveComponent: function () { },
				unmountComponent: function (rootID, transaction, context) {
					ReactReconciler.unmountComponent(this._renderedComponent);
					ReactEmptyComponentRegistry.deregisterNullComponentID(this._rootNodeID);
					this._rootNodeID = null;
					this._renderedComponent = null;
				}
			});

			ReactEmptyComponent.injection = ReactEmptyComponentInjection;

			module.exports = ReactEmptyComponent;
		}, { "24": 24, "57": 57, "60": 60, "84": 84 }], 60: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2014-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactEmptyComponentRegistry
			 */

			'use strict';

			// This registry keeps track of the React IDs of the components that rendered to
			// `null` (in reality a placeholder such as `noscript`)
			var nullComponentIDsRegistry = {};

			/**
			 * @param {string} id Component's `_rootNodeID`.
			 * @return {boolean} True if the component is rendered to null.
			 */
			function isNullComponentID(id) {
				return !!nullComponentIDsRegistry[id];
			}

			/**
			 * Mark the component as having rendered to null.
			 * @param {string} id Component's `_rootNodeID`.
			 */
			function registerNullComponentID(id) {
				nullComponentIDsRegistry[id] = true;
			}

			/**
			 * Unmark the component as having rendered to null: it renders to something now.
			 * @param {string} id Component's `_rootNodeID`.
			 */
			function deregisterNullComponentID(id) {
				delete nullComponentIDsRegistry[id];
			}

			var ReactEmptyComponentRegistry = {
				isNullComponentID: isNullComponentID,
				registerNullComponentID: registerNullComponentID,
				deregisterNullComponentID: deregisterNullComponentID
			};

			module.exports = ReactEmptyComponentRegistry;
		}, {}], 61: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactErrorUtils
			 * @typechecks
			 */

			'use strict';

			var caughtError = null;

			/**
			 * Call a function while guarding against errors that happens within it.
			 *
			 * @param {?String} name of the guard to use for logging or debugging
			 * @param {Function} func The function to invoke
			 * @param {*} a First argument
			 * @param {*} b Second argument
			 */
			function invokeGuardedCallback(name, func, a, b) {
				try {
					return func(a, b);
				} catch (x) {
					if (caughtError === null) {
						caughtError = x;
					}
					return undefined;
				}
			}

			var ReactErrorUtils = {
				invokeGuardedCallback: invokeGuardedCallback,

				/**
				 * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
				 * handler are sure to be rethrown by rethrowCaughtError.
				 */
				invokeGuardedCallbackWithCatch: invokeGuardedCallback,

				/**
				 * During execution of guarded functions we will capture the first error which
				 * we will rethrow to be handled by the top level error handler.
				 */
				rethrowCaughtError: function () {
					if (caughtError) {
						var error = caughtError;
						caughtError = null;
						throw error;
					}
				}
			};

			if ("development" !== 'production') {
				/**
				 * To help development we can get better devtools integration by simulating a
				 * real browser event.
				 */
				if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
					var fakeNode = document.createElement('react');
					ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {
						var boundFunc = func.bind(null, a, b);
						var evtType = 'react-' + name;
						fakeNode.addEventListener(evtType, boundFunc, false);
						var evt = document.createEvent('Event');
						evt.initEvent(evtType, false, false);
						fakeNode.dispatchEvent(evt);
						fakeNode.removeEventListener(evtType, boundFunc, false);
					};
				}
			}

			module.exports = ReactErrorUtils;
		}, {}], 62: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactEventEmitterMixin
			 */

			'use strict';

			var EventPluginHub = _dereq_(16);

			function runEventQueueInBatch(events) {
				EventPluginHub.enqueueEvents(events);
				EventPluginHub.processEventQueue(false);
			}

			var ReactEventEmitterMixin = {

				/**
				 * Streams a fired top-level event to `EventPluginHub` where plugins have the
				 * opportunity to create `ReactEvent`s to be dispatched.
				 *
				 * @param {string} topLevelType Record from `EventConstants`.
				 * @param {object} topLevelTarget The listening component root node.
				 * @param {string} topLevelTargetID ID of `topLevelTarget`.
				 * @param {object} nativeEvent Native environment event.
				 */
				handleTopLevel: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
					var events = EventPluginHub.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget);
					runEventQueueInBatch(events);
				}
			};

			module.exports = ReactEventEmitterMixin;
		}, { "16": 16 }], 63: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactEventListener
			 * @typechecks static-only
			 */

			'use strict';

			var EventListener = _dereq_(146);
			var ExecutionEnvironment = _dereq_(147);
			var PooledClass = _dereq_(25);
			var ReactInstanceHandles = _dereq_(67);
			var ReactMount = _dereq_(72);
			var ReactUpdates = _dereq_(96);

			var assign = _dereq_(24);
			var getEventTarget = _dereq_(128);
			var getUnboundedScrollPosition = _dereq_(158);

			var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

			/**
			 * Finds the parent React component of `node`.
			 *
			 * @param {*} node
			 * @return {?DOMEventTarget} Parent container, or `null` if the specified node
			 *                           is not nested.
			 */
			function findParent(node) {
				// TODO: It may be a good idea to cache this to prevent unnecessary DOM
				// traversal, but caching is difficult to do correctly without using a
				// mutation observer to listen for all DOM changes.
				var nodeID = ReactMount.getID(node);
				var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);
				var container = ReactMount.findReactContainerForID(rootID);
				var parent = ReactMount.getFirstReactDOM(container);
				return parent;
			}

			// Used to store ancestor hierarchy in top level callback
			function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
				this.topLevelType = topLevelType;
				this.nativeEvent = nativeEvent;
				this.ancestors = [];
			}
			assign(TopLevelCallbackBookKeeping.prototype, {
				destructor: function () {
					this.topLevelType = null;
					this.nativeEvent = null;
					this.ancestors.length = 0;
				}
			});
			PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);

			function handleTopLevelImpl(bookKeeping) {
				// TODO: Re-enable event.path handling
				//
				// if (bookKeeping.nativeEvent.path && bookKeeping.nativeEvent.path.length > 1) {
				//   // New browsers have a path attribute on native events
				//   handleTopLevelWithPath(bookKeeping);
				// } else {
				//   // Legacy browsers don't have a path attribute on native events
				//   handleTopLevelWithoutPath(bookKeeping);
				// }

				void handleTopLevelWithPath; // temporarily unused
				handleTopLevelWithoutPath(bookKeeping);
			}

			// Legacy browsers don't have a path attribute on native events
			function handleTopLevelWithoutPath(bookKeeping) {
				var topLevelTarget = ReactMount.getFirstReactDOM(getEventTarget(bookKeeping.nativeEvent)) || window;

				// Loop through the hierarchy, in case there's any nested components.
				// It's important that we build the array of ancestors before calling any
				// event handlers, because event handlers can modify the DOM, leading to
				// inconsistencies with ReactMount's node cache. See #1105.
				var ancestor = topLevelTarget;
				while (ancestor) {
					bookKeeping.ancestors.push(ancestor);
					ancestor = findParent(ancestor);
				}

				for (var i = 0; i < bookKeeping.ancestors.length; i++) {
					topLevelTarget = bookKeeping.ancestors[i];
					var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';
					ReactEventListener._handleTopLevel(bookKeeping.topLevelType, topLevelTarget, topLevelTargetID, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
				}
			}

			// New browsers have a path attribute on native events
			function handleTopLevelWithPath(bookKeeping) {
				var path = bookKeeping.nativeEvent.path;
				var currentNativeTarget = path[0];
				var eventsFired = 0;
				for (var i = 0; i < path.length; i++) {
					var currentPathElement = path[i];
					if (currentPathElement.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE) {
						currentNativeTarget = path[i + 1];
					}
					// TODO: slow
					var reactParent = ReactMount.getFirstReactDOM(currentPathElement);
					if (reactParent === currentPathElement) {
						var currentPathElementID = ReactMount.getID(currentPathElement);
						var newRootID = ReactInstanceHandles.getReactRootIDFromNodeID(currentPathElementID);
						bookKeeping.ancestors.push(currentPathElement);

						var topLevelTargetID = ReactMount.getID(currentPathElement) || '';
						eventsFired++;
						ReactEventListener._handleTopLevel(bookKeeping.topLevelType, currentPathElement, topLevelTargetID, bookKeeping.nativeEvent, currentNativeTarget);

						// Jump to the root of this React render tree
						while (currentPathElementID !== newRootID) {
							i++;
							currentPathElement = path[i];
							currentPathElementID = ReactMount.getID(currentPathElement);
						}
					}
				}
				if (eventsFired === 0) {
					ReactEventListener._handleTopLevel(bookKeeping.topLevelType, window, '', bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
				}
			}

			function scrollValueMonitor(cb) {
				var scrollPosition = getUnboundedScrollPosition(window);
				cb(scrollPosition);
			}

			var ReactEventListener = {
				_enabled: true,
				_handleTopLevel: null,

				WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

				setHandleTopLevel: function (handleTopLevel) {
					ReactEventListener._handleTopLevel = handleTopLevel;
				},

				setEnabled: function (enabled) {
					ReactEventListener._enabled = !!enabled;
				},

				isEnabled: function () {
					return ReactEventListener._enabled;
				},

				/**
				 * Traps top-level events by using event bubbling.
				 *
				 * @param {string} topLevelType Record from `EventConstants`.
				 * @param {string} handlerBaseName Event name (e.g. "click").
				 * @param {object} handle Element on which to attach listener.
				 * @return {?object} An object with a remove function which will forcefully
				 *                  remove the listener.
				 * @internal
				 */
				trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
					var element = handle;
					if (!element) {
						return null;
					}
					return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
				},

				/**
				 * Traps a top-level event by using event capturing.
				 *
				 * @param {string} topLevelType Record from `EventConstants`.
				 * @param {string} handlerBaseName Event name (e.g. "click").
				 * @param {object} handle Element on which to attach listener.
				 * @return {?object} An object with a remove function which will forcefully
				 *                  remove the listener.
				 * @internal
				 */
				trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
					var element = handle;
					if (!element) {
						return null;
					}
					return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
				},

				monitorScrollValue: function (refresh) {
					var callback = scrollValueMonitor.bind(null, refresh);
					EventListener.listen(window, 'scroll', callback);
				},

				dispatchEvent: function (topLevelType, nativeEvent) {
					if (!ReactEventListener._enabled) {
						return;
					}

					var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
					try {
						// Event queue being processed in the same cycle allows
						// `preventDefault`.
						ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
					} finally {
						TopLevelCallbackBookKeeping.release(bookKeeping);
					}
				}
			};

			module.exports = ReactEventListener;
		}, { "128": 128, "146": 146, "147": 147, "158": 158, "24": 24, "25": 25, "67": 67, "72": 72, "96": 96 }], 64: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactFragment
			 */

			'use strict';

			var ReactChildren = _dereq_(32);
			var ReactElement = _dereq_(57);

			var emptyFunction = _dereq_(153);
			var invariant = _dereq_(161);
			var warning = _dereq_(173);

			/**
			 * We used to allow keyed objects to serve as a collection of ReactElements,
			 * or nested sets. This allowed us a way to explicitly key a set a fragment of
			 * components. This is now being replaced with an opaque data structure.
			 * The upgrade path is to call React.addons.createFragment({ key: value }) to
			 * create a keyed fragment. The resulting data structure is an array.
			 */

			var numericPropertyRegex = /^\d+$/;

			var warnedAboutNumeric = false;

			var ReactFragment = {
				// Wrap a keyed object in an opaque proxy that warns you if you access any
				// of its properties.
				create: function (object) {
					if (typeof object !== 'object' || !object || Array.isArray(object)) {
						"development" !== 'production' ? warning(false, 'React.addons.createFragment only accepts a single object. Got: %s', object) : undefined;
						return object;
					}
					if (ReactElement.isValidElement(object)) {
						"development" !== 'production' ? warning(false, 'React.addons.createFragment does not accept a ReactElement ' + 'without a wrapper object.') : undefined;
						return object;
					}

					!(object.nodeType !== 1) ? "development" !== 'production' ? invariant(false, 'React.addons.createFragment(...): Encountered an invalid child; DOM ' + 'elements are not valid children of React components.') : invariant(false) : undefined;

					var result = [];

					for (var key in object) {
						if ("development" !== 'production') {
							if (!warnedAboutNumeric && numericPropertyRegex.test(key)) {
								"development" !== 'production' ? warning(false, 'React.addons.createFragment(...): Child objects should have ' + 'non-numeric keys so ordering is preserved.') : undefined;
								warnedAboutNumeric = true;
							}
						}
						ReactChildren.mapIntoWithKeyPrefixInternal(object[key], result, key, emptyFunction.thatReturnsArgument);
					}

					return result;
				}
			};

			module.exports = ReactFragment;
		}, { "153": 153, "161": 161, "173": 173, "32": 32, "57": 57 }], 65: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactInjection
			 */

			'use strict';

			var DOMProperty = _dereq_(10);
			var EventPluginHub = _dereq_(16);
			var ReactComponentEnvironment = _dereq_(36);
			var ReactClass = _dereq_(33);
			var ReactEmptyComponent = _dereq_(59);
			var ReactBrowserEventEmitter = _dereq_(28);
			var ReactNativeComponent = _dereq_(75);
			var ReactPerf = _dereq_(78);
			var ReactRootIndex = _dereq_(86);
			var ReactUpdates = _dereq_(96);

			var ReactInjection = {
				Component: ReactComponentEnvironment.injection,
				Class: ReactClass.injection,
				DOMProperty: DOMProperty.injection,
				EmptyComponent: ReactEmptyComponent.injection,
				EventPluginHub: EventPluginHub.injection,
				EventEmitter: ReactBrowserEventEmitter.injection,
				NativeComponent: ReactNativeComponent.injection,
				Perf: ReactPerf.injection,
				RootIndex: ReactRootIndex.injection,
				Updates: ReactUpdates.injection
			};

			module.exports = ReactInjection;
		}, { "10": 10, "16": 16, "28": 28, "33": 33, "36": 36, "59": 59, "75": 75, "78": 78, "86": 86, "96": 96 }], 66: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactInputSelection
			 */

			'use strict';

			var ReactDOMSelection = _dereq_(49);

			var containsNode = _dereq_(150);
			var focusNode = _dereq_(155);
			var getActiveElement = _dereq_(156);

			function isInDocument(node) {
				return containsNode(document.documentElement, node);
			}

			/**
			 * @ReactInputSelection: React input selection module. Based on Selection.js,
			 * but modified to be suitable for react and has a couple of bug fixes (doesn't
			 * assume buttons have range selections allowed).
			 * Input selection module for React.
			 */
			var ReactInputSelection = {

				hasSelectionCapabilities: function (elem) {
					var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
					return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
				},

				getSelectionInformation: function () {
					var focusedElem = getActiveElement();
					return {
						focusedElem: focusedElem,
						selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
					};
				},

				/**
				 * @restoreSelection: If any selection information was potentially lost,
				 * restore it. This is useful when performing operations that could remove dom
				 * nodes and place them back in, resulting in focus being lost.
				 */
				restoreSelection: function (priorSelectionInformation) {
					var curFocusedElem = getActiveElement();
					var priorFocusedElem = priorSelectionInformation.focusedElem;
					var priorSelectionRange = priorSelectionInformation.selectionRange;
					if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
						if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
							ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
						}
						focusNode(priorFocusedElem);
					}
				},

				/**
				 * @getSelection: Gets the selection bounds of a focused textarea, input or
				 * contentEditable node.
				 * -@input: Look up selection bounds of this input
				 * -@return {start: selectionStart, end: selectionEnd}
				 */
				getSelection: function (input) {
					var selection;

					if ('selectionStart' in input) {
						// Modern browser with input or textarea.
						selection = {
							start: input.selectionStart,
							end: input.selectionEnd
						};
					} else if (document.selection && (input.nodeName && input.nodeName.toLowerCase() === 'input')) {
						// IE8 input.
						var range = document.selection.createRange();
						// There can only be one selection per document in IE, so it must
						// be in our element.
						if (range.parentElement() === input) {
							selection = {
								start: -range.moveStart('character', -input.value.length),
								end: -range.moveEnd('character', -input.value.length)
							};
						}
					} else {
						// Content editable or old IE textarea.
						selection = ReactDOMSelection.getOffsets(input);
					}

					return selection || { start: 0, end: 0 };
				},

				/**
				 * @setSelection: Sets the selection bounds of a textarea or input and focuses
				 * the input.
				 * -@input     Set selection bounds of this input or textarea
				 * -@offsets   Object of same form that is returned from get*
				 */
				setSelection: function (input, offsets) {
					var start = offsets.start;
					var end = offsets.end;
					if (typeof end === 'undefined') {
						end = start;
					}

					if ('selectionStart' in input) {
						input.selectionStart = start;
						input.selectionEnd = Math.min(end, input.value.length);
					} else if (document.selection && (input.nodeName && input.nodeName.toLowerCase() === 'input')) {
						var range = input.createTextRange();
						range.collapse(true);
						range.moveStart('character', start);
						range.moveEnd('character', end - start);
						range.select();
					} else {
						ReactDOMSelection.setOffsets(input, offsets);
					}
				}
			};

			module.exports = ReactInputSelection;
		}, { "150": 150, "155": 155, "156": 156, "49": 49 }], 67: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactInstanceHandles
			 * @typechecks static-only
			 */

			'use strict';

			var ReactRootIndex = _dereq_(86);

			var invariant = _dereq_(161);

			var SEPARATOR = '.';
			var SEPARATOR_LENGTH = SEPARATOR.length;

			/**
			 * Maximum depth of traversals before we consider the possibility of a bad ID.
			 */
			var MAX_TREE_DEPTH = 10000;

			/**
			 * Creates a DOM ID prefix to use when mounting React components.
			 *
			 * @param {number} index A unique integer
			 * @return {string} React root ID.
			 * @internal
			 */
			function getReactRootIDString(index) {
				return SEPARATOR + index.toString(36);
			}

			/**
			 * Checks if a character in the supplied ID is a separator or the end.
			 *
			 * @param {string} id A React DOM ID.
			 * @param {number} index Index of the character to check.
			 * @return {boolean} True if the character is a separator or end of the ID.
			 * @private
			 */
			function isBoundary(id, index) {
				return id.charAt(index) === SEPARATOR || index === id.length;
			}

			/**
			 * Checks if the supplied string is a valid React DOM ID.
			 *
			 * @param {string} id A React DOM ID, maybe.
			 * @return {boolean} True if the string is a valid React DOM ID.
			 * @private
			 */
			function isValidID(id) {
				return id === '' || id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR;
			}

			/**
			 * Checks if the first ID is an ancestor of or equal to the second ID.
			 *
			 * @param {string} ancestorID
			 * @param {string} descendantID
			 * @return {boolean} True if `ancestorID` is an ancestor of `descendantID`.
			 * @internal
			 */
			function isAncestorIDOf(ancestorID, descendantID) {
				return descendantID.indexOf(ancestorID) === 0 && isBoundary(descendantID, ancestorID.length);
			}

			/**
			 * Gets the parent ID of the supplied React DOM ID, `id`.
			 *
			 * @param {string} id ID of a component.
			 * @return {string} ID of the parent, or an empty string.
			 * @private
			 */
			function getParentID(id) {
				return id ? id.substr(0, id.lastIndexOf(SEPARATOR)) : '';
			}

			/**
			 * Gets the next DOM ID on the tree path from the supplied `ancestorID` to the
			 * supplied `destinationID`. If they are equal, the ID is returned.
			 *
			 * @param {string} ancestorID ID of an ancestor node of `destinationID`.
			 * @param {string} destinationID ID of the destination node.
			 * @return {string} Next ID on the path from `ancestorID` to `destinationID`.
			 * @private
			 */
			function getNextDescendantID(ancestorID, destinationID) {
				!(isValidID(ancestorID) && isValidID(destinationID)) ? "development" !== 'production' ? invariant(false, 'getNextDescendantID(%s, %s): Received an invalid React DOM ID.', ancestorID, destinationID) : invariant(false) : undefined;
				!isAncestorIDOf(ancestorID, destinationID) ? "development" !== 'production' ? invariant(false, 'getNextDescendantID(...): React has made an invalid assumption about ' + 'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.', ancestorID, destinationID) : invariant(false) : undefined;
				if (ancestorID === destinationID) {
					return ancestorID;
				}
				// Skip over the ancestor and the immediate separator. Traverse until we hit
				// another separator or we reach the end of `destinationID`.
				var start = ancestorID.length + SEPARATOR_LENGTH;
				var i;
				for (i = start; i < destinationID.length; i++) {
					if (isBoundary(destinationID, i)) {
						break;
					}
				}
				return destinationID.substr(0, i);
			}

			/**
			 * Gets the nearest common ancestor ID of two IDs.
			 *
			 * Using this ID scheme, the nearest common ancestor ID is the longest common
			 * prefix of the two IDs that immediately preceded a "marker" in both strings.
			 *
			 * @param {string} oneID
			 * @param {string} twoID
			 * @return {string} Nearest common ancestor ID, or the empty string if none.
			 * @private
			 */
			function getFirstCommonAncestorID(oneID, twoID) {
				var minLength = Math.min(oneID.length, twoID.length);
				if (minLength === 0) {
					return '';
				}
				var lastCommonMarkerIndex = 0;
				// Use `<=` to traverse until the "EOL" of the shorter string.
				for (var i = 0; i <= minLength; i++) {
					if (isBoundary(oneID, i) && isBoundary(twoID, i)) {
						lastCommonMarkerIndex = i;
					} else if (oneID.charAt(i) !== twoID.charAt(i)) {
						break;
					}
				}
				var longestCommonID = oneID.substr(0, lastCommonMarkerIndex);
				!isValidID(longestCommonID) ? "development" !== 'production' ? invariant(false, 'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s', oneID, twoID, longestCommonID) : invariant(false) : undefined;
				return longestCommonID;
			}

			/**
			 * Traverses the parent path between two IDs (either up or down). The IDs must
			 * not be the same, and there must exist a parent path between them. If the
			 * callback returns `false`, traversal is stopped.
			 *
			 * @param {?string} start ID at which to start traversal.
			 * @param {?string} stop ID at which to end traversal.
			 * @param {function} cb Callback to invoke each ID with.
			 * @param {*} arg Argument to invoke the callback with.
			 * @param {?boolean} skipFirst Whether or not to skip the first node.
			 * @param {?boolean} skipLast Whether or not to skip the last node.
			 * @private
			 */
			function traverseParentPath(start, stop, cb, arg, skipFirst, skipLast) {
				start = start || '';
				stop = stop || '';
				!(start !== stop) ? "development" !== 'production' ? invariant(false, 'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.', start) : invariant(false) : undefined;
				var traverseUp = isAncestorIDOf(stop, start);
				!(traverseUp || isAncestorIDOf(start, stop)) ? "development" !== 'production' ? invariant(false, 'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' + 'not have a parent path.', start, stop) : invariant(false) : undefined;
				// Traverse from `start` to `stop` one depth at a time.
				var depth = 0;
				var traverse = traverseUp ? getParentID : getNextDescendantID;
				for (var id = start; ; /* until break */id = traverse(id, stop)) {
					var ret;
					if ((!skipFirst || id !== start) && (!skipLast || id !== stop)) {
						ret = cb(id, traverseUp, arg);
					}
					if (ret === false || id === stop) {
						// Only break //after// visiting `stop`.
						break;
					}
					!(depth++ < MAX_TREE_DEPTH) ? "development" !== 'production' ? invariant(false, 'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' + 'traversing the React DOM ID tree. This may be due to malformed IDs: %s', start, stop, id) : invariant(false) : undefined;
				}
			}

			/**
			 * Manages the IDs assigned to DOM representations of React components. This
			 * uses a specific scheme in order to traverse the DOM efficiently (e.g. in
			 * order to simulate events).
			 *
			 * @internal
			 */
			var ReactInstanceHandles = {

				/**
				 * Constructs a React root ID
				 * @return {string} A React root ID.
				 */
				createReactRootID: function () {
					return getReactRootIDString(ReactRootIndex.createReactRootIndex());
				},

				/**
				 * Constructs a React ID by joining a root ID with a name.
				 *
				 * @param {string} rootID Root ID of a parent component.
				 * @param {string} name A component's name (as flattened children).
				 * @return {string} A React ID.
				 * @internal
				 */
				createReactID: function (rootID, name) {
					return rootID + name;
				},

				/**
				 * Gets the DOM ID of the React component that is the root of the tree that
				 * contains the React component with the supplied DOM ID.
				 *
				 * @param {string} id DOM ID of a React component.
				 * @return {?string} DOM ID of the React component that is the root.
				 * @internal
				 */
				getReactRootIDFromNodeID: function (id) {
					if (id && id.charAt(0) === SEPARATOR && id.length > 1) {
						var index = id.indexOf(SEPARATOR, 1);
						return index > -1 ? id.substr(0, index) : id;
					}
					return null;
				},

				/**
				 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
				 * should would receive a `mouseEnter` or `mouseLeave` event.
				 *
				 * NOTE: Does not invoke the callback on the nearest common ancestor because
				 * nothing "entered" or "left" that element.
				 *
				 * @param {string} leaveID ID being left.
				 * @param {string} enterID ID being entered.
				 * @param {function} cb Callback to invoke on each entered/left ID.
				 * @param {*} upArg Argument to invoke the callback with on left IDs.
				 * @param {*} downArg Argument to invoke the callback with on entered IDs.
				 * @internal
				 */
				traverseEnterLeave: function (leaveID, enterID, cb, upArg, downArg) {
					var ancestorID = getFirstCommonAncestorID(leaveID, enterID);
					if (ancestorID !== leaveID) {
						traverseParentPath(leaveID, ancestorID, cb, upArg, false, true);
					}
					if (ancestorID !== enterID) {
						traverseParentPath(ancestorID, enterID, cb, downArg, true, false);
					}
				},

				/**
				 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
				 *
				 * NOTE: This traversal happens on IDs without touching the DOM.
				 *
				 * @param {string} targetID ID of the target node.
				 * @param {function} cb Callback to invoke.
				 * @param {*} arg Argument to invoke the callback with.
				 * @internal
				 */
				traverseTwoPhase: function (targetID, cb, arg) {
					if (targetID) {
						traverseParentPath('', targetID, cb, arg, true, false);
						traverseParentPath(targetID, '', cb, arg, false, true);
					}
				},

				/**
				 * Same as `traverseTwoPhase` but skips the `targetID`.
				 */
				traverseTwoPhaseSkipTarget: function (targetID, cb, arg) {
					if (targetID) {
						traverseParentPath('', targetID, cb, arg, true, true);
						traverseParentPath(targetID, '', cb, arg, true, true);
					}
				},

				/**
				 * Traverse a node ID, calling the supplied `cb` for each ancestor ID. For
				 * example, passing `.0.$row-0.1` would result in `cb` getting called
				 * with `.0`, `.0.$row-0`, and `.0.$row-0.1`.
				 *
				 * NOTE: This traversal happens on IDs without touching the DOM.
				 *
				 * @param {string} targetID ID of the target node.
				 * @param {function} cb Callback to invoke.
				 * @param {*} arg Argument to invoke the callback with.
				 * @internal
				 */
				traverseAncestors: function (targetID, cb, arg) {
					traverseParentPath('', targetID, cb, arg, true, false);
				},

				getFirstCommonAncestorID: getFirstCommonAncestorID,

				/**
				 * Exposed for unit testing.
				 * @private
				 */
				_getNextDescendantID: getNextDescendantID,

				isAncestorIDOf: isAncestorIDOf,

				SEPARATOR: SEPARATOR

			};

			module.exports = ReactInstanceHandles;
		}, { "161": 161, "86": 86 }], 68: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactInstanceMap
			 */

			'use strict';

			/**
			 * `ReactInstanceMap` maintains a mapping from a public facing stateful
			 * instance (key) and the internal representation (value). This allows public
			 * methods to accept the user facing instance as an argument and map them back
			 * to internal methods.
			 */

			// TODO: Replace this with ES6: var ReactInstanceMap = new Map();
			var ReactInstanceMap = {

				/**
				 * This API should be called `delete` but we'd have to make sure to always
				 * transform these to strings for IE support. When this transform is fully
				 * supported we can rename it.
				 */
				remove: function (key) {
					key._reactInternalInstance = undefined;
				},

				get: function (key) {
					return key._reactInternalInstance;
				},

				has: function (key) {
					return key._reactInternalInstance !== undefined;
				},

				set: function (key, value) {
					key._reactInternalInstance = value;
				}

			};

			module.exports = ReactInstanceMap;
		}, {}], 69: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactIsomorphic
			 */

			'use strict';

			var ReactChildren = _dereq_(32);
			var ReactComponent = _dereq_(34);
			var ReactClass = _dereq_(33);
			var ReactDOMFactories = _dereq_(43);
			var ReactElement = _dereq_(57);
			var ReactElementValidator = _dereq_(58);
			var ReactPropTypes = _dereq_(82);
			var ReactVersion = _dereq_(97);

			var assign = _dereq_(24);
			var onlyChild = _dereq_(135);

			var createElement = ReactElement.createElement;
			var createFactory = ReactElement.createFactory;
			var cloneElement = ReactElement.cloneElement;

			if ("development" !== 'production') {
				createElement = ReactElementValidator.createElement;
				createFactory = ReactElementValidator.createFactory;
				cloneElement = ReactElementValidator.cloneElement;
			}

			var React = {

				// Modern

				Children: {
					map: ReactChildren.map,
					forEach: ReactChildren.forEach,
					count: ReactChildren.count,
					toArray: ReactChildren.toArray,
					only: onlyChild
				},

				Component: ReactComponent,

				createElement: createElement,
				cloneElement: cloneElement,
				isValidElement: ReactElement.isValidElement,

				// Classic

				PropTypes: ReactPropTypes,
				createClass: ReactClass.createClass,
				createFactory: createFactory,
				createMixin: function (mixin) {
					// Currently a noop. Will be used to validate and trace mixins.
					return mixin;
				},

				// This looks DOM specific but these are actually isomorphic helpers
				// since they are just generating DOM strings.
				DOM: ReactDOMFactories,

				version: ReactVersion,

				// Hook for JSX spread, don't use this for anything else.
				__spread: assign
			};

			module.exports = React;
		}, { "135": 135, "24": 24, "32": 32, "33": 33, "34": 34, "43": 43, "57": 57, "58": 58, "82": 82, "97": 97 }], 70: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactLink
			 * @typechecks static-only
			 */

			'use strict';

			/**
			 * ReactLink encapsulates a common pattern in which a component wants to modify
			 * a prop received from its parent. ReactLink allows the parent to pass down a
			 * value coupled with a callback that, when invoked, expresses an intent to
			 * modify that value. For example:
			 *
			 * React.createClass({
			 *   getInitialState: function() {
			 *     return {value: ''};
			 *   },
			 *   render: function() {
			 *     var valueLink = new ReactLink(this.state.value, this._handleValueChange);
			 *     return <input valueLink={valueLink} />;
			 *   },
			 *   _handleValueChange: function(newValue) {
			 *     this.setState({value: newValue});
			 *   }
			 * });
			 *
			 * We have provided some sugary mixins to make the creation and
			 * consumption of ReactLink easier; see LinkedValueUtils and LinkedStateMixin.
			 */

			var React = _dereq_(26);

			/**
			 * @param {*} value current value of the link
			 * @param {function} requestChange callback to request a change
			 */
			function ReactLink(value, requestChange) {
				this.value = value;
				this.requestChange = requestChange;
			}

			/**
			 * Creates a PropType that enforces the ReactLink API and optionally checks the
			 * type of the value being passed inside the link. Example:
			 *
			 * MyComponent.propTypes = {
			 *   tabIndexLink: ReactLink.PropTypes.link(React.PropTypes.number)
			 * }
			 */
			function createLinkTypeChecker(linkType) {
				var shapes = {
					value: typeof linkType === 'undefined' ? React.PropTypes.any.isRequired : linkType.isRequired,
					requestChange: React.PropTypes.func.isRequired
				};
				return React.PropTypes.shape(shapes);
			}

			ReactLink.PropTypes = {
				link: createLinkTypeChecker
			};

			module.exports = ReactLink;
		}, { "26": 26 }], 71: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactMarkupChecksum
			 */

			'use strict';

			var adler32 = _dereq_(116);

			var TAG_END = /\/?>/;

			var ReactMarkupChecksum = {
				CHECKSUM_ATTR_NAME: 'data-react-checksum',

				/**
				 * @param {string} markup Markup string
				 * @return {string} Markup string with checksum attribute attached
				 */
				addChecksumToMarkup: function (markup) {
					var checksum = adler32(markup);

					// Add checksum (handle both parent tags and self-closing tags)
					return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
				},

				/**
				 * @param {string} markup to use
				 * @param {DOMElement} element root React element
				 * @returns {boolean} whether or not the markup is the same
				 */
				canReuseMarkup: function (markup, element) {
					var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
					existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
					var markupChecksum = adler32(markup);
					return markupChecksum === existingChecksum;
				}
			};

			module.exports = ReactMarkupChecksum;
		}, { "116": 116 }], 72: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactMount
			 */

			'use strict';

			var DOMProperty = _dereq_(10);
			var ReactBrowserEventEmitter = _dereq_(28);
			var ReactCurrentOwner = _dereq_(39);
			var ReactDOMFeatureFlags = _dereq_(44);
			var ReactElement = _dereq_(57);
			var ReactEmptyComponentRegistry = _dereq_(60);
			var ReactInstanceHandles = _dereq_(67);
			var ReactInstanceMap = _dereq_(68);
			var ReactMarkupChecksum = _dereq_(71);
			var ReactPerf = _dereq_(78);
			var ReactReconciler = _dereq_(84);
			var ReactUpdateQueue = _dereq_(95);
			var ReactUpdates = _dereq_(96);

			var assign = _dereq_(24);
			var emptyObject = _dereq_(154);
			var containsNode = _dereq_(150);
			var instantiateReactComponent = _dereq_(132);
			var invariant = _dereq_(161);
			var setInnerHTML = _dereq_(138);
			var shouldUpdateReactComponent = _dereq_(141);
			var validateDOMNesting = _dereq_(144);
			var warning = _dereq_(173);

			var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
			var nodeCache = {};

			var ELEMENT_NODE_TYPE = 1;
			var DOC_NODE_TYPE = 9;
			var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

			var ownerDocumentContextKey = '__ReactMount_ownerDocument$' + Math.random().toString(36).slice(2);

			/** Mapping from reactRootID to React component instance. */
			var instancesByReactRootID = {};

			/** Mapping from reactRootID to `container` nodes. */
			var containersByReactRootID = {};

			if ("development" !== 'production') {
				/** __DEV__-only mapping from reactRootID to root elements. */
				var rootElementsByReactRootID = {};
			}

			// Used to store breadth-first search state in findComponentRoot.
			var findComponentRootReusableArray = [];

			/**
			 * Finds the index of the first character
			 * that's not common between the two given strings.
			 *
			 * @return {number} the index of the character where the strings diverge
			 */
			function firstDifferenceIndex(string1, string2) {
				var minLen = Math.min(string1.length, string2.length);
				for (var i = 0; i < minLen; i++) {
					if (string1.charAt(i) !== string2.charAt(i)) {
						return i;
					}
				}
				return string1.length === string2.length ? -1 : minLen;
			}

			/**
			 * @param {DOMElement|DOMDocument} container DOM element that may contain
			 * a React component
			 * @return {?*} DOM element that may have the reactRoot ID, or null.
			 */
			function getReactRootElementInContainer(container) {
				if (!container) {
					return null;
				}

				if (container.nodeType === DOC_NODE_TYPE) {
					return container.documentElement;
				} else {
					return container.firstChild;
				}
			}

			/**
			 * @param {DOMElement} container DOM element that may contain a React component.
			 * @return {?string} A "reactRoot" ID, if a React component is rendered.
			 */
			function getReactRootID(container) {
				var rootElement = getReactRootElementInContainer(container);
				return rootElement && ReactMount.getID(rootElement);
			}

			/**
			 * Accessing node[ATTR_NAME] or calling getAttribute(ATTR_NAME) on a form
			 * element can return its control whose name or ID equals ATTR_NAME. All
			 * DOM nodes support `getAttributeNode` but this can also get called on
			 * other objects so just return '' if we're given something other than a
			 * DOM node (such as window).
			 *
			 * @param {?DOMElement|DOMWindow|DOMDocument|DOMTextNode} node DOM node.
			 * @return {string} ID of the supplied `domNode`.
			 */
			function getID(node) {
				var id = internalGetID(node);
				if (id) {
					if (nodeCache.hasOwnProperty(id)) {
						var cached = nodeCache[id];
						if (cached !== node) {
							!!isValid(cached, id) ? "development" !== 'production' ? invariant(false, 'ReactMount: Two valid but unequal nodes with the same `%s`: %s', ATTR_NAME, id) : invariant(false) : undefined;

							nodeCache[id] = node;
						}
					} else {
						nodeCache[id] = node;
					}
				}

				return id;
			}

			function internalGetID(node) {
				// If node is something like a window, document, or text node, none of
				// which support attributes or a .getAttribute method, gracefully return
				// the empty string, as if the attribute were missing.
				return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';
			}

			/**
			 * Sets the React-specific ID of the given node.
			 *
			 * @param {DOMElement} node The DOM node whose ID will be set.
			 * @param {string} id The value of the ID attribute.
			 */
			function setID(node, id) {
				var oldID = internalGetID(node);
				if (oldID !== id) {
					delete nodeCache[oldID];
				}
				node.setAttribute(ATTR_NAME, id);
				nodeCache[id] = node;
			}

			/**
			 * Finds the node with the supplied React-generated DOM ID.
			 *
			 * @param {string} id A React-generated DOM ID.
			 * @return {DOMElement} DOM node with the suppled `id`.
			 * @internal
			 */
			function getNode(id) {
				if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
					nodeCache[id] = ReactMount.findReactNodeByID(id);
				}
				return nodeCache[id];
			}

			/**
			 * Finds the node with the supplied public React instance.
			 *
			 * @param {*} instance A public React instance.
			 * @return {?DOMElement} DOM node with the suppled `id`.
			 * @internal
			 */
			function getNodeFromInstance(instance) {
				var id = ReactInstanceMap.get(instance)._rootNodeID;
				if (ReactEmptyComponentRegistry.isNullComponentID(id)) {
					return null;
				}
				if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
					nodeCache[id] = ReactMount.findReactNodeByID(id);
				}
				return nodeCache[id];
			}

			/**
			 * A node is "valid" if it is contained by a currently mounted container.
			 *
			 * This means that the node does not have to be contained by a document in
			 * order to be considered valid.
			 *
			 * @param {?DOMElement} node The candidate DOM node.
			 * @param {string} id The expected ID of the node.
			 * @return {boolean} Whether the node is contained by a mounted container.
			 */
			function isValid(node, id) {
				if (node) {
					!(internalGetID(node) === id) ? "development" !== 'production' ? invariant(false, 'ReactMount: Unexpected modification of `%s`', ATTR_NAME) : invariant(false) : undefined;

					var container = ReactMount.findReactContainerForID(id);
					if (container && containsNode(container, node)) {
						return true;
					}
				}

				return false;
			}

			/**
			 * Causes the cache to forget about one React-specific ID.
			 *
			 * @param {string} id The ID to forget.
			 */
			function purgeID(id) {
				delete nodeCache[id];
			}

			var deepestNodeSoFar = null;
			function findDeepestCachedAncestorImpl(ancestorID) {
				var ancestor = nodeCache[ancestorID];
				if (ancestor && isValid(ancestor, ancestorID)) {
					deepestNodeSoFar = ancestor;
				} else {
					// This node isn't populated in the cache, so presumably none of its
					// descendants are. Break out of the loop.
					return false;
				}
			}

			/**
			 * Return the deepest cached node whose ID is a prefix of `targetID`.
			 */
			function findDeepestCachedAncestor(targetID) {
				deepestNodeSoFar = null;
				ReactInstanceHandles.traverseAncestors(targetID, findDeepestCachedAncestorImpl);

				var foundNode = deepestNodeSoFar;
				deepestNodeSoFar = null;
				return foundNode;
			}

			/**
			 * Mounts this component and inserts it into the DOM.
			 *
			 * @param {ReactComponent} componentInstance The instance to mount.
			 * @param {string} rootID DOM ID of the root node.
			 * @param {DOMElement} container DOM element to mount into.
			 * @param {ReactReconcileTransaction} transaction
			 * @param {boolean} shouldReuseMarkup If true, do not insert markup
			 */
			function mountComponentIntoNode(componentInstance, rootID, container, transaction, shouldReuseMarkup, context) {
				if (ReactDOMFeatureFlags.useCreateElement) {
					context = assign({}, context);
					if (container.nodeType === DOC_NODE_TYPE) {
						context[ownerDocumentContextKey] = container;
					} else {
						context[ownerDocumentContextKey] = container.ownerDocument;
					}
				}
				if ("development" !== 'production') {
					if (context === emptyObject) {
						context = {};
					}
					var tag = container.nodeName.toLowerCase();
					context[validateDOMNesting.ancestorInfoContextKey] = validateDOMNesting.updatedAncestorInfo(null, tag, null);
				}
				var markup = ReactReconciler.mountComponent(componentInstance, rootID, transaction, context);
				componentInstance._renderedComponent._topLevelWrapper = componentInstance;
				ReactMount._mountImageIntoNode(markup, container, shouldReuseMarkup, transaction);
			}

			/**
			 * Batched mount.
			 *
			 * @param {ReactComponent} componentInstance The instance to mount.
			 * @param {string} rootID DOM ID of the root node.
			 * @param {DOMElement} container DOM element to mount into.
			 * @param {boolean} shouldReuseMarkup If true, do not insert markup
			 */
			function batchedMountComponentIntoNode(componentInstance, rootID, container, shouldReuseMarkup, context) {
				var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
				/* forceHTML */shouldReuseMarkup);
				transaction.perform(mountComponentIntoNode, null, componentInstance, rootID, container, transaction, shouldReuseMarkup, context);
				ReactUpdates.ReactReconcileTransaction.release(transaction);
			}

			/**
			 * Unmounts a component and removes it from the DOM.
			 *
			 * @param {ReactComponent} instance React component instance.
			 * @param {DOMElement} container DOM element to unmount from.
			 * @final
			 * @internal
			 * @see {ReactMount.unmountComponentAtNode}
			 */
			function unmountComponentFromNode(instance, container) {
				ReactReconciler.unmountComponent(instance);

				if (container.nodeType === DOC_NODE_TYPE) {
					container = container.documentElement;
				}

				// http://jsperf.com/emptying-a-node
				while (container.lastChild) {
					container.removeChild(container.lastChild);
				}
			}

			/**
			 * True if the supplied DOM node has a direct React-rendered child that is
			 * not a React root element. Useful for warning in `render`,
			 * `unmountComponentAtNode`, etc.
			 *
			 * @param {?DOMElement} node The candidate DOM node.
			 * @return {boolean} True if the DOM element contains a direct child that was
			 * rendered by React but is not a root element.
			 * @internal
			 */
			function hasNonRootReactChild(node) {
				var reactRootID = getReactRootID(node);
				return reactRootID ? reactRootID !== ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID) : false;
			}

			/**
			 * Returns the first (deepest) ancestor of a node which is rendered by this copy
			 * of React.
			 */
			function findFirstReactDOMImpl(node) {
				// This node might be from another React instance, so we make sure not to
				// examine the node cache here
				for (; node && node.parentNode !== node; node = node.parentNode) {
					if (node.nodeType !== 1) {
						// Not a DOMElement, therefore not a React component
						continue;
					}
					var nodeID = internalGetID(node);
					if (!nodeID) {
						continue;
					}
					var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);

					// If containersByReactRootID contains the container we find by crawling up
					// the tree, we know that this instance of React rendered the node.
					// nb. isValid's strategy (with containsNode) does not work because render
					// trees may be nested and we don't want a false positive in that case.
					var current = node;
					var lastID;
					do {
						lastID = internalGetID(current);
						current = current.parentNode;
						if (current == null) {
							// The passed-in node has been detached from the container it was
							// originally rendered into.
							return null;
						}
					} while (lastID !== reactRootID);

					if (current === containersByReactRootID[reactRootID]) {
						return node;
					}
				}
				return null;
			}

			/**
			 * Temporary (?) hack so that we can store all top-level pending updates on
			 * composites instead of having to worry about different types of components
			 * here.
			 */
			var TopLevelWrapper = function () { };
			TopLevelWrapper.prototype.isReactComponent = {};
			if ("development" !== 'production') {
				TopLevelWrapper.displayName = 'TopLevelWrapper';
			}
			TopLevelWrapper.prototype.render = function () {
				// this.props is actually a ReactElement
				return this.props;
			};

			/**
			 * Mounting is the process of initializing a React component by creating its
			 * representative DOM elements and inserting them into a supplied `container`.
			 * Any prior content inside `container` is destroyed in the process.
			 *
			 *   ReactMount.render(
			 *     component,
			 *     document.getElementById('container')
			 *   );
			 *
			 *   <div id="container">                   <-- Supplied `container`.
			 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
			 *       // ...                                 component.
			 *     </div>
			 *   </div>
			 *
			 * Inside of `container`, the first element rendered is the "reactRoot".
			 */
			var ReactMount = {

				TopLevelWrapper: TopLevelWrapper,

				/** Exposed for debugging purposes **/
				_instancesByReactRootID: instancesByReactRootID,

				/**
				 * This is a hook provided to support rendering React components while
				 * ensuring that the apparent scroll position of its `container` does not
				 * change.
				 *
				 * @param {DOMElement} container The `container` being rendered into.
				 * @param {function} renderCallback This must be called once to do the render.
				 */
				scrollMonitor: function (container, renderCallback) {
					renderCallback();
				},

				/**
				 * Take a component that's already mounted into the DOM and replace its props
				 * @param {ReactComponent} prevComponent component instance already in the DOM
				 * @param {ReactElement} nextElement component instance to render
				 * @param {DOMElement} container container to render into
				 * @param {?function} callback function triggered on completion
				 */
				_updateRootComponent: function (prevComponent, nextElement, container, callback) {
					ReactMount.scrollMonitor(container, function () {
						ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement);
						if (callback) {
							ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
						}
					});

					if ("development" !== 'production') {
						// Record the root element in case it later gets transplanted.
						rootElementsByReactRootID[getReactRootID(container)] = getReactRootElementInContainer(container);
					}

					return prevComponent;
				},

				/**
				 * Register a component into the instance map and starts scroll value
				 * monitoring
				 * @param {ReactComponent} nextComponent component instance to render
				 * @param {DOMElement} container container to render into
				 * @return {string} reactRoot ID prefix
				 */
				_registerComponent: function (nextComponent, container) {
					!(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? "development" !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : invariant(false) : undefined;

					ReactBrowserEventEmitter.ensureScrollValueMonitoring();

					var reactRootID = ReactMount.registerContainer(container);
					instancesByReactRootID[reactRootID] = nextComponent;
					return reactRootID;
				},

				/**
				 * Render a new component into the DOM.
				 * @param {ReactElement} nextElement element to render
				 * @param {DOMElement} container container to render into
				 * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
				 * @return {ReactComponent} nextComponent
				 */
				_renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
					// Various parts of our code (such as ReactCompositeComponent's
					// _renderValidatedComponent) assume that calls to render aren't nested;
					// verify that that's the case.
					"development" !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : undefined;

					var componentInstance = instantiateReactComponent(nextElement, null);
					var reactRootID = ReactMount._registerComponent(componentInstance, container);

					// The initial render is synchronous but any updates that happen during
					// rendering, in componentWillMount or componentDidMount, will be batched
					// according to the current batching strategy.

					ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, reactRootID, container, shouldReuseMarkup, context);

					if ("development" !== 'production') {
						// Record the root element in case it later gets transplanted.
						rootElementsByReactRootID[reactRootID] = getReactRootElementInContainer(container);
					}

					return componentInstance;
				},

				/**
				 * Renders a React component into the DOM in the supplied `container`.
				 *
				 * If the React component was previously rendered into `container`, this will
				 * perform an update on it and only mutate the DOM as necessary to reflect the
				 * latest React component.
				 *
				 * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
				 * @param {ReactElement} nextElement Component element to render.
				 * @param {DOMElement} container DOM element to render into.
				 * @param {?function} callback function triggered on completion
				 * @return {ReactComponent} Component instance rendered in `container`.
				 */
				renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
					!(parentComponent != null && parentComponent._reactInternalInstance != null) ? "development" !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : invariant(false) : undefined;
					return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
				},

				_renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
					!ReactElement.isValidElement(nextElement) ? "development" !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing an element string, make sure to instantiate ' + 'it by passing it to React.createElement.' : typeof nextElement === 'function' ? ' Instead of passing a component class, make sure to instantiate ' + 'it by passing it to React.createElement.' :
					// Check if it quacks like an element
					nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : invariant(false) : undefined;

					"development" !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : undefined;

					var nextWrappedElement = new ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);

					var prevComponent = instancesByReactRootID[getReactRootID(container)];

					if (prevComponent) {
						var prevWrappedElement = prevComponent._currentElement;
						var prevElement = prevWrappedElement.props;
						if (shouldUpdateReactComponent(prevElement, nextElement)) {
							var publicInst = prevComponent._renderedComponent.getPublicInstance();
							var updatedCallback = callback && function () {
								callback.call(publicInst);
							};
							ReactMount._updateRootComponent(prevComponent, nextWrappedElement, container, updatedCallback);
							return publicInst;
						} else {
							ReactMount.unmountComponentAtNode(container);
						}
					}

					var reactRootElement = getReactRootElementInContainer(container);
					var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
					var containerHasNonRootReactChild = hasNonRootReactChild(container);

					if ("development" !== 'production') {
						"development" !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : undefined;

						if (!containerHasReactMarkup || reactRootElement.nextSibling) {
							var rootElementSibling = reactRootElement;
							while (rootElementSibling) {
								if (internalGetID(rootElementSibling)) {
									"development" !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : undefined;
									break;
								}
								rootElementSibling = rootElementSibling.nextSibling;
							}
						}
					}

					var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
					var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, parentComponent != null ? parentComponent._reactInternalInstance._processChildContext(parentComponent._reactInternalInstance._context) : emptyObject)._renderedComponent.getPublicInstance();
					if (callback) {
						callback.call(component);
					}
					return component;
				},

				/**
				 * Renders a React component into the DOM in the supplied `container`.
				 *
				 * If the React component was previously rendered into `container`, this will
				 * perform an update on it and only mutate the DOM as necessary to reflect the
				 * latest React component.
				 *
				 * @param {ReactElement} nextElement Component element to render.
				 * @param {DOMElement} container DOM element to render into.
				 * @param {?function} callback function triggered on completion
				 * @return {ReactComponent} Component instance rendered in `container`.
				 */
				render: function (nextElement, container, callback) {
					return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
				},

				/**
				 * Registers a container node into which React components will be rendered.
				 * This also creates the "reactRoot" ID that will be assigned to the element
				 * rendered within.
				 *
				 * @param {DOMElement} container DOM element to register as a container.
				 * @return {string} The "reactRoot" ID of elements rendered within.
				 */
				registerContainer: function (container) {
					var reactRootID = getReactRootID(container);
					if (reactRootID) {
						// If one exists, make sure it is a valid "reactRoot" ID.
						reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);
					}
					if (!reactRootID) {
						// No valid "reactRoot" ID found, create one.
						reactRootID = ReactInstanceHandles.createReactRootID();
					}
					containersByReactRootID[reactRootID] = container;
					return reactRootID;
				},

				/**
				 * Unmounts and destroys the React component rendered in the `container`.
				 *
				 * @param {DOMElement} container DOM element containing a React component.
				 * @return {boolean} True if a component was found in and unmounted from
				 *                   `container`
				 */
				unmountComponentAtNode: function (container) {
					// Various parts of our code (such as ReactCompositeComponent's
					// _renderValidatedComponent) assume that calls to render aren't nested;
					// verify that that's the case. (Strictly speaking, unmounting won't cause a
					// render but we still don't expect to be in a render call here.)
					"development" !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : undefined;

					!(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? "development" !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : invariant(false) : undefined;

					var reactRootID = getReactRootID(container);
					var component = instancesByReactRootID[reactRootID];
					if (!component) {
						// Check if the node being unmounted was rendered by React, but isn't a
						// root node.
						var containerHasNonRootReactChild = hasNonRootReactChild(container);

						// Check if the container itself is a React root node.
						var containerID = internalGetID(container);
						var isContainerReactRoot = containerID && containerID === ReactInstanceHandles.getReactRootIDFromNodeID(containerID);

						if ("development" !== 'production') {
							"development" !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : undefined;
						}

						return false;
					}
					ReactUpdates.batchedUpdates(unmountComponentFromNode, component, container);
					delete instancesByReactRootID[reactRootID];
					delete containersByReactRootID[reactRootID];
					if ("development" !== 'production') {
						delete rootElementsByReactRootID[reactRootID];
					}
					return true;
				},

				/**
				 * Finds the container DOM element that contains React component to which the
				 * supplied DOM `id` belongs.
				 *
				 * @param {string} id The ID of an element rendered by a React component.
				 * @return {?DOMElement} DOM element that contains the `id`.
				 */
				findReactContainerForID: function (id) {
					var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(id);
					var container = containersByReactRootID[reactRootID];

					if ("development" !== 'production') {
						var rootElement = rootElementsByReactRootID[reactRootID];
						if (rootElement && rootElement.parentNode !== container) {
							"development" !== 'production' ? warning(
							// Call internalGetID here because getID calls isValid which calls
							// findReactContainerForID (this function).
							internalGetID(rootElement) === reactRootID, 'ReactMount: Root element ID differed from reactRootID.') : undefined;
							var containerChild = container.firstChild;
							if (containerChild && reactRootID === internalGetID(containerChild)) {
								// If the container has a new child with the same ID as the old
								// root element, then rootElementsByReactRootID[reactRootID] is
								// just stale and needs to be updated. The case that deserves a
								// warning is when the container is empty.
								rootElementsByReactRootID[reactRootID] = containerChild;
							} else {
								"development" !== 'production' ? warning(false, 'ReactMount: Root element has been removed from its original ' + 'container. New container: %s', rootElement.parentNode) : undefined;
							}
						}
					}

					return container;
				},

				/**
				 * Finds an element rendered by React with the supplied ID.
				 *
				 * @param {string} id ID of a DOM node in the React component.
				 * @return {DOMElement} Root DOM node of the React component.
				 */
				findReactNodeByID: function (id) {
					var reactRoot = ReactMount.findReactContainerForID(id);
					return ReactMount.findComponentRoot(reactRoot, id);
				},

				/**
				 * Traverses up the ancestors of the supplied node to find a node that is a
				 * DOM representation of a React component rendered by this copy of React.
				 *
				 * @param {*} node
				 * @return {?DOMEventTarget}
				 * @internal
				 */
				getFirstReactDOM: function (node) {
					return findFirstReactDOMImpl(node);
				},

				/**
				 * Finds a node with the supplied `targetID` inside of the supplied
				 * `ancestorNode`.  Exploits the ID naming scheme to perform the search
				 * quickly.
				 *
				 * @param {DOMEventTarget} ancestorNode Search from this root.
				 * @pararm {string} targetID ID of the DOM representation of the component.
				 * @return {DOMEventTarget} DOM node with the supplied `targetID`.
				 * @internal
				 */
				findComponentRoot: function (ancestorNode, targetID) {
					var firstChildren = findComponentRootReusableArray;
					var childIndex = 0;

					var deepestAncestor = findDeepestCachedAncestor(targetID) || ancestorNode;

					if ("development" !== 'production') {
						// This will throw on the next line; give an early warning
						"development" !== 'production' ? warning(deepestAncestor != null, 'React can\'t find the root component node for data-reactid value ' + '`%s`. If you\'re seeing this message, it probably means that ' + 'you\'ve loaded two copies of React on the page. At this time, only ' + 'a single copy of React can be loaded at a time.', targetID) : undefined;
					}

					firstChildren[0] = deepestAncestor.firstChild;
					firstChildren.length = 1;

					while (childIndex < firstChildren.length) {
						var child = firstChildren[childIndex++];
						var targetChild;

						while (child) {
							var childID = ReactMount.getID(child);
							if (childID) {
								// Even if we find the node we're looking for, we finish looping
								// through its siblings to ensure they're cached so that we don't have
								// to revisit this node again. Otherwise, we make n^2 calls to getID
								// when visiting the many children of a single node in order.

								if (targetID === childID) {
									targetChild = child;
								} else if (ReactInstanceHandles.isAncestorIDOf(childID, targetID)) {
									// If we find a child whose ID is an ancestor of the given ID,
									// then we can be sure that we only want to search the subtree
									// rooted at this child, so we can throw out the rest of the
									// search state.
									firstChildren.length = childIndex = 0;
									firstChildren.push(child.firstChild);
								}
							} else {
								// If this child had no ID, then there's a chance that it was
								// injected automatically by the browser, as when a `<table>`
								// element sprouts an extra `<tbody>` child as a side effect of
								// `.innerHTML` parsing. Optimistically continue down this
								// branch, but not before examining the other siblings.
								firstChildren.push(child.firstChild);
							}

							child = child.nextSibling;
						}

						if (targetChild) {
							// Emptying firstChildren/findComponentRootReusableArray is
							// not necessary for correctness, but it helps the GC reclaim
							// any nodes that were left at the end of the search.
							firstChildren.length = 0;

							return targetChild;
						}
					}

					firstChildren.length = 0;

					!false ? "development" !== 'production' ? invariant(false, 'findComponentRoot(..., %s): Unable to find element. This probably ' + 'means the DOM was unexpectedly mutated (e.g., by the browser), ' + 'usually due to forgetting a <tbody> when using tables, nesting tags ' + 'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' + 'parent. ' + 'Try inspecting the child nodes of the element with React ID `%s`.', targetID, ReactMount.getID(ancestorNode)) : invariant(false) : undefined;
				},

				_mountImageIntoNode: function (markup, container, shouldReuseMarkup, transaction) {
					!(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? "development" !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : invariant(false) : undefined;

					if (shouldReuseMarkup) {
						var rootElement = getReactRootElementInContainer(container);
						if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
							return;
						} else {
							var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
							rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

							var rootMarkup = rootElement.outerHTML;
							rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);

							var normalizedMarkup = markup;
							if ("development" !== 'production') {
								// because rootMarkup is retrieved from the DOM, various normalizations
								// will have occurred which will not be present in `markup`. Here,
								// insert markup into a <div> or <iframe> depending on the container
								// type to perform the same normalizations before comparing.
								var normalizer;
								if (container.nodeType === ELEMENT_NODE_TYPE) {
									normalizer = document.createElement('div');
									normalizer.innerHTML = markup;
									normalizedMarkup = normalizer.innerHTML;
								} else {
									normalizer = document.createElement('iframe');
									document.body.appendChild(normalizer);
									normalizer.contentDocument.write(markup);
									normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
									document.body.removeChild(normalizer);
								}
							}

							var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
							var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

							!(container.nodeType !== DOC_NODE_TYPE) ? "development" !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using ' + 'server rendering but the checksum was invalid. This usually ' + 'means you rendered a different component type or props on ' + 'the client from the one on the server, or your render() ' + 'methods are impure. React cannot handle this case due to ' + 'cross-browser quirks by rendering at the document root. You ' + 'should look for environment dependent code in your components ' + 'and ensure the props are the same client and server side:\n%s', difference) : invariant(false) : undefined;

							if ("development" !== 'production') {
								"development" !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : undefined;
							}
						}
					}

					!(container.nodeType !== DOC_NODE_TYPE) ? "development" !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but ' + 'you didn\'t use server rendering. We can\'t do this ' + 'without using server rendering due to cross-browser quirks. ' + 'See ReactDOMServer.renderToString() for server rendering.') : invariant(false) : undefined;

					if (transaction.useCreateElement) {
						while (container.lastChild) {
							container.removeChild(container.lastChild);
						}
						container.appendChild(markup);
					} else {
						setInnerHTML(container, markup);
					}
				},

				ownerDocumentContextKey: ownerDocumentContextKey,

				/**
				 * React ID utilities.
				 */

				getReactRootID: getReactRootID,

				getID: getID,

				setID: setID,

				getNode: getNode,

				getNodeFromInstance: getNodeFromInstance,

				isValid: isValid,

				purgeID: purgeID
			};

			ReactPerf.measureMethods(ReactMount, 'ReactMount', {
				_renderNewRootComponent: '_renderNewRootComponent',
				_mountImageIntoNode: '_mountImageIntoNode'
			});

			module.exports = ReactMount;
		}, { "10": 10, "132": 132, "138": 138, "141": 141, "144": 144, "150": 150, "154": 154, "161": 161, "173": 173, "24": 24, "28": 28, "39": 39, "44": 44, "57": 57, "60": 60, "67": 67, "68": 68, "71": 71, "78": 78, "84": 84, "95": 95, "96": 96 }], 73: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactMultiChild
			 * @typechecks static-only
			 */

			'use strict';

			var ReactComponentEnvironment = _dereq_(36);
			var ReactMultiChildUpdateTypes = _dereq_(74);

			var ReactCurrentOwner = _dereq_(39);
			var ReactReconciler = _dereq_(84);
			var ReactChildReconciler = _dereq_(31);

			var flattenChildren = _dereq_(123);

			/**
			 * Updating children of a component may trigger recursive updates. The depth is
			 * used to batch recursive updates to render markup more efficiently.
			 *
			 * @type {number}
			 * @private
			 */
			var updateDepth = 0;

			/**
			 * Queue of update configuration objects.
			 *
			 * Each object has a `type` property that is in `ReactMultiChildUpdateTypes`.
			 *
			 * @type {array<object>}
			 * @private
			 */
			var updateQueue = [];

			/**
			 * Queue of markup to be rendered.
			 *
			 * @type {array<string>}
			 * @private
			 */
			var markupQueue = [];

			/**
			 * Enqueues markup to be rendered and inserted at a supplied index.
			 *
			 * @param {string} parentID ID of the parent component.
			 * @param {string} markup Markup that renders into an element.
			 * @param {number} toIndex Destination index.
			 * @private
			 */
			function enqueueInsertMarkup(parentID, markup, toIndex) {
				// NOTE: Null values reduce hidden classes.
				updateQueue.push({
					parentID: parentID,
					parentNode: null,
					type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
					markupIndex: markupQueue.push(markup) - 1,
					content: null,
					fromIndex: null,
					toIndex: toIndex
				});
			}

			/**
			 * Enqueues moving an existing element to another index.
			 *
			 * @param {string} parentID ID of the parent component.
			 * @param {number} fromIndex Source index of the existing element.
			 * @param {number} toIndex Destination index of the element.
			 * @private
			 */
			function enqueueMove(parentID, fromIndex, toIndex) {
				// NOTE: Null values reduce hidden classes.
				updateQueue.push({
					parentID: parentID,
					parentNode: null,
					type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
					markupIndex: null,
					content: null,
					fromIndex: fromIndex,
					toIndex: toIndex
				});
			}

			/**
			 * Enqueues removing an element at an index.
			 *
			 * @param {string} parentID ID of the parent component.
			 * @param {number} fromIndex Index of the element to remove.
			 * @private
			 */
			function enqueueRemove(parentID, fromIndex) {
				// NOTE: Null values reduce hidden classes.
				updateQueue.push({
					parentID: parentID,
					parentNode: null,
					type: ReactMultiChildUpdateTypes.REMOVE_NODE,
					markupIndex: null,
					content: null,
					fromIndex: fromIndex,
					toIndex: null
				});
			}

			/**
			 * Enqueues setting the markup of a node.
			 *
			 * @param {string} parentID ID of the parent component.
			 * @param {string} markup Markup that renders into an element.
			 * @private
			 */
			function enqueueSetMarkup(parentID, markup) {
				// NOTE: Null values reduce hidden classes.
				updateQueue.push({
					parentID: parentID,
					parentNode: null,
					type: ReactMultiChildUpdateTypes.SET_MARKUP,
					markupIndex: null,
					content: markup,
					fromIndex: null,
					toIndex: null
				});
			}

			/**
			 * Enqueues setting the text content.
			 *
			 * @param {string} parentID ID of the parent component.
			 * @param {string} textContent Text content to set.
			 * @private
			 */
			function enqueueTextContent(parentID, textContent) {
				// NOTE: Null values reduce hidden classes.
				updateQueue.push({
					parentID: parentID,
					parentNode: null,
					type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
					markupIndex: null,
					content: textContent,
					fromIndex: null,
					toIndex: null
				});
			}

			/**
			 * Processes any enqueued updates.
			 *
			 * @private
			 */
			function processQueue() {
				if (updateQueue.length) {
					ReactComponentEnvironment.processChildrenUpdates(updateQueue, markupQueue);
					clearQueue();
				}
			}

			/**
			 * Clears any enqueued updates.
			 *
			 * @private
			 */
			function clearQueue() {
				updateQueue.length = 0;
				markupQueue.length = 0;
			}

			/**
			 * ReactMultiChild are capable of reconciling multiple children.
			 *
			 * @class ReactMultiChild
			 * @internal
			 */
			var ReactMultiChild = {

				/**
				 * Provides common functionality for components that must reconcile multiple
				 * children. This is used by `ReactDOMComponent` to mount, update, and
				 * unmount child components.
				 *
				 * @lends {ReactMultiChild.prototype}
				 */
				Mixin: {

					_reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
						if ("development" !== 'production') {
							if (this._currentElement) {
								try {
									ReactCurrentOwner.current = this._currentElement._owner;
									return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
								} finally {
									ReactCurrentOwner.current = null;
								}
							}
						}
						return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
					},

					_reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, transaction, context) {
						var nextChildren;
						if ("development" !== 'production') {
							if (this._currentElement) {
								try {
									ReactCurrentOwner.current = this._currentElement._owner;
									nextChildren = flattenChildren(nextNestedChildrenElements);
								} finally {
									ReactCurrentOwner.current = null;
								}
								return ReactChildReconciler.updateChildren(prevChildren, nextChildren, transaction, context);
							}
						}
						nextChildren = flattenChildren(nextNestedChildrenElements);
						return ReactChildReconciler.updateChildren(prevChildren, nextChildren, transaction, context);
					},

					/**
					 * Generates a "mount image" for each of the supplied children. In the case
					 * of `ReactDOMComponent`, a mount image is a string of markup.
					 *
					 * @param {?object} nestedChildren Nested child maps.
					 * @return {array} An array of mounted representations.
					 * @internal
					 */
					mountChildren: function (nestedChildren, transaction, context) {
						var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
						this._renderedChildren = children;
						var mountImages = [];
						var index = 0;
						for (var name in children) {
							if (children.hasOwnProperty(name)) {
								var child = children[name];
								// Inlined for performance, see `ReactInstanceHandles.createReactID`.
								var rootID = this._rootNodeID + name;
								var mountImage = ReactReconciler.mountComponent(child, rootID, transaction, context);
								child._mountIndex = index++;
								mountImages.push(mountImage);
							}
						}
						return mountImages;
					},

					/**
					 * Replaces any rendered children with a text content string.
					 *
					 * @param {string} nextContent String of content.
					 * @internal
					 */
					updateTextContent: function (nextContent) {
						updateDepth++;
						var errorThrown = true;
						try {
							var prevChildren = this._renderedChildren;
							// Remove any rendered children.
							ReactChildReconciler.unmountChildren(prevChildren);
							// TODO: The setTextContent operation should be enough
							for (var name in prevChildren) {
								if (prevChildren.hasOwnProperty(name)) {
									this._unmountChild(prevChildren[name]);
								}
							}
							// Set new text content.
							this.setTextContent(nextContent);
							errorThrown = false;
						} finally {
							updateDepth--;
							if (!updateDepth) {
								if (errorThrown) {
									clearQueue();
								} else {
									processQueue();
								}
							}
						}
					},

					/**
					 * Replaces any rendered children with a markup string.
					 *
					 * @param {string} nextMarkup String of markup.
					 * @internal
					 */
					updateMarkup: function (nextMarkup) {
						updateDepth++;
						var errorThrown = true;
						try {
							var prevChildren = this._renderedChildren;
							// Remove any rendered children.
							ReactChildReconciler.unmountChildren(prevChildren);
							for (var name in prevChildren) {
								if (prevChildren.hasOwnProperty(name)) {
									this._unmountChildByName(prevChildren[name], name);
								}
							}
							this.setMarkup(nextMarkup);
							errorThrown = false;
						} finally {
							updateDepth--;
							if (!updateDepth) {
								if (errorThrown) {
									clearQueue();
								} else {
									processQueue();
								}
							}
						}
					},

					/**
					 * Updates the rendered children with new children.
					 *
					 * @param {?object} nextNestedChildrenElements Nested child element maps.
					 * @param {ReactReconcileTransaction} transaction
					 * @internal
					 */
					updateChildren: function (nextNestedChildrenElements, transaction, context) {
						updateDepth++;
						var errorThrown = true;
						try {
							this._updateChildren(nextNestedChildrenElements, transaction, context);
							errorThrown = false;
						} finally {
							updateDepth--;
							if (!updateDepth) {
								if (errorThrown) {
									clearQueue();
								} else {
									processQueue();
								}
							}
						}
					},

					/**
					 * Improve performance by isolating this hot code path from the try/catch
					 * block in `updateChildren`.
					 *
					 * @param {?object} nextNestedChildrenElements Nested child element maps.
					 * @param {ReactReconcileTransaction} transaction
					 * @final
					 * @protected
					 */
					_updateChildren: function (nextNestedChildrenElements, transaction, context) {
						var prevChildren = this._renderedChildren;
						var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, transaction, context);
						this._renderedChildren = nextChildren;
						if (!nextChildren && !prevChildren) {
							return;
						}
						var name;
						// `nextIndex` will increment for each child in `nextChildren`, but
						// `lastIndex` will be the last index visited in `prevChildren`.
						var lastIndex = 0;
						var nextIndex = 0;
						for (name in nextChildren) {
							if (!nextChildren.hasOwnProperty(name)) {
								continue;
							}
							var prevChild = prevChildren && prevChildren[name];
							var nextChild = nextChildren[name];
							if (prevChild === nextChild) {
								this.moveChild(prevChild, nextIndex, lastIndex);
								lastIndex = Math.max(prevChild._mountIndex, lastIndex);
								prevChild._mountIndex = nextIndex;
							} else {
								if (prevChild) {
									// Update `lastIndex` before `_mountIndex` gets unset by unmounting.
									lastIndex = Math.max(prevChild._mountIndex, lastIndex);
									this._unmountChild(prevChild);
								}
								// The child must be instantiated before it's mounted.
								this._mountChildByNameAtIndex(nextChild, name, nextIndex, transaction, context);
							}
							nextIndex++;
						}
						// Remove children that are no longer present.
						for (name in prevChildren) {
							if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
								this._unmountChild(prevChildren[name]);
							}
						}
					},

					/**
					 * Unmounts all rendered children. This should be used to clean up children
					 * when this component is unmounted.
					 *
					 * @internal
					 */
					unmountChildren: function () {
						var renderedChildren = this._renderedChildren;
						ReactChildReconciler.unmountChildren(renderedChildren);
						this._renderedChildren = null;
					},

					/**
					 * Moves a child component to the supplied index.
					 *
					 * @param {ReactComponent} child Component to move.
					 * @param {number} toIndex Destination index of the element.
					 * @param {number} lastIndex Last index visited of the siblings of `child`.
					 * @protected
					 */
					moveChild: function (child, toIndex, lastIndex) {
						// If the index of `child` is less than `lastIndex`, then it needs to
						// be moved. Otherwise, we do not need to move it because a child will be
						// inserted or moved before `child`.
						if (child._mountIndex < lastIndex) {
							enqueueMove(this._rootNodeID, child._mountIndex, toIndex);
						}
					},

					/**
					 * Creates a child component.
					 *
					 * @param {ReactComponent} child Component to create.
					 * @param {string} mountImage Markup to insert.
					 * @protected
					 */
					createChild: function (child, mountImage) {
						enqueueInsertMarkup(this._rootNodeID, mountImage, child._mountIndex);
					},

					/**
					 * Removes a child component.
					 *
					 * @param {ReactComponent} child Child to remove.
					 * @protected
					 */
					removeChild: function (child) {
						enqueueRemove(this._rootNodeID, child._mountIndex);
					},

					/**
					 * Sets this text content string.
					 *
					 * @param {string} textContent Text content to set.
					 * @protected
					 */
					setTextContent: function (textContent) {
						enqueueTextContent(this._rootNodeID, textContent);
					},

					/**
					 * Sets this markup string.
					 *
					 * @param {string} markup Markup to set.
					 * @protected
					 */
					setMarkup: function (markup) {
						enqueueSetMarkup(this._rootNodeID, markup);
					},

					/**
					 * Mounts a child with the supplied name.
					 *
					 * NOTE: This is part of `updateChildren` and is here for readability.
					 *
					 * @param {ReactComponent} child Component to mount.
					 * @param {string} name Name of the child.
					 * @param {number} index Index at which to insert the child.
					 * @param {ReactReconcileTransaction} transaction
					 * @private
					 */
					_mountChildByNameAtIndex: function (child, name, index, transaction, context) {
						// Inlined for performance, see `ReactInstanceHandles.createReactID`.
						var rootID = this._rootNodeID + name;
						var mountImage = ReactReconciler.mountComponent(child, rootID, transaction, context);
						child._mountIndex = index;
						this.createChild(child, mountImage);
					},

					/**
					 * Unmounts a rendered child.
					 *
					 * NOTE: This is part of `updateChildren` and is here for readability.
					 *
					 * @param {ReactComponent} child Component to unmount.
					 * @private
					 */
					_unmountChild: function (child) {
						this.removeChild(child);
						child._mountIndex = null;
					}

				}

			};

			module.exports = ReactMultiChild;
		}, { "123": 123, "31": 31, "36": 36, "39": 39, "74": 74, "84": 84 }], 74: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactMultiChildUpdateTypes
			 */

			'use strict';

			var keyMirror = _dereq_(165);

			/**
			 * When a component's children are updated, a series of update configuration
			 * objects are created in order to batch and serialize the required changes.
			 *
			 * Enumerates all the possible types of update configurations.
			 *
			 * @internal
			 */
			var ReactMultiChildUpdateTypes = keyMirror({
				INSERT_MARKUP: null,
				MOVE_EXISTING: null,
				REMOVE_NODE: null,
				SET_MARKUP: null,
				TEXT_CONTENT: null
			});

			module.exports = ReactMultiChildUpdateTypes;
		}, { "165": 165 }], 75: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2014-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactNativeComponent
			 */

			'use strict';

			var assign = _dereq_(24);
			var invariant = _dereq_(161);

			var autoGenerateWrapperClass = null;
			var genericComponentClass = null;
			// This registry keeps track of wrapper classes around native tags.
			var tagToComponentClass = {};
			var textComponentClass = null;

			var ReactNativeComponentInjection = {
				// This accepts a class that receives the tag string. This is a catch all
				// that can render any kind of tag.
				injectGenericComponentClass: function (componentClass) {
					genericComponentClass = componentClass;
				},
				// This accepts a text component class that takes the text string to be
				// rendered as props.
				injectTextComponentClass: function (componentClass) {
					textComponentClass = componentClass;
				},
				// This accepts a keyed object with classes as values. Each key represents a
				// tag. That particular tag will use this class instead of the generic one.
				injectComponentClasses: function (componentClasses) {
					assign(tagToComponentClass, componentClasses);
				}
			};

			/**
			 * Get a composite component wrapper class for a specific tag.
			 *
			 * @param {ReactElement} element The tag for which to get the class.
			 * @return {function} The React class constructor function.
			 */
			function getComponentClassForElement(element) {
				if (typeof element.type === 'function') {
					return element.type;
				}
				var tag = element.type;
				var componentClass = tagToComponentClass[tag];
				if (componentClass == null) {
					tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);
				}
				return componentClass;
			}

			/**
			 * Get a native internal component class for a specific tag.
			 *
			 * @param {ReactElement} element The element to create.
			 * @return {function} The internal class constructor function.
			 */
			function createInternalComponent(element) {
				!genericComponentClass ? "development" !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : invariant(false) : undefined;
				return new genericComponentClass(element.type, element.props);
			}

			/**
			 * @param {ReactText} text
			 * @return {ReactComponent}
			 */
			function createInstanceForText(text) {
				return new textComponentClass(text);
			}

			/**
			 * @param {ReactComponent} component
			 * @return {boolean}
			 */
			function isTextComponent(component) {
				return component instanceof textComponentClass;
			}

			var ReactNativeComponent = {
				getComponentClassForElement: getComponentClassForElement,
				createInternalComponent: createInternalComponent,
				createInstanceForText: createInstanceForText,
				isTextComponent: isTextComponent,
				injection: ReactNativeComponentInjection
			};

			module.exports = ReactNativeComponent;
		}, { "161": 161, "24": 24 }], 76: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactNoopUpdateQueue
			 */

			'use strict';

			var warning = _dereq_(173);

			function warnTDZ(publicInstance, callerName) {
				if ("development" !== 'production') {
					"development" !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor && publicInstance.constructor.displayName || '') : undefined;
				}
			}

			/**
			 * This is the abstract API for an update queue.
			 */
			var ReactNoopUpdateQueue = {

				/**
				 * Checks whether or not this composite component is mounted.
				 * @param {ReactClass} publicInstance The instance we want to test.
				 * @return {boolean} True if mounted, false otherwise.
				 * @protected
				 * @final
				 */
				isMounted: function (publicInstance) {
					return false;
				},

				/**
				 * Enqueue a callback that will be executed after all the pending updates
				 * have processed.
				 *
				 * @param {ReactClass} publicInstance The instance to use as `this` context.
				 * @param {?function} callback Called after state is updated.
				 * @internal
				 */
				enqueueCallback: function (publicInstance, callback) { },

				/**
				 * Forces an update. This should only be invoked when it is known with
				 * certainty that we are **not** in a DOM transaction.
				 *
				 * You may want to call this when you know that some deeper aspect of the
				 * component's state has changed but `setState` was not called.
				 *
				 * This will not invoke `shouldComponentUpdate`, but it will invoke
				 * `componentWillUpdate` and `componentDidUpdate`.
				 *
				 * @param {ReactClass} publicInstance The instance that should rerender.
				 * @internal
				 */
				enqueueForceUpdate: function (publicInstance) {
					warnTDZ(publicInstance, 'forceUpdate');
				},

				/**
				 * Replaces all of the state. Always use this or `setState` to mutate state.
				 * You should treat `this.state` as immutable.
				 *
				 * There is no guarantee that `this.state` will be immediately updated, so
				 * accessing `this.state` after calling this method may return the old value.
				 *
				 * @param {ReactClass} publicInstance The instance that should rerender.
				 * @param {object} completeState Next state.
				 * @internal
				 */
				enqueueReplaceState: function (publicInstance, completeState) {
					warnTDZ(publicInstance, 'replaceState');
				},

				/**
				 * Sets a subset of the state. This only exists because _pendingState is
				 * internal. This provides a merging strategy that is not available to deep
				 * properties which is confusing. TODO: Expose pendingState or don't use it
				 * during the merge.
				 *
				 * @param {ReactClass} publicInstance The instance that should rerender.
				 * @param {object} partialState Next partial state to be merged with state.
				 * @internal
				 */
				enqueueSetState: function (publicInstance, partialState) {
					warnTDZ(publicInstance, 'setState');
				},

				/**
				 * Sets a subset of the props.
				 *
				 * @param {ReactClass} publicInstance The instance that should rerender.
				 * @param {object} partialProps Subset of the next props.
				 * @internal
				 */
				enqueueSetProps: function (publicInstance, partialProps) {
					warnTDZ(publicInstance, 'setProps');
				},

				/**
				 * Replaces all of the props.
				 *
				 * @param {ReactClass} publicInstance The instance that should rerender.
				 * @param {object} props New props.
				 * @internal
				 */
				enqueueReplaceProps: function (publicInstance, props) {
					warnTDZ(publicInstance, 'replaceProps');
				}

			};

			module.exports = ReactNoopUpdateQueue;
		}, { "173": 173 }], 77: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactOwner
			 */

			'use strict';

			var invariant = _dereq_(161);

			/**
			 * ReactOwners are capable of storing references to owned components.
			 *
			 * All components are capable of //being// referenced by owner components, but
			 * only ReactOwner components are capable of //referencing// owned components.
			 * The named reference is known as a "ref".
			 *
			 * Refs are available when mounted and updated during reconciliation.
			 *
			 *   var MyComponent = React.createClass({
			 *     render: function() {
			 *       return (
			 *         <div onClick={this.handleClick}>
			 *           <CustomComponent ref="custom" />
			 *         </div>
			 *       );
			 *     },
			 *     handleClick: function() {
			 *       this.refs.custom.handleClick();
			 *     },
			 *     componentDidMount: function() {
			 *       this.refs.custom.initialize();
			 *     }
			 *   });
			 *
			 * Refs should rarely be used. When refs are used, they should only be done to
			 * control data that is not handled by React's data flow.
			 *
			 * @class ReactOwner
			 */
			var ReactOwner = {

				/**
				 * @param {?object} object
				 * @return {boolean} True if `object` is a valid owner.
				 * @final
				 */
				isValidOwner: function (object) {
					return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
				},

				/**
				 * Adds a component by ref to an owner component.
				 *
				 * @param {ReactComponent} component Component to reference.
				 * @param {string} ref Name by which to refer to the component.
				 * @param {ReactOwner} owner Component on which to record the ref.
				 * @final
				 * @internal
				 */
				addComponentAsRefTo: function (component, ref, owner) {
					!ReactOwner.isValidOwner(owner) ? "development" !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might ' + 'be adding a ref to a component that was not created inside a component\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : undefined;
					owner.attachRef(ref, component);
				},

				/**
				 * Removes a component by ref from an owner component.
				 *
				 * @param {ReactComponent} component Component to dereference.
				 * @param {string} ref Name of the ref to remove.
				 * @param {ReactOwner} owner Component on which the ref is recorded.
				 * @final
				 * @internal
				 */
				removeComponentAsRefFrom: function (component, ref, owner) {
					!ReactOwner.isValidOwner(owner) ? "development" !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might ' + 'be removing a ref to a component that was not created inside a component\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : undefined;
					// Check that `component` is still the current ref because we do not want to
					// detach the ref if another component stole it.
					if (owner.getPublicInstance().refs[ref] === component.getPublicInstance()) {
						owner.detachRef(ref);
					}
				}

			};

			module.exports = ReactOwner;
		}, { "161": 161 }], 78: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactPerf
			 * @typechecks static-only
			 */

			'use strict';

			/**
			 * ReactPerf is a general AOP system designed to measure performance. This
			 * module only has the hooks: see ReactDefaultPerf for the analysis tool.
			 */
			var ReactPerf = {
				/**
				 * Boolean to enable/disable measurement. Set to false by default to prevent
				 * accidental logging and perf loss.
				 */
				enableMeasure: false,

				/**
				 * Holds onto the measure function in use. By default, don't measure
				 * anything, but we'll override this if we inject a measure function.
				 */
				storedMeasure: _noMeasure,

				/**
				 * @param {object} object
				 * @param {string} objectName
				 * @param {object<string>} methodNames
				 */
				measureMethods: function (object, objectName, methodNames) {
					if ("development" !== 'production') {
						for (var key in methodNames) {
							if (!methodNames.hasOwnProperty(key)) {
								continue;
							}
							object[key] = ReactPerf.measure(objectName, methodNames[key], object[key]);
						}
					}
				},

				/**
				 * Use this to wrap methods you want to measure. Zero overhead in production.
				 *
				 * @param {string} objName
				 * @param {string} fnName
				 * @param {function} func
				 * @return {function}
				 */
				measure: function (objName, fnName, func) {
					if ("development" !== 'production') {
						var measuredFunc = null;
						var wrapper = function () {
							if (ReactPerf.enableMeasure) {
								if (!measuredFunc) {
									measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);
								}
								return measuredFunc.apply(this, arguments);
							}
							return func.apply(this, arguments);
						};
						wrapper.displayName = objName + '_' + fnName;
						return wrapper;
					}
					return func;
				},

				injection: {
					/**
					 * @param {function} measure
					 */
					injectMeasure: function (measure) {
						ReactPerf.storedMeasure = measure;
					}
				}
			};

			/**
			 * Simply passes through the measured function, without measuring it.
			 *
			 * @param {string} objName
			 * @param {string} fnName
			 * @param {function} func
			 * @return {function}
			 */
			function _noMeasure(objName, fnName, func) {
				return func;
			}

			module.exports = ReactPerf;
		}, {}], 79: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactPropTransferer
			 */

			'use strict';

			var assign = _dereq_(24);
			var emptyFunction = _dereq_(153);
			var joinClasses = _dereq_(164);

			/**
			 * Creates a transfer strategy that will merge prop values using the supplied
			 * `mergeStrategy`. If a prop was previously unset, this just sets it.
			 *
			 * @param {function} mergeStrategy
			 * @return {function}
			 */
			function createTransferStrategy(mergeStrategy) {
				return function (props, key, value) {
					if (!props.hasOwnProperty(key)) {
						props[key] = value;
					} else {
						props[key] = mergeStrategy(props[key], value);
					}
				};
			}

			var transferStrategyMerge = createTransferStrategy(function (a, b) {
				// `merge` overrides the first object's (`props[key]` above) keys using the
				// second object's (`value`) keys. An object's style's existing `propA` would
				// get overridden. Flip the order here.
				return assign({}, b, a);
			});

			/**
			 * Transfer strategies dictate how props are transferred by `transferPropsTo`.
			 * NOTE: if you add any more exceptions to this list you should be sure to
			 * update `cloneWithProps()` accordingly.
			 */
			var TransferStrategies = {
				/**
				 * Never transfer `children`.
				 */
				children: emptyFunction,
				/**
				 * Transfer the `className` prop by merging them.
				 */
				className: createTransferStrategy(joinClasses),
				/**
				 * Transfer the `style` prop (which is an object) by merging them.
				 */
				style: transferStrategyMerge
			};

			/**
			 * Mutates the first argument by transferring the properties from the second
			 * argument.
			 *
			 * @param {object} props
			 * @param {object} newProps
			 * @return {object}
			 */
			function transferInto(props, newProps) {
				for (var thisKey in newProps) {
					if (!newProps.hasOwnProperty(thisKey)) {
						continue;
					}

					var transferStrategy = TransferStrategies[thisKey];

					if (transferStrategy && TransferStrategies.hasOwnProperty(thisKey)) {
						transferStrategy(props, thisKey, newProps[thisKey]);
					} else if (!props.hasOwnProperty(thisKey)) {
						props[thisKey] = newProps[thisKey];
					}
				}
				return props;
			}

			/**
			 * ReactPropTransferer are capable of transferring props to another component
			 * using a `transferPropsTo` method.
			 *
			 * @class ReactPropTransferer
			 */
			var ReactPropTransferer = {

				/**
				 * Merge two props objects using TransferStrategies.
				 *
				 * @param {object} oldProps original props (they take precedence)
				 * @param {object} newProps new props to merge in
				 * @return {object} a new object containing both sets of props merged.
				 */
				mergeProps: function (oldProps, newProps) {
					return transferInto(assign({}, oldProps), newProps);
				}

			};

			module.exports = ReactPropTransferer;
		}, { "153": 153, "164": 164, "24": 24 }], 80: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactPropTypeLocationNames
			 */

			'use strict';

			var ReactPropTypeLocationNames = {};

			if ("development" !== 'production') {
				ReactPropTypeLocationNames = {
					prop: 'prop',
					context: 'context',
					childContext: 'child context'
				};
			}

			module.exports = ReactPropTypeLocationNames;
		}, {}], 81: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactPropTypeLocations
			 */

			'use strict';

			var keyMirror = _dereq_(165);

			var ReactPropTypeLocations = keyMirror({
				prop: null,
				context: null,
				childContext: null
			});

			module.exports = ReactPropTypeLocations;
		}, { "165": 165 }], 82: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactPropTypes
			 */

			'use strict';

			var ReactElement = _dereq_(57);
			var ReactPropTypeLocationNames = _dereq_(80);

			var emptyFunction = _dereq_(153);
			var getIteratorFn = _dereq_(129);

			/**
			 * Collection of methods that allow declaration and validation of props that are
			 * supplied to React components. Example usage:
			 *
			 *   var Props = require('ReactPropTypes');
			 *   var MyArticle = React.createClass({
			 *     propTypes: {
			 *       // An optional string prop named "description".
			 *       description: Props.string,
			 *
			 *       // A required enum prop named "category".
			 *       category: Props.oneOf(['News','Photos']).isRequired,
			 *
			 *       // A prop named "dialog" that requires an instance of Dialog.
			 *       dialog: Props.instanceOf(Dialog).isRequired
			 *     },
			 *     render: function() { ... }
			 *   });
			 *
			 * A more formal specification of how these methods are used:
			 *
			 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
			 *   decl := ReactPropTypes.{type}(.isRequired)?
			 *
			 * Each and every declaration produces a function with the same signature. This
			 * allows the creation of custom validation functions. For example:
			 *
			 *  var MyLink = React.createClass({
			 *    propTypes: {
			 *      // An optional string or URI prop named "href".
			 *      href: function(props, propName, componentName) {
			 *        var propValue = props[propName];
			 *        if (propValue != null && typeof propValue !== 'string' &&
			 *            !(propValue instanceof URI)) {
			 *          return new Error(
			 *            'Expected a string or an URI for ' + propName + ' in ' +
			 *            componentName
			 *          );
			 *        }
			 *      }
			 *    },
			 *    render: function() {...}
			 *  });
			 *
			 * @internal
			 */

			var ANONYMOUS = '<<anonymous>>';

			var ReactPropTypes = {
				array: createPrimitiveTypeChecker('array'),
				bool: createPrimitiveTypeChecker('boolean'),
				func: createPrimitiveTypeChecker('function'),
				number: createPrimitiveTypeChecker('number'),
				object: createPrimitiveTypeChecker('object'),
				string: createPrimitiveTypeChecker('string'),

				any: createAnyTypeChecker(),
				arrayOf: createArrayOfTypeChecker,
				element: createElementTypeChecker(),
				instanceOf: createInstanceTypeChecker,
				node: createNodeChecker(),
				objectOf: createObjectOfTypeChecker,
				oneOf: createEnumTypeChecker,
				oneOfType: createUnionTypeChecker,
				shape: createShapeTypeChecker
			};

			function createChainableTypeChecker(validate) {
				function checkType(isRequired, props, propName, componentName, location, propFullName) {
					componentName = componentName || ANONYMOUS;
					propFullName = propFullName || propName;
					if (props[propName] == null) {
						var locationName = ReactPropTypeLocationNames[location];
						if (isRequired) {
							return new Error('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));
						}
						return null;
					} else {
						return validate(props, propName, componentName, location, propFullName);
					}
				}

				var chainedCheckType = checkType.bind(null, false);
				chainedCheckType.isRequired = checkType.bind(null, true);

				return chainedCheckType;
			}

			function createPrimitiveTypeChecker(expectedType) {
				function validate(props, propName, componentName, location, propFullName) {
					var propValue = props[propName];
					var propType = getPropType(propValue);
					if (propType !== expectedType) {
						var locationName = ReactPropTypeLocationNames[location];
						// `propValue` being instance of, say, date/regexp, pass the 'object'
						// check, but we can offer a more precise error message here rather than
						// 'of type `object`'.
						var preciseType = getPreciseType(propValue);

						return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
					}
					return null;
				}
				return createChainableTypeChecker(validate);
			}

			function createAnyTypeChecker() {
				return createChainableTypeChecker(emptyFunction.thatReturns(null));
			}

			function createArrayOfTypeChecker(typeChecker) {
				function validate(props, propName, componentName, location, propFullName) {
					var propValue = props[propName];
					if (!Array.isArray(propValue)) {
						var locationName = ReactPropTypeLocationNames[location];
						var propType = getPropType(propValue);
						return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
					}
					for (var i = 0; i < propValue.length; i++) {
						var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']');
						if (error instanceof Error) {
							return error;
						}
					}
					return null;
				}
				return createChainableTypeChecker(validate);
			}

			function createElementTypeChecker() {
				function validate(props, propName, componentName, location, propFullName) {
					if (!ReactElement.isValidElement(props[propName])) {
						var locationName = ReactPropTypeLocationNames[location];
						return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a single ReactElement.'));
					}
					return null;
				}
				return createChainableTypeChecker(validate);
			}

			function createInstanceTypeChecker(expectedClass) {
				function validate(props, propName, componentName, location, propFullName) {
					if (!(props[propName] instanceof expectedClass)) {
						var locationName = ReactPropTypeLocationNames[location];
						var expectedClassName = expectedClass.name || ANONYMOUS;
						var actualClassName = getClassName(props[propName]);
						return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
					}
					return null;
				}
				return createChainableTypeChecker(validate);
			}

			function createEnumTypeChecker(expectedValues) {
				if (!Array.isArray(expectedValues)) {
					return createChainableTypeChecker(function () {
						return new Error('Invalid argument supplied to oneOf, expected an instance of array.');
					});
				}

				function validate(props, propName, componentName, location, propFullName) {
					var propValue = props[propName];
					for (var i = 0; i < expectedValues.length; i++) {
						if (propValue === expectedValues[i]) {
							return null;
						}
					}

					var locationName = ReactPropTypeLocationNames[location];
					var valuesString = JSON.stringify(expectedValues);
					return new Error('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
				}
				return createChainableTypeChecker(validate);
			}

			function createObjectOfTypeChecker(typeChecker) {
				function validate(props, propName, componentName, location, propFullName) {
					var propValue = props[propName];
					var propType = getPropType(propValue);
					if (propType !== 'object') {
						var locationName = ReactPropTypeLocationNames[location];
						return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
					}
					for (var key in propValue) {
						if (propValue.hasOwnProperty(key)) {
							var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key);
							if (error instanceof Error) {
								return error;
							}
						}
					}
					return null;
				}
				return createChainableTypeChecker(validate);
			}

			function createUnionTypeChecker(arrayOfTypeCheckers) {
				if (!Array.isArray(arrayOfTypeCheckers)) {
					return createChainableTypeChecker(function () {
						return new Error('Invalid argument supplied to oneOfType, expected an instance of array.');
					});
				}

				function validate(props, propName, componentName, location, propFullName) {
					for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
						var checker = arrayOfTypeCheckers[i];
						if (checker(props, propName, componentName, location, propFullName) == null) {
							return null;
						}
					}

					var locationName = ReactPropTypeLocationNames[location];
					return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
				}
				return createChainableTypeChecker(validate);
			}

			function createNodeChecker() {
				function validate(props, propName, componentName, location, propFullName) {
					if (!isNode(props[propName])) {
						var locationName = ReactPropTypeLocationNames[location];
						return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
					}
					return null;
				}
				return createChainableTypeChecker(validate);
			}

			function createShapeTypeChecker(shapeTypes) {
				function validate(props, propName, componentName, location, propFullName) {
					var propValue = props[propName];
					var propType = getPropType(propValue);
					if (propType !== 'object') {
						var locationName = ReactPropTypeLocationNames[location];
						return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
					}
					for (var key in shapeTypes) {
						var checker = shapeTypes[key];
						if (!checker) {
							continue;
						}
						var error = checker(propValue, key, componentName, location, propFullName + '.' + key);
						if (error) {
							return error;
						}
					}
					return null;
				}
				return createChainableTypeChecker(validate);
			}

			function isNode(propValue) {
				switch (typeof propValue) {
					case 'number':
					case 'string':
					case 'undefined':
						return true;
					case 'boolean':
						return !propValue;
					case 'object':
						if (Array.isArray(propValue)) {
							return propValue.every(isNode);
						}
						if (propValue === null || ReactElement.isValidElement(propValue)) {
							return true;
						}

						var iteratorFn = getIteratorFn(propValue);
						if (iteratorFn) {
							var iterator = iteratorFn.call(propValue);
							var step;
							if (iteratorFn !== propValue.entries) {
								while (!(step = iterator.next()).done) {
									if (!isNode(step.value)) {
										return false;
									}
								}
							} else {
								// Iterator will provide entry [k,v] tuples rather than values.
								while (!(step = iterator.next()).done) {
									var entry = step.value;
									if (entry) {
										if (!isNode(entry[1])) {
											return false;
										}
									}
								}
							}
						} else {
							return false;
						}

						return true;
					default:
						return false;
				}
			}

			// Equivalent of `typeof` but with special handling for array and regexp.
			function getPropType(propValue) {
				var propType = typeof propValue;
				if (Array.isArray(propValue)) {
					return 'array';
				}
				if (propValue instanceof RegExp) {
					// Old webkits (at least until Android 4.0) return 'function' rather than
					// 'object' for typeof a RegExp. We'll normalize this here so that /bla/
					// passes PropTypes.object.
					return 'object';
				}
				return propType;
			}

			// This handles more types than `getPropType`. Only used for error messages.
			// See `createPrimitiveTypeChecker`.
			function getPreciseType(propValue) {
				var propType = getPropType(propValue);
				if (propType === 'object') {
					if (propValue instanceof Date) {
						return 'date';
					} else if (propValue instanceof RegExp) {
						return 'regexp';
					}
				}
				return propType;
			}

			// Returns class name of the object, if any.
			function getClassName(propValue) {
				if (!propValue.constructor || !propValue.constructor.name) {
					return '<<anonymous>>';
				}
				return propValue.constructor.name;
			}

			module.exports = ReactPropTypes;
		}, { "129": 129, "153": 153, "57": 57, "80": 80 }], 83: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactReconcileTransaction
			 * @typechecks static-only
			 */

			'use strict';

			var CallbackQueue = _dereq_(6);
			var PooledClass = _dereq_(25);
			var ReactBrowserEventEmitter = _dereq_(28);
			var ReactDOMFeatureFlags = _dereq_(44);
			var ReactInputSelection = _dereq_(66);
			var Transaction = _dereq_(113);

			var assign = _dereq_(24);

			/**
			 * Ensures that, when possible, the selection range (currently selected text
			 * input) is not disturbed by performing the transaction.
			 */
			var SELECTION_RESTORATION = {
				/**
				 * @return {Selection} Selection information.
				 */
				initialize: ReactInputSelection.getSelectionInformation,
				/**
				 * @param {Selection} sel Selection information returned from `initialize`.
				 */
				close: ReactInputSelection.restoreSelection
			};

			/**
			 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
			 * high level DOM manipulations (like temporarily removing a text input from the
			 * DOM).
			 */
			var EVENT_SUPPRESSION = {
				/**
				 * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
				 * the reconciliation.
				 */
				initialize: function () {
					var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
					ReactBrowserEventEmitter.setEnabled(false);
					return currentlyEnabled;
				},

				/**
				 * @param {boolean} previouslyEnabled Enabled status of
				 *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
				 *   restores the previous value.
				 */
				close: function (previouslyEnabled) {
					ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
				}
			};

			/**
			 * Provides a queue for collecting `componentDidMount` and
			 * `componentDidUpdate` callbacks during the the transaction.
			 */
			var ON_DOM_READY_QUEUEING = {
				/**
				 * Initializes the internal `onDOMReady` queue.
				 */
				initialize: function () {
					this.reactMountReady.reset();
				},

				/**
				 * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
				 */
				close: function () {
					this.reactMountReady.notifyAll();
				}
			};

			/**
			 * Executed within the scope of the `Transaction` instance. Consider these as
			 * being member methods, but with an implied ordering while being isolated from
			 * each other.
			 */
			var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];

			/**
			 * Currently:
			 * - The order that these are listed in the transaction is critical:
			 * - Suppresses events.
			 * - Restores selection range.
			 *
			 * Future:
			 * - Restore document/overflow scroll positions that were unintentionally
			 *   modified via DOM insertions above the top viewport boundary.
			 * - Implement/integrate with customized constraint based layout system and keep
			 *   track of which dimensions must be remeasured.
			 *
			 * @class ReactReconcileTransaction
			 */
			function ReactReconcileTransaction(forceHTML) {
				this.reinitializeTransaction();
				// Only server-side rendering really needs this option (see
				// `ReactServerRendering`), but server-side uses
				// `ReactServerRenderingTransaction` instead. This option is here so that it's
				// accessible and defaults to false when `ReactDOMComponent` and
				// `ReactTextComponent` checks it in `mountComponent`.`
				this.renderToStaticMarkup = false;
				this.reactMountReady = CallbackQueue.getPooled(null);
				this.useCreateElement = !forceHTML && ReactDOMFeatureFlags.useCreateElement;
			}

			var Mixin = {
				/**
				 * @see Transaction
				 * @abstract
				 * @final
				 * @return {array<object>} List of operation wrap procedures.
				 *   TODO: convert to array<TransactionWrapper>
				 */
				getTransactionWrappers: function () {
					return TRANSACTION_WRAPPERS;
				},

				/**
				 * @return {object} The queue to collect `onDOMReady` callbacks with.
				 */
				getReactMountReady: function () {
					return this.reactMountReady;
				},

				/**
				 * `PooledClass` looks for this, and will invoke this before allowing this
				 * instance to be reused.
				 */
				destructor: function () {
					CallbackQueue.release(this.reactMountReady);
					this.reactMountReady = null;
				}
			};

			assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);

			PooledClass.addPoolingTo(ReactReconcileTransaction);

			module.exports = ReactReconcileTransaction;
		}, { "113": 113, "24": 24, "25": 25, "28": 28, "44": 44, "6": 6, "66": 66 }], 84: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactReconciler
			 */

			'use strict';

			var ReactRef = _dereq_(85);

			/**
			 * Helper to call ReactRef.attachRefs with this composite component, split out
			 * to avoid allocations in the transaction mount-ready queue.
			 */
			function attachRefs() {
				ReactRef.attachRefs(this, this._currentElement);
			}

			var ReactReconciler = {

				/**
				 * Initializes the component, renders markup, and registers event listeners.
				 *
				 * @param {ReactComponent} internalInstance
				 * @param {string} rootID DOM ID of the root node.
				 * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
				 * @return {?string} Rendered markup to be inserted into the DOM.
				 * @final
				 * @internal
				 */
				mountComponent: function (internalInstance, rootID, transaction, context) {
					var markup = internalInstance.mountComponent(rootID, transaction, context);
					if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
						transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
					}
					return markup;
				},

				/**
				 * Releases any resources allocated by `mountComponent`.
				 *
				 * @final
				 * @internal
				 */
				unmountComponent: function (internalInstance) {
					ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
					internalInstance.unmountComponent();
				},

				/**
				 * Update a component using a new element.
				 *
				 * @param {ReactComponent} internalInstance
				 * @param {ReactElement} nextElement
				 * @param {ReactReconcileTransaction} transaction
				 * @param {object} context
				 * @internal
				 */
				receiveComponent: function (internalInstance, nextElement, transaction, context) {
					var prevElement = internalInstance._currentElement;

					if (nextElement === prevElement && context === internalInstance._context) {
						// Since elements are immutable after the owner is rendered,
						// we can do a cheap identity compare here to determine if this is a
						// superfluous reconcile. It's possible for state to be mutable but such
						// change should trigger an update of the owner which would recreate
						// the element. We explicitly check for the existence of an owner since
						// it's possible for an element created outside a composite to be
						// deeply mutated and reused.

						// TODO: Bailing out early is just a perf optimization right?
						// TODO: Removing the return statement should affect correctness?
						return;
					}

					var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

					if (refsChanged) {
						ReactRef.detachRefs(internalInstance, prevElement);
					}

					internalInstance.receiveComponent(nextElement, transaction, context);

					if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
						transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
					}
				},

				/**
				 * Flush any dirty changes in a component.
				 *
				 * @param {ReactComponent} internalInstance
				 * @param {ReactReconcileTransaction} transaction
				 * @internal
				 */
				performUpdateIfNecessary: function (internalInstance, transaction) {
					internalInstance.performUpdateIfNecessary(transaction);
				}

			};

			module.exports = ReactReconciler;
		}, { "85": 85 }], 85: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactRef
			 */

			'use strict';

			var ReactOwner = _dereq_(77);

			var ReactRef = {};

			function attachRef(ref, component, owner) {
				if (typeof ref === 'function') {
					ref(component.getPublicInstance());
				} else {
					// Legacy ref
					ReactOwner.addComponentAsRefTo(component, ref, owner);
				}
			}

			function detachRef(ref, component, owner) {
				if (typeof ref === 'function') {
					ref(null);
				} else {
					// Legacy ref
					ReactOwner.removeComponentAsRefFrom(component, ref, owner);
				}
			}

			ReactRef.attachRefs = function (instance, element) {
				if (element === null || element === false) {
					return;
				}
				var ref = element.ref;
				if (ref != null) {
					attachRef(ref, instance, element._owner);
				}
			};

			ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
				// If either the owner or a `ref` has changed, make sure the newest owner
				// has stored a reference to `this`, and the previous owner (if different)
				// has forgotten the reference to `this`. We use the element instead
				// of the public this.props because the post processing cannot determine
				// a ref. The ref conceptually lives on the element.

				// TODO: Should this even be possible? The owner cannot change because
				// it's forbidden by shouldUpdateReactComponent. The ref can change
				// if you swap the keys of but not the refs. Reconsider where this check
				// is made. It probably belongs where the key checking and
				// instantiateReactComponent is done.

				var prevEmpty = prevElement === null || prevElement === false;
				var nextEmpty = nextElement === null || nextElement === false;

				return (
				  // This has a few false positives w/r/t empty components.
				  prevEmpty || nextEmpty || nextElement._owner !== prevElement._owner || nextElement.ref !== prevElement.ref
				);
			};

			ReactRef.detachRefs = function (instance, element) {
				if (element === null || element === false) {
					return;
				}
				var ref = element.ref;
				if (ref != null) {
					detachRef(ref, instance, element._owner);
				}
			};

			module.exports = ReactRef;
		}, { "77": 77 }], 86: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactRootIndex
			 * @typechecks
			 */

			'use strict';

			var ReactRootIndexInjection = {
				/**
				 * @param {function} _createReactRootIndex
				 */
				injectCreateReactRootIndex: function (_createReactRootIndex) {
					ReactRootIndex.createReactRootIndex = _createReactRootIndex;
				}
			};

			var ReactRootIndex = {
				createReactRootIndex: null,
				injection: ReactRootIndexInjection
			};

			module.exports = ReactRootIndex;
		}, {}], 87: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2014-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactServerBatchingStrategy
			 * @typechecks
			 */

			'use strict';

			var ReactServerBatchingStrategy = {
				isBatchingUpdates: false,
				batchedUpdates: function (callback) {
					// Don't do anything here. During the server rendering we don't want to
					// schedule any updates. We will simply ignore them.
				}
			};

			module.exports = ReactServerBatchingStrategy;
		}, {}], 88: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @typechecks static-only
			 * @providesModule ReactServerRendering
			 */
			'use strict';

			var ReactDefaultBatchingStrategy = _dereq_(53);
			var ReactElement = _dereq_(57);
			var ReactInstanceHandles = _dereq_(67);
			var ReactMarkupChecksum = _dereq_(71);
			var ReactServerBatchingStrategy = _dereq_(87);
			var ReactServerRenderingTransaction = _dereq_(89);
			var ReactUpdates = _dereq_(96);

			var emptyObject = _dereq_(154);
			var instantiateReactComponent = _dereq_(132);
			var invariant = _dereq_(161);

			/**
			 * @param {ReactElement} element
			 * @return {string} the HTML markup
			 */
			function renderToString(element) {
				!ReactElement.isValidElement(element) ? "development" !== 'production' ? invariant(false, 'renderToString(): You must pass a valid ReactElement.') : invariant(false) : undefined;

				var transaction;
				try {
					ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);

					var id = ReactInstanceHandles.createReactRootID();
					transaction = ReactServerRenderingTransaction.getPooled(false);

					return transaction.perform(function () {
						var componentInstance = instantiateReactComponent(element, null);
						var markup = componentInstance.mountComponent(id, transaction, emptyObject);
						return ReactMarkupChecksum.addChecksumToMarkup(markup);
					}, null);
				} finally {
					ReactServerRenderingTransaction.release(transaction);
					// Revert to the DOM batching strategy since these two renderers
					// currently share these stateful modules.
					ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);
				}
			}

			/**
			 * @param {ReactElement} element
			 * @return {string} the HTML markup, without the extra React ID and checksum
			 * (for generating static pages)
			 */
			function renderToStaticMarkup(element) {
				!ReactElement.isValidElement(element) ? "development" !== 'production' ? invariant(false, 'renderToStaticMarkup(): You must pass a valid ReactElement.') : invariant(false) : undefined;

				var transaction;
				try {
					ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);

					var id = ReactInstanceHandles.createReactRootID();
					transaction = ReactServerRenderingTransaction.getPooled(true);

					return transaction.perform(function () {
						var componentInstance = instantiateReactComponent(element, null);
						return componentInstance.mountComponent(id, transaction, emptyObject);
					}, null);
				} finally {
					ReactServerRenderingTransaction.release(transaction);
					// Revert to the DOM batching strategy since these two renderers
					// currently share these stateful modules.
					ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);
				}
			}

			module.exports = {
				renderToString: renderToString,
				renderToStaticMarkup: renderToStaticMarkup
			};
		}, { "132": 132, "154": 154, "161": 161, "53": 53, "57": 57, "67": 67, "71": 71, "87": 87, "89": 89, "96": 96 }], 89: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2014-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactServerRenderingTransaction
			 * @typechecks
			 */

			'use strict';

			var PooledClass = _dereq_(25);
			var CallbackQueue = _dereq_(6);
			var Transaction = _dereq_(113);

			var assign = _dereq_(24);
			var emptyFunction = _dereq_(153);

			/**
			 * Provides a `CallbackQueue` queue for collecting `onDOMReady` callbacks
			 * during the performing of the transaction.
			 */
			var ON_DOM_READY_QUEUEING = {
				/**
				 * Initializes the internal `onDOMReady` queue.
				 */
				initialize: function () {
					this.reactMountReady.reset();
				},

				close: emptyFunction
			};

			/**
			 * Executed within the scope of the `Transaction` instance. Consider these as
			 * being member methods, but with an implied ordering while being isolated from
			 * each other.
			 */
			var TRANSACTION_WRAPPERS = [ON_DOM_READY_QUEUEING];

			/**
			 * @class ReactServerRenderingTransaction
			 * @param {boolean} renderToStaticMarkup
			 */
			function ReactServerRenderingTransaction(renderToStaticMarkup) {
				this.reinitializeTransaction();
				this.renderToStaticMarkup = renderToStaticMarkup;
				this.reactMountReady = CallbackQueue.getPooled(null);
				this.useCreateElement = false;
			}

			var Mixin = {
				/**
				 * @see Transaction
				 * @abstract
				 * @final
				 * @return {array} Empty list of operation wrap procedures.
				 */
				getTransactionWrappers: function () {
					return TRANSACTION_WRAPPERS;
				},

				/**
				 * @return {object} The queue to collect `onDOMReady` callbacks with.
				 */
				getReactMountReady: function () {
					return this.reactMountReady;
				},

				/**
				 * `PooledClass` looks for this, and will invoke this before allowing this
				 * instance to be reused.
				 */
				destructor: function () {
					CallbackQueue.release(this.reactMountReady);
					this.reactMountReady = null;
				}
			};

			assign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);

			PooledClass.addPoolingTo(ReactServerRenderingTransaction);

			module.exports = ReactServerRenderingTransaction;
		}, { "113": 113, "153": 153, "24": 24, "25": 25, "6": 6 }], 90: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactStateSetters
			 */

			'use strict';

			var ReactStateSetters = {
				/**
				 * Returns a function that calls the provided function, and uses the result
				 * of that to set the component's state.
				 *
				 * @param {ReactCompositeComponent} component
				 * @param {function} funcReturningState Returned callback uses this to
				 *                                      determine how to update state.
				 * @return {function} callback that when invoked uses funcReturningState to
				 *                    determined the object literal to setState.
				 */
				createStateSetter: function (component, funcReturningState) {
					return function (a, b, c, d, e, f) {
						var partialState = funcReturningState.call(component, a, b, c, d, e, f);
						if (partialState) {
							component.setState(partialState);
						}
					};
				},

				/**
				 * Returns a single-argument callback that can be used to update a single
				 * key in the component's state.
				 *
				 * Note: this is memoized function, which makes it inexpensive to call.
				 *
				 * @param {ReactCompositeComponent} component
				 * @param {string} key The key in the state that you should update.
				 * @return {function} callback of 1 argument which calls setState() with
				 *                    the provided keyName and callback argument.
				 */
				createStateKeySetter: function (component, key) {
					// Memoize the setters.
					var cache = component.__keySetters || (component.__keySetters = {});
					return cache[key] || (cache[key] = createStateKeySetter(component, key));
				}
			};

			function createStateKeySetter(component, key) {
				// Partial state is allocated outside of the function closure so it can be
				// reused with every call, avoiding memory allocation when this function
				// is called.
				var partialState = {};
				return function stateKeySetter(value) {
					partialState[key] = value;
					component.setState(partialState);
				};
			}

			ReactStateSetters.Mixin = {
				/**
				 * Returns a function that calls the provided function, and uses the result
				 * of that to set the component's state.
				 *
				 * For example, these statements are equivalent:
				 *
				 *   this.setState({x: 1});
				 *   this.createStateSetter(function(xValue) {
				 *     return {x: xValue};
				 *   })(1);
				 *
				 * @param {function} funcReturningState Returned callback uses this to
				 *                                      determine how to update state.
				 * @return {function} callback that when invoked uses funcReturningState to
				 *                    determined the object literal to setState.
				 */
				createStateSetter: function (funcReturningState) {
					return ReactStateSetters.createStateSetter(this, funcReturningState);
				},

				/**
				 * Returns a single-argument callback that can be used to update a single
				 * key in the component's state.
				 *
				 * For example, these statements are equivalent:
				 *
				 *   this.setState({x: 1});
				 *   this.createStateKeySetter('x')(1);
				 *
				 * Note: this is memoized function, which makes it inexpensive to call.
				 *
				 * @param {string} key The key in the state that you should update.
				 * @return {function} callback of 1 argument which calls setState() with
				 *                    the provided keyName and callback argument.
				 */
				createStateKeySetter: function (key) {
					return ReactStateSetters.createStateKeySetter(this, key);
				}
			};

			module.exports = ReactStateSetters;
		}, {}], 91: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactTestUtils
			 */

			'use strict';

			var EventConstants = _dereq_(15);
			var EventPluginHub = _dereq_(16);
			var EventPropagators = _dereq_(19);
			var React = _dereq_(26);
			var ReactDOM = _dereq_(40);
			var ReactElement = _dereq_(57);
			var ReactBrowserEventEmitter = _dereq_(28);
			var ReactCompositeComponent = _dereq_(38);
			var ReactInstanceHandles = _dereq_(67);
			var ReactInstanceMap = _dereq_(68);
			var ReactMount = _dereq_(72);
			var ReactUpdates = _dereq_(96);
			var SyntheticEvent = _dereq_(105);

			var assign = _dereq_(24);
			var emptyObject = _dereq_(154);
			var findDOMNode = _dereq_(122);
			var invariant = _dereq_(161);

			var topLevelTypes = EventConstants.topLevelTypes;

			function Event(suffix) { }

			/**
			 * @class ReactTestUtils
			 */

			function findAllInRenderedTreeInternal(inst, test) {
				if (!inst || !inst.getPublicInstance) {
					return [];
				}
				var publicInst = inst.getPublicInstance();
				var ret = test(publicInst) ? [publicInst] : [];
				var currentElement = inst._currentElement;
				if (ReactTestUtils.isDOMComponent(publicInst)) {
					var renderedChildren = inst._renderedChildren;
					var key;
					for (key in renderedChildren) {
						if (!renderedChildren.hasOwnProperty(key)) {
							continue;
						}
						ret = ret.concat(findAllInRenderedTreeInternal(renderedChildren[key], test));
					}
				} else if (ReactElement.isValidElement(currentElement) && typeof currentElement.type === 'function') {
					ret = ret.concat(findAllInRenderedTreeInternal(inst._renderedComponent, test));
				}
				return ret;
			}

			/**
			 * Todo: Support the entire DOM.scry query syntax. For now, these simple
			 * utilities will suffice for testing purposes.
			 * @lends ReactTestUtils
			 */
			var ReactTestUtils = {
				renderIntoDocument: function (instance) {
					var div = document.createElement('div');
					// None of our tests actually require attaching the container to the
					// DOM, and doing so creates a mess that we rely on test isolation to
					// clean up, so we're going to stop honoring the name of this method
					// (and probably rename it eventually) if no problems arise.
					// document.documentElement.appendChild(div);
					return ReactDOM.render(instance, div);
				},

				isElement: function (element) {
					return ReactElement.isValidElement(element);
				},

				isElementOfType: function (inst, convenienceConstructor) {
					return ReactElement.isValidElement(inst) && inst.type === convenienceConstructor;
				},

				isDOMComponent: function (inst) {
					return !!(inst && inst.nodeType === 1 && inst.tagName);
				},

				isDOMComponentElement: function (inst) {
					return !!(inst && ReactElement.isValidElement(inst) && !!inst.tagName);
				},

				isCompositeComponent: function (inst) {
					if (ReactTestUtils.isDOMComponent(inst)) {
						// Accessing inst.setState warns; just return false as that'll be what
						// this returns when we have DOM nodes as refs directly
						return false;
					}
					return inst != null && typeof inst.render === 'function' && typeof inst.setState === 'function';
				},

				isCompositeComponentWithType: function (inst, type) {
					if (!ReactTestUtils.isCompositeComponent(inst)) {
						return false;
					}
					var internalInstance = ReactInstanceMap.get(inst);
					var constructor = internalInstance._currentElement.type;

					return constructor === type;
				},

				isCompositeComponentElement: function (inst) {
					if (!ReactElement.isValidElement(inst)) {
						return false;
					}
					// We check the prototype of the type that will get mounted, not the
					// instance itself. This is a future proof way of duck typing.
					var prototype = inst.type.prototype;
					return typeof prototype.render === 'function' && typeof prototype.setState === 'function';
				},

				isCompositeComponentElementWithType: function (inst, type) {
					var internalInstance = ReactInstanceMap.get(inst);
					var constructor = internalInstance._currentElement.type;

					return !!(ReactTestUtils.isCompositeComponentElement(inst) && constructor === type);
				},

				getRenderedChildOfCompositeComponent: function (inst) {
					if (!ReactTestUtils.isCompositeComponent(inst)) {
						return null;
					}
					var internalInstance = ReactInstanceMap.get(inst);
					return internalInstance._renderedComponent.getPublicInstance();
				},

				findAllInRenderedTree: function (inst, test) {
					if (!inst) {
						return [];
					}
					!ReactTestUtils.isCompositeComponent(inst) ? "development" !== 'production' ? invariant(false, 'findAllInRenderedTree(...): instance must be a composite component') : invariant(false) : undefined;
					return findAllInRenderedTreeInternal(ReactInstanceMap.get(inst), test);
				},

				/**
				 * Finds all instance of components in the rendered tree that are DOM
				 * components with the class name matching `className`.
				 * @return {array} an array of all the matches.
				 */
				scryRenderedDOMComponentsWithClass: function (root, classNames) {
					if (!Array.isArray(classNames)) {
						classNames = classNames.split(/\s+/);
					}
					return ReactTestUtils.findAllInRenderedTree(root, function (inst) {
						if (ReactTestUtils.isDOMComponent(inst)) {
							var className = inst.className;
							if (typeof className !== 'string') {
								// SVG, probably.
								className = inst.getAttribute('class') || '';
							}
							var classList = className.split(/\s+/);
							return classNames.every(function (name) {
								return classList.indexOf(name) !== -1;
							});
						}
						return false;
					});
				},

				/**
				 * Like scryRenderedDOMComponentsWithClass but expects there to be one result,
				 * and returns that one result, or throws exception if there is any other
				 * number of matches besides one.
				 * @return {!ReactDOMComponent} The one match.
				 */
				findRenderedDOMComponentWithClass: function (root, className) {
					var all = ReactTestUtils.scryRenderedDOMComponentsWithClass(root, className);
					if (all.length !== 1) {
						throw new Error('Did not find exactly one match ' + '(found: ' + all.length + ') for class:' + className);
					}
					return all[0];
				},

				/**
				 * Finds all instance of components in the rendered tree that are DOM
				 * components with the tag name matching `tagName`.
				 * @return {array} an array of all the matches.
				 */
				scryRenderedDOMComponentsWithTag: function (root, tagName) {
					return ReactTestUtils.findAllInRenderedTree(root, function (inst) {
						return ReactTestUtils.isDOMComponent(inst) && inst.tagName.toUpperCase() === tagName.toUpperCase();
					});
				},

				/**
				 * Like scryRenderedDOMComponentsWithTag but expects there to be one result,
				 * and returns that one result, or throws exception if there is any other
				 * number of matches besides one.
				 * @return {!ReactDOMComponent} The one match.
				 */
				findRenderedDOMComponentWithTag: function (root, tagName) {
					var all = ReactTestUtils.scryRenderedDOMComponentsWithTag(root, tagName);
					if (all.length !== 1) {
						throw new Error('Did not find exactly one match for tag:' + tagName);
					}
					return all[0];
				},

				/**
				 * Finds all instances of components with type equal to `componentType`.
				 * @return {array} an array of all the matches.
				 */
				scryRenderedComponentsWithType: function (root, componentType) {
					return ReactTestUtils.findAllInRenderedTree(root, function (inst) {
						return ReactTestUtils.isCompositeComponentWithType(inst, componentType);
					});
				},

				/**
				 * Same as `scryRenderedComponentsWithType` but expects there to be one result
				 * and returns that one result, or throws exception if there is any other
				 * number of matches besides one.
				 * @return {!ReactComponent} The one match.
				 */
				findRenderedComponentWithType: function (root, componentType) {
					var all = ReactTestUtils.scryRenderedComponentsWithType(root, componentType);
					if (all.length !== 1) {
						throw new Error('Did not find exactly one match for componentType:' + componentType + ' (found ' + all.length + ')');
					}
					return all[0];
				},

				/**
				 * Pass a mocked component module to this method to augment it with
				 * useful methods that allow it to be used as a dummy React component.
				 * Instead of rendering as usual, the component will become a simple
				 * <div> containing any provided children.
				 *
				 * @param {object} module the mock function object exported from a
				 *                        module that defines the component to be mocked
				 * @param {?string} mockTagName optional dummy root tag name to return
				 *                              from render method (overrides
				 *                              module.mockTagName if provided)
				 * @return {object} the ReactTestUtils object (for chaining)
				 */
				mockComponent: function (module, mockTagName) {
					mockTagName = mockTagName || module.mockTagName || 'div';

					module.prototype.render.mockImplementation(function () {
						return React.createElement(mockTagName, null, this.props.children);
					});

					return this;
				},

				/**
				 * Simulates a top level event being dispatched from a raw event that occurred
				 * on an `Element` node.
				 * @param {Object} topLevelType A type from `EventConstants.topLevelTypes`
				 * @param {!Element} node The dom to simulate an event occurring on.
				 * @param {?Event} fakeNativeEvent Fake native event to use in SyntheticEvent.
				 */
				simulateNativeEventOnNode: function (topLevelType, node, fakeNativeEvent) {
					fakeNativeEvent.target = node;
					ReactBrowserEventEmitter.ReactEventListener.dispatchEvent(topLevelType, fakeNativeEvent);
				},

				/**
				 * Simulates a top level event being dispatched from a raw event that occurred
				 * on the `ReactDOMComponent` `comp`.
				 * @param {Object} topLevelType A type from `EventConstants.topLevelTypes`.
				 * @param {!ReactDOMComponent} comp
				 * @param {?Event} fakeNativeEvent Fake native event to use in SyntheticEvent.
				 */
				simulateNativeEventOnDOMComponent: function (topLevelType, comp, fakeNativeEvent) {
					ReactTestUtils.simulateNativeEventOnNode(topLevelType, findDOMNode(comp), fakeNativeEvent);
				},

				nativeTouchData: function (x, y) {
					return {
						touches: [{ pageX: x, pageY: y }]
					};
				},

				createRenderer: function () {
					return new ReactShallowRenderer();
				},

				Simulate: null,
				SimulateNative: {}
			};

			/**
			 * @class ReactShallowRenderer
			 */
			var ReactShallowRenderer = function () {
				this._instance = null;
			};

			ReactShallowRenderer.prototype.getRenderOutput = function () {
				return this._instance && this._instance._renderedComponent && this._instance._renderedComponent._renderedOutput || null;
			};

			var NoopInternalComponent = function (element) {
				this._renderedOutput = element;
				this._currentElement = element;
			};

			NoopInternalComponent.prototype = {

				mountComponent: function () { },

				receiveComponent: function (element) {
					this._renderedOutput = element;
					this._currentElement = element;
				},

				unmountComponent: function () { },

				getPublicInstance: function () {
					return null;
				}
			};

			var ShallowComponentWrapper = function () { };
			assign(ShallowComponentWrapper.prototype, ReactCompositeComponent.Mixin, {
				_instantiateReactComponent: function (element) {
					return new NoopInternalComponent(element);
				},
				_replaceNodeWithMarkupByID: function () { },
				_renderValidatedComponent: ReactCompositeComponent.Mixin._renderValidatedComponentWithoutOwnerOrContext
			});

			ReactShallowRenderer.prototype.render = function (element, context) {
				!ReactElement.isValidElement(element) ? "development" !== 'production' ? invariant(false, 'ReactShallowRenderer render(): Invalid component element.%s', typeof element === 'function' ? ' Instead of passing a component class, make sure to instantiate ' + 'it by passing it to React.createElement.' : '') : invariant(false) : undefined;
				!(typeof element.type !== 'string') ? "development" !== 'production' ? invariant(false, 'ReactShallowRenderer render(): Shallow rendering works only with custom ' + 'components, not primitives (%s). Instead of calling `.render(el)` and ' + 'inspecting the rendered output, look at `el.props` directly instead.', element.type) : invariant(false) : undefined;

				if (!context) {
					context = emptyObject;
				}
				ReactUpdates.batchedUpdates(_batchedRender, this, element, context);
			};

			function _batchedRender(renderer, element, context) {
				var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(false);
				renderer._render(element, transaction, context);
				ReactUpdates.ReactReconcileTransaction.release(transaction);
			}

			ReactShallowRenderer.prototype.unmount = function () {
				if (this._instance) {
					this._instance.unmountComponent();
				}
			};

			ReactShallowRenderer.prototype._render = function (element, transaction, context) {
				if (this._instance) {
					this._instance.receiveComponent(element, transaction, context);
				} else {
					var rootID = ReactInstanceHandles.createReactRootID();
					var instance = new ShallowComponentWrapper(element.type);
					instance.construct(element);

					instance.mountComponent(rootID, transaction, context);

					this._instance = instance;
				}
			};

			/**
			 * Exports:
			 *
			 * - `ReactTestUtils.Simulate.click(Element/ReactDOMComponent)`
			 * - `ReactTestUtils.Simulate.mouseMove(Element/ReactDOMComponent)`
			 * - `ReactTestUtils.Simulate.change(Element/ReactDOMComponent)`
			 * - ... (All keys from event plugin `eventTypes` objects)
			 */
			function makeSimulator(eventType) {
				return function (domComponentOrNode, eventData) {
					var node;
					if (ReactTestUtils.isDOMComponent(domComponentOrNode)) {
						node = findDOMNode(domComponentOrNode);
					} else if (domComponentOrNode.tagName) {
						node = domComponentOrNode;
					}

					var dispatchConfig = ReactBrowserEventEmitter.eventNameDispatchConfigs[eventType];

					var fakeNativeEvent = new Event();
					fakeNativeEvent.target = node;
					// We don't use SyntheticEvent.getPooled in order to not have to worry about
					// properly destroying any properties assigned from `eventData` upon release
					var event = new SyntheticEvent(dispatchConfig, ReactMount.getID(node), fakeNativeEvent, node);
					assign(event, eventData);

					if (dispatchConfig.phasedRegistrationNames) {
						EventPropagators.accumulateTwoPhaseDispatches(event);
					} else {
						EventPropagators.accumulateDirectDispatches(event);
					}

					ReactUpdates.batchedUpdates(function () {
						EventPluginHub.enqueueEvents(event);
						EventPluginHub.processEventQueue(true);
					});
				};
			}

			function buildSimulators() {
				ReactTestUtils.Simulate = {};

				var eventType;
				for (eventType in ReactBrowserEventEmitter.eventNameDispatchConfigs) {
					/**
					 * @param {!Element|ReactDOMComponent} domComponentOrNode
					 * @param {?object} eventData Fake event data to use in SyntheticEvent.
					 */
					ReactTestUtils.Simulate[eventType] = makeSimulator(eventType);
				}
			}

			// Rebuild ReactTestUtils.Simulate whenever event plugins are injected
			var oldInjectEventPluginOrder = EventPluginHub.injection.injectEventPluginOrder;
			EventPluginHub.injection.injectEventPluginOrder = function () {
				oldInjectEventPluginOrder.apply(this, arguments);
				buildSimulators();
			};
			var oldInjectEventPlugins = EventPluginHub.injection.injectEventPluginsByName;
			EventPluginHub.injection.injectEventPluginsByName = function () {
				oldInjectEventPlugins.apply(this, arguments);
				buildSimulators();
			};

			buildSimulators();

			/**
			 * Exports:
			 *
			 * - `ReactTestUtils.SimulateNative.click(Element/ReactDOMComponent)`
			 * - `ReactTestUtils.SimulateNative.mouseMove(Element/ReactDOMComponent)`
			 * - `ReactTestUtils.SimulateNative.mouseIn/ReactDOMComponent)`
			 * - `ReactTestUtils.SimulateNative.mouseOut(Element/ReactDOMComponent)`
			 * - ... (All keys from `EventConstants.topLevelTypes`)
			 *
			 * Note: Top level event types are a subset of the entire set of handler types
			 * (which include a broader set of "synthetic" events). For example, onDragDone
			 * is a synthetic event. Except when testing an event plugin or React's event
			 * handling code specifically, you probably want to use ReactTestUtils.Simulate
			 * to dispatch synthetic events.
			 */

			function makeNativeSimulator(eventType) {
				return function (domComponentOrNode, nativeEventData) {
					var fakeNativeEvent = new Event(eventType);
					assign(fakeNativeEvent, nativeEventData);
					if (ReactTestUtils.isDOMComponent(domComponentOrNode)) {
						ReactTestUtils.simulateNativeEventOnDOMComponent(eventType, domComponentOrNode, fakeNativeEvent);
					} else if (domComponentOrNode.tagName) {
						// Will allow on actual dom nodes.
						ReactTestUtils.simulateNativeEventOnNode(eventType, domComponentOrNode, fakeNativeEvent);
					}
				};
			}

			Object.keys(topLevelTypes).forEach(function (eventType) {
				// Event type is stored as 'topClick' - we transform that to 'click'
				var convenienceName = eventType.indexOf('top') === 0 ? eventType.charAt(3).toLowerCase() + eventType.substr(4) : eventType;
				/**
				 * @param {!Element|ReactDOMComponent} domComponentOrNode
				 * @param {?Event} nativeEventData Fake native event to use in SyntheticEvent.
				 */
				ReactTestUtils.SimulateNative[convenienceName] = makeNativeSimulator(eventType);
			});

			module.exports = ReactTestUtils;
		}, { "105": 105, "122": 122, "15": 15, "154": 154, "16": 16, "161": 161, "19": 19, "24": 24, "26": 26, "28": 28, "38": 38, "40": 40, "57": 57, "67": 67, "68": 68, "72": 72, "96": 96 }], 92: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @typechecks static-only
			 * @providesModule ReactTransitionChildMapping
			 */

			'use strict';

			var flattenChildren = _dereq_(123);

			var ReactTransitionChildMapping = {
				/**
				 * Given `this.props.children`, return an object mapping key to child. Just
				 * simple syntactic sugar around flattenChildren().
				 *
				 * @param {*} children `this.props.children`
				 * @return {object} Mapping of key to child
				 */
				getChildMapping: function (children) {
					if (!children) {
						return children;
					}
					return flattenChildren(children);
				},

				/**
				 * When you're adding or removing children some may be added or removed in the
				 * same render pass. We want to show *both* since we want to simultaneously
				 * animate elements in and out. This function takes a previous set of keys
				 * and a new set of keys and merges them with its best guess of the correct
				 * ordering. In the future we may expose some of the utilities in
				 * ReactMultiChild to make this easy, but for now React itself does not
				 * directly have this concept of the union of prevChildren and nextChildren
				 * so we implement it here.
				 *
				 * @param {object} prev prev children as returned from
				 * `ReactTransitionChildMapping.getChildMapping()`.
				 * @param {object} next next children as returned from
				 * `ReactTransitionChildMapping.getChildMapping()`.
				 * @return {object} a key set that contains all keys in `prev` and all keys
				 * in `next` in a reasonable order.
				 */
				mergeChildMappings: function (prev, next) {
					prev = prev || {};
					next = next || {};

					function getValueForKey(key) {
						if (next.hasOwnProperty(key)) {
							return next[key];
						} else {
							return prev[key];
						}
					}

					// For each key of `next`, the list of keys to insert before that key in
					// the combined list
					var nextKeysPending = {};

					var pendingKeys = [];
					for (var prevKey in prev) {
						if (next.hasOwnProperty(prevKey)) {
							if (pendingKeys.length) {
								nextKeysPending[prevKey] = pendingKeys;
								pendingKeys = [];
							}
						} else {
							pendingKeys.push(prevKey);
						}
					}

					var i;
					var childMapping = {};
					for (var nextKey in next) {
						if (nextKeysPending.hasOwnProperty(nextKey)) {
							for (i = 0; i < nextKeysPending[nextKey].length; i++) {
								var pendingNextKey = nextKeysPending[nextKey][i];
								childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
							}
						}
						childMapping[nextKey] = getValueForKey(nextKey);
					}

					// Finally, add the keys which didn't appear before any key in `next`
					for (i = 0; i < pendingKeys.length; i++) {
						childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
					}

					return childMapping;
				}
			};

			module.exports = ReactTransitionChildMapping;
		}, { "123": 123 }], 93: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactTransitionEvents
			 */

			'use strict';

			var ExecutionEnvironment = _dereq_(147);

			/**
			 * EVENT_NAME_MAP is used to determine which event fired when a
			 * transition/animation ends, based on the style property used to
			 * define that event.
			 */
			var EVENT_NAME_MAP = {
				transitionend: {
					'transition': 'transitionend',
					'WebkitTransition': 'webkitTransitionEnd',
					'MozTransition': 'mozTransitionEnd',
					'OTransition': 'oTransitionEnd',
					'msTransition': 'MSTransitionEnd'
				},

				animationend: {
					'animation': 'animationend',
					'WebkitAnimation': 'webkitAnimationEnd',
					'MozAnimation': 'mozAnimationEnd',
					'OAnimation': 'oAnimationEnd',
					'msAnimation': 'MSAnimationEnd'
				}
			};

			var endEvents = [];

			function detectEvents() {
				var testEl = document.createElement('div');
				var style = testEl.style;

				// On some platforms, in particular some releases of Android 4.x,
				// the un-prefixed "animation" and "transition" properties are defined on the
				// style object but the events that fire will still be prefixed, so we need
				// to check if the un-prefixed events are useable, and if not remove them
				// from the map
				if (!('AnimationEvent' in window)) {
					delete EVENT_NAME_MAP.animationend.animation;
				}

				if (!('TransitionEvent' in window)) {
					delete EVENT_NAME_MAP.transitionend.transition;
				}

				for (var baseEventName in EVENT_NAME_MAP) {
					var baseEvents = EVENT_NAME_MAP[baseEventName];
					for (var styleName in baseEvents) {
						if (styleName in style) {
							endEvents.push(baseEvents[styleName]);
							break;
						}
					}
				}
			}

			if (ExecutionEnvironment.canUseDOM) {
				detectEvents();
			}

			// We use the raw {add|remove}EventListener() call because EventListener
			// does not know how to remove event listeners and we really should
			// clean up. Also, these events are not triggered in older browsers
			// so we should be A-OK here.

			function addEventListener(node, eventName, eventListener) {
				node.addEventListener(eventName, eventListener, false);
			}

			function removeEventListener(node, eventName, eventListener) {
				node.removeEventListener(eventName, eventListener, false);
			}

			var ReactTransitionEvents = {
				addEndEventListener: function (node, eventListener) {
					if (endEvents.length === 0) {
						// If CSS transitions are not supported, trigger an "end animation"
						// event immediately.
						window.setTimeout(eventListener, 0);
						return;
					}
					endEvents.forEach(function (endEvent) {
						addEventListener(node, endEvent, eventListener);
					});
				},

				removeEndEventListener: function (node, eventListener) {
					if (endEvents.length === 0) {
						return;
					}
					endEvents.forEach(function (endEvent) {
						removeEventListener(node, endEvent, eventListener);
					});
				}
			};

			module.exports = ReactTransitionEvents;
		}, { "147": 147 }], 94: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactTransitionGroup
			 */

			'use strict';

			var React = _dereq_(26);
			var ReactTransitionChildMapping = _dereq_(92);

			var assign = _dereq_(24);
			var emptyFunction = _dereq_(153);

			var ReactTransitionGroup = React.createClass({
				displayName: 'ReactTransitionGroup',

				propTypes: {
					component: React.PropTypes.any,
					childFactory: React.PropTypes.func
				},

				getDefaultProps: function () {
					return {
						component: 'span',
						childFactory: emptyFunction.thatReturnsArgument
					};
				},

				getInitialState: function () {
					return {
						children: ReactTransitionChildMapping.getChildMapping(this.props.children)
					};
				},

				componentWillMount: function () {
					this.currentlyTransitioningKeys = {};
					this.keysToEnter = [];
					this.keysToLeave = [];
				},

				componentDidMount: function () {
					var initialChildMapping = this.state.children;
					for (var key in initialChildMapping) {
						if (initialChildMapping[key]) {
							this.performAppear(key);
						}
					}
				},

				componentWillReceiveProps: function (nextProps) {
					var nextChildMapping = ReactTransitionChildMapping.getChildMapping(nextProps.children);
					var prevChildMapping = this.state.children;

					this.setState({
						children: ReactTransitionChildMapping.mergeChildMappings(prevChildMapping, nextChildMapping)
					});

					var key;

					for (key in nextChildMapping) {
						var hasPrev = prevChildMapping && prevChildMapping.hasOwnProperty(key);
						if (nextChildMapping[key] && !hasPrev && !this.currentlyTransitioningKeys[key]) {
							this.keysToEnter.push(key);
						}
					}

					for (key in prevChildMapping) {
						var hasNext = nextChildMapping && nextChildMapping.hasOwnProperty(key);
						if (prevChildMapping[key] && !hasNext && !this.currentlyTransitioningKeys[key]) {
							this.keysToLeave.push(key);
						}
					}

					// If we want to someday check for reordering, we could do it here.
				},

				componentDidUpdate: function () {
					var keysToEnter = this.keysToEnter;
					this.keysToEnter = [];
					keysToEnter.forEach(this.performEnter);

					var keysToLeave = this.keysToLeave;
					this.keysToLeave = [];
					keysToLeave.forEach(this.performLeave);
				},

				performAppear: function (key) {
					this.currentlyTransitioningKeys[key] = true;

					var component = this.refs[key];

					if (component.componentWillAppear) {
						component.componentWillAppear(this._handleDoneAppearing.bind(this, key));
					} else {
						this._handleDoneAppearing(key);
					}
				},

				_handleDoneAppearing: function (key) {
					var component = this.refs[key];
					if (component.componentDidAppear) {
						component.componentDidAppear();
					}

					delete this.currentlyTransitioningKeys[key];

					var currentChildMapping = ReactTransitionChildMapping.getChildMapping(this.props.children);

					if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {
						// This was removed before it had fully appeared. Remove it.
						this.performLeave(key);
					}
				},

				performEnter: function (key) {
					this.currentlyTransitioningKeys[key] = true;

					var component = this.refs[key];

					if (component.componentWillEnter) {
						component.componentWillEnter(this._handleDoneEntering.bind(this, key));
					} else {
						this._handleDoneEntering(key);
					}
				},

				_handleDoneEntering: function (key) {
					var component = this.refs[key];
					if (component.componentDidEnter) {
						component.componentDidEnter();
					}

					delete this.currentlyTransitioningKeys[key];

					var currentChildMapping = ReactTransitionChildMapping.getChildMapping(this.props.children);

					if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {
						// This was removed before it had fully entered. Remove it.
						this.performLeave(key);
					}
				},

				performLeave: function (key) {
					this.currentlyTransitioningKeys[key] = true;

					var component = this.refs[key];
					if (component.componentWillLeave) {
						component.componentWillLeave(this._handleDoneLeaving.bind(this, key));
					} else {
						// Note that this is somewhat dangerous b/c it calls setState()
						// again, effectively mutating the component before all the work
						// is done.
						this._handleDoneLeaving(key);
					}
				},

				_handleDoneLeaving: function (key) {
					var component = this.refs[key];

					if (component.componentDidLeave) {
						component.componentDidLeave();
					}

					delete this.currentlyTransitioningKeys[key];

					var currentChildMapping = ReactTransitionChildMapping.getChildMapping(this.props.children);

					if (currentChildMapping && currentChildMapping.hasOwnProperty(key)) {
						// This entered again before it fully left. Add it again.
						this.performEnter(key);
					} else {
						this.setState(function (state) {
							var newChildren = assign({}, state.children);
							delete newChildren[key];
							return { children: newChildren };
						});
					}
				},

				render: function () {
					// TODO: we could get rid of the need for the wrapper node
					// by cloning a single child
					var childrenToRender = [];
					for (var key in this.state.children) {
						var child = this.state.children[key];
						if (child) {
							// You may need to apply reactive updates to a child as it is leaving.
							// The normal React way to do it won't work since the child will have
							// already been removed. In case you need this behavior you can provide
							// a childFactory function to wrap every child, even the ones that are
							// leaving.
							childrenToRender.push(React.cloneElement(this.props.childFactory(child), { ref: key, key: key }));
						}
					}
					return React.createElement(this.props.component, this.props, childrenToRender);
				}
			});

			module.exports = ReactTransitionGroup;
		}, { "153": 153, "24": 24, "26": 26, "92": 92 }], 95: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactUpdateQueue
			 */

			'use strict';

			var ReactCurrentOwner = _dereq_(39);
			var ReactElement = _dereq_(57);
			var ReactInstanceMap = _dereq_(68);
			var ReactUpdates = _dereq_(96);

			var assign = _dereq_(24);
			var invariant = _dereq_(161);
			var warning = _dereq_(173);

			function enqueueUpdate(internalInstance) {
				ReactUpdates.enqueueUpdate(internalInstance);
			}

			function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
				var internalInstance = ReactInstanceMap.get(publicInstance);
				if (!internalInstance) {
					if ("development" !== 'production') {
						// Only warn when we have a callerName. Otherwise we should be silent.
						// We're probably calling from enqueueCallback. We don't want to warn
						// there because we already warned for the corresponding lifecycle method.
						"development" !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor.displayName) : undefined;
					}
					return null;
				}

				if ("development" !== 'production') {
					"development" !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition ' + '(such as within `render`). Render methods should be a pure function ' + 'of props and state.', callerName) : undefined;
				}

				return internalInstance;
			}

			/**
			 * ReactUpdateQueue allows for state updates to be scheduled into a later
			 * reconciliation step.
			 */
			var ReactUpdateQueue = {

				/**
				 * Checks whether or not this composite component is mounted.
				 * @param {ReactClass} publicInstance The instance we want to test.
				 * @return {boolean} True if mounted, false otherwise.
				 * @protected
				 * @final
				 */
				isMounted: function (publicInstance) {
					if ("development" !== 'production') {
						var owner = ReactCurrentOwner.current;
						if (owner !== null) {
							"development" !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : undefined;
							owner._warnedAboutRefsInRender = true;
						}
					}
					var internalInstance = ReactInstanceMap.get(publicInstance);
					if (internalInstance) {
						// During componentWillMount and render this will still be null but after
						// that will always render to something. At least for now. So we can use
						// this hack.
						return !!internalInstance._renderedComponent;
					} else {
						return false;
					}
				},

				/**
				 * Enqueue a callback that will be executed after all the pending updates
				 * have processed.
				 *
				 * @param {ReactClass} publicInstance The instance to use as `this` context.
				 * @param {?function} callback Called after state is updated.
				 * @internal
				 */
				enqueueCallback: function (publicInstance, callback) {
					!(typeof callback === 'function') ? "development" !== 'production' ? invariant(false, 'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + '`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 'isn\'t callable.') : invariant(false) : undefined;
					var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

					// Previously we would throw an error if we didn't have an internal
					// instance. Since we want to make it a no-op instead, we mirror the same
					// behavior we have in other enqueue* methods.
					// We also need to ignore callbacks in componentWillMount. See
					// enqueueUpdates.
					if (!internalInstance) {
						return null;
					}

					if (internalInstance._pendingCallbacks) {
						internalInstance._pendingCallbacks.push(callback);
					} else {
						internalInstance._pendingCallbacks = [callback];
					}
					// TODO: The callback here is ignored when setState is called from
					// componentWillMount. Either fix it or disallow doing so completely in
					// favor of getInitialState. Alternatively, we can disallow
					// componentWillMount during server-side rendering.
					enqueueUpdate(internalInstance);
				},

				enqueueCallbackInternal: function (internalInstance, callback) {
					!(typeof callback === 'function') ? "development" !== 'production' ? invariant(false, 'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + '`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 'isn\'t callable.') : invariant(false) : undefined;
					if (internalInstance._pendingCallbacks) {
						internalInstance._pendingCallbacks.push(callback);
					} else {
						internalInstance._pendingCallbacks = [callback];
					}
					enqueueUpdate(internalInstance);
				},

				/**
				 * Forces an update. This should only be invoked when it is known with
				 * certainty that we are **not** in a DOM transaction.
				 *
				 * You may want to call this when you know that some deeper aspect of the
				 * component's state has changed but `setState` was not called.
				 *
				 * This will not invoke `shouldComponentUpdate`, but it will invoke
				 * `componentWillUpdate` and `componentDidUpdate`.
				 *
				 * @param {ReactClass} publicInstance The instance that should rerender.
				 * @internal
				 */
				enqueueForceUpdate: function (publicInstance) {
					var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');

					if (!internalInstance) {
						return;
					}

					internalInstance._pendingForceUpdate = true;

					enqueueUpdate(internalInstance);
				},

				/**
				 * Replaces all of the state. Always use this or `setState` to mutate state.
				 * You should treat `this.state` as immutable.
				 *
				 * There is no guarantee that `this.state` will be immediately updated, so
				 * accessing `this.state` after calling this method may return the old value.
				 *
				 * @param {ReactClass} publicInstance The instance that should rerender.
				 * @param {object} completeState Next state.
				 * @internal
				 */
				enqueueReplaceState: function (publicInstance, completeState) {
					var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');

					if (!internalInstance) {
						return;
					}

					internalInstance._pendingStateQueue = [completeState];
					internalInstance._pendingReplaceState = true;

					enqueueUpdate(internalInstance);
				},

				/**
				 * Sets a subset of the state. This only exists because _pendingState is
				 * internal. This provides a merging strategy that is not available to deep
				 * properties which is confusing. TODO: Expose pendingState or don't use it
				 * during the merge.
				 *
				 * @param {ReactClass} publicInstance The instance that should rerender.
				 * @param {object} partialState Next partial state to be merged with state.
				 * @internal
				 */
				enqueueSetState: function (publicInstance, partialState) {
					var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');

					if (!internalInstance) {
						return;
					}

					var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
					queue.push(partialState);

					enqueueUpdate(internalInstance);
				},

				/**
				 * Sets a subset of the props.
				 *
				 * @param {ReactClass} publicInstance The instance that should rerender.
				 * @param {object} partialProps Subset of the next props.
				 * @internal
				 */
				enqueueSetProps: function (publicInstance, partialProps) {
					var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setProps');
					if (!internalInstance) {
						return;
					}
					ReactUpdateQueue.enqueueSetPropsInternal(internalInstance, partialProps);
				},

				enqueueSetPropsInternal: function (internalInstance, partialProps) {
					var topLevelWrapper = internalInstance._topLevelWrapper;
					!topLevelWrapper ? "development" !== 'production' ? invariant(false, 'setProps(...): You called `setProps` on a ' + 'component with a parent. This is an anti-pattern since props will ' + 'get reactively updated when rendered. Instead, change the owner\'s ' + '`render` method to pass the correct value as props to the component ' + 'where it is created.') : invariant(false) : undefined;

					// Merge with the pending element if it exists, otherwise with existing
					// element props.
					var wrapElement = topLevelWrapper._pendingElement || topLevelWrapper._currentElement;
					var element = wrapElement.props;
					var props = assign({}, element.props, partialProps);
					topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(wrapElement, ReactElement.cloneAndReplaceProps(element, props));

					enqueueUpdate(topLevelWrapper);
				},

				/**
				 * Replaces all of the props.
				 *
				 * @param {ReactClass} publicInstance The instance that should rerender.
				 * @param {object} props New props.
				 * @internal
				 */
				enqueueReplaceProps: function (publicInstance, props) {
					var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceProps');
					if (!internalInstance) {
						return;
					}
					ReactUpdateQueue.enqueueReplacePropsInternal(internalInstance, props);
				},

				enqueueReplacePropsInternal: function (internalInstance, props) {
					var topLevelWrapper = internalInstance._topLevelWrapper;
					!topLevelWrapper ? "development" !== 'production' ? invariant(false, 'replaceProps(...): You called `replaceProps` on a ' + 'component with a parent. This is an anti-pattern since props will ' + 'get reactively updated when rendered. Instead, change the owner\'s ' + '`render` method to pass the correct value as props to the component ' + 'where it is created.') : invariant(false) : undefined;

					// Merge with the pending element if it exists, otherwise with existing
					// element props.
					var wrapElement = topLevelWrapper._pendingElement || topLevelWrapper._currentElement;
					var element = wrapElement.props;
					topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(wrapElement, ReactElement.cloneAndReplaceProps(element, props));

					enqueueUpdate(topLevelWrapper);
				},

				enqueueElementInternal: function (internalInstance, newElement) {
					internalInstance._pendingElement = newElement;
					enqueueUpdate(internalInstance);
				}

			};

			module.exports = ReactUpdateQueue;
		}, { "161": 161, "173": 173, "24": 24, "39": 39, "57": 57, "68": 68, "96": 96 }], 96: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactUpdates
			 */

			'use strict';

			var CallbackQueue = _dereq_(6);
			var PooledClass = _dereq_(25);
			var ReactPerf = _dereq_(78);
			var ReactReconciler = _dereq_(84);
			var Transaction = _dereq_(113);

			var assign = _dereq_(24);
			var invariant = _dereq_(161);

			var dirtyComponents = [];
			var asapCallbackQueue = CallbackQueue.getPooled();
			var asapEnqueued = false;

			var batchingStrategy = null;

			function ensureInjected() {
				!(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? "development" !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching ' + 'strategy') : invariant(false) : undefined;
			}

			var NESTED_UPDATES = {
				initialize: function () {
					this.dirtyComponentsLength = dirtyComponents.length;
				},
				close: function () {
					if (this.dirtyComponentsLength !== dirtyComponents.length) {
						// Additional updates were enqueued by componentDidUpdate handlers or
						// similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
						// these new updates so that if A's componentDidUpdate calls setState on
						// B, B will update before the callback A's updater provided when calling
						// setState.
						dirtyComponents.splice(0, this.dirtyComponentsLength);
						flushBatchedUpdates();
					} else {
						dirtyComponents.length = 0;
					}
				}
			};

			var UPDATE_QUEUEING = {
				initialize: function () {
					this.callbackQueue.reset();
				},
				close: function () {
					this.callbackQueue.notifyAll();
				}
			};

			var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

			function ReactUpdatesFlushTransaction() {
				this.reinitializeTransaction();
				this.dirtyComponentsLength = null;
				this.callbackQueue = CallbackQueue.getPooled();
				this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled( /* forceHTML */false);
			}

			assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {
				getTransactionWrappers: function () {
					return TRANSACTION_WRAPPERS;
				},

				destructor: function () {
					this.dirtyComponentsLength = null;
					CallbackQueue.release(this.callbackQueue);
					this.callbackQueue = null;
					ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
					this.reconcileTransaction = null;
				},

				perform: function (method, scope, a) {
					// Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
					// with this transaction's wrappers around it.
					return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
				}
			});

			PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

			function batchedUpdates(callback, a, b, c, d, e) {
				ensureInjected();
				batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
			}

			/**
			 * Array comparator for ReactComponents by mount ordering.
			 *
			 * @param {ReactComponent} c1 first component you're comparing
			 * @param {ReactComponent} c2 second component you're comparing
			 * @return {number} Return value usable by Array.prototype.sort().
			 */
			function mountOrderComparator(c1, c2) {
				return c1._mountOrder - c2._mountOrder;
			}

			function runBatchedUpdates(transaction) {
				var len = transaction.dirtyComponentsLength;
				!(len === dirtyComponents.length) ? "development" !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to ' + 'match dirty-components array length (%s).', len, dirtyComponents.length) : invariant(false) : undefined;

				// Since reconciling a component higher in the owner hierarchy usually (not
				// always -- see shouldComponentUpdate()) will reconcile children, reconcile
				// them before their children by sorting the array.
				dirtyComponents.sort(mountOrderComparator);

				for (var i = 0; i < len; i++) {
					// If a component is unmounted before pending changes apply, it will still
					// be here, but we assume that it has cleared its _pendingCallbacks and
					// that performUpdateIfNecessary is a noop.
					var component = dirtyComponents[i];

					// If performUpdateIfNecessary happens to enqueue any new updates, we
					// shouldn't execute the callbacks until the next render happens, so
					// stash the callbacks first
					var callbacks = component._pendingCallbacks;
					component._pendingCallbacks = null;

					ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction);

					if (callbacks) {
						for (var j = 0; j < callbacks.length; j++) {
							transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
						}
					}
				}
			}

			var flushBatchedUpdates = function () {
				// ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
				// array and perform any updates enqueued by mount-ready handlers (i.e.,
				// componentDidUpdate) but we need to check here too in order to catch
				// updates enqueued by setState callbacks and asap calls.
				while (dirtyComponents.length || asapEnqueued) {
					if (dirtyComponents.length) {
						var transaction = ReactUpdatesFlushTransaction.getPooled();
						transaction.perform(runBatchedUpdates, null, transaction);
						ReactUpdatesFlushTransaction.release(transaction);
					}

					if (asapEnqueued) {
						asapEnqueued = false;
						var queue = asapCallbackQueue;
						asapCallbackQueue = CallbackQueue.getPooled();
						queue.notifyAll();
						CallbackQueue.release(queue);
					}
				}
			};
			flushBatchedUpdates = ReactPerf.measure('ReactUpdates', 'flushBatchedUpdates', flushBatchedUpdates);

			/**
			 * Mark a component as needing a rerender, adding an optional callback to a
			 * list of functions which will be executed once the rerender occurs.
			 */
			function enqueueUpdate(component) {
				ensureInjected();

				// Various parts of our code (such as ReactCompositeComponent's
				// _renderValidatedComponent) assume that calls to render aren't nested;
				// verify that that's the case. (This is called by each top-level update
				// function, like setProps, setState, forceUpdate, etc.; creation and
				// destruction of top-level components is guarded in ReactMount.)

				if (!batchingStrategy.isBatchingUpdates) {
					batchingStrategy.batchedUpdates(enqueueUpdate, component);
					return;
				}

				dirtyComponents.push(component);
			}

			/**
			 * Enqueue a callback to be run at the end of the current batching cycle. Throws
			 * if no updates are currently being performed.
			 */
			function asap(callback, context) {
				!batchingStrategy.isBatchingUpdates ? "development" !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where' + 'updates are not being batched.') : invariant(false) : undefined;
				asapCallbackQueue.enqueue(callback, context);
				asapEnqueued = true;
			}

			var ReactUpdatesInjection = {
				injectReconcileTransaction: function (ReconcileTransaction) {
					!ReconcileTransaction ? "development" !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : invariant(false) : undefined;
					ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
				},

				injectBatchingStrategy: function (_batchingStrategy) {
					!_batchingStrategy ? "development" !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : invariant(false) : undefined;
					!(typeof _batchingStrategy.batchedUpdates === 'function') ? "development" !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : invariant(false) : undefined;
					!(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? "development" !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : invariant(false) : undefined;
					batchingStrategy = _batchingStrategy;
				}
			};

			var ReactUpdates = {
				/**
				 * React references `ReactReconcileTransaction` using this property in order
				 * to allow dependency injection.
				 *
				 * @internal
				 */
				ReactReconcileTransaction: null,

				batchedUpdates: batchedUpdates,
				enqueueUpdate: enqueueUpdate,
				flushBatchedUpdates: flushBatchedUpdates,
				injection: ReactUpdatesInjection,
				asap: asap
			};

			module.exports = ReactUpdates;
		}, { "113": 113, "161": 161, "24": 24, "25": 25, "6": 6, "78": 78, "84": 84 }], 97: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ReactVersion
			 */

			'use strict';

			module.exports = '0.14.7';
		}, {}], 98: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule SVGDOMPropertyConfig
			 */

			'use strict';

			var DOMProperty = _dereq_(10);

			var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;

			var NS = {
				xlink: 'http://www.w3.org/1999/xlink',
				xml: 'http://www.w3.org/XML/1998/namespace'
			};

			var SVGDOMPropertyConfig = {
				Properties: {
					clipPath: MUST_USE_ATTRIBUTE,
					cx: MUST_USE_ATTRIBUTE,
					cy: MUST_USE_ATTRIBUTE,
					d: MUST_USE_ATTRIBUTE,
					dx: MUST_USE_ATTRIBUTE,
					dy: MUST_USE_ATTRIBUTE,
					fill: MUST_USE_ATTRIBUTE,
					fillOpacity: MUST_USE_ATTRIBUTE,
					fontFamily: MUST_USE_ATTRIBUTE,
					fontSize: MUST_USE_ATTRIBUTE,
					fx: MUST_USE_ATTRIBUTE,
					fy: MUST_USE_ATTRIBUTE,
					gradientTransform: MUST_USE_ATTRIBUTE,
					gradientUnits: MUST_USE_ATTRIBUTE,
					markerEnd: MUST_USE_ATTRIBUTE,
					markerMid: MUST_USE_ATTRIBUTE,
					markerStart: MUST_USE_ATTRIBUTE,
					offset: MUST_USE_ATTRIBUTE,
					opacity: MUST_USE_ATTRIBUTE,
					patternContentUnits: MUST_USE_ATTRIBUTE,
					patternUnits: MUST_USE_ATTRIBUTE,
					points: MUST_USE_ATTRIBUTE,
					preserveAspectRatio: MUST_USE_ATTRIBUTE,
					r: MUST_USE_ATTRIBUTE,
					rx: MUST_USE_ATTRIBUTE,
					ry: MUST_USE_ATTRIBUTE,
					spreadMethod: MUST_USE_ATTRIBUTE,
					stopColor: MUST_USE_ATTRIBUTE,
					stopOpacity: MUST_USE_ATTRIBUTE,
					stroke: MUST_USE_ATTRIBUTE,
					strokeDasharray: MUST_USE_ATTRIBUTE,
					strokeLinecap: MUST_USE_ATTRIBUTE,
					strokeOpacity: MUST_USE_ATTRIBUTE,
					strokeWidth: MUST_USE_ATTRIBUTE,
					textAnchor: MUST_USE_ATTRIBUTE,
					transform: MUST_USE_ATTRIBUTE,
					version: MUST_USE_ATTRIBUTE,
					viewBox: MUST_USE_ATTRIBUTE,
					x1: MUST_USE_ATTRIBUTE,
					x2: MUST_USE_ATTRIBUTE,
					x: MUST_USE_ATTRIBUTE,
					xlinkActuate: MUST_USE_ATTRIBUTE,
					xlinkArcrole: MUST_USE_ATTRIBUTE,
					xlinkHref: MUST_USE_ATTRIBUTE,
					xlinkRole: MUST_USE_ATTRIBUTE,
					xlinkShow: MUST_USE_ATTRIBUTE,
					xlinkTitle: MUST_USE_ATTRIBUTE,
					xlinkType: MUST_USE_ATTRIBUTE,
					xmlBase: MUST_USE_ATTRIBUTE,
					xmlLang: MUST_USE_ATTRIBUTE,
					xmlSpace: MUST_USE_ATTRIBUTE,
					y1: MUST_USE_ATTRIBUTE,
					y2: MUST_USE_ATTRIBUTE,
					y: MUST_USE_ATTRIBUTE
				},
				DOMAttributeNamespaces: {
					xlinkActuate: NS.xlink,
					xlinkArcrole: NS.xlink,
					xlinkHref: NS.xlink,
					xlinkRole: NS.xlink,
					xlinkShow: NS.xlink,
					xlinkTitle: NS.xlink,
					xlinkType: NS.xlink,
					xmlBase: NS.xml,
					xmlLang: NS.xml,
					xmlSpace: NS.xml
				},
				DOMAttributeNames: {
					clipPath: 'clip-path',
					fillOpacity: 'fill-opacity',
					fontFamily: 'font-family',
					fontSize: 'font-size',
					gradientTransform: 'gradientTransform',
					gradientUnits: 'gradientUnits',
					markerEnd: 'marker-end',
					markerMid: 'marker-mid',
					markerStart: 'marker-start',
					patternContentUnits: 'patternContentUnits',
					patternUnits: 'patternUnits',
					preserveAspectRatio: 'preserveAspectRatio',
					spreadMethod: 'spreadMethod',
					stopColor: 'stop-color',
					stopOpacity: 'stop-opacity',
					strokeDasharray: 'stroke-dasharray',
					strokeLinecap: 'stroke-linecap',
					strokeOpacity: 'stroke-opacity',
					strokeWidth: 'stroke-width',
					textAnchor: 'text-anchor',
					viewBox: 'viewBox',
					xlinkActuate: 'xlink:actuate',
					xlinkArcrole: 'xlink:arcrole',
					xlinkHref: 'xlink:href',
					xlinkRole: 'xlink:role',
					xlinkShow: 'xlink:show',
					xlinkTitle: 'xlink:title',
					xlinkType: 'xlink:type',
					xmlBase: 'xml:base',
					xmlLang: 'xml:lang',
					xmlSpace: 'xml:space'
				}
			};

			module.exports = SVGDOMPropertyConfig;
		}, { "10": 10 }], 99: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule SelectEventPlugin
			 */

			'use strict';

			var EventConstants = _dereq_(15);
			var EventPropagators = _dereq_(19);
			var ExecutionEnvironment = _dereq_(147);
			var ReactInputSelection = _dereq_(66);
			var SyntheticEvent = _dereq_(105);

			var getActiveElement = _dereq_(156);
			var isTextInputElement = _dereq_(134);
			var keyOf = _dereq_(166);
			var shallowEqual = _dereq_(171);

			var topLevelTypes = EventConstants.topLevelTypes;

			var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

			var eventTypes = {
				select: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onSelect: null }),
						captured: keyOf({ onSelectCapture: null })
					},
					dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]
				}
			};

			var activeElement = null;
			var activeElementID = null;
			var lastSelection = null;
			var mouseDown = false;

			// Track whether a listener exists for this plugin. If none exist, we do
			// not extract events.
			var hasListener = false;
			var ON_SELECT_KEY = keyOf({ onSelect: null });

			/**
			 * Get an object which is a unique representation of the current selection.
			 *
			 * The return value will not be consistent across nodes or browsers, but
			 * two identical selections on the same node will return identical objects.
			 *
			 * @param {DOMElement} node
			 * @return {object}
			 */
			function getSelection(node) {
				if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
					return {
						start: node.selectionStart,
						end: node.selectionEnd
					};
				} else if (window.getSelection) {
					var selection = window.getSelection();
					return {
						anchorNode: selection.anchorNode,
						anchorOffset: selection.anchorOffset,
						focusNode: selection.focusNode,
						focusOffset: selection.focusOffset
					};
				} else if (document.selection) {
					var range = document.selection.createRange();
					return {
						parentElement: range.parentElement(),
						text: range.text,
						top: range.boundingTop,
						left: range.boundingLeft
					};
				}
			}

			/**
			 * Poll selection to see whether it's changed.
			 *
			 * @param {object} nativeEvent
			 * @return {?SyntheticEvent}
			 */
			function constructSelectEvent(nativeEvent, nativeEventTarget) {
				// Ensure we have the right element, and that the user is not dragging a
				// selection (this matches native `select` event behavior). In HTML5, select
				// fires only on input and textarea thus if there's no focused element we
				// won't dispatch.
				if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
					return null;
				}

				// Only fire when selection has actually changed.
				var currentSelection = getSelection(activeElement);
				if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
					lastSelection = currentSelection;

					var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementID, nativeEvent, nativeEventTarget);

					syntheticEvent.type = 'select';
					syntheticEvent.target = activeElement;

					EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

					return syntheticEvent;
				}

				return null;
			}

			/**
			 * This plugin creates an `onSelect` event that normalizes select events
			 * across form elements.
			 *
			 * Supported elements are:
			 * - input (see `isTextInputElement`)
			 * - textarea
			 * - contentEditable
			 *
			 * This differs from native browser implementations in the following ways:
			 * - Fires on contentEditable fields as well as inputs.
			 * - Fires for collapsed selection.
			 * - Fires after user input.
			 */
			var SelectEventPlugin = {

				eventTypes: eventTypes,

				/**
				 * @param {string} topLevelType Record from `EventConstants`.
				 * @param {DOMEventTarget} topLevelTarget The listening component root node.
				 * @param {string} topLevelTargetID ID of `topLevelTarget`.
				 * @param {object} nativeEvent Native browser event.
				 * @return {*} An accumulation of synthetic events.
				 * @see {EventPluginHub.extractEvents}
				 */
				extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
					if (!hasListener) {
						return null;
					}

					switch (topLevelType) {
						// Track the input node that has focus.
						case topLevelTypes.topFocus:
							if (isTextInputElement(topLevelTarget) || topLevelTarget.contentEditable === 'true') {
								activeElement = topLevelTarget;
								activeElementID = topLevelTargetID;
								lastSelection = null;
							}
							break;
						case topLevelTypes.topBlur:
							activeElement = null;
							activeElementID = null;
							lastSelection = null;
							break;

							// Don't fire the event while the user is dragging. This matches the
							// semantics of the native select event.
						case topLevelTypes.topMouseDown:
							mouseDown = true;
							break;
						case topLevelTypes.topContextMenu:
						case topLevelTypes.topMouseUp:
							mouseDown = false;
							return constructSelectEvent(nativeEvent, nativeEventTarget);

							// Chrome and IE fire non-standard event when selection is changed (and
							// sometimes when it hasn't). IE's event fires out of order with respect
							// to key and input events on deletion, so we discard it.
							//
							// Firefox doesn't support selectionchange, so check selection status
							// after each key entry. The selection changes after keydown and before
							// keyup, but we check on keydown as well in the case of holding down a
							// key, when multiple keydown events are fired but only one keyup is.
							// This is also our approach for IE handling, for the reason above.
						case topLevelTypes.topSelectionChange:
							if (skipSelectionChangeEvent) {
								break;
							}
							// falls through
						case topLevelTypes.topKeyDown:
						case topLevelTypes.topKeyUp:
							return constructSelectEvent(nativeEvent, nativeEventTarget);
					}

					return null;
				},

				didPutListener: function (id, registrationName, listener) {
					if (registrationName === ON_SELECT_KEY) {
						hasListener = true;
					}
				}
			};

			module.exports = SelectEventPlugin;
		}, { "105": 105, "134": 134, "147": 147, "15": 15, "156": 156, "166": 166, "171": 171, "19": 19, "66": 66 }], 100: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ServerReactRootIndex
			 * @typechecks
			 */

			'use strict';

			/**
			 * Size of the reactRoot ID space. We generate random numbers for React root
			 * IDs and if there's a collision the events and DOM update system will
			 * get confused. In the future we need a way to generate GUIDs but for
			 * now this will work on a smaller scale.
			 */
			var GLOBAL_MOUNT_POINT_MAX = Math.pow(2, 53);

			var ServerReactRootIndex = {
				createReactRootIndex: function () {
					return Math.ceil(Math.random() * GLOBAL_MOUNT_POINT_MAX);
				}
			};

			module.exports = ServerReactRootIndex;
		}, {}], 101: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule SimpleEventPlugin
			 */

			'use strict';

			var EventConstants = _dereq_(15);
			var EventListener = _dereq_(146);
			var EventPropagators = _dereq_(19);
			var ReactMount = _dereq_(72);
			var SyntheticClipboardEvent = _dereq_(102);
			var SyntheticEvent = _dereq_(105);
			var SyntheticFocusEvent = _dereq_(106);
			var SyntheticKeyboardEvent = _dereq_(108);
			var SyntheticMouseEvent = _dereq_(109);
			var SyntheticDragEvent = _dereq_(104);
			var SyntheticTouchEvent = _dereq_(110);
			var SyntheticUIEvent = _dereq_(111);
			var SyntheticWheelEvent = _dereq_(112);

			var emptyFunction = _dereq_(153);
			var getEventCharCode = _dereq_(125);
			var invariant = _dereq_(161);
			var keyOf = _dereq_(166);

			var topLevelTypes = EventConstants.topLevelTypes;

			var eventTypes = {
				abort: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onAbort: true }),
						captured: keyOf({ onAbortCapture: true })
					}
				},
				blur: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onBlur: true }),
						captured: keyOf({ onBlurCapture: true })
					}
				},
				canPlay: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onCanPlay: true }),
						captured: keyOf({ onCanPlayCapture: true })
					}
				},
				canPlayThrough: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onCanPlayThrough: true }),
						captured: keyOf({ onCanPlayThroughCapture: true })
					}
				},
				click: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onClick: true }),
						captured: keyOf({ onClickCapture: true })
					}
				},
				contextMenu: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onContextMenu: true }),
						captured: keyOf({ onContextMenuCapture: true })
					}
				},
				copy: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onCopy: true }),
						captured: keyOf({ onCopyCapture: true })
					}
				},
				cut: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onCut: true }),
						captured: keyOf({ onCutCapture: true })
					}
				},
				doubleClick: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onDoubleClick: true }),
						captured: keyOf({ onDoubleClickCapture: true })
					}
				},
				drag: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onDrag: true }),
						captured: keyOf({ onDragCapture: true })
					}
				},
				dragEnd: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onDragEnd: true }),
						captured: keyOf({ onDragEndCapture: true })
					}
				},
				dragEnter: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onDragEnter: true }),
						captured: keyOf({ onDragEnterCapture: true })
					}
				},
				dragExit: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onDragExit: true }),
						captured: keyOf({ onDragExitCapture: true })
					}
				},
				dragLeave: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onDragLeave: true }),
						captured: keyOf({ onDragLeaveCapture: true })
					}
				},
				dragOver: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onDragOver: true }),
						captured: keyOf({ onDragOverCapture: true })
					}
				},
				dragStart: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onDragStart: true }),
						captured: keyOf({ onDragStartCapture: true })
					}
				},
				drop: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onDrop: true }),
						captured: keyOf({ onDropCapture: true })
					}
				},
				durationChange: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onDurationChange: true }),
						captured: keyOf({ onDurationChangeCapture: true })
					}
				},
				emptied: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onEmptied: true }),
						captured: keyOf({ onEmptiedCapture: true })
					}
				},
				encrypted: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onEncrypted: true }),
						captured: keyOf({ onEncryptedCapture: true })
					}
				},
				ended: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onEnded: true }),
						captured: keyOf({ onEndedCapture: true })
					}
				},
				error: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onError: true }),
						captured: keyOf({ onErrorCapture: true })
					}
				},
				focus: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onFocus: true }),
						captured: keyOf({ onFocusCapture: true })
					}
				},
				input: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onInput: true }),
						captured: keyOf({ onInputCapture: true })
					}
				},
				keyDown: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onKeyDown: true }),
						captured: keyOf({ onKeyDownCapture: true })
					}
				},
				keyPress: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onKeyPress: true }),
						captured: keyOf({ onKeyPressCapture: true })
					}
				},
				keyUp: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onKeyUp: true }),
						captured: keyOf({ onKeyUpCapture: true })
					}
				},
				load: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onLoad: true }),
						captured: keyOf({ onLoadCapture: true })
					}
				},
				loadedData: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onLoadedData: true }),
						captured: keyOf({ onLoadedDataCapture: true })
					}
				},
				loadedMetadata: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onLoadedMetadata: true }),
						captured: keyOf({ onLoadedMetadataCapture: true })
					}
				},
				loadStart: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onLoadStart: true }),
						captured: keyOf({ onLoadStartCapture: true })
					}
				},
				// Note: We do not allow listening to mouseOver events. Instead, use the
				// onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
				mouseDown: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onMouseDown: true }),
						captured: keyOf({ onMouseDownCapture: true })
					}
				},
				mouseMove: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onMouseMove: true }),
						captured: keyOf({ onMouseMoveCapture: true })
					}
				},
				mouseOut: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onMouseOut: true }),
						captured: keyOf({ onMouseOutCapture: true })
					}
				},
				mouseOver: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onMouseOver: true }),
						captured: keyOf({ onMouseOverCapture: true })
					}
				},
				mouseUp: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onMouseUp: true }),
						captured: keyOf({ onMouseUpCapture: true })
					}
				},
				paste: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onPaste: true }),
						captured: keyOf({ onPasteCapture: true })
					}
				},
				pause: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onPause: true }),
						captured: keyOf({ onPauseCapture: true })
					}
				},
				play: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onPlay: true }),
						captured: keyOf({ onPlayCapture: true })
					}
				},
				playing: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onPlaying: true }),
						captured: keyOf({ onPlayingCapture: true })
					}
				},
				progress: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onProgress: true }),
						captured: keyOf({ onProgressCapture: true })
					}
				},
				rateChange: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onRateChange: true }),
						captured: keyOf({ onRateChangeCapture: true })
					}
				},
				reset: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onReset: true }),
						captured: keyOf({ onResetCapture: true })
					}
				},
				scroll: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onScroll: true }),
						captured: keyOf({ onScrollCapture: true })
					}
				},
				seeked: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onSeeked: true }),
						captured: keyOf({ onSeekedCapture: true })
					}
				},
				seeking: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onSeeking: true }),
						captured: keyOf({ onSeekingCapture: true })
					}
				},
				stalled: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onStalled: true }),
						captured: keyOf({ onStalledCapture: true })
					}
				},
				submit: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onSubmit: true }),
						captured: keyOf({ onSubmitCapture: true })
					}
				},
				suspend: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onSuspend: true }),
						captured: keyOf({ onSuspendCapture: true })
					}
				},
				timeUpdate: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onTimeUpdate: true }),
						captured: keyOf({ onTimeUpdateCapture: true })
					}
				},
				touchCancel: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onTouchCancel: true }),
						captured: keyOf({ onTouchCancelCapture: true })
					}
				},
				touchEnd: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onTouchEnd: true }),
						captured: keyOf({ onTouchEndCapture: true })
					}
				},
				touchMove: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onTouchMove: true }),
						captured: keyOf({ onTouchMoveCapture: true })
					}
				},
				touchStart: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onTouchStart: true }),
						captured: keyOf({ onTouchStartCapture: true })
					}
				},
				volumeChange: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onVolumeChange: true }),
						captured: keyOf({ onVolumeChangeCapture: true })
					}
				},
				waiting: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onWaiting: true }),
						captured: keyOf({ onWaitingCapture: true })
					}
				},
				wheel: {
					phasedRegistrationNames: {
						bubbled: keyOf({ onWheel: true }),
						captured: keyOf({ onWheelCapture: true })
					}
				}
			};

			var topLevelEventsToDispatchConfig = {
				topAbort: eventTypes.abort,
				topBlur: eventTypes.blur,
				topCanPlay: eventTypes.canPlay,
				topCanPlayThrough: eventTypes.canPlayThrough,
				topClick: eventTypes.click,
				topContextMenu: eventTypes.contextMenu,
				topCopy: eventTypes.copy,
				topCut: eventTypes.cut,
				topDoubleClick: eventTypes.doubleClick,
				topDrag: eventTypes.drag,
				topDragEnd: eventTypes.dragEnd,
				topDragEnter: eventTypes.dragEnter,
				topDragExit: eventTypes.dragExit,
				topDragLeave: eventTypes.dragLeave,
				topDragOver: eventTypes.dragOver,
				topDragStart: eventTypes.dragStart,
				topDrop: eventTypes.drop,
				topDurationChange: eventTypes.durationChange,
				topEmptied: eventTypes.emptied,
				topEncrypted: eventTypes.encrypted,
				topEnded: eventTypes.ended,
				topError: eventTypes.error,
				topFocus: eventTypes.focus,
				topInput: eventTypes.input,
				topKeyDown: eventTypes.keyDown,
				topKeyPress: eventTypes.keyPress,
				topKeyUp: eventTypes.keyUp,
				topLoad: eventTypes.load,
				topLoadedData: eventTypes.loadedData,
				topLoadedMetadata: eventTypes.loadedMetadata,
				topLoadStart: eventTypes.loadStart,
				topMouseDown: eventTypes.mouseDown,
				topMouseMove: eventTypes.mouseMove,
				topMouseOut: eventTypes.mouseOut,
				topMouseOver: eventTypes.mouseOver,
				topMouseUp: eventTypes.mouseUp,
				topPaste: eventTypes.paste,
				topPause: eventTypes.pause,
				topPlay: eventTypes.play,
				topPlaying: eventTypes.playing,
				topProgress: eventTypes.progress,
				topRateChange: eventTypes.rateChange,
				topReset: eventTypes.reset,
				topScroll: eventTypes.scroll,
				topSeeked: eventTypes.seeked,
				topSeeking: eventTypes.seeking,
				topStalled: eventTypes.stalled,
				topSubmit: eventTypes.submit,
				topSuspend: eventTypes.suspend,
				topTimeUpdate: eventTypes.timeUpdate,
				topTouchCancel: eventTypes.touchCancel,
				topTouchEnd: eventTypes.touchEnd,
				topTouchMove: eventTypes.touchMove,
				topTouchStart: eventTypes.touchStart,
				topVolumeChange: eventTypes.volumeChange,
				topWaiting: eventTypes.waiting,
				topWheel: eventTypes.wheel
			};

			for (var type in topLevelEventsToDispatchConfig) {
				topLevelEventsToDispatchConfig[type].dependencies = [type];
			}

			var ON_CLICK_KEY = keyOf({ onClick: null });
			var onClickListeners = {};

			var SimpleEventPlugin = {

				eventTypes: eventTypes,

				/**
				 * @param {string} topLevelType Record from `EventConstants`.
				 * @param {DOMEventTarget} topLevelTarget The listening component root node.
				 * @param {string} topLevelTargetID ID of `topLevelTarget`.
				 * @param {object} nativeEvent Native browser event.
				 * @return {*} An accumulation of synthetic events.
				 * @see {EventPluginHub.extractEvents}
				 */
				extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {
					var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
					if (!dispatchConfig) {
						return null;
					}
					var EventConstructor;
					switch (topLevelType) {
						case topLevelTypes.topAbort:
						case topLevelTypes.topCanPlay:
						case topLevelTypes.topCanPlayThrough:
						case topLevelTypes.topDurationChange:
						case topLevelTypes.topEmptied:
						case topLevelTypes.topEncrypted:
						case topLevelTypes.topEnded:
						case topLevelTypes.topError:
						case topLevelTypes.topInput:
						case topLevelTypes.topLoad:
						case topLevelTypes.topLoadedData:
						case topLevelTypes.topLoadedMetadata:
						case topLevelTypes.topLoadStart:
						case topLevelTypes.topPause:
						case topLevelTypes.topPlay:
						case topLevelTypes.topPlaying:
						case topLevelTypes.topProgress:
						case topLevelTypes.topRateChange:
						case topLevelTypes.topReset:
						case topLevelTypes.topSeeked:
						case topLevelTypes.topSeeking:
						case topLevelTypes.topStalled:
						case topLevelTypes.topSubmit:
						case topLevelTypes.topSuspend:
						case topLevelTypes.topTimeUpdate:
						case topLevelTypes.topVolumeChange:
						case topLevelTypes.topWaiting:
							// HTML Events
							// @see http://www.w3.org/TR/html5/index.html#events-0
							EventConstructor = SyntheticEvent;
							break;
						case topLevelTypes.topKeyPress:
							// FireFox creates a keypress event for function keys too. This removes
							// the unwanted keypress events. Enter is however both printable and
							// non-printable. One would expect Tab to be as well (but it isn't).
							if (getEventCharCode(nativeEvent) === 0) {
								return null;
							}
							/* falls through */
						case topLevelTypes.topKeyDown:
						case topLevelTypes.topKeyUp:
							EventConstructor = SyntheticKeyboardEvent;
							break;
						case topLevelTypes.topBlur:
						case topLevelTypes.topFocus:
							EventConstructor = SyntheticFocusEvent;
							break;
						case topLevelTypes.topClick:
							// Firefox creates a click event on right mouse clicks. This removes the
							// unwanted click events.
							if (nativeEvent.button === 2) {
								return null;
							}
							/* falls through */
						case topLevelTypes.topContextMenu:
						case topLevelTypes.topDoubleClick:
						case topLevelTypes.topMouseDown:
						case topLevelTypes.topMouseMove:
						case topLevelTypes.topMouseOut:
						case topLevelTypes.topMouseOver:
						case topLevelTypes.topMouseUp:
							EventConstructor = SyntheticMouseEvent;
							break;
						case topLevelTypes.topDrag:
						case topLevelTypes.topDragEnd:
						case topLevelTypes.topDragEnter:
						case topLevelTypes.topDragExit:
						case topLevelTypes.topDragLeave:
						case topLevelTypes.topDragOver:
						case topLevelTypes.topDragStart:
						case topLevelTypes.topDrop:
							EventConstructor = SyntheticDragEvent;
							break;
						case topLevelTypes.topTouchCancel:
						case topLevelTypes.topTouchEnd:
						case topLevelTypes.topTouchMove:
						case topLevelTypes.topTouchStart:
							EventConstructor = SyntheticTouchEvent;
							break;
						case topLevelTypes.topScroll:
							EventConstructor = SyntheticUIEvent;
							break;
						case topLevelTypes.topWheel:
							EventConstructor = SyntheticWheelEvent;
							break;
						case topLevelTypes.topCopy:
						case topLevelTypes.topCut:
						case topLevelTypes.topPaste:
							EventConstructor = SyntheticClipboardEvent;
							break;
					}
					!EventConstructor ? "development" !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : invariant(false) : undefined;
					var event = EventConstructor.getPooled(dispatchConfig, topLevelTargetID, nativeEvent, nativeEventTarget);
					EventPropagators.accumulateTwoPhaseDispatches(event);
					return event;
				},

				didPutListener: function (id, registrationName, listener) {
					// Mobile Safari does not fire properly bubble click events on
					// non-interactive elements, which means delegated click listeners do not
					// fire. The workaround for this bug involves attaching an empty click
					// listener on the target node.
					if (registrationName === ON_CLICK_KEY) {
						var node = ReactMount.getNode(id);
						if (!onClickListeners[id]) {
							onClickListeners[id] = EventListener.listen(node, 'click', emptyFunction);
						}
					}
				},

				willDeleteListener: function (id, registrationName) {
					if (registrationName === ON_CLICK_KEY) {
						onClickListeners[id].remove();
						delete onClickListeners[id];
					}
				}

			};

			module.exports = SimpleEventPlugin;
		}, { "102": 102, "104": 104, "105": 105, "106": 106, "108": 108, "109": 109, "110": 110, "111": 111, "112": 112, "125": 125, "146": 146, "15": 15, "153": 153, "161": 161, "166": 166, "19": 19, "72": 72 }], 102: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule SyntheticClipboardEvent
			 * @typechecks static-only
			 */

			'use strict';

			var SyntheticEvent = _dereq_(105);

			/**
			 * @interface Event
			 * @see http://www.w3.org/TR/clipboard-apis/
			 */
			var ClipboardEventInterface = {
				clipboardData: function (event) {
					return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
				}
			};

			/**
			 * @param {object} dispatchConfig Configuration used to dispatch this event.
			 * @param {string} dispatchMarker Marker identifying the event target.
			 * @param {object} nativeEvent Native browser event.
			 * @extends {SyntheticUIEvent}
			 */
			function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
				SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
			}

			SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

			module.exports = SyntheticClipboardEvent;
		}, { "105": 105 }], 103: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule SyntheticCompositionEvent
			 * @typechecks static-only
			 */

			'use strict';

			var SyntheticEvent = _dereq_(105);

			/**
			 * @interface Event
			 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
			 */
			var CompositionEventInterface = {
				data: null
			};

			/**
			 * @param {object} dispatchConfig Configuration used to dispatch this event.
			 * @param {string} dispatchMarker Marker identifying the event target.
			 * @param {object} nativeEvent Native browser event.
			 * @extends {SyntheticUIEvent}
			 */
			function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
				SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
			}

			SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

			module.exports = SyntheticCompositionEvent;
		}, { "105": 105 }], 104: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule SyntheticDragEvent
			 * @typechecks static-only
			 */

			'use strict';

			var SyntheticMouseEvent = _dereq_(109);

			/**
			 * @interface DragEvent
			 * @see http://www.w3.org/TR/DOM-Level-3-Events/
			 */
			var DragEventInterface = {
				dataTransfer: null
			};

			/**
			 * @param {object} dispatchConfig Configuration used to dispatch this event.
			 * @param {string} dispatchMarker Marker identifying the event target.
			 * @param {object} nativeEvent Native browser event.
			 * @extends {SyntheticUIEvent}
			 */
			function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
				SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
			}

			SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

			module.exports = SyntheticDragEvent;
		}, { "109": 109 }], 105: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule SyntheticEvent
			 * @typechecks static-only
			 */

			'use strict';

			var PooledClass = _dereq_(25);

			var assign = _dereq_(24);
			var emptyFunction = _dereq_(153);
			var warning = _dereq_(173);

			/**
			 * @interface Event
			 * @see http://www.w3.org/TR/DOM-Level-3-Events/
			 */
			var EventInterface = {
				type: null,
				target: null,
				// currentTarget is set when dispatching; no use in copying it here
				currentTarget: emptyFunction.thatReturnsNull,
				eventPhase: null,
				bubbles: null,
				cancelable: null,
				timeStamp: function (event) {
					return event.timeStamp || Date.now();
				},
				defaultPrevented: null,
				isTrusted: null
			};

			/**
			 * Synthetic events are dispatched by event plugins, typically in response to a
			 * top-level event delegation handler.
			 *
			 * These systems should generally use pooling to reduce the frequency of garbage
			 * collection. The system should check `isPersistent` to determine whether the
			 * event should be released into the pool after being dispatched. Users that
			 * need a persisted event should invoke `persist`.
			 *
			 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
			 * normalizing browser quirks. Subclasses do not necessarily have to implement a
			 * DOM interface; custom application-specific events can also subclass this.
			 *
			 * @param {object} dispatchConfig Configuration used to dispatch this event.
			 * @param {string} dispatchMarker Marker identifying the event target.
			 * @param {object} nativeEvent Native browser event.
			 */
			function SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
				this.dispatchConfig = dispatchConfig;
				this.dispatchMarker = dispatchMarker;
				this.nativeEvent = nativeEvent;

				var Interface = this.constructor.Interface;
				for (var propName in Interface) {
					if (!Interface.hasOwnProperty(propName)) {
						continue;
					}
					var normalize = Interface[propName];
					if (normalize) {
						this[propName] = normalize(nativeEvent);
					} else {
						if (propName === 'target') {
							this.target = nativeEventTarget;
						} else {
							this[propName] = nativeEvent[propName];
						}
					}
				}

				var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
				if (defaultPrevented) {
					this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
				} else {
					this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
				}
				this.isPropagationStopped = emptyFunction.thatReturnsFalse;
			}

			assign(SyntheticEvent.prototype, {

				preventDefault: function () {
					this.defaultPrevented = true;
					var event = this.nativeEvent;
					if ("development" !== 'production') {
						"development" !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re calling `preventDefault` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;
					}
					if (!event) {
						return;
					}

					if (event.preventDefault) {
						event.preventDefault();
					} else {
						event.returnValue = false;
					}
					this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
				},

				stopPropagation: function () {
					var event = this.nativeEvent;
					if ("development" !== 'production') {
						"development" !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re calling `stopPropagation` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;
					}
					if (!event) {
						return;
					}

					if (event.stopPropagation) {
						event.stopPropagation();
					} else {
						event.cancelBubble = true;
					}
					this.isPropagationStopped = emptyFunction.thatReturnsTrue;
				},

				/**
				 * We release all dispatched `SyntheticEvent`s after each event loop, adding
				 * them back into the pool. This allows a way to hold onto a reference that
				 * won't be added back into the pool.
				 */
				persist: function () {
					this.isPersistent = emptyFunction.thatReturnsTrue;
				},

				/**
				 * Checks if this event should be released back into the pool.
				 *
				 * @return {boolean} True if this should not be released, false otherwise.
				 */
				isPersistent: emptyFunction.thatReturnsFalse,

				/**
				 * `PooledClass` looks for `destructor` on each instance it releases.
				 */
				destructor: function () {
					var Interface = this.constructor.Interface;
					for (var propName in Interface) {
						this[propName] = null;
					}
					this.dispatchConfig = null;
					this.dispatchMarker = null;
					this.nativeEvent = null;
				}

			});

			SyntheticEvent.Interface = EventInterface;

			/**
			 * Helper to reduce boilerplate when creating subclasses.
			 *
			 * @param {function} Class
			 * @param {?object} Interface
			 */
			SyntheticEvent.augmentClass = function (Class, Interface) {
				var Super = this;

				var prototype = Object.create(Super.prototype);
				assign(prototype, Class.prototype);
				Class.prototype = prototype;
				Class.prototype.constructor = Class;

				Class.Interface = assign({}, Super.Interface, Interface);
				Class.augmentClass = Super.augmentClass;

				PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
			};

			PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

			module.exports = SyntheticEvent;
		}, { "153": 153, "173": 173, "24": 24, "25": 25 }], 106: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule SyntheticFocusEvent
			 * @typechecks static-only
			 */

			'use strict';

			var SyntheticUIEvent = _dereq_(111);

			/**
			 * @interface FocusEvent
			 * @see http://www.w3.org/TR/DOM-Level-3-Events/
			 */
			var FocusEventInterface = {
				relatedTarget: null
			};

			/**
			 * @param {object} dispatchConfig Configuration used to dispatch this event.
			 * @param {string} dispatchMarker Marker identifying the event target.
			 * @param {object} nativeEvent Native browser event.
			 * @extends {SyntheticUIEvent}
			 */
			function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
				SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
			}

			SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

			module.exports = SyntheticFocusEvent;
		}, { "111": 111 }], 107: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule SyntheticInputEvent
			 * @typechecks static-only
			 */

			'use strict';

			var SyntheticEvent = _dereq_(105);

			/**
			 * @interface Event
			 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
			 *      /#events-inputevents
			 */
			var InputEventInterface = {
				data: null
			};

			/**
			 * @param {object} dispatchConfig Configuration used to dispatch this event.
			 * @param {string} dispatchMarker Marker identifying the event target.
			 * @param {object} nativeEvent Native browser event.
			 * @extends {SyntheticUIEvent}
			 */
			function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
				SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
			}

			SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);

			module.exports = SyntheticInputEvent;
		}, { "105": 105 }], 108: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule SyntheticKeyboardEvent
			 * @typechecks static-only
			 */

			'use strict';

			var SyntheticUIEvent = _dereq_(111);

			var getEventCharCode = _dereq_(125);
			var getEventKey = _dereq_(126);
			var getEventModifierState = _dereq_(127);

			/**
			 * @interface KeyboardEvent
			 * @see http://www.w3.org/TR/DOM-Level-3-Events/
			 */
			var KeyboardEventInterface = {
				key: getEventKey,
				location: null,
				ctrlKey: null,
				shiftKey: null,
				altKey: null,
				metaKey: null,
				repeat: null,
				locale: null,
				getModifierState: getEventModifierState,
				// Legacy Interface
				charCode: function (event) {
					// `charCode` is the result of a KeyPress event and represents the value of
					// the actual printable character.

					// KeyPress is deprecated, but its replacement is not yet final and not
					// implemented in any major browser. Only KeyPress has charCode.
					if (event.type === 'keypress') {
						return getEventCharCode(event);
					}
					return 0;
				},
				keyCode: function (event) {
					// `keyCode` is the result of a KeyDown/Up event and represents the value of
					// physical keyboard key.

					// The actual meaning of the value depends on the users' keyboard layout
					// which cannot be detected. Assuming that it is a US keyboard layout
					// provides a surprisingly accurate mapping for US and European users.
					// Due to this, it is left to the user to implement at this time.
					if (event.type === 'keydown' || event.type === 'keyup') {
						return event.keyCode;
					}
					return 0;
				},
				which: function (event) {
					// `which` is an alias for either `keyCode` or `charCode` depending on the
					// type of the event.
					if (event.type === 'keypress') {
						return getEventCharCode(event);
					}
					if (event.type === 'keydown' || event.type === 'keyup') {
						return event.keyCode;
					}
					return 0;
				}
			};

			/**
			 * @param {object} dispatchConfig Configuration used to dispatch this event.
			 * @param {string} dispatchMarker Marker identifying the event target.
			 * @param {object} nativeEvent Native browser event.
			 * @extends {SyntheticUIEvent}
			 */
			function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
				SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
			}

			SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

			module.exports = SyntheticKeyboardEvent;
		}, { "111": 111, "125": 125, "126": 126, "127": 127 }], 109: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule SyntheticMouseEvent
			 * @typechecks static-only
			 */

			'use strict';

			var SyntheticUIEvent = _dereq_(111);
			var ViewportMetrics = _dereq_(114);

			var getEventModifierState = _dereq_(127);

			/**
			 * @interface MouseEvent
			 * @see http://www.w3.org/TR/DOM-Level-3-Events/
			 */
			var MouseEventInterface = {
				screenX: null,
				screenY: null,
				clientX: null,
				clientY: null,
				ctrlKey: null,
				shiftKey: null,
				altKey: null,
				metaKey: null,
				getModifierState: getEventModifierState,
				button: function (event) {
					// Webkit, Firefox, IE9+
					// which:  1 2 3
					// button: 0 1 2 (standard)
					var button = event.button;
					if ('which' in event) {
						return button;
					}
					// IE<9
					// which:  undefined
					// button: 0 0 0
					// button: 1 4 2 (onmouseup)
					return button === 2 ? 2 : button === 4 ? 1 : 0;
				},
				buttons: null,
				relatedTarget: function (event) {
					return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
				},
				// "Proprietary" Interface.
				pageX: function (event) {
					return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
				},
				pageY: function (event) {
					return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
				}
			};

			/**
			 * @param {object} dispatchConfig Configuration used to dispatch this event.
			 * @param {string} dispatchMarker Marker identifying the event target.
			 * @param {object} nativeEvent Native browser event.
			 * @extends {SyntheticUIEvent}
			 */
			function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
				SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
			}

			SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

			module.exports = SyntheticMouseEvent;
		}, { "111": 111, "114": 114, "127": 127 }], 110: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule SyntheticTouchEvent
			 * @typechecks static-only
			 */

			'use strict';

			var SyntheticUIEvent = _dereq_(111);

			var getEventModifierState = _dereq_(127);

			/**
			 * @interface TouchEvent
			 * @see http://www.w3.org/TR/touch-events/
			 */
			var TouchEventInterface = {
				touches: null,
				targetTouches: null,
				changedTouches: null,
				altKey: null,
				metaKey: null,
				ctrlKey: null,
				shiftKey: null,
				getModifierState: getEventModifierState
			};

			/**
			 * @param {object} dispatchConfig Configuration used to dispatch this event.
			 * @param {string} dispatchMarker Marker identifying the event target.
			 * @param {object} nativeEvent Native browser event.
			 * @extends {SyntheticUIEvent}
			 */
			function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
				SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
			}

			SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

			module.exports = SyntheticTouchEvent;
		}, { "111": 111, "127": 127 }], 111: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule SyntheticUIEvent
			 * @typechecks static-only
			 */

			'use strict';

			var SyntheticEvent = _dereq_(105);

			var getEventTarget = _dereq_(128);

			/**
			 * @interface UIEvent
			 * @see http://www.w3.org/TR/DOM-Level-3-Events/
			 */
			var UIEventInterface = {
				view: function (event) {
					if (event.view) {
						return event.view;
					}

					var target = getEventTarget(event);
					if (target != null && target.window === target) {
						// target is a window object
						return target;
					}

					var doc = target.ownerDocument;
					// TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
					if (doc) {
						return doc.defaultView || doc.parentWindow;
					} else {
						return window;
					}
				},
				detail: function (event) {
					return event.detail || 0;
				}
			};

			/**
			 * @param {object} dispatchConfig Configuration used to dispatch this event.
			 * @param {string} dispatchMarker Marker identifying the event target.
			 * @param {object} nativeEvent Native browser event.
			 * @extends {SyntheticEvent}
			 */
			function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
				SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
			}

			SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

			module.exports = SyntheticUIEvent;
		}, { "105": 105, "128": 128 }], 112: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule SyntheticWheelEvent
			 * @typechecks static-only
			 */

			'use strict';

			var SyntheticMouseEvent = _dereq_(109);

			/**
			 * @interface WheelEvent
			 * @see http://www.w3.org/TR/DOM-Level-3-Events/
			 */
			var WheelEventInterface = {
				deltaX: function (event) {
					return 'deltaX' in event ? event.deltaX :
					// Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
					'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
				},
				deltaY: function (event) {
					return 'deltaY' in event ? event.deltaY :
					// Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
					'wheelDeltaY' in event ? -event.wheelDeltaY :
					// Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
					'wheelDelta' in event ? -event.wheelDelta : 0;
				},
				deltaZ: null,

				// Browsers without "deltaMode" is reporting in raw wheel delta where one
				// notch on the scroll is always +/- 120, roughly equivalent to pixels.
				// A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
				// ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
				deltaMode: null
			};

			/**
			 * @param {object} dispatchConfig Configuration used to dispatch this event.
			 * @param {string} dispatchMarker Marker identifying the event target.
			 * @param {object} nativeEvent Native browser event.
			 * @extends {SyntheticMouseEvent}
			 */
			function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
				SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
			}

			SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

			module.exports = SyntheticWheelEvent;
		}, { "109": 109 }], 113: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule Transaction
			 */

			'use strict';

			var invariant = _dereq_(161);

			/**
			 * `Transaction` creates a black box that is able to wrap any method such that
			 * certain invariants are maintained before and after the method is invoked
			 * (Even if an exception is thrown while invoking the wrapped method). Whoever
			 * instantiates a transaction can provide enforcers of the invariants at
			 * creation time. The `Transaction` class itself will supply one additional
			 * automatic invariant for you - the invariant that any transaction instance
			 * should not be run while it is already being run. You would typically create a
			 * single instance of a `Transaction` for reuse multiple times, that potentially
			 * is used to wrap several different methods. Wrappers are extremely simple -
			 * they only require implementing two methods.
			 *
			 * <pre>
			 *                       wrappers (injected at creation time)
			 *                                      +        +
			 *                                      |        |
			 *                    +-----------------|--------|--------------+
			 *                    |                 v        |              |
			 *                    |      +---------------+   |              |
			 *                    |   +--|    wrapper1   |---|----+         |
			 *                    |   |  +---------------+   v    |         |
			 *                    |   |          +-------------+  |         |
			 *                    |   |     +----|   wrapper2  |--------+   |
			 *                    |   |     |    +-------------+  |     |   |
			 *                    |   |     |                     |     |   |
			 *                    |   v     v                     v     v   | wrapper
			 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
			 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
			 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
			 *                    | |   | |   |   |         |   |   | |   | |
			 *                    | |   | |   |   |         |   |   | |   | |
			 *                    | |   | |   |   |         |   |   | |   | |
			 *                    | +---+ +---+   +---------+   +---+ +---+ |
			 *                    |  initialize                    close    |
			 *                    +-----------------------------------------+
			 * </pre>
			 *
			 * Use cases:
			 * - Preserving the input selection ranges before/after reconciliation.
			 *   Restoring selection even in the event of an unexpected error.
			 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
			 *   while guaranteeing that afterwards, the event system is reactivated.
			 * - Flushing a queue of collected DOM mutations to the main UI thread after a
			 *   reconciliation takes place in a worker thread.
			 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
			 *   content.
			 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
			 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
			 * - (Future use case): Layout calculations before and after DOM updates.
			 *
			 * Transactional plugin API:
			 * - A module that has an `initialize` method that returns any precomputation.
			 * - and a `close` method that accepts the precomputation. `close` is invoked
			 *   when the wrapped process is completed, or has failed.
			 *
			 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
			 * that implement `initialize` and `close`.
			 * @return {Transaction} Single transaction for reuse in thread.
			 *
			 * @class Transaction
			 */
			var Mixin = {
				/**
				 * Sets up this instance so that it is prepared for collecting metrics. Does
				 * so such that this setup method may be used on an instance that is already
				 * initialized, in a way that does not consume additional memory upon reuse.
				 * That can be useful if you decide to make your subclass of this mixin a
				 * "PooledClass".
				 */
				reinitializeTransaction: function () {
					this.transactionWrappers = this.getTransactionWrappers();
					if (this.wrapperInitData) {
						this.wrapperInitData.length = 0;
					} else {
						this.wrapperInitData = [];
					}
					this._isInTransaction = false;
				},

				_isInTransaction: false,

				/**
				 * @abstract
				 * @return {Array<TransactionWrapper>} Array of transaction wrappers.
				 */
				getTransactionWrappers: null,

				isInTransaction: function () {
					return !!this._isInTransaction;
				},

				/**
				 * Executes the function within a safety window. Use this for the top level
				 * methods that result in large amounts of computation/mutations that would
				 * need to be safety checked. The optional arguments helps prevent the need
				 * to bind in many cases.
				 *
				 * @param {function} method Member of scope to call.
				 * @param {Object} scope Scope to invoke from.
				 * @param {Object?=} a Argument to pass to the method.
				 * @param {Object?=} b Argument to pass to the method.
				 * @param {Object?=} c Argument to pass to the method.
				 * @param {Object?=} d Argument to pass to the method.
				 * @param {Object?=} e Argument to pass to the method.
				 * @param {Object?=} f Argument to pass to the method.
				 *
				 * @return {*} Return value from `method`.
				 */
				perform: function (method, scope, a, b, c, d, e, f) {
					!!this.isInTransaction() ? "development" !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there ' + 'is already an outstanding transaction.') : invariant(false) : undefined;
					var errorThrown;
					var ret;
					try {
						this._isInTransaction = true;
						// Catching errors makes debugging more difficult, so we start with
						// errorThrown set to true before setting it to false after calling
						// close -- if it's still set to true in the finally block, it means
						// one of these calls threw.
						errorThrown = true;
						this.initializeAll(0);
						ret = method.call(scope, a, b, c, d, e, f);
						errorThrown = false;
					} finally {
						try {
							if (errorThrown) {
								// If `method` throws, prefer to show that stack trace over any thrown
								// by invoking `closeAll`.
								try {
									this.closeAll(0);
								} catch (err) { }
							} else {
								// Since `method` didn't throw, we don't want to silence the exception
								// here.
								this.closeAll(0);
							}
						} finally {
							this._isInTransaction = false;
						}
					}
					return ret;
				},

				initializeAll: function (startIndex) {
					var transactionWrappers = this.transactionWrappers;
					for (var i = startIndex; i < transactionWrappers.length; i++) {
						var wrapper = transactionWrappers[i];
						try {
							// Catching errors makes debugging more difficult, so we start with the
							// OBSERVED_ERROR state before overwriting it with the real return value
							// of initialize -- if it's still set to OBSERVED_ERROR in the finally
							// block, it means wrapper.initialize threw.
							this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
							this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
						} finally {
							if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
								// The initializer for wrapper i threw an error; initialize the
								// remaining wrappers but silence any exceptions from them to ensure
								// that the first error is the one to bubble up.
								try {
									this.initializeAll(i + 1);
								} catch (err) { }
							}
						}
					}
				},

				/**
				 * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
				 * them the respective return values of `this.transactionWrappers.init[i]`
				 * (`close`rs that correspond to initializers that failed will not be
				 * invoked).
				 */
				closeAll: function (startIndex) {
					!this.isInTransaction() ? "development" !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : invariant(false) : undefined;
					var transactionWrappers = this.transactionWrappers;
					for (var i = startIndex; i < transactionWrappers.length; i++) {
						var wrapper = transactionWrappers[i];
						var initData = this.wrapperInitData[i];
						var errorThrown;
						try {
							// Catching errors makes debugging more difficult, so we start with
							// errorThrown set to true before setting it to false after calling
							// close -- if it's still set to true in the finally block, it means
							// wrapper.close threw.
							errorThrown = true;
							if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {
								wrapper.close.call(this, initData);
							}
							errorThrown = false;
						} finally {
							if (errorThrown) {
								// The closer for wrapper i threw an error; close the remaining
								// wrappers but silence any exceptions from them to ensure that the
								// first error is the one to bubble up.
								try {
									this.closeAll(i + 1);
								} catch (e) { }
							}
						}
					}
					this.wrapperInitData.length = 0;
				}
			};

			var Transaction = {

				Mixin: Mixin,

				/**
				 * Token to look for to determine if an error occurred.
				 */
				OBSERVED_ERROR: {}

			};

			module.exports = Transaction;
		}, { "161": 161 }], 114: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ViewportMetrics
			 */

			'use strict';

			var ViewportMetrics = {

				currentScrollLeft: 0,

				currentScrollTop: 0,

				refreshScrollValues: function (scrollPosition) {
					ViewportMetrics.currentScrollLeft = scrollPosition.x;
					ViewportMetrics.currentScrollTop = scrollPosition.y;
				}

			};

			module.exports = ViewportMetrics;
		}, {}], 115: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2014-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule accumulateInto
			 */

			'use strict';

			var invariant = _dereq_(161);

			/**
			 *
			 * Accumulates items that must not be null or undefined into the first one. This
			 * is used to conserve memory by avoiding array allocations, and thus sacrifices
			 * API cleanness. Since `current` can be null before being passed in and not
			 * null after this function, make sure to assign it back to `current`:
			 *
			 * `a = accumulateInto(a, b);`
			 *
			 * This API should be sparingly used. Try `accumulate` for something cleaner.
			 *
			 * @return {*|array<*>} An accumulation of items.
			 */

			function accumulateInto(current, next) {
				!(next != null) ? "development" !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : invariant(false) : undefined;
				if (current == null) {
					return next;
				}

				// Both are not empty. Warning: Never call x.concat(y) when you are not
				// certain that x is an Array (x could be a string with concat method).
				var currentIsArray = Array.isArray(current);
				var nextIsArray = Array.isArray(next);

				if (currentIsArray && nextIsArray) {
					current.push.apply(current, next);
					return current;
				}

				if (currentIsArray) {
					current.push(next);
					return current;
				}

				if (nextIsArray) {
					// A bit too dangerous to mutate `next`.
					return [current].concat(next);
				}

				return [current, next];
			}

			module.exports = accumulateInto;
		}, { "161": 161 }], 116: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule adler32
			 */

			'use strict';

			var MOD = 65521;

			// adler32 is not cryptographically strong, and is only used to sanity check that
			// markup generated on the server matches the markup generated on the client.
			// This implementation (a modified version of the SheetJS version) has been optimized
			// for our use case, at the expense of conforming to the adler32 specification
			// for non-ascii inputs.
			function adler32(data) {
				var a = 1;
				var b = 0;
				var i = 0;
				var l = data.length;
				var m = l & ~0x3;
				while (i < m) {
					for (; i < Math.min(i + 4096, m) ; i += 4) {
						b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
					}
					a %= MOD;
					b %= MOD;
				}
				for (; i < l; i++) {
					b += a += data.charCodeAt(i);
				}
				a %= MOD;
				b %= MOD;
				return a | b << 16;
			}

			module.exports = adler32;
		}, {}], 117: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule canDefineProperty
			 */

			'use strict';

			var canDefineProperty = false;
			if ("development" !== 'production') {
				try {
					Object.defineProperty({}, 'x', { get: function () { } });
					canDefineProperty = true;
				} catch (x) {
					// IE will fail on defineProperty
				}
			}

			module.exports = canDefineProperty;
		}, {}], 118: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @typechecks static-only
			 * @providesModule cloneWithProps
			 */

			'use strict';

			var ReactElement = _dereq_(57);
			var ReactPropTransferer = _dereq_(79);

			var keyOf = _dereq_(166);
			var warning = _dereq_(173);

			var CHILDREN_PROP = keyOf({ children: null });

			var didDeprecatedWarn = false;

			/**
			 * Sometimes you want to change the props of a child passed to you. Usually
			 * this is to add a CSS class.
			 *
			 * @param {ReactElement} child child element you'd like to clone
			 * @param {object} props props you'd like to modify. className and style will be
			 * merged automatically.
			 * @return {ReactElement} a clone of child with props merged in.
			 * @deprecated
			 */
			function cloneWithProps(child, props) {
				if ("development" !== 'production') {
					"development" !== 'production' ? warning(didDeprecatedWarn, 'cloneWithProps(...) is deprecated. ' + 'Please use React.cloneElement instead.') : undefined;
					didDeprecatedWarn = true;
					"development" !== 'production' ? warning(!child.ref, 'You are calling cloneWithProps() on a child with a ref. This is ' + 'dangerous because you\'re creating a new child which will not be ' + 'added as a ref to its parent.') : undefined;
				}

				var newProps = ReactPropTransferer.mergeProps(props, child.props);

				// Use `child.props.children` if it is provided.
				if (!newProps.hasOwnProperty(CHILDREN_PROP) && child.props.hasOwnProperty(CHILDREN_PROP)) {
					newProps.children = child.props.children;
				}

				// The current API doesn't retain _owner, which is why this
				// doesn't use ReactElement.cloneAndReplaceProps.
				return ReactElement.createElement(child.type, newProps);
			}

			module.exports = cloneWithProps;
		}, { "166": 166, "173": 173, "57": 57, "79": 79 }], 119: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule dangerousStyleValue
			 * @typechecks static-only
			 */

			'use strict';

			var CSSProperty = _dereq_(4);

			var isUnitlessNumber = CSSProperty.isUnitlessNumber;

			/**
			 * Convert a value into the proper css writable value. The style name `name`
			 * should be logical (no hyphens), as specified
			 * in `CSSProperty.isUnitlessNumber`.
			 *
			 * @param {string} name CSS property name such as `topMargin`.
			 * @param {*} value CSS property value such as `10px`.
			 * @return {string} Normalized style value with dimensions applied.
			 */
			function dangerousStyleValue(name, value) {
				// Note that we've removed escapeTextForBrowser() calls here since the
				// whole string will be escaped when the attribute is injected into
				// the markup. If you provide unsafe user data here they can inject
				// arbitrary CSS which may be problematic (I couldn't repro this):
				// https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
				// http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
				// This is not an XSS hole but instead a potential CSS injection issue
				// which has lead to a greater discussion about how we're going to
				// trust URLs moving forward. See #2115901

				var isEmpty = value == null || typeof value === 'boolean' || value === '';
				if (isEmpty) {
					return '';
				}

				var isNonNumeric = isNaN(value);
				if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
					return '' + value; // cast to string
				}

				if (typeof value === 'string') {
					value = value.trim();
				}
				return value + 'px';
			}

			module.exports = dangerousStyleValue;
		}, { "4": 4 }], 120: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule deprecated
			 */

			'use strict';

			var assign = _dereq_(24);
			var warning = _dereq_(173);

			/**
			 * This will log a single deprecation notice per function and forward the call
			 * on to the new API.
			 *
			 * @param {string} fnName The name of the function
			 * @param {string} newModule The module that fn will exist in
			 * @param {string} newPackage The module that fn will exist in
			 * @param {*} ctx The context this forwarded call should run in
			 * @param {function} fn The function to forward on to
			 * @return {function} The function that will warn once and then call fn
			 */
			function deprecated(fnName, newModule, newPackage, ctx, fn) {
				var warned = false;
				if ("development" !== 'production') {
					var newFn = function () {
						"development" !== 'production' ? warning(warned,
						// Require examples in this string must be split to prevent React's
						// build tools from mistaking them for real requires.
						// Otherwise the build tools will attempt to build a '%s' module.
						'React.%s is deprecated. Please use %s.%s from require' + '(\'%s\') ' + 'instead.', fnName, newModule, fnName, newPackage) : undefined;
						warned = true;
						return fn.apply(ctx, arguments);
					};
					// We need to make sure all properties of the original fn are copied over.
					// In particular, this is needed to support PropTypes
					return assign(newFn, fn);
				}

				return fn;
			}

			module.exports = deprecated;
		}, { "173": 173, "24": 24 }], 121: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule escapeTextContentForBrowser
			 */

			'use strict';

			var ESCAPE_LOOKUP = {
				'&': '&amp;',
				'>': '&gt;',
				'<': '&lt;',
				'"': '&quot;',
				'\'': '&#x27;'
			};

			var ESCAPE_REGEX = /[&><"']/g;

			function escaper(match) {
				return ESCAPE_LOOKUP[match];
			}

			/**
			 * Escapes text to prevent scripting attacks.
			 *
			 * @param {*} text Text value to escape.
			 * @return {string} An escaped string.
			 */
			function escapeTextContentForBrowser(text) {
				return ('' + text).replace(ESCAPE_REGEX, escaper);
			}

			module.exports = escapeTextContentForBrowser;
		}, {}], 122: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule findDOMNode
			 * @typechecks static-only
			 */

			'use strict';

			var ReactCurrentOwner = _dereq_(39);
			var ReactInstanceMap = _dereq_(68);
			var ReactMount = _dereq_(72);

			var invariant = _dereq_(161);
			var warning = _dereq_(173);

			/**
			 * Returns the DOM node rendered by this element.
			 *
			 * @param {ReactComponent|DOMElement} componentOrElement
			 * @return {?DOMElement} The root node of this element.
			 */
			function findDOMNode(componentOrElement) {
				if ("development" !== 'production') {
					var owner = ReactCurrentOwner.current;
					if (owner !== null) {
						"development" !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing getDOMNode or findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : undefined;
						owner._warnedAboutRefsInRender = true;
					}
				}
				if (componentOrElement == null) {
					return null;
				}
				if (componentOrElement.nodeType === 1) {
					return componentOrElement;
				}
				if (ReactInstanceMap.has(componentOrElement)) {
					return ReactMount.getNodeFromInstance(componentOrElement);
				}
				!(componentOrElement.render == null || typeof componentOrElement.render !== 'function') ? "development" !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : invariant(false) : undefined;
				!false ? "development" !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : invariant(false) : undefined;
			}

			module.exports = findDOMNode;
		}, { "161": 161, "173": 173, "39": 39, "68": 68, "72": 72 }], 123: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule flattenChildren
			 */

			'use strict';

			var traverseAllChildren = _dereq_(142);
			var warning = _dereq_(173);

			/**
			 * @param {function} traverseContext Context passed through traversal.
			 * @param {?ReactComponent} child React child component.
			 * @param {!string} name String name of key path to child.
			 */
			function flattenSingleChildIntoContext(traverseContext, child, name) {
				// We found a component instance.
				var result = traverseContext;
				var keyUnique = result[name] === undefined;
				if ("development" !== 'production') {
					"development" !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : undefined;
				}
				if (keyUnique && child != null) {
					result[name] = child;
				}
			}

			/**
			 * Flattens children that are typically specified as `props.children`. Any null
			 * children will not be included in the resulting object.
			 * @return {!object} flattened children keyed by name.
			 */
			function flattenChildren(children) {
				if (children == null) {
					return children;
				}
				var result = {};
				traverseAllChildren(children, flattenSingleChildIntoContext, result);
				return result;
			}

			module.exports = flattenChildren;
		}, { "142": 142, "173": 173 }], 124: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule forEachAccumulated
			 */

			'use strict';

			/**
			 * @param {array} arr an "accumulation" of items which is either an Array or
			 * a single item. Useful when paired with the `accumulate` module. This is a
			 * simple utility that allows us to reason about a collection of items, but
			 * handling the case when there is exactly one item (and we do not need to
			 * allocate an array).
			 */
			var forEachAccumulated = function (arr, cb, scope) {
				if (Array.isArray(arr)) {
					arr.forEach(cb, scope);
				} else if (arr) {
					cb.call(scope, arr);
				}
			};

			module.exports = forEachAccumulated;
		}, {}], 125: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule getEventCharCode
			 * @typechecks static-only
			 */

			'use strict';

			/**
			 * `charCode` represents the actual "character code" and is safe to use with
			 * `String.fromCharCode`. As such, only keys that correspond to printable
			 * characters produce a valid `charCode`, the only exception to this is Enter.
			 * The Tab-key is considered non-printable and does not have a `charCode`,
			 * presumably because it does not produce a tab-character in browsers.
			 *
			 * @param {object} nativeEvent Native browser event.
			 * @return {number} Normalized `charCode` property.
			 */
			function getEventCharCode(nativeEvent) {
				var charCode;
				var keyCode = nativeEvent.keyCode;

				if ('charCode' in nativeEvent) {
					charCode = nativeEvent.charCode;

					// FF does not set `charCode` for the Enter-key, check against `keyCode`.
					if (charCode === 0 && keyCode === 13) {
						charCode = 13;
					}
				} else {
					// IE8 does not implement `charCode`, but `keyCode` has the correct value.
					charCode = keyCode;
				}

				// Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
				// Must not discard the (non-)printable Enter-key.
				if (charCode >= 32 || charCode === 13) {
					return charCode;
				}

				return 0;
			}

			module.exports = getEventCharCode;
		}, {}], 126: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule getEventKey
			 * @typechecks static-only
			 */

			'use strict';

			var getEventCharCode = _dereq_(125);

			/**
			 * Normalization of deprecated HTML5 `key` values
			 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
			 */
			var normalizeKey = {
				'Esc': 'Escape',
				'Spacebar': ' ',
				'Left': 'ArrowLeft',
				'Up': 'ArrowUp',
				'Right': 'ArrowRight',
				'Down': 'ArrowDown',
				'Del': 'Delete',
				'Win': 'OS',
				'Menu': 'ContextMenu',
				'Apps': 'ContextMenu',
				'Scroll': 'ScrollLock',
				'MozPrintableKey': 'Unidentified'
			};

			/**
			 * Translation from legacy `keyCode` to HTML5 `key`
			 * Only special keys supported, all others depend on keyboard layout or browser
			 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
			 */
			var translateToKey = {
				8: 'Backspace',
				9: 'Tab',
				12: 'Clear',
				13: 'Enter',
				16: 'Shift',
				17: 'Control',
				18: 'Alt',
				19: 'Pause',
				20: 'CapsLock',
				27: 'Escape',
				32: ' ',
				33: 'PageUp',
				34: 'PageDown',
				35: 'End',
				36: 'Home',
				37: 'ArrowLeft',
				38: 'ArrowUp',
				39: 'ArrowRight',
				40: 'ArrowDown',
				45: 'Insert',
				46: 'Delete',
				112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
				118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
				144: 'NumLock',
				145: 'ScrollLock',
				224: 'Meta'
			};

			/**
			 * @param {object} nativeEvent Native browser event.
			 * @return {string} Normalized `key` property.
			 */
			function getEventKey(nativeEvent) {
				if (nativeEvent.key) {
					// Normalize inconsistent values reported by browsers due to
					// implementations of a working draft specification.

					// FireFox implements `key` but returns `MozPrintableKey` for all
					// printable characters (normalized to `Unidentified`), ignore it.
					var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
					if (key !== 'Unidentified') {
						return key;
					}
				}

				// Browser does not implement `key`, polyfill as much of it as we can.
				if (nativeEvent.type === 'keypress') {
					var charCode = getEventCharCode(nativeEvent);

					// The enter-key is technically both printable and non-printable and can
					// thus be captured by `keypress`, no other non-printable key should.
					return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
				}
				if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
					// While user keyboard layout determines the actual meaning of each
					// `keyCode` value, almost all function keys have a universal value.
					return translateToKey[nativeEvent.keyCode] || 'Unidentified';
				}
				return '';
			}

			module.exports = getEventKey;
		}, { "125": 125 }], 127: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule getEventModifierState
			 * @typechecks static-only
			 */

			'use strict';

			/**
			 * Translation from modifier key to the associated property in the event.
			 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
			 */

			var modifierKeyToProp = {
				'Alt': 'altKey',
				'Control': 'ctrlKey',
				'Meta': 'metaKey',
				'Shift': 'shiftKey'
			};

			// IE8 does not implement getModifierState so we simply map it to the only
			// modifier keys exposed by the event itself, does not support Lock-keys.
			// Currently, all major browsers except Chrome seems to support Lock-keys.
			function modifierStateGetter(keyArg) {
				var syntheticEvent = this;
				var nativeEvent = syntheticEvent.nativeEvent;
				if (nativeEvent.getModifierState) {
					return nativeEvent.getModifierState(keyArg);
				}
				var keyProp = modifierKeyToProp[keyArg];
				return keyProp ? !!nativeEvent[keyProp] : false;
			}

			function getEventModifierState(nativeEvent) {
				return modifierStateGetter;
			}

			module.exports = getEventModifierState;
		}, {}], 128: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule getEventTarget
			 * @typechecks static-only
			 */

			'use strict';

			/**
			 * Gets the target node from a native browser event by accounting for
			 * inconsistencies in browser DOM APIs.
			 *
			 * @param {object} nativeEvent Native browser event.
			 * @return {DOMEventTarget} Target node.
			 */
			function getEventTarget(nativeEvent) {
				var target = nativeEvent.target || nativeEvent.srcElement || window;
				// Safari may fire events on text nodes (Node.TEXT_NODE is 3).
				// @see http://www.quirksmode.org/js/events_properties.html
				return target.nodeType === 3 ? target.parentNode : target;
			}

			module.exports = getEventTarget;
		}, {}], 129: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule getIteratorFn
			 * @typechecks static-only
			 */

			'use strict';

			/* global Symbol */
			var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
			var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

			/**
			 * Returns the iterator method function contained on the iterable object.
			 *
			 * Be sure to invoke the function with the iterable as context:
			 *
			 *     var iteratorFn = getIteratorFn(myIterable);
			 *     if (iteratorFn) {
			 *       var iterator = iteratorFn.call(myIterable);
			 *       ...
			 *     }
			 *
			 * @param {?object} maybeIterable
			 * @return {?function}
			 */
			function getIteratorFn(maybeIterable) {
				var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
				if (typeof iteratorFn === 'function') {
					return iteratorFn;
				}
			}

			module.exports = getIteratorFn;
		}, {}], 130: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule getNodeForCharacterOffset
			 */

			'use strict';

			/**
			 * Given any node return the first leaf node without children.
			 *
			 * @param {DOMElement|DOMTextNode} node
			 * @return {DOMElement|DOMTextNode}
			 */
			function getLeafNode(node) {
				while (node && node.firstChild) {
					node = node.firstChild;
				}
				return node;
			}

			/**
			 * Get the next sibling within a container. This will walk up the
			 * DOM if a node's siblings have been exhausted.
			 *
			 * @param {DOMElement|DOMTextNode} node
			 * @return {?DOMElement|DOMTextNode}
			 */
			function getSiblingNode(node) {
				while (node) {
					if (node.nextSibling) {
						return node.nextSibling;
					}
					node = node.parentNode;
				}
			}

			/**
			 * Get object describing the nodes which contain characters at offset.
			 *
			 * @param {DOMElement|DOMTextNode} root
			 * @param {number} offset
			 * @return {?object}
			 */
			function getNodeForCharacterOffset(root, offset) {
				var node = getLeafNode(root);
				var nodeStart = 0;
				var nodeEnd = 0;

				while (node) {
					if (node.nodeType === 3) {
						nodeEnd = nodeStart + node.textContent.length;

						if (nodeStart <= offset && nodeEnd >= offset) {
							return {
								node: node,
								offset: offset - nodeStart
							};
						}

						nodeStart = nodeEnd;
					}

					node = getLeafNode(getSiblingNode(node));
				}
			}

			module.exports = getNodeForCharacterOffset;
		}, {}], 131: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule getTextContentAccessor
			 */

			'use strict';

			var ExecutionEnvironment = _dereq_(147);

			var contentKey = null;

			/**
			 * Gets the key used to access text content on a DOM node.
			 *
			 * @return {?string} Key used to access text content.
			 * @internal
			 */
			function getTextContentAccessor() {
				if (!contentKey && ExecutionEnvironment.canUseDOM) {
					// Prefer textContent to innerText because many browsers support both but
					// SVG <text> elements don't support innerText even when <div> does.
					contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
				}
				return contentKey;
			}

			module.exports = getTextContentAccessor;
		}, { "147": 147 }], 132: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule instantiateReactComponent
			 * @typechecks static-only
			 */

			'use strict';

			var ReactCompositeComponent = _dereq_(38);
			var ReactEmptyComponent = _dereq_(59);
			var ReactNativeComponent = _dereq_(75);

			var assign = _dereq_(24);
			var invariant = _dereq_(161);
			var warning = _dereq_(173);

			// To avoid a cyclic dependency, we create the final class in this module
			var ReactCompositeComponentWrapper = function () { };
			assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {
				_instantiateReactComponent: instantiateReactComponent
			});

			function getDeclarationErrorAddendum(owner) {
				if (owner) {
					var name = owner.getName();
					if (name) {
						return ' Check the render method of `' + name + '`.';
					}
				}
				return '';
			}

			/**
			 * Check if the type reference is a known internal type. I.e. not a user
			 * provided composite type.
			 *
			 * @param {function} type
			 * @return {boolean} Returns true if this is a valid internal type.
			 */
			function isInternalComponentType(type) {
				return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
			}

			/**
			 * Given a ReactNode, create an instance that will actually be mounted.
			 *
			 * @param {ReactNode} node
			 * @return {object} A new instance of the element's constructor.
			 * @protected
			 */
			function instantiateReactComponent(node) {
				var instance;

				if (node === null || node === false) {
					instance = new ReactEmptyComponent(instantiateReactComponent);
				} else if (typeof node === 'object') {
					var element = node;
					!(element && (typeof element.type === 'function' || typeof element.type === 'string')) ? "development" !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) ' + 'or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : invariant(false) : undefined;

					// Special case string values
					if (typeof element.type === 'string') {
						instance = ReactNativeComponent.createInternalComponent(element);
					} else if (isInternalComponentType(element.type)) {
						// This is temporarily available for custom components that are not string
						// representations. I.e. ART. Once those are updated to use the string
						// representation, we can drop this code path.
						instance = new element.type(element);
					} else {
						instance = new ReactCompositeComponentWrapper();
					}
				} else if (typeof node === 'string' || typeof node === 'number') {
					instance = ReactNativeComponent.createInstanceForText(node);
				} else {
					!false ? "development" !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : invariant(false) : undefined;
				}

				if ("development" !== 'production') {
					"development" !== 'production' ? warning(typeof instance.construct === 'function' && typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : undefined;
				}

				// Sets up the instance. This can probably just move into the constructor now.
				instance.construct(node);

				// These two fields are used by the DOM and ART diffing algorithms
				// respectively. Instead of using expandos on components, we should be
				// storing the state needed by the diffing algorithms elsewhere.
				instance._mountIndex = 0;
				instance._mountImage = null;

				if ("development" !== 'production') {
					instance._isOwnerNecessary = false;
					instance._warnedAboutRefsInRender = false;
				}

				// Internal instances should fully constructed at this point, so they should
				// not get any new fields added to them at this point.
				if ("development" !== 'production') {
					if (Object.preventExtensions) {
						Object.preventExtensions(instance);
					}
				}

				return instance;
			}

			module.exports = instantiateReactComponent;
		}, { "161": 161, "173": 173, "24": 24, "38": 38, "59": 59, "75": 75 }], 133: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule isEventSupported
			 */

			'use strict';

			var ExecutionEnvironment = _dereq_(147);

			var useHasFeature;
			if (ExecutionEnvironment.canUseDOM) {
				useHasFeature = document.implementation && document.implementation.hasFeature &&
				// always returns true in newer browsers as per the standard.
				// @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
				document.implementation.hasFeature('', '') !== true;
			}

			/**
			 * Checks if an event is supported in the current execution environment.
			 *
			 * NOTE: This will not work correctly for non-generic events such as `change`,
			 * `reset`, `load`, `error`, and `select`.
			 *
			 * Borrows from Modernizr.
			 *
			 * @param {string} eventNameSuffix Event name, e.g. "click".
			 * @param {?boolean} capture Check if the capture phase is supported.
			 * @return {boolean} True if the event is supported.
			 * @internal
			 * @license Modernizr 3.0.0pre (Custom Build) | MIT
			 */
			function isEventSupported(eventNameSuffix, capture) {
				if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
					return false;
				}

				var eventName = 'on' + eventNameSuffix;
				var isSupported = (eventName in document);

				if (!isSupported) {
					var element = document.createElement('div');
					element.setAttribute(eventName, 'return;');
					isSupported = typeof element[eventName] === 'function';
				}

				if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
					// This is the only way to test support for the `wheel` event in IE9+.
					isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
				}

				return isSupported;
			}

			module.exports = isEventSupported;
		}, { "147": 147 }], 134: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule isTextInputElement
			 */

			'use strict';

			/**
			 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
			 */
			var supportedInputTypes = {
				'color': true,
				'date': true,
				'datetime': true,
				'datetime-local': true,
				'email': true,
				'month': true,
				'number': true,
				'password': true,
				'range': true,
				'search': true,
				'tel': true,
				'text': true,
				'time': true,
				'url': true,
				'week': true
			};

			function isTextInputElement(elem) {
				var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
				return nodeName && (nodeName === 'input' && supportedInputTypes[elem.type] || nodeName === 'textarea');
			}

			module.exports = isTextInputElement;
		}, {}], 135: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule onlyChild
			 */
			'use strict';

			var ReactElement = _dereq_(57);

			var invariant = _dereq_(161);

			/**
			 * Returns the first child in a collection of children and verifies that there
			 * is only one child in the collection. The current implementation of this
			 * function assumes that a single child gets passed without a wrapper, but the
			 * purpose of this helper function is to abstract away the particular structure
			 * of children.
			 *
			 * @param {?object} children Child collection structure.
			 * @return {ReactComponent} The first and only `ReactComponent` contained in the
			 * structure.
			 */
			function onlyChild(children) {
				!ReactElement.isValidElement(children) ? "development" !== 'production' ? invariant(false, 'onlyChild must be passed a children with exactly one child.') : invariant(false) : undefined;
				return children;
			}

			module.exports = onlyChild;
		}, { "161": 161, "57": 57 }], 136: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule quoteAttributeValueForBrowser
			 */

			'use strict';

			var escapeTextContentForBrowser = _dereq_(121);

			/**
			 * Escapes attribute value to prevent scripting attacks.
			 *
			 * @param {*} value Value to escape.
			 * @return {string} An escaped string.
			 */
			function quoteAttributeValueForBrowser(value) {
				return '"' + escapeTextContentForBrowser(value) + '"';
			}

			module.exports = quoteAttributeValueForBrowser;
		}, { "121": 121 }], 137: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			* @providesModule renderSubtreeIntoContainer
			*/

			'use strict';

			var ReactMount = _dereq_(72);

			module.exports = ReactMount.renderSubtreeIntoContainer;
		}, { "72": 72 }], 138: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule setInnerHTML
			 */

			/* globals MSApp */

			'use strict';

			var ExecutionEnvironment = _dereq_(147);

			var WHITESPACE_TEST = /^[ \r\n\t\f]/;
			var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

			/**
			 * Set the innerHTML property of a node, ensuring that whitespace is preserved
			 * even in IE8.
			 *
			 * @param {DOMElement} node
			 * @param {string} html
			 * @internal
			 */
			var setInnerHTML = function (node, html) {
				node.innerHTML = html;
			};

			// Win8 apps: Allow all html to be inserted
			if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
				setInnerHTML = function (node, html) {
					MSApp.execUnsafeLocalFunction(function () {
						node.innerHTML = html;
					});
				};
			}

			if (ExecutionEnvironment.canUseDOM) {
				// IE8: When updating a just created node with innerHTML only leading
				// whitespace is removed. When updating an existing node with innerHTML
				// whitespace in root TextNodes is also collapsed.
				// @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

				// Feature detection; only IE8 is known to behave improperly like this.
				var testElement = document.createElement('div');
				testElement.innerHTML = ' ';
				if (testElement.innerHTML === '') {
					setInnerHTML = function (node, html) {
						// Magic theory: IE8 supposedly differentiates between added and updated
						// nodes when processing innerHTML, innerHTML on updated nodes suffers
						// from worse whitespace behavior. Re-adding a node like this triggers
						// the initial and more favorable whitespace behavior.
						// TODO: What to do on a detached node?
						if (node.parentNode) {
							node.parentNode.replaceChild(node, node);
						}

						// We also implement a workaround for non-visible tags disappearing into
						// thin air on IE8, this only happens if there is no visible text
						// in-front of the non-visible tags. Piggyback on the whitespace fix
						// and simply check if any non-visible tags appear in the source.
						if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
							// Recover leading whitespace by temporarily prepending any character.
							// \uFEFF has the potential advantage of being zero-width/invisible.
							// UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
							// in hopes that this is preserved even if "\uFEFF" is transformed to
							// the actual Unicode character (by Babel, for example).
							// https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
							node.innerHTML = String.fromCharCode(0xFEFF) + html;

							// deleteData leaves an empty `TextNode` which offsets the index of all
							// children. Definitely want to avoid this.
							var textNode = node.firstChild;
							if (textNode.data.length === 1) {
								node.removeChild(textNode);
							} else {
								textNode.deleteData(0, 1);
							}
						} else {
							node.innerHTML = html;
						}
					};
				}
			}

			module.exports = setInnerHTML;
		}, { "147": 147 }], 139: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule setTextContent
			 */

			'use strict';

			var ExecutionEnvironment = _dereq_(147);
			var escapeTextContentForBrowser = _dereq_(121);
			var setInnerHTML = _dereq_(138);

			/**
			 * Set the textContent property of a node, ensuring that whitespace is preserved
			 * even in IE8. innerText is a poor substitute for textContent and, among many
			 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
			 * as it should.
			 *
			 * @param {DOMElement} node
			 * @param {string} text
			 * @internal
			 */
			var setTextContent = function (node, text) {
				node.textContent = text;
			};

			if (ExecutionEnvironment.canUseDOM) {
				if (!('textContent' in document.documentElement)) {
					setTextContent = function (node, text) {
						setInnerHTML(node, escapeTextContentForBrowser(text));
					};
				}
			}

			module.exports = setTextContent;
		}, { "121": 121, "138": 138, "147": 147 }], 140: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			* @providesModule shallowCompare
			*/

			'use strict';

			var shallowEqual = _dereq_(171);

			/**
			 * Does a shallow comparison for props and state.
			 * See ReactComponentWithPureRenderMixin
			 */
			function shallowCompare(instance, nextProps, nextState) {
				return !shallowEqual(instance.props, nextProps) || !shallowEqual(instance.state, nextState);
			}

			module.exports = shallowCompare;
		}, { "171": 171 }], 141: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule shouldUpdateReactComponent
			 * @typechecks static-only
			 */

			'use strict';

			/**
			 * Given a `prevElement` and `nextElement`, determines if the existing
			 * instance should be updated as opposed to being destroyed or replaced by a new
			 * instance. Both arguments are elements. This ensures that this logic can
			 * operate on stateless trees without any backing instance.
			 *
			 * @param {?object} prevElement
			 * @param {?object} nextElement
			 * @return {boolean} True if the existing instance should be updated.
			 * @protected
			 */
			function shouldUpdateReactComponent(prevElement, nextElement) {
				var prevEmpty = prevElement === null || prevElement === false;
				var nextEmpty = nextElement === null || nextElement === false;
				if (prevEmpty || nextEmpty) {
					return prevEmpty === nextEmpty;
				}

				var prevType = typeof prevElement;
				var nextType = typeof nextElement;
				if (prevType === 'string' || prevType === 'number') {
					return nextType === 'string' || nextType === 'number';
				} else {
					return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
				}
				return false;
			}

			module.exports = shouldUpdateReactComponent;
		}, {}], 142: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule traverseAllChildren
			 */

			'use strict';

			var ReactCurrentOwner = _dereq_(39);
			var ReactElement = _dereq_(57);
			var ReactInstanceHandles = _dereq_(67);

			var getIteratorFn = _dereq_(129);
			var invariant = _dereq_(161);
			var warning = _dereq_(173);

			var SEPARATOR = ReactInstanceHandles.SEPARATOR;
			var SUBSEPARATOR = ':';

			/**
			 * TODO: Test that a single child and an array with one item have the same key
			 * pattern.
			 */

			var userProvidedKeyEscaperLookup = {
				'=': '=0',
				'.': '=1',
				':': '=2'
			};

			var userProvidedKeyEscapeRegex = /[=.:]/g;

			var didWarnAboutMaps = false;

			function userProvidedKeyEscaper(match) {
				return userProvidedKeyEscaperLookup[match];
			}

			/**
			 * Generate a key string that identifies a component within a set.
			 *
			 * @param {*} component A component that could contain a manual key.
			 * @param {number} index Index that is used if a manual key is not provided.
			 * @return {string}
			 */
			function getComponentKey(component, index) {
				if (component && component.key != null) {
					// Explicit key
					return wrapUserProvidedKey(component.key);
				}
				// Implicit key determined by the index in the set
				return index.toString(36);
			}

			/**
			 * Escape a component key so that it is safe to use in a reactid.
			 *
			 * @param {*} text Component key to be escaped.
			 * @return {string} An escaped string.
			 */
			function escapeUserProvidedKey(text) {
				return ('' + text).replace(userProvidedKeyEscapeRegex, userProvidedKeyEscaper);
			}

			/**
			 * Wrap a `key` value explicitly provided by the user to distinguish it from
			 * implicitly-generated keys generated by a component's index in its parent.
			 *
			 * @param {string} key Value of a user-provided `key` attribute
			 * @return {string}
			 */
			function wrapUserProvidedKey(key) {
				return '$' + escapeUserProvidedKey(key);
			}

			/**
			 * @param {?*} children Children tree container.
			 * @param {!string} nameSoFar Name of the key path so far.
			 * @param {!function} callback Callback to invoke with each child found.
			 * @param {?*} traverseContext Used to pass information throughout the traversal
			 * process.
			 * @return {!number} The number of children in this subtree.
			 */
			function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
				var type = typeof children;

				if (type === 'undefined' || type === 'boolean') {
					// All of the above are perceived as null.
					children = null;
				}

				if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {
					callback(traverseContext, children,
					// If it's the only child, treat the name as if it was wrapped in an array
					// so that it's consistent if the number of children grows.
					nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
					return 1;
				}

				var child;
				var nextName;
				var subtreeCount = 0; // Count of children found in the current subtree.
				var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

				if (Array.isArray(children)) {
					for (var i = 0; i < children.length; i++) {
						child = children[i];
						nextName = nextNamePrefix + getComponentKey(child, i);
						subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
					}
				} else {
					var iteratorFn = getIteratorFn(children);
					if (iteratorFn) {
						var iterator = iteratorFn.call(children);
						var step;
						if (iteratorFn !== children.entries) {
							var ii = 0;
							while (!(step = iterator.next()).done) {
								child = step.value;
								nextName = nextNamePrefix + getComponentKey(child, ii++);
								subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
							}
						} else {
							if ("development" !== 'production') {
								"development" !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.') : undefined;
								didWarnAboutMaps = true;
							}
							// Iterator will provide entry [k,v] tuples rather than values.
							while (!(step = iterator.next()).done) {
								var entry = step.value;
								if (entry) {
									child = entry[1];
									nextName = nextNamePrefix + wrapUserProvidedKey(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
									subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
								}
							}
						}
					} else if (type === 'object') {
						var addendum = '';
						if ("development" !== 'production') {
							addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
							if (children._isReactElement) {
								addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
							}
							if (ReactCurrentOwner.current) {
								var name = ReactCurrentOwner.current.getName();
								if (name) {
									addendum += ' Check the render method of `' + name + '`.';
								}
							}
						}
						var childrenString = String(children);
						!false ? "development" !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : invariant(false) : undefined;
					}
				}

				return subtreeCount;
			}

			/**
			 * Traverses children that are typically specified as `props.children`, but
			 * might also be specified through attributes:
			 *
			 * - `traverseAllChildren(this.props.children, ...)`
			 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
			 *
			 * The `traverseContext` is an optional argument that is passed through the
			 * entire traversal. It can be used to store accumulations or anything else that
			 * the callback might find relevant.
			 *
			 * @param {?*} children Children tree object.
			 * @param {!function} callback To invoke upon traversing each child.
			 * @param {?*} traverseContext Context for traversal.
			 * @return {!number} The number of children in this subtree.
			 */
			function traverseAllChildren(children, callback, traverseContext) {
				if (children == null) {
					return 0;
				}

				return traverseAllChildrenImpl(children, '', callback, traverseContext);
			}

			module.exports = traverseAllChildren;
		}, { "129": 129, "161": 161, "173": 173, "39": 39, "57": 57, "67": 67 }], 143: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule update
			 */

			/* global hasOwnProperty:true */

			'use strict';

			var assign = _dereq_(24);
			var keyOf = _dereq_(166);
			var invariant = _dereq_(161);
			var hasOwnProperty = ({}).hasOwnProperty;

			function shallowCopy(x) {
				if (Array.isArray(x)) {
					return x.concat();
				} else if (x && typeof x === 'object') {
					return assign(new x.constructor(), x);
				} else {
					return x;
				}
			}

			var COMMAND_PUSH = keyOf({ $push: null });
			var COMMAND_UNSHIFT = keyOf({ $unshift: null });
			var COMMAND_SPLICE = keyOf({ $splice: null });
			var COMMAND_SET = keyOf({ $set: null });
			var COMMAND_MERGE = keyOf({ $merge: null });
			var COMMAND_APPLY = keyOf({ $apply: null });

			var ALL_COMMANDS_LIST = [COMMAND_PUSH, COMMAND_UNSHIFT, COMMAND_SPLICE, COMMAND_SET, COMMAND_MERGE, COMMAND_APPLY];

			var ALL_COMMANDS_SET = {};

			ALL_COMMANDS_LIST.forEach(function (command) {
				ALL_COMMANDS_SET[command] = true;
			});

			function invariantArrayCase(value, spec, command) {
				!Array.isArray(value) ? "development" !== 'production' ? invariant(false, 'update(): expected target of %s to be an array; got %s.', command, value) : invariant(false) : undefined;
				var specValue = spec[command];
				!Array.isArray(specValue) ? "development" !== 'production' ? invariant(false, 'update(): expected spec of %s to be an array; got %s. ' + 'Did you forget to wrap your parameter in an array?', command, specValue) : invariant(false) : undefined;
			}

			function update(value, spec) {
				!(typeof spec === 'object') ? "development" !== 'production' ? invariant(false, 'update(): You provided a key path to update() that did not contain one ' + 'of %s. Did you forget to include {%s: ...}?', ALL_COMMANDS_LIST.join(', '), COMMAND_SET) : invariant(false) : undefined;

				if (hasOwnProperty.call(spec, COMMAND_SET)) {
					!(Object.keys(spec).length === 1) ? "development" !== 'production' ? invariant(false, 'Cannot have more than one key in an object with %s', COMMAND_SET) : invariant(false) : undefined;

					return spec[COMMAND_SET];
				}

				var nextValue = shallowCopy(value);

				if (hasOwnProperty.call(spec, COMMAND_MERGE)) {
					var mergeObj = spec[COMMAND_MERGE];
					!(mergeObj && typeof mergeObj === 'object') ? "development" !== 'production' ? invariant(false, 'update(): %s expects a spec of type \'object\'; got %s', COMMAND_MERGE, mergeObj) : invariant(false) : undefined;
					!(nextValue && typeof nextValue === 'object') ? "development" !== 'production' ? invariant(false, 'update(): %s expects a target of type \'object\'; got %s', COMMAND_MERGE, nextValue) : invariant(false) : undefined;
					assign(nextValue, spec[COMMAND_MERGE]);
				}

				if (hasOwnProperty.call(spec, COMMAND_PUSH)) {
					invariantArrayCase(value, spec, COMMAND_PUSH);
					spec[COMMAND_PUSH].forEach(function (item) {
						nextValue.push(item);
					});
				}

				if (hasOwnProperty.call(spec, COMMAND_UNSHIFT)) {
					invariantArrayCase(value, spec, COMMAND_UNSHIFT);
					spec[COMMAND_UNSHIFT].forEach(function (item) {
						nextValue.unshift(item);
					});
				}

				if (hasOwnProperty.call(spec, COMMAND_SPLICE)) {
					!Array.isArray(value) ? "development" !== 'production' ? invariant(false, 'Expected %s target to be an array; got %s', COMMAND_SPLICE, value) : invariant(false) : undefined;
					!Array.isArray(spec[COMMAND_SPLICE]) ? "development" !== 'production' ? invariant(false, 'update(): expected spec of %s to be an array of arrays; got %s. ' + 'Did you forget to wrap your parameters in an array?', COMMAND_SPLICE, spec[COMMAND_SPLICE]) : invariant(false) : undefined;
					spec[COMMAND_SPLICE].forEach(function (args) {
						!Array.isArray(args) ? "development" !== 'production' ? invariant(false, 'update(): expected spec of %s to be an array of arrays; got %s. ' + 'Did you forget to wrap your parameters in an array?', COMMAND_SPLICE, spec[COMMAND_SPLICE]) : invariant(false) : undefined;
						nextValue.splice.apply(nextValue, args);
					});
				}

				if (hasOwnProperty.call(spec, COMMAND_APPLY)) {
					!(typeof spec[COMMAND_APPLY] === 'function') ? "development" !== 'production' ? invariant(false, 'update(): expected spec of %s to be a function; got %s.', COMMAND_APPLY, spec[COMMAND_APPLY]) : invariant(false) : undefined;
					nextValue = spec[COMMAND_APPLY](nextValue);
				}

				for (var k in spec) {
					if (!(ALL_COMMANDS_SET.hasOwnProperty(k) && ALL_COMMANDS_SET[k])) {
						nextValue[k] = update(value[k], spec[k]);
					}
				}

				return nextValue;
			}

			module.exports = update;
		}, { "161": 161, "166": 166, "24": 24 }], 144: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule validateDOMNesting
			 */

			'use strict';

			var assign = _dereq_(24);
			var emptyFunction = _dereq_(153);
			var warning = _dereq_(173);

			var validateDOMNesting = emptyFunction;

			if ("development" !== 'production') {
				// This validation code was written based on the HTML5 parsing spec:
				// https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
				//
				// Note: this does not catch all invalid nesting, nor does it try to (as it's
				// not clear what practical benefit doing so provides); instead, we warn only
				// for cases where the parser will give a parse tree differing from what React
				// intended. For example, <b><div></div></b> is invalid but we don't warn
				// because it still parses correctly; we do warn for other cases like nested
				// <p> tags where the beginning of the second element implicitly closes the
				// first, causing a confusing mess.

				// https://html.spec.whatwg.org/multipage/syntax.html#special
				var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

				// https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
				var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

				// https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
				// TODO: Distinguish by namespace here -- for <title>, including it here
				// errs on the side of fewer warnings
				'foreignObject', 'desc', 'title'];

				// https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
				var buttonScopeTags = inScopeTags.concat(['button']);

				// https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
				var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

				var emptyAncestorInfo = {
					parentTag: null,

					formTag: null,
					aTagInScope: null,
					buttonTagInScope: null,
					nobrTagInScope: null,
					pTagInButtonScope: null,

					listItemTagAutoclosing: null,
					dlItemTagAutoclosing: null
				};

				var updatedAncestorInfo = function (oldInfo, tag, instance) {
					var ancestorInfo = assign({}, oldInfo || emptyAncestorInfo);
					var info = { tag: tag, instance: instance };

					if (inScopeTags.indexOf(tag) !== -1) {
						ancestorInfo.aTagInScope = null;
						ancestorInfo.buttonTagInScope = null;
						ancestorInfo.nobrTagInScope = null;
					}
					if (buttonScopeTags.indexOf(tag) !== -1) {
						ancestorInfo.pTagInButtonScope = null;
					}

					// See rules for 'li', 'dd', 'dt' start tags in
					// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
					if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
						ancestorInfo.listItemTagAutoclosing = null;
						ancestorInfo.dlItemTagAutoclosing = null;
					}

					ancestorInfo.parentTag = info;

					if (tag === 'form') {
						ancestorInfo.formTag = info;
					}
					if (tag === 'a') {
						ancestorInfo.aTagInScope = info;
					}
					if (tag === 'button') {
						ancestorInfo.buttonTagInScope = info;
					}
					if (tag === 'nobr') {
						ancestorInfo.nobrTagInScope = info;
					}
					if (tag === 'p') {
						ancestorInfo.pTagInButtonScope = info;
					}
					if (tag === 'li') {
						ancestorInfo.listItemTagAutoclosing = info;
					}
					if (tag === 'dd' || tag === 'dt') {
						ancestorInfo.dlItemTagAutoclosing = info;
					}

					return ancestorInfo;
				};

				/**
				 * Returns whether
				 */
				var isTagValidWithParent = function (tag, parentTag) {
					// First, let's check if we're in an unusual parsing mode...
					switch (parentTag) {
						// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
						case 'select':
							return tag === 'option' || tag === 'optgroup' || tag === '#text';
						case 'optgroup':
							return tag === 'option' || tag === '#text';
							// Strictly speaking, seeing an <option> doesn't mean we're in a <select>
							// but
						case 'option':
							return tag === '#text';

							// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
							// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
							// No special behavior since these rules fall back to "in body" mode for
							// all except special table nodes which cause bad parsing behavior anyway.

							// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
						case 'tr':
							return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';

							// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
						case 'tbody':
						case 'thead':
						case 'tfoot':
							return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';

							// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
						case 'colgroup':
							return tag === 'col' || tag === 'template';

							// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
						case 'table':
							return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';

							// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
						case 'head':
							return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';

							// https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
						case 'html':
							return tag === 'head' || tag === 'body';
					}

					// Probably in the "in body" parsing mode, so we outlaw only tag combos
					// where the parsing rules cause implicit opens or closes to be added.
					// https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
					switch (tag) {
						case 'h1':
						case 'h2':
						case 'h3':
						case 'h4':
						case 'h5':
						case 'h6':
							return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

						case 'rp':
						case 'rt':
							return impliedEndTags.indexOf(parentTag) === -1;

						case 'caption':
						case 'col':
						case 'colgroup':
						case 'frame':
						case 'head':
						case 'tbody':
						case 'td':
						case 'tfoot':
						case 'th':
						case 'thead':
						case 'tr':
							// These tags are only valid with a few parents that have special child
							// parsing rules -- if we're down here, then none of those matched and
							// so we allow it only if we don't know what the parent is, as all other
							// cases are invalid.
							return parentTag == null;
					}

					return true;
				};

				/**
				 * Returns whether
				 */
				var findInvalidAncestorForTag = function (tag, ancestorInfo) {
					switch (tag) {
						case 'address':
						case 'article':
						case 'aside':
						case 'blockquote':
						case 'center':
						case 'details':
						case 'dialog':
						case 'dir':
						case 'div':
						case 'dl':
						case 'fieldset':
						case 'figcaption':
						case 'figure':
						case 'footer':
						case 'header':
						case 'hgroup':
						case 'main':
						case 'menu':
						case 'nav':
						case 'ol':
						case 'p':
						case 'section':
						case 'summary':
						case 'ul':

						case 'pre':
						case 'listing':

						case 'table':

						case 'hr':

						case 'xmp':

						case 'h1':
						case 'h2':
						case 'h3':
						case 'h4':
						case 'h5':
						case 'h6':
							return ancestorInfo.pTagInButtonScope;

						case 'form':
							return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

						case 'li':
							return ancestorInfo.listItemTagAutoclosing;

						case 'dd':
						case 'dt':
							return ancestorInfo.dlItemTagAutoclosing;

						case 'button':
							return ancestorInfo.buttonTagInScope;

						case 'a':
							// Spec says something about storing a list of markers, but it sounds
							// equivalent to this check.
							return ancestorInfo.aTagInScope;

						case 'nobr':
							return ancestorInfo.nobrTagInScope;
					}

					return null;
				};

				/**
				 * Given a ReactCompositeComponent instance, return a list of its recursive
				 * owners, starting at the root and ending with the instance itself.
				 */
				var findOwnerStack = function (instance) {
					if (!instance) {
						return [];
					}

					var stack = [];
					/*eslint-disable space-after-keywords */
					do {
						/*eslint-enable space-after-keywords */
						stack.push(instance);
					} while (instance = instance._currentElement._owner);
					stack.reverse();
					return stack;
				};

				var didWarn = {};

				validateDOMNesting = function (childTag, childInstance, ancestorInfo) {
					ancestorInfo = ancestorInfo || emptyAncestorInfo;
					var parentInfo = ancestorInfo.parentTag;
					var parentTag = parentInfo && parentInfo.tag;

					var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
					var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
					var problematic = invalidParent || invalidAncestor;

					if (problematic) {
						var ancestorTag = problematic.tag;
						var ancestorInstance = problematic.instance;

						var childOwner = childInstance && childInstance._currentElement._owner;
						var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;

						var childOwners = findOwnerStack(childOwner);
						var ancestorOwners = findOwnerStack(ancestorOwner);

						var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
						var i;

						var deepestCommon = -1;
						for (i = 0; i < minStackLen; i++) {
							if (childOwners[i] === ancestorOwners[i]) {
								deepestCommon = i;
							} else {
								break;
							}
						}

						var UNKNOWN = '(unknown)';
						var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
							return inst.getName() || UNKNOWN;
						});
						var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
							return inst.getName() || UNKNOWN;
						});
						var ownerInfo = [].concat(
						// If the parent and child instances have a common owner ancestor, start
						// with that -- otherwise we just start with the parent's owners.
						deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
						// If we're warning about an invalid (non-parent) ancestry, add '...'
						invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');

						var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
						if (didWarn[warnKey]) {
							return;
						}
						didWarn[warnKey] = true;

						if (invalidParent) {
							var info = '';
							if (ancestorTag === 'table' && childTag === 'tr') {
								info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
							}
							"development" !== 'production' ? warning(false, 'validateDOMNesting(...): <%s> cannot appear as a child of <%s>. ' + 'See %s.%s', childTag, ancestorTag, ownerInfo, info) : undefined;
						} else {
							"development" !== 'production' ? warning(false, 'validateDOMNesting(...): <%s> cannot appear as a descendant of ' + '<%s>. See %s.', childTag, ancestorTag, ownerInfo) : undefined;
						}
					}
				};

				validateDOMNesting.ancestorInfoContextKey = '__validateDOMNesting_ancestorInfo$' + Math.random().toString(36).slice(2);

				validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;

				// For testing
				validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
					ancestorInfo = ancestorInfo || emptyAncestorInfo;
					var parentInfo = ancestorInfo.parentTag;
					var parentTag = parentInfo && parentInfo.tag;
					return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
				};
			}

			module.exports = validateDOMNesting;
		}, { "153": 153, "173": 173, "24": 24 }], 145: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule CSSCore
			 * @typechecks
			 */

			'use strict';

			var invariant = _dereq_(161);

			/**
			 * The CSSCore module specifies the API (and implements most of the methods)
			 * that should be used when dealing with the display of elements (via their
			 * CSS classes and visibility on screen. It is an API focused on mutating the
			 * display and not reading it as no logical state should be encoded in the
			 * display of elements.
			 */

			var CSSCore = {

				/**
				 * Adds the class passed in to the element if it doesn't already have it.
				 *
				 * @param {DOMElement} element the element to set the class on
				 * @param {string} className the CSS className
				 * @return {DOMElement} the element passed in
				 */
				addClass: function (element, className) {
					!!/\s/.test(className) ? "development" !== 'production' ? invariant(false, 'CSSCore.addClass takes only a single class name. "%s" contains ' + 'multiple classes.', className) : invariant(false) : undefined;

					if (className) {
						if (element.classList) {
							element.classList.add(className);
						} else if (!CSSCore.hasClass(element, className)) {
							element.className = element.className + ' ' + className;
						}
					}
					return element;
				},

				/**
				 * Removes the class passed in from the element
				 *
				 * @param {DOMElement} element the element to set the class on
				 * @param {string} className the CSS className
				 * @return {DOMElement} the element passed in
				 */
				removeClass: function (element, className) {
					!!/\s/.test(className) ? "development" !== 'production' ? invariant(false, 'CSSCore.removeClass takes only a single class name. "%s" contains ' + 'multiple classes.', className) : invariant(false) : undefined;

					if (className) {
						if (element.classList) {
							element.classList.remove(className);
						} else if (CSSCore.hasClass(element, className)) {
							element.className = element.className.replace(new RegExp('(^|\\s)' + className + '(?:\\s|$)', 'g'), '$1').replace(/\s+/g, ' ') // multiple spaces to one
							.replace(/^\s*|\s*$/g, ''); // trim the ends
						}
					}
					return element;
				},

				/**
				 * Helper to add or remove a class from an element based on a condition.
				 *
				 * @param {DOMElement} element the element to set the class on
				 * @param {string} className the CSS className
				 * @param {*} bool condition to whether to add or remove the class
				 * @return {DOMElement} the element passed in
				 */
				conditionClass: function (element, className, bool) {
					return (bool ? CSSCore.addClass : CSSCore.removeClass)(element, className);
				},

				/**
				 * Tests whether the element has the class specified.
				 *
				 * @param {DOMNode|DOMWindow} element the element to set the class on
				 * @param {string} className the CSS className
				 * @return {boolean} true if the element has the class, false if not
				 */
				hasClass: function (element, className) {
					!!/\s/.test(className) ? "development" !== 'production' ? invariant(false, 'CSS.hasClass takes only a single class name.') : invariant(false) : undefined;
					if (element.classList) {
						return !!className && element.classList.contains(className);
					}
					return (' ' + element.className + ' ').indexOf(' ' + className + ' ') > -1;
				}

			};

			module.exports = CSSCore;
		}, { "161": 161 }], 146: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 *
			 * Licensed under the Apache License, Version 2.0 (the "License");
			 * you may not use this file except in compliance with the License.
			 * You may obtain a copy of the License at
			 *
			 * http://www.apache.org/licenses/LICENSE-2.0
			 *
			 * Unless required by applicable law or agreed to in writing, software
			 * distributed under the License is distributed on an "AS IS" BASIS,
			 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
			 * See the License for the specific language governing permissions and
			 * limitations under the License.
			 *
			 * @providesModule EventListener
			 * @typechecks
			 */

			'use strict';

			var emptyFunction = _dereq_(153);

			/**
			 * Upstream version of event listener. Does not take into account specific
			 * nature of platform.
			 */
			var EventListener = {
				/**
				 * Listen to DOM events during the bubble phase.
				 *
				 * @param {DOMEventTarget} target DOM element to register listener on.
				 * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
				 * @param {function} callback Callback function.
				 * @return {object} Object with a `remove` method.
				 */
				listen: function (target, eventType, callback) {
					if (target.addEventListener) {
						target.addEventListener(eventType, callback, false);
						return {
							remove: function () {
								target.removeEventListener(eventType, callback, false);
							}
						};
					} else if (target.attachEvent) {
						target.attachEvent('on' + eventType, callback);
						return {
							remove: function () {
								target.detachEvent('on' + eventType, callback);
							}
						};
					}
				},

				/**
				 * Listen to DOM events during the capture phase.
				 *
				 * @param {DOMEventTarget} target DOM element to register listener on.
				 * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
				 * @param {function} callback Callback function.
				 * @return {object} Object with a `remove` method.
				 */
				capture: function (target, eventType, callback) {
					if (target.addEventListener) {
						target.addEventListener(eventType, callback, true);
						return {
							remove: function () {
								target.removeEventListener(eventType, callback, true);
							}
						};
					} else {
						if ("development" !== 'production') {
							console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
						}
						return {
							remove: emptyFunction
						};
					}
				},

				registerDefault: function () { }
			};

			module.exports = EventListener;
		}, { "153": 153 }], 147: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule ExecutionEnvironment
			 */

			'use strict';

			var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

			/**
			 * Simple, lightweight module assisting with the detection and context of
			 * Worker. Helps avoid circular dependencies and allows code to reason about
			 * whether or not they are in a Worker, even if they never include the main
			 * `ReactWorker` dependency.
			 */
			var ExecutionEnvironment = {

				canUseDOM: canUseDOM,

				canUseWorkers: typeof Worker !== 'undefined',

				canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

				canUseViewport: canUseDOM && !!window.screen,

				isInWorker: !canUseDOM // For now, this is true - might change in the future.

			};

			module.exports = ExecutionEnvironment;
		}, {}], 148: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule camelize
			 * @typechecks
			 */

			"use strict";

			var _hyphenPattern = /-(.)/g;

			/**
			 * Camelcases a hyphenated string, for example:
			 *
			 *   > camelize('background-color')
			 *   < "backgroundColor"
			 *
			 * @param {string} string
			 * @return {string}
			 */
			function camelize(string) {
				return string.replace(_hyphenPattern, function (_, character) {
					return character.toUpperCase();
				});
			}

			module.exports = camelize;
		}, {}], 149: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule camelizeStyleName
			 * @typechecks
			 */

			'use strict';

			var camelize = _dereq_(148);

			var msPattern = /^-ms-/;

			/**
			 * Camelcases a hyphenated CSS property name, for example:
			 *
			 *   > camelizeStyleName('background-color')
			 *   < "backgroundColor"
			 *   > camelizeStyleName('-moz-transition')
			 *   < "MozTransition"
			 *   > camelizeStyleName('-ms-transition')
			 *   < "msTransition"
			 *
			 * As Andi Smith suggests
			 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
			 * is converted to lowercase `ms`.
			 *
			 * @param {string} string
			 * @return {string}
			 */
			function camelizeStyleName(string) {
				return camelize(string.replace(msPattern, 'ms-'));
			}

			module.exports = camelizeStyleName;
		}, { "148": 148 }], 150: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule containsNode
			 * @typechecks
			 */

			'use strict';

			var isTextNode = _dereq_(163);

			/*eslint-disable no-bitwise */

			/**
			 * Checks if a given DOM node contains or is another DOM node.
			 *
			 * @param {?DOMNode} outerNode Outer DOM node.
			 * @param {?DOMNode} innerNode Inner DOM node.
			 * @return {boolean} True if `outerNode` contains or is `innerNode`.
			 */
			function containsNode(_x, _x2) {
				var _again = true;

				_function: while (_again) {
					var outerNode = _x,
						innerNode = _x2;
					_again = false;

					if (!outerNode || !innerNode) {
						return false;
					} else if (outerNode === innerNode) {
						return true;
					} else if (isTextNode(outerNode)) {
						return false;
					} else if (isTextNode(innerNode)) {
						_x = outerNode;
						_x2 = innerNode.parentNode;
						_again = true;
						continue _function;
					} else if (outerNode.contains) {
						return outerNode.contains(innerNode);
					} else if (outerNode.compareDocumentPosition) {
						return !!(outerNode.compareDocumentPosition(innerNode) & 16);
					} else {
						return false;
					}
				}
			}

			module.exports = containsNode;
		}, { "163": 163 }], 151: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule createArrayFromMixed
			 * @typechecks
			 */

			'use strict';

			var toArray = _dereq_(172);

			/**
			 * Perform a heuristic test to determine if an object is "array-like".
			 *
			 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
			 *   Joshu replied: "Mu."
			 *
			 * This function determines if its argument has "array nature": it returns
			 * true if the argument is an actual array, an `arguments' object, or an
			 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
			 *
			 * It will return false for other array-like objects like Filelist.
			 *
			 * @param {*} obj
			 * @return {boolean}
			 */
			function hasArrayNature(obj) {
				return (
				  // not null/false
				  !!obj && (
				  // arrays are objects, NodeLists are functions in Safari
				  typeof obj == 'object' || typeof obj == 'function') &&
				  // quacks like an array
				  'length' in obj &&
				  // not window
				  !('setInterval' in obj) &&
				  // no DOM node should be considered an array-like
				  // a 'select' element has 'length' and 'item' properties on IE8
				  typeof obj.nodeType != 'number' && (
				  // a real array
				  Array.isArray(obj) ||
				  // arguments
				  'callee' in obj ||
				  // HTMLCollection/NodeList
				  'item' in obj)
				);
			}

			/**
			 * Ensure that the argument is an array by wrapping it in an array if it is not.
			 * Creates a copy of the argument if it is already an array.
			 *
			 * This is mostly useful idiomatically:
			 *
			 *   var createArrayFromMixed = require('createArrayFromMixed');
			 *
			 *   function takesOneOrMoreThings(things) {
			 *     things = createArrayFromMixed(things);
			 *     ...
			 *   }
			 *
			 * This allows you to treat `things' as an array, but accept scalars in the API.
			 *
			 * If you need to convert an array-like object, like `arguments`, into an array
			 * use toArray instead.
			 *
			 * @param {*} obj
			 * @return {array}
			 */
			function createArrayFromMixed(obj) {
				if (!hasArrayNature(obj)) {
					return [obj];
				} else if (Array.isArray(obj)) {
					return obj.slice();
				} else {
					return toArray(obj);
				}
			}

			module.exports = createArrayFromMixed;
		}, { "172": 172 }], 152: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule createNodesFromMarkup
			 * @typechecks
			 */

			/*eslint-disable fb-www/unsafe-html*/

			'use strict';

			var ExecutionEnvironment = _dereq_(147);

			var createArrayFromMixed = _dereq_(151);
			var getMarkupWrap = _dereq_(157);
			var invariant = _dereq_(161);

			/**
			 * Dummy container used to render all markup.
			 */
			var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

			/**
			 * Pattern used by `getNodeName`.
			 */
			var nodeNamePattern = /^\s*<(\w+)/;

			/**
			 * Extracts the `nodeName` of the first element in a string of markup.
			 *
			 * @param {string} markup String of markup.
			 * @return {?string} Node name of the supplied markup.
			 */
			function getNodeName(markup) {
				var nodeNameMatch = markup.match(nodeNamePattern);
				return nodeNameMatch && nodeNameMatch[1].toLowerCase();
			}

			/**
			 * Creates an array containing the nodes rendered from the supplied markup. The
			 * optionally supplied `handleScript` function will be invoked once for each
			 * <script> element that is rendered. If no `handleScript` function is supplied,
			 * an exception is thrown if any <script> elements are rendered.
			 *
			 * @param {string} markup A string of valid HTML markup.
			 * @param {?function} handleScript Invoked once for each rendered <script>.
			 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
			 */
			function createNodesFromMarkup(markup, handleScript) {
				var node = dummyNode;
				!!!dummyNode ? "development" !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : undefined;
				var nodeName = getNodeName(markup);

				var wrap = nodeName && getMarkupWrap(nodeName);
				if (wrap) {
					node.innerHTML = wrap[1] + markup + wrap[2];

					var wrapDepth = wrap[0];
					while (wrapDepth--) {
						node = node.lastChild;
					}
				} else {
					node.innerHTML = markup;
				}

				var scripts = node.getElementsByTagName('script');
				if (scripts.length) {
					!handleScript ? "development" !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : undefined;
					createArrayFromMixed(scripts).forEach(handleScript);
				}

				var nodes = createArrayFromMixed(node.childNodes);
				while (node.lastChild) {
					node.removeChild(node.lastChild);
				}
				return nodes;
			}

			module.exports = createNodesFromMarkup;
		}, { "147": 147, "151": 151, "157": 157, "161": 161 }], 153: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule emptyFunction
			 */

			"use strict";

			function makeEmptyFunction(arg) {
				return function () {
					return arg;
				};
			}

			/**
			 * This function accepts and discards inputs; it has no side effects. This is
			 * primarily useful idiomatically for overridable function endpoints which
			 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
			 */
			function emptyFunction() { }

			emptyFunction.thatReturns = makeEmptyFunction;
			emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
			emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
			emptyFunction.thatReturnsNull = makeEmptyFunction(null);
			emptyFunction.thatReturnsThis = function () {
				return this;
			};
			emptyFunction.thatReturnsArgument = function (arg) {
				return arg;
			};

			module.exports = emptyFunction;
		}, {}], 154: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule emptyObject
			 */

			'use strict';

			var emptyObject = {};

			if ("development" !== 'production') {
				Object.freeze(emptyObject);
			}

			module.exports = emptyObject;
		}, {}], 155: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule focusNode
			 */

			'use strict';

			/**
			 * @param {DOMElement} node input/textarea to focus
			 */
			function focusNode(node) {
				// IE8 can throw "Can't move focus to the control because it is invisible,
				// not enabled, or of a type that does not accept the focus." for all kinds of
				// reasons that are too expensive and fragile to test.
				try {
					node.focus();
				} catch (e) { }
			}

			module.exports = focusNode;
		}, {}], 156: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule getActiveElement
			 * @typechecks
			 */

			/* eslint-disable fb-www/typeof-undefined */

			/**
			 * Same as document.activeElement but wraps in a try-catch block. In IE it is
			 * not safe to call document.activeElement if there is nothing focused.
			 *
			 * The activeElement will be null only if the document or document body is not
			 * yet defined.
			 */
			'use strict';

			function getActiveElement() /*?DOMElement*/ {
				if (typeof document === 'undefined') {
					return null;
				}
				try {
					return document.activeElement || document.body;
				} catch (e) {
					return document.body;
				}
			}

			module.exports = getActiveElement;
		}, {}], 157: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule getMarkupWrap
			 */

			/*eslint-disable fb-www/unsafe-html */

			'use strict';

			var ExecutionEnvironment = _dereq_(147);

			var invariant = _dereq_(161);

			/**
			 * Dummy container used to detect which wraps are necessary.
			 */
			var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

			/**
			 * Some browsers cannot use `innerHTML` to render certain elements standalone,
			 * so we wrap them, render the wrapped nodes, then extract the desired node.
			 *
			 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
			 */

			var shouldWrap = {};

			var selectWrap = [1, '<select multiple="true">', '</select>'];
			var tableWrap = [1, '<table>', '</table>'];
			var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

			var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];

			var markupWrap = {
				'*': [1, '?<div>', '</div>'],

				'area': [1, '<map>', '</map>'],
				'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
				'legend': [1, '<fieldset>', '</fieldset>'],
				'param': [1, '<object>', '</object>'],
				'tr': [2, '<table><tbody>', '</tbody></table>'],

				'optgroup': selectWrap,
				'option': selectWrap,

				'caption': tableWrap,
				'colgroup': tableWrap,
				'tbody': tableWrap,
				'tfoot': tableWrap,
				'thead': tableWrap,

				'td': trWrap,
				'th': trWrap
			};

			// Initialize the SVG elements since we know they'll always need to be wrapped
			// consistently. If they are created inside a <div> they will be initialized in
			// the wrong namespace (and will not display).
			var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
			svgElements.forEach(function (nodeName) {
				markupWrap[nodeName] = svgWrap;
				shouldWrap[nodeName] = true;
			});

			/**
			 * Gets the markup wrap configuration for the supplied `nodeName`.
			 *
			 * NOTE: This lazily detects which wraps are necessary for the current browser.
			 *
			 * @param {string} nodeName Lowercase `nodeName`.
			 * @return {?array} Markup wrap configuration, if applicable.
			 */
			function getMarkupWrap(nodeName) {
				!!!dummyNode ? "development" !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : undefined;
				if (!markupWrap.hasOwnProperty(nodeName)) {
					nodeName = '*';
				}
				if (!shouldWrap.hasOwnProperty(nodeName)) {
					if (nodeName === '*') {
						dummyNode.innerHTML = '<link />';
					} else {
						dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
					}
					shouldWrap[nodeName] = !dummyNode.firstChild;
				}
				return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
			}

			module.exports = getMarkupWrap;
		}, { "147": 147, "161": 161 }], 158: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule getUnboundedScrollPosition
			 * @typechecks
			 */

			'use strict';

			/**
			 * Gets the scroll position of the supplied element or window.
			 *
			 * The return values are unbounded, unlike `getScrollPosition`. This means they
			 * may be negative or exceed the element boundaries (which is possible using
			 * inertial scrolling).
			 *
			 * @param {DOMWindow|DOMElement} scrollable
			 * @return {object} Map with `x` and `y` keys.
			 */
			function getUnboundedScrollPosition(scrollable) {
				if (scrollable === window) {
					return {
						x: window.pageXOffset || document.documentElement.scrollLeft,
						y: window.pageYOffset || document.documentElement.scrollTop
					};
				}
				return {
					x: scrollable.scrollLeft,
					y: scrollable.scrollTop
				};
			}

			module.exports = getUnboundedScrollPosition;
		}, {}], 159: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule hyphenate
			 * @typechecks
			 */

			'use strict';

			var _uppercasePattern = /([A-Z])/g;

			/**
			 * Hyphenates a camelcased string, for example:
			 *
			 *   > hyphenate('backgroundColor')
			 *   < "background-color"
			 *
			 * For CSS style names, use `hyphenateStyleName` instead which works properly
			 * with all vendor prefixes, including `ms`.
			 *
			 * @param {string} string
			 * @return {string}
			 */
			function hyphenate(string) {
				return string.replace(_uppercasePattern, '-$1').toLowerCase();
			}

			module.exports = hyphenate;
		}, {}], 160: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule hyphenateStyleName
			 * @typechecks
			 */

			'use strict';

			var hyphenate = _dereq_(159);

			var msPattern = /^ms-/;

			/**
			 * Hyphenates a camelcased CSS property name, for example:
			 *
			 *   > hyphenateStyleName('backgroundColor')
			 *   < "background-color"
			 *   > hyphenateStyleName('MozTransition')
			 *   < "-moz-transition"
			 *   > hyphenateStyleName('msTransition')
			 *   < "-ms-transition"
			 *
			 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
			 * is converted to `-ms-`.
			 *
			 * @param {string} string
			 * @return {string}
			 */
			function hyphenateStyleName(string) {
				return hyphenate(string).replace(msPattern, '-ms-');
			}

			module.exports = hyphenateStyleName;
		}, { "159": 159 }], 161: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule invariant
			 */

			'use strict';

			/**
			 * Use invariant() to assert state which your program assumes to be true.
			 *
			 * Provide sprintf-style format (only %s is supported) and arguments
			 * to provide information about what broke and what you were
			 * expecting.
			 *
			 * The invariant message will be stripped in production, but the invariant
			 * will remain to ensure logic does not differ in production.
			 */

			function invariant(condition, format, a, b, c, d, e, f) {
				if ("development" !== 'production') {
					if (format === undefined) {
						throw new Error('invariant requires an error message argument');
					}
				}

				if (!condition) {
					var error;
					if (format === undefined) {
						error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
					} else {
						var args = [a, b, c, d, e, f];
						var argIndex = 0;
						error = new Error(format.replace(/%s/g, function () {
							return args[argIndex++];
						}));
						error.name = 'Invariant Violation';
					}

					error.framesToPop = 1; // we don't care about invariant's own frame
					throw error;
				}
			}

			module.exports = invariant;
		}, {}], 162: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule isNode
			 * @typechecks
			 */

			/**
			 * @param {*} object The object to check.
			 * @return {boolean} Whether or not the object is a DOM node.
			 */
			'use strict';

			function isNode(object) {
				return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
			}

			module.exports = isNode;
		}, {}], 163: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule isTextNode
			 * @typechecks
			 */

			'use strict';

			var isNode = _dereq_(162);

			/**
			 * @param {*} object The object to check.
			 * @return {boolean} Whether or not the object is a DOM text node.
			 */
			function isTextNode(object) {
				return isNode(object) && object.nodeType == 3;
			}

			module.exports = isTextNode;
		}, { "162": 162 }], 164: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule joinClasses
			 * @typechecks static-only
			 */

			'use strict';

			/**
			 * Combines multiple className strings into one.
			 * http://jsperf.com/joinclasses-args-vs-array
			 *
			 * @param {...?string} className
			 * @return {string}
			 */
			function joinClasses(className /*, ... */) {
				if (!className) {
					className = '';
				}
				var nextClass;
				var argLength = arguments.length;
				if (argLength > 1) {
					for (var ii = 1; ii < argLength; ii++) {
						nextClass = arguments[ii];
						if (nextClass) {
							className = (className ? className + ' ' : '') + nextClass;
						}
					}
				}
				return className;
			}

			module.exports = joinClasses;
		}, {}], 165: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule keyMirror
			 * @typechecks static-only
			 */

			'use strict';

			var invariant = _dereq_(161);

			/**
			 * Constructs an enumeration with keys equal to their value.
			 *
			 * For example:
			 *
			 *   var COLORS = keyMirror({blue: null, red: null});
			 *   var myColor = COLORS.blue;
			 *   var isColorValid = !!COLORS[myColor];
			 *
			 * The last line could not be performed if the values of the generated enum were
			 * not equal to their keys.
			 *
			 *   Input:  {key1: val1, key2: val2}
			 *   Output: {key1: key1, key2: key2}
			 *
			 * @param {object} obj
			 * @return {object}
			 */
			var keyMirror = function (obj) {
				var ret = {};
				var key;
				!(obj instanceof Object && !Array.isArray(obj)) ? "development" !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : undefined;
				for (key in obj) {
					if (!obj.hasOwnProperty(key)) {
						continue;
					}
					ret[key] = key;
				}
				return ret;
			};

			module.exports = keyMirror;
		}, { "161": 161 }], 166: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule keyOf
			 */

			/**
			 * Allows extraction of a minified key. Let's the build system minify keys
			 * without losing the ability to dynamically use key strings as values
			 * themselves. Pass in an object with a single key/val pair and it will return
			 * you the string key of that single record. Suppose you want to grab the
			 * value for a key 'className' inside of an object. Key/val minification may
			 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
			 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
			 * reuse those resolutions.
			 */
			"use strict";

			var keyOf = function (oneKeyObj) {
				var key;
				for (key in oneKeyObj) {
					if (!oneKeyObj.hasOwnProperty(key)) {
						continue;
					}
					return key;
				}
				return null;
			};

			module.exports = keyOf;
		}, {}], 167: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule mapObject
			 */

			'use strict';

			var hasOwnProperty = Object.prototype.hasOwnProperty;

			/**
			 * Executes the provided `callback` once for each enumerable own property in the
			 * object and constructs a new object from the results. The `callback` is
			 * invoked with three arguments:
			 *
			 *  - the property value
			 *  - the property name
			 *  - the object being traversed
			 *
			 * Properties that are added after the call to `mapObject` will not be visited
			 * by `callback`. If the values of existing properties are changed, the value
			 * passed to `callback` will be the value at the time `mapObject` visits them.
			 * Properties that are deleted before being visited are not visited.
			 *
			 * @grep function objectMap()
			 * @grep function objMap()
			 *
			 * @param {?object} object
			 * @param {function} callback
			 * @param {*} context
			 * @return {?object}
			 */
			function mapObject(object, callback, context) {
				if (!object) {
					return null;
				}
				var result = {};
				for (var name in object) {
					if (hasOwnProperty.call(object, name)) {
						result[name] = callback.call(context, object[name], name, object);
					}
				}
				return result;
			}

			module.exports = mapObject;
		}, {}], 168: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule memoizeStringOnly
			 * @typechecks static-only
			 */

			'use strict';

			/**
			 * Memoizes the return value of a function that accepts one string argument.
			 *
			 * @param {function} callback
			 * @return {function}
			 */
			function memoizeStringOnly(callback) {
				var cache = {};
				return function (string) {
					if (!cache.hasOwnProperty(string)) {
						cache[string] = callback.call(this, string);
					}
					return cache[string];
				};
			}

			module.exports = memoizeStringOnly;
		}, {}], 169: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule performance
			 * @typechecks
			 */

			'use strict';

			var ExecutionEnvironment = _dereq_(147);

			var performance;

			if (ExecutionEnvironment.canUseDOM) {
				performance = window.performance || window.msPerformance || window.webkitPerformance;
			}

			module.exports = performance || {};
		}, { "147": 147 }], 170: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule performanceNow
			 * @typechecks
			 */

			'use strict';

			var performance = _dereq_(169);

			var performanceNow;

			/**
			 * Detect if we can use `window.performance.now()` and gracefully fallback to
			 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
			 * because of Facebook's testing infrastructure.
			 */
			if (performance.now) {
				performanceNow = function () {
					return performance.now();
				};
			} else {
				performanceNow = function () {
					return Date.now();
				};
			}

			module.exports = performanceNow;
		}, { "169": 169 }], 171: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule shallowEqual
			 * @typechecks
			 * 
			 */

			'use strict';

			var hasOwnProperty = Object.prototype.hasOwnProperty;

			/**
			 * Performs equality by iterating through keys on an object and returning false
			 * when any key has values which are not strictly equal between the arguments.
			 * Returns true when the values of all keys are strictly equal.
			 */
			function shallowEqual(objA, objB) {
				if (objA === objB) {
					return true;
				}

				if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
					return false;
				}

				var keysA = Object.keys(objA);
				var keysB = Object.keys(objB);

				if (keysA.length !== keysB.length) {
					return false;
				}

				// Test for A's keys different from B.
				var bHasOwnProperty = hasOwnProperty.bind(objB);
				for (var i = 0; i < keysA.length; i++) {
					if (!bHasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {
						return false;
					}
				}

				return true;
			}

			module.exports = shallowEqual;
		}, {}], 172: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2013-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule toArray
			 * @typechecks
			 */

			'use strict';

			var invariant = _dereq_(161);

			/**
			 * Convert array-like objects to arrays.
			 *
			 * This API assumes the caller knows the contents of the data type. For less
			 * well defined inputs use createArrayFromMixed.
			 *
			 * @param {object|function|filelist} obj
			 * @return {array}
			 */
			function toArray(obj) {
				var length = obj.length;

				// Some browse builtin objects can report typeof 'function' (e.g. NodeList in
				// old versions of Safari).
				!(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? "development" !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : undefined;

				!(typeof length === 'number') ? "development" !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : undefined;

				!(length === 0 || length - 1 in obj) ? "development" !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : undefined;

				// Old IE doesn't give collections access to hasOwnProperty. Assume inputs
				// without method will throw during the slice call and skip straight to the
				// fallback.
				if (obj.hasOwnProperty) {
					try {
						return Array.prototype.slice.call(obj);
					} catch (e) {
						// IE < 9 does not support Array#slice on collections objects
					}
				}

				// Fall back to copying key by key. This assumes all keys have a value,
				// so will not preserve sparsely populated inputs.
				var ret = Array(length);
				for (var ii = 0; ii < length; ii++) {
					ret[ii] = obj[ii];
				}
				return ret;
			}

			module.exports = toArray;
		}, { "161": 161 }], 173: [function (_dereq_, module, exports) {
			/**
			 * Copyright 2014-2015, Facebook, Inc.
			 * All rights reserved.
			 *
			 * This source code is licensed under the BSD-style license found in the
			 * LICENSE file in the root directory of this source tree. An additional grant
			 * of patent rights can be found in the PATENTS file in the same directory.
			 *
			 * @providesModule warning
			 */

			'use strict';

			var emptyFunction = _dereq_(153);

			/**
			 * Similar to invariant but only logs a warning if the condition is not met.
			 * This can be used to log issues in development environments in critical
			 * paths. Removing the logging code for production environments will keep the
			 * same logic and follow the same code paths.
			 */

			var warning = emptyFunction;

			if ("development" !== 'production') {
				warning = function (condition, format) {
					for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
						args[_key - 2] = arguments[_key];
					}

					if (format === undefined) {
						throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
					}

					if (format.indexOf('Failed Composite propType: ') === 0) {
						return; // Ignore CompositeComponent proptype check.
					}

					if (!condition) {
						var argIndex = 0;
						var message = 'Warning: ' + format.replace(/%s/g, function () {
							return args[argIndex++];
						});
						if (typeof console !== 'undefined') {
							console.error(message);
						}
						try {
							// --- Welcome to debugging React ---
							// This error was thrown as a convenience so that you can use this stack
							// to find the callsite that caused this warning to fire.
							throw new Error(message);
						} catch (x) { }
					}
				};
			}

			module.exports = warning;
		}, { "153": 153 }]
	}, {}, [1])(1)
});
/**
 * ReactDOM v0.14.7
 *
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
// Based off https://github.com/ForbesLindesay/umd/blob/master/template.js
;(function(f) {
  // CommonJS
  if (typeof exports === "object" && typeof module !== "undefined") {
    module.exports = f(require('react'));

  // RequireJS
  } else if (typeof define === "function" && define.amd) {
    define(['react'], f);

  // <script>
  } else {
    var g;
    if (typeof window !== "undefined") {
      g = window;
    } else if (typeof global !== "undefined") {
      g = global;
    } else if (typeof self !== "undefined") {
      g = self;
    } else {
      // works providing we're not in "use strict";
      // needed for Java 8 Nashorn
      // see https://github.com/facebook/react/issues/3037
      g = this;
    }
    g.ReactDOM = f(g.React);
  }

})(function(React) {
  return React.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
});

/**
 * ReactDOMServer v0.14.7
 *
 * Copyright 2013-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
// Based off https://github.com/ForbesLindesay/umd/blob/master/template.js
;(function(f) {
  // CommonJS
  if (typeof exports === "object" && typeof module !== "undefined") {
    module.exports = f(require('react'));

  // RequireJS
  } else if (typeof define === "function" && define.amd) {
    define(['react'], f);

  // <script>
  } else {
    var g;
    if (typeof window !== "undefined") {
      g = window;
    } else if (typeof global !== "undefined") {
      g = global;
    } else if (typeof self !== "undefined") {
      g = self;
    } else {
      // works providing we're not in "use strict";
      // needed for Java 8 Nashorn
      // see https://github.com/facebook/react/issues/3037
      g = this;
    }
    g.ReactDOMServer = f(g.React);
  }

})(function(React) {
  return React.__SECRET_DOM_SERVER_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
});

(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.ReactModal = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var React = (typeof window !== "undefined" ? window['React'] : typeof global !== "undefined" ? global['React'] : null);
var ReactDOM = (typeof window !== "undefined" ? window['ReactDOM'] : typeof global !== "undefined" ? global['ReactDOM'] : null);
var ExecutionEnvironment = require('exenv');
var ModalPortal = React.createFactory(require('./ModalPortal'));
var ariaAppHider = require('../helpers/ariaAppHider');
var elementClass = require('element-class');
var renderSubtreeIntoContainer = (typeof window !== "undefined" ? window['ReactDOM'] : typeof global !== "undefined" ? global['ReactDOM'] : null).unstable_renderSubtreeIntoContainer;

var SafeHTMLElement = ExecutionEnvironment.canUseDOM ? window.HTMLElement : {};

var Modal = module.exports = React.createClass({

  displayName: 'Modal',
  statics: {
    setAppElement: ariaAppHider.setElement,
    injectCSS: function() {
      "production" !== "production"
        && console.warn('React-Modal: injectCSS has been deprecated ' +
                        'and no longer has any effect. It will be removed in a later version');
    }
  },

  propTypes: {
    isOpen: React.PropTypes.bool.isRequired,
    style: React.PropTypes.shape({
      content: React.PropTypes.object,
      overlay: React.PropTypes.object
    }),
    appElement: React.PropTypes.instanceOf(SafeHTMLElement),
    onRequestClose: React.PropTypes.func,
    closeTimeoutMS: React.PropTypes.number,
    ariaHideApp: React.PropTypes.bool
  },

  getDefaultProps: function () {
    return {
      isOpen: false,
      ariaHideApp: true,
      closeTimeoutMS: 0
    };
  },

  componentDidMount: function() {
    this.node = document.createElement('div');
    this.node.className = 'modal';
    document.body.appendChild(this.node);
    this.renderPortal(this.props, this.node);
  },

  componentWillReceiveProps: function (newProps) {
    this.renderPortal(newProps, this.node);
  },

  componentWillUnmount: function() {
    ReactDOM.unmountComponentAtNode(this.node);
    document.body.removeChild(this.node);
  },

  renderPortal: function (props, node) {
	if (props.isOpen) {
	  elementClass(node).add('__open');
	  elementClass(document.body).add('disable-scroll');
  } else {
	  elementClass(node).remove('__open');
	  elementClass(document.body).remove('disable-scroll');
  }

  if (props.ariaHideApp) {
    ariaAppHider.toggle(props.isOpen, props.appElement);
  }
    sanitizeProps(props);
    this.portal = renderSubtreeIntoContainer(this, ModalPortal(props), this.node);
  },

  render: function () {
    return React.DOM.noscript();
  }
});

function sanitizeProps(props) {
  delete props.ref;
}

},{"../helpers/ariaAppHider":3,"./ModalPortal":2,"element-class":8,"exenv":9}],2:[function(require,module,exports){
var React = (typeof window !== "undefined" ? window['React'] : typeof global !== "undefined" ? global['React'] : null);
var div = React.DOM.div;
var focusManager = require('../helpers/focusManager');
var scopeTab = require('../helpers/scopeTab');
var Assign = require('lodash.assign');


// so that our CSS is statically analyzable
var CLASS_NAMES = {
  overlay: {
    base: 'modal-overlay',
    afterOpen: '__after-open',
    beforeClose: '__before-close'
  },
  content: {
    base: 'modal-window',
    afterOpen: '__after-open',
    beforeClose: '__before-close'
  }
};

var defaultStyles = {
  overlay: {
//  position        : 'fixed',
//  top             : 0,
//  left            : 0,
//  right           : 0,
//  bottom          : 0
//  backgroundColor : 'rgba(255, 255, 255, 0.75)'
  },
  content: {
//  position                : 'absolute',
//  top                     : '40px',
//  left                    : '40px',
//  right                   : '40px',
//  bottom                  : '40px',
//  border                  : '1px solid #ccc',
//  background              : '#fff',
//  overflow                : 'auto',
//  WebkitOverflowScrolling : 'touch',
//  borderRadius            : '4px',
//  outline                 : 'none',
//  padding                 : '20px'
  }
};

function stopPropagation(event) {
  event.stopPropagation();
}

var ModalPortal = module.exports = React.createClass({

  displayName: 'ModalPortal',

  getDefaultProps: function() {
    return {
      style: {
        overlay: {},
        content: {}
      }
    };
  },

  getInitialState: function() {
    return {
      afterOpen: false,
      beforeClose: false
    };
  },

  componentDidMount: function() {
    // Focus needs to be set when mounting and already open
    if (this.props.isOpen) {
      this.setFocusAfterRender(true);
      this.open();
    }
  },

  componentWillUnmount: function() {
    clearTimeout(this.closeTimer);
  },

  componentWillReceiveProps: function(newProps) {
    // Focus only needs to be set once when the modal is being opened
    if (!this.props.isOpen && newProps.isOpen) {
      this.setFocusAfterRender(true);
      this.open();
    } else if (this.props.isOpen && !newProps.isOpen) {
      this.close();
    }
  },

  componentDidUpdate: function () {
    if (this.focusAfterRender) {
      this.focusContent();
      this.setFocusAfterRender(false);
    }
  },

  setFocusAfterRender: function (focus) {
    this.focusAfterRender = focus;
  },

  open: function() {
    focusManager.setupScopedFocus(this.node);
    focusManager.markForFocusLater();
    this.setState({isOpen: true}, function() {
      this.setState({afterOpen: true});
    }.bind(this));
  },

  close: function() {
    if (!this.ownerHandlesClose())
      return;
    if (this.props.closeTimeoutMS > 0)
      this.closeWithTimeout();
    else
      this.closeWithoutTimeout();
  },

  focusContent: function() {
    this.refs.content.focus();
  },

  closeWithTimeout: function() {
    this.setState({beforeClose: true}, function() {
      this.closeTimer = setTimeout(this.closeWithoutTimeout, this.props.closeTimeoutMS);
    }.bind(this));
  },

  closeWithoutTimeout: function() {
    this.setState({
      afterOpen: false,
      beforeClose: false
    }, this.afterClose);
  },

  afterClose: function() {
    focusManager.returnFocus();
    focusManager.teardownScopedFocus();
  },

  handleKeyDown: function(event) {
    if (event.keyCode == 9 /*tab*/) scopeTab(this.refs.content, event);
    if (event.keyCode == 27 /*esc*/) this.requestClose();
  },

  handleOverlayClick: function() {
    if (this.ownerHandlesClose())
      this.requestClose();
    else
      this.focusContent();
  },

  requestClose: function() {
    if (this.ownerHandlesClose())
      this.props.onRequestClose();
  },

  ownerHandlesClose: function() {
    return this.props.onRequestClose;
  },

  shouldBeClosed: function() {
    return !this.props.isOpen && !this.state.beforeClose;
  },

  buildClassName: function(which, additional) {
    var className = CLASS_NAMES[which].base;
    if (this.state.afterOpen)
      className += ' '+CLASS_NAMES[which].afterOpen;
    if (this.state.beforeClose)
      className += ' '+CLASS_NAMES[which].beforeClose;
    return additional ? className + ' ' + additional : className;
  },

  render: function() {
    return this.shouldBeClosed() ? div() : (
      div({
        ref: "overlay",
        className: this.buildClassName('overlay', this.props.overlayClassName),
        style: Assign({}, defaultStyles.overlay, this.props.style.overlay || {}),
        onClick: this.handleOverlayClick
      },
        div({
          ref: "content",
          style: Assign({}, defaultStyles.content, this.props.style.content || {}),
          className: this.buildClassName('content', this.props.className),
          tabIndex: "-1",
          onClick: stopPropagation,
          onKeyDown: this.handleKeyDown
        },
          this.props.children
        )
      )
    );
  }
});

},{"../helpers/focusManager":4,"../helpers/scopeTab":5,"lodash.assign":10}],3:[function(require,module,exports){
var _element = typeof document !== 'undefined' ? document.body : null;

function setElement(element) {
  if (typeof element === 'string') {
    var el = document.querySelectorAll(element);
    element = 'length' in el ? el[0] : el;
  }
  _element = element || _element;
}

function hide(appElement) {
  validateElement(appElement);
  (appElement || _element).setAttribute('aria-hidden', 'true');
}

function show(appElement) {
  validateElement(appElement);
  (appElement || _element).removeAttribute('aria-hidden');
}

function toggle(shouldHide, appElement) {
  if (shouldHide)
    hide(appElement);
  else
    show(appElement);
}

function validateElement(appElement) {
  if (!appElement && !_element)
    throw new Error('react-modal: You must set an element with `Modal.setAppElement(el)` to make this accessible');
}

function resetForTesting() {
  _element = document.body;
}

exports.toggle = toggle;
exports.setElement = setElement;
exports.show = show;
exports.hide = hide;
exports.resetForTesting = resetForTesting;

},{}],4:[function(require,module,exports){
var findTabbable = require('../helpers/tabbable');
var modalElement = null;
var focusLaterElement = null;
var needToFocus = false;

function handleBlur(event) {
  needToFocus = true;
}

function handleFocus(event) {
  if (needToFocus) {
    needToFocus = false;
    if (!modalElement) {
      return;
    }
    // need to see how jQuery shims document.on('focusin') so we don't need the
    // setTimeout, firefox doesn't support focusin, if it did, we could focus
    // the element outside of a setTimeout. Side-effect of this implementation 
    // is that the document.body gets focus, and then we focus our element right 
    // after, seems fine.
    setTimeout(function() {
      if (modalElement.contains(document.activeElement))
        return;
      var el = (findTabbable(modalElement)[0] || modalElement);
      el.focus();
    }, 0);
  }
}

exports.markForFocusLater = function() {
  focusLaterElement = document.activeElement;
};

exports.returnFocus = function() {
  try {
    focusLaterElement.focus();
  }
  catch (e) {
    console.warn('You tried to return focus to '+focusLaterElement+' but it is not in the DOM anymore');
  }
  focusLaterElement = null;
};

exports.setupScopedFocus = function(element) {
  modalElement = element;

  if (window.addEventListener) {
    window.addEventListener('blur', handleBlur, false);
    document.addEventListener('focus', handleFocus, true);
  } else {
    window.attachEvent('onBlur', handleBlur);
    document.attachEvent('onFocus', handleFocus);
  }
};

exports.teardownScopedFocus = function() {
  modalElement = null;

  if (window.addEventListener) {
    window.removeEventListener('blur', handleBlur);
    document.removeEventListener('focus', handleFocus);
  } else {
    window.detachEvent('onBlur', handleBlur);
    document.detachEvent('onFocus', handleFocus);
  }
};

},{"../helpers/tabbable":6}],5:[function(require,module,exports){
var findTabbable = require('../helpers/tabbable');

module.exports = function(node, event) {
  var tabbable = findTabbable(node);
  var finalTabbable = tabbable[event.shiftKey ? 0 : tabbable.length - 1];
  var leavingFinalTabbable = (
    finalTabbable === document.activeElement ||
    // handle immediate shift+tab after opening with mouse
    node === document.activeElement
  );
  if (!leavingFinalTabbable) return;
  event.preventDefault();
  var target = tabbable[event.shiftKey ? tabbable.length - 1 : 0];
  target.focus();
};

},{"../helpers/tabbable":6}],6:[function(require,module,exports){
/*!
 * Adapted from jQuery UI core
 *
 * http://jqueryui.com
 *
 * Copyright 2014 jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/category/ui-core/
 */

function focusable(element, isTabIndexNotNaN) {
  var nodeName = element.nodeName.toLowerCase();
  return (/input|select|textarea|button|object/.test(nodeName) ?
    !element.disabled :
    "a" === nodeName ?
      element.href || isTabIndexNotNaN :
      isTabIndexNotNaN) && visible(element);
}

function hidden(el) {
  return (el.offsetWidth <= 0 && el.offsetHeight <= 0) ||
    el.style.display === 'none';
}

function visible(element) {
  while (element) {
    if (element === document.body) break;
    if (hidden(element)) return false;
    element = element.parentNode;
  }
  return true;
}

function tabbable(element) {
  var tabIndex = element.getAttribute('tabindex');
  if (tabIndex === null) tabIndex = undefined;
  var isTabIndexNaN = isNaN(tabIndex);
  return (isTabIndexNaN || tabIndex >= 0) && focusable(element, !isTabIndexNaN);
}

function findTabbableDescendants(element) {
  return [].slice.call(element.querySelectorAll('*'), 0).filter(function(el) {
    return tabbable(el);
  });
}

module.exports = findTabbableDescendants;

},{}],7:[function(require,module,exports){
module.exports = require('./components/Modal');

},{"./components/Modal":1}],8:[function(require,module,exports){
module.exports = function(opts) {
  return new ElementClass(opts)
}

function indexOf(arr, prop) {
  if (arr.indexOf) return arr.indexOf(prop)
  for (var i = 0, len = arr.length; i < len; i++)
    if (arr[i] === prop) return i
  return -1
}

function ElementClass(opts) {
  if (!(this instanceof ElementClass)) return new ElementClass(opts)
  var self = this
  if (!opts) opts = {}

  // similar doing instanceof HTMLElement but works in IE8
  if (opts.nodeType) opts = {el: opts}

  this.opts = opts
  this.el = opts.el || document.body
  if (typeof this.el !== 'object') this.el = document.querySelector(this.el)
}

ElementClass.prototype.add = function(className) {
  var el = this.el
  if (!el) return
  if (el.className === "") return el.className = className
  var classes = el.className.split(' ')
  if (indexOf(classes, className) > -1) return classes
  classes.push(className)
  el.className = classes.join(' ')
  return classes
}

ElementClass.prototype.remove = function(className) {
  var el = this.el
  if (!el) return
  if (el.className === "") return
  var classes = el.className.split(' ')
  var idx = indexOf(classes, className)
  if (idx > -1) classes.splice(idx, 1)
  el.className = classes.join(' ')
  return classes
}

ElementClass.prototype.has = function(className) {
  var el = this.el
  if (!el) return
  var classes = el.className.split(' ')
  return indexOf(classes, className) > -1
}

ElementClass.prototype.toggle = function(className) {
  var el = this.el
  if (!el) return
  if (this.has(className)) this.remove(className)
  else this.add(className)
}

},{}],9:[function(require,module,exports){
/*!
  Copyright (c) 2015 Jed Watson.
  Based on code that is Copyright 2013-2015, Facebook, Inc.
  All rights reserved.
*/

(function () {
	'use strict';

	var canUseDOM = !!(
		typeof window !== 'undefined' &&
		window.document &&
		window.document.createElement
	);

	var ExecutionEnvironment = {

		canUseDOM: canUseDOM,

		canUseWorkers: typeof Worker !== 'undefined',

		canUseEventListeners:
			canUseDOM && !!(window.addEventListener || window.attachEvent),

		canUseViewport: canUseDOM && !!window.screen

	};

	if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {
		define(function () {
			return ExecutionEnvironment;
		});
	} else if (typeof module !== 'undefined' && module.exports) {
		module.exports = ExecutionEnvironment;
	} else {
		window.ExecutionEnvironment = ExecutionEnvironment;
	}

}());

},{}],10:[function(require,module,exports){
/**
 * lodash 3.2.0 (Custom Build) <https://lodash.com/>
 * Build: `lodash modern modularize exports="npm" -o ./`
 * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <https://lodash.com/license>
 */
var baseAssign = require('lodash._baseassign'),
    createAssigner = require('lodash._createassigner'),
    keys = require('lodash.keys');

/**
 * A specialized version of `_.assign` for customizing assigned values without
 * support for argument juggling, multiple sources, and `this` binding `customizer`
 * functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {Function} customizer The function to customize assigned values.
 * @returns {Object} Returns `object`.
 */
function assignWith(object, source, customizer) {
  var index = -1,
      props = keys(source),
      length = props.length;

  while (++index < length) {
    var key = props[index],
        value = object[key],
        result = customizer(value, source[key], key, object, source);

    if ((result === result ? (result !== value) : (value === value)) ||
        (value === undefined && !(key in object))) {
      object[key] = result;
    }
  }
  return object;
}

/**
 * Assigns own enumerable properties of source object(s) to the destination
 * object. Subsequent sources overwrite property assignments of previous sources.
 * If `customizer` is provided it is invoked to produce the assigned values.
 * The `customizer` is bound to `thisArg` and invoked with five arguments:
 * (objectValue, sourceValue, key, object, source).
 *
 * **Note:** This method mutates `object` and is based on
 * [`Object.assign`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign).
 *
 * @static
 * @memberOf _
 * @alias extend
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @param {Function} [customizer] The function to customize assigned values.
 * @param {*} [thisArg] The `this` binding of `customizer`.
 * @returns {Object} Returns `object`.
 * @example
 *
 * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });
 * // => { 'user': 'fred', 'age': 40 }
 *
 * // using a customizer callback
 * var defaults = _.partialRight(_.assign, function(value, other) {
 *   return _.isUndefined(value) ? other : value;
 * });
 *
 * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });
 * // => { 'user': 'barney', 'age': 36 }
 */
var assign = createAssigner(function(object, source, customizer) {
  return customizer
    ? assignWith(object, source, customizer)
    : baseAssign(object, source);
});

module.exports = assign;

},{"lodash._baseassign":11,"lodash._createassigner":13,"lodash.keys":17}],11:[function(require,module,exports){
/**
 * lodash 3.2.0 (Custom Build) <https://lodash.com/>
 * Build: `lodash modern modularize exports="npm" -o ./`
 * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <https://lodash.com/license>
 */
var baseCopy = require('lodash._basecopy'),
    keys = require('lodash.keys');

/**
 * The base implementation of `_.assign` without support for argument juggling,
 * multiple sources, and `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssign(object, source) {
  return source == null
    ? object
    : baseCopy(source, keys(source), object);
}

module.exports = baseAssign;

},{"lodash._basecopy":12,"lodash.keys":17}],12:[function(require,module,exports){
/**
 * lodash 3.0.1 (Custom Build) <https://lodash.com/>
 * Build: `lodash modern modularize exports="npm" -o ./`
 * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <https://lodash.com/license>
 */

/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property names to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @returns {Object} Returns `object`.
 */
function baseCopy(source, props, object) {
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];
    object[key] = source[key];
  }
  return object;
}

module.exports = baseCopy;

},{}],13:[function(require,module,exports){
/**
 * lodash 3.1.1 (Custom Build) <https://lodash.com/>
 * Build: `lodash modern modularize exports="npm" -o ./`
 * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <https://lodash.com/license>
 */
var bindCallback = require('lodash._bindcallback'),
    isIterateeCall = require('lodash._isiterateecall'),
    restParam = require('lodash.restparam');

/**
 * Creates a function that assigns properties of source object(s) to a given
 * destination object.
 *
 * **Note:** This function is used to create `_.assign`, `_.defaults`, and `_.merge`.
 *
 * @private
 * @param {Function} assigner The function to assign values.
 * @returns {Function} Returns the new assigner function.
 */
function createAssigner(assigner) {
  return restParam(function(object, sources) {
    var index = -1,
        length = object == null ? 0 : sources.length,
        customizer = length > 2 ? sources[length - 2] : undefined,
        guard = length > 2 ? sources[2] : undefined,
        thisArg = length > 1 ? sources[length - 1] : undefined;

    if (typeof customizer == 'function') {
      customizer = bindCallback(customizer, thisArg, 5);
      length -= 2;
    } else {
      customizer = typeof thisArg == 'function' ? thisArg : undefined;
      length -= (customizer ? 1 : 0);
    }
    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
      customizer = length < 3 ? undefined : customizer;
      length = 1;
    }
    while (++index < length) {
      var source = sources[index];
      if (source) {
        assigner(object, source, customizer);
      }
    }
    return object;
  });
}

module.exports = createAssigner;

},{"lodash._bindcallback":14,"lodash._isiterateecall":15,"lodash.restparam":16}],14:[function(require,module,exports){
/**
 * lodash 3.0.1 (Custom Build) <https://lodash.com/>
 * Build: `lodash modern modularize exports="npm" -o ./`
 * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <https://lodash.com/license>
 */

/**
 * A specialized version of `baseCallback` which only supports `this` binding
 * and specifying the number of arguments to provide to `func`.
 *
 * @private
 * @param {Function} func The function to bind.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {number} [argCount] The number of arguments to provide to `func`.
 * @returns {Function} Returns the callback.
 */
function bindCallback(func, thisArg, argCount) {
  if (typeof func != 'function') {
    return identity;
  }
  if (thisArg === undefined) {
    return func;
  }
  switch (argCount) {
    case 1: return function(value) {
      return func.call(thisArg, value);
    };
    case 3: return function(value, index, collection) {
      return func.call(thisArg, value, index, collection);
    };
    case 4: return function(accumulator, value, index, collection) {
      return func.call(thisArg, accumulator, value, index, collection);
    };
    case 5: return function(value, other, key, object, source) {
      return func.call(thisArg, value, other, key, object, source);
    };
  }
  return function() {
    return func.apply(thisArg, arguments);
  };
}

/**
 * This method returns the first argument provided to it.
 *
 * @static
 * @memberOf _
 * @category Utility
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'user': 'fred' };
 *
 * _.identity(object) === object;
 * // => true
 */
function identity(value) {
  return value;
}

module.exports = bindCallback;

},{}],15:[function(require,module,exports){
/**
 * lodash 3.0.9 (Custom Build) <https://lodash.com/>
 * Build: `lodash modern modularize exports="npm" -o ./`
 * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <https://lodash.com/license>
 */

/** Used to detect unsigned integer values. */
var reIsUint = /^\d+$/;

/**
 * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)
 * of an array-like value.
 */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new function.
 */
function baseProperty(key) {
  return function(object) {
    return object == null ? undefined : object[key];
  };
}

/**
 * Gets the "length" property value of `object`.
 *
 * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)
 * that affects Safari on at least iOS 8.1-8.3 ARM64.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {*} Returns the "length" value.
 */
var getLength = baseProperty('length');

/**
 * Checks if `value` is array-like.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 */
function isArrayLike(value) {
  return value != null && isLength(getLength(value));
}

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;
  length = length == null ? MAX_SAFE_INTEGER : length;
  return value > -1 && value % 1 == 0 && value < length;
}

/**
 * Checks if the provided arguments are from an iteratee call.
 *
 * @private
 * @param {*} value The potential iteratee value argument.
 * @param {*} index The potential iteratee index or key argument.
 * @param {*} object The potential iteratee object argument.
 * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.
 */
function isIterateeCall(value, index, object) {
  if (!isObject(object)) {
    return false;
  }
  var type = typeof index;
  if (type == 'number'
      ? (isArrayLike(object) && isIndex(index, object.length))
      : (type == 'string' && index in object)) {
    var other = object[index];
    return value === value ? (value === other) : (other !== other);
  }
  return false;
}

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 */
function isLength(value) {
  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

/**
 * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.
 * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(1);
 * // => false
 */
function isObject(value) {
  // Avoid a V8 JIT bug in Chrome 19-20.
  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

module.exports = isIterateeCall;

},{}],16:[function(require,module,exports){
/**
 * lodash 3.6.1 (Custom Build) <https://lodash.com/>
 * Build: `lodash modern modularize exports="npm" -o ./`
 * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <https://lodash.com/license>
 */

/** Used as the `TypeError` message for "Functions" methods. */
var FUNC_ERROR_TEXT = 'Expected a function';

/* Native method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * Creates a function that invokes `func` with the `this` binding of the
 * created function and arguments from `start` and beyond provided as an array.
 *
 * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).
 *
 * @static
 * @memberOf _
 * @category Function
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 * @example
 *
 * var say = _.restParam(function(what, names) {
 *   return what + ' ' + _.initial(names).join(', ') +
 *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
 * });
 *
 * say('hello', 'fred', 'barney', 'pebbles');
 * // => 'hello fred, barney, & pebbles'
 */
function restParam(func, start) {
  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);
  return function() {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        rest = Array(length);

    while (++index < length) {
      rest[index] = args[start + index];
    }
    switch (start) {
      case 0: return func.call(this, rest);
      case 1: return func.call(this, args[0], rest);
      case 2: return func.call(this, args[0], args[1], rest);
    }
    var otherArgs = Array(start + 1);
    index = -1;
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = rest;
    return func.apply(this, otherArgs);
  };
}

module.exports = restParam;

},{}],17:[function(require,module,exports){
/**
 * lodash 3.1.2 (Custom Build) <https://lodash.com/>
 * Build: `lodash modern modularize exports="npm" -o ./`
 * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <https://lodash.com/license>
 */
var getNative = require('lodash._getnative'),
    isArguments = require('lodash.isarguments'),
    isArray = require('lodash.isarray');

/** Used to detect unsigned integer values. */
var reIsUint = /^\d+$/;

/** Used for native method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/* Native method references for those with the same name as other `lodash` methods. */
var nativeKeys = getNative(Object, 'keys');

/**
 * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)
 * of an array-like value.
 */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new function.
 */
function baseProperty(key) {
  return function(object) {
    return object == null ? undefined : object[key];
  };
}

/**
 * Gets the "length" property value of `object`.
 *
 * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)
 * that affects Safari on at least iOS 8.1-8.3 ARM64.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {*} Returns the "length" value.
 */
var getLength = baseProperty('length');

/**
 * Checks if `value` is array-like.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 */
function isArrayLike(value) {
  return value != null && isLength(getLength(value));
}

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;
  length = length == null ? MAX_SAFE_INTEGER : length;
  return value > -1 && value % 1 == 0 && value < length;
}

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 */
function isLength(value) {
  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

/**
 * A fallback implementation of `Object.keys` which creates an array of the
 * own enumerable property names of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function shimKeys(object) {
  var props = keysIn(object),
      propsLength = props.length,
      length = propsLength && object.length;

  var allowIndexes = !!length && isLength(length) &&
    (isArray(object) || isArguments(object));

  var index = -1,
      result = [];

  while (++index < propsLength) {
    var key = props[index];
    if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {
      result.push(key);
    }
  }
  return result;
}

/**
 * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.
 * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(1);
 * // => false
 */
function isObject(value) {
  // Avoid a V8 JIT bug in Chrome 19-20.
  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
var keys = !nativeKeys ? shimKeys : function(object) {
  var Ctor = object == null ? undefined : object.constructor;
  if ((typeof Ctor == 'function' && Ctor.prototype === object) ||
      (typeof object != 'function' && isArrayLike(object))) {
    return shimKeys(object);
  }
  return isObject(object) ? nativeKeys(object) : [];
};

/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
function keysIn(object) {
  if (object == null) {
    return [];
  }
  if (!isObject(object)) {
    object = Object(object);
  }
  var length = object.length;
  length = (length && isLength(length) &&
    (isArray(object) || isArguments(object)) && length) || 0;

  var Ctor = object.constructor,
      index = -1,
      isProto = typeof Ctor == 'function' && Ctor.prototype === object,
      result = Array(length),
      skipIndexes = length > 0;

  while (++index < length) {
    result[index] = (index + '');
  }
  for (var key in object) {
    if (!(skipIndexes && isIndex(key, length)) &&
        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = keys;

},{"lodash._getnative":18,"lodash.isarguments":19,"lodash.isarray":20}],18:[function(require,module,exports){
/**
 * lodash 3.9.1 (Custom Build) <https://lodash.com/>
 * Build: `lodash modern modularize exports="npm" -o ./`
 * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <https://lodash.com/license>
 */

/** `Object#toString` result references. */
var funcTag = '[object Function]';

/** Used to detect host constructors (Safari > 5). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/**
 * Checks if `value` is object-like.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/** Used for native method references. */
var objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var fnToString = Function.prototype.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
 * of values.
 */
var objToString = objectProto.toString;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  fnToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = object == null ? undefined : object[key];
  return isNative(value) ? value : undefined;
}

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in older versions of Chrome and Safari which return 'function' for regexes
  // and Safari 8 equivalents which return 'object' for typed array constructors.
  return isObject(value) && objToString.call(value) == funcTag;
}

/**
 * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.
 * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(1);
 * // => false
 */
function isObject(value) {
  // Avoid a V8 JIT bug in Chrome 19-20.
  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is a native function.
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function, else `false`.
 * @example
 *
 * _.isNative(Array.prototype.push);
 * // => true
 *
 * _.isNative(_);
 * // => false
 */
function isNative(value) {
  if (value == null) {
    return false;
  }
  if (isFunction(value)) {
    return reIsNative.test(fnToString.call(value));
  }
  return isObjectLike(value) && reIsHostCtor.test(value);
}

module.exports = getNative;

},{}],19:[function(require,module,exports){
/**
 * lodash 3.0.4 (Custom Build) <https://lodash.com/>
 * Build: `lodash modern modularize exports="npm" -o ./`
 * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <https://lodash.com/license>
 */

/**
 * Checks if `value` is object-like.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/** Used for native method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Native method references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/**
 * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)
 * of an array-like value.
 */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new function.
 */
function baseProperty(key) {
  return function(object) {
    return object == null ? undefined : object[key];
  };
}

/**
 * Gets the "length" property value of `object`.
 *
 * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)
 * that affects Safari on at least iOS 8.1-8.3 ARM64.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {*} Returns the "length" value.
 */
var getLength = baseProperty('length');

/**
 * Checks if `value` is array-like.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 */
function isArrayLike(value) {
  return value != null && isLength(getLength(value));
}

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 */
function isLength(value) {
  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

/**
 * Checks if `value` is classified as an `arguments` object.
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
function isArguments(value) {
  return isObjectLike(value) && isArrayLike(value) &&
    hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
}

module.exports = isArguments;

},{}],20:[function(require,module,exports){
/**
 * lodash 3.0.4 (Custom Build) <https://lodash.com/>
 * Build: `lodash modern modularize exports="npm" -o ./`
 * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <https://lodash.com/license>
 */

/** `Object#toString` result references. */
var arrayTag = '[object Array]',
    funcTag = '[object Function]';

/** Used to detect host constructors (Safari > 5). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/**
 * Checks if `value` is object-like.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/** Used for native method references. */
var objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var fnToString = Function.prototype.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
 * of values.
 */
var objToString = objectProto.toString;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  fnToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/* Native method references for those with the same name as other `lodash` methods. */
var nativeIsArray = getNative(Array, 'isArray');

/**
 * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)
 * of an array-like value.
 */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = object == null ? undefined : object[key];
  return isNative(value) ? value : undefined;
}

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 */
function isLength(value) {
  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(function() { return arguments; }());
 * // => false
 */
var isArray = nativeIsArray || function(value) {
  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;
};

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in older versions of Chrome and Safari which return 'function' for regexes
  // and Safari 8 equivalents which return 'object' for typed array constructors.
  return isObject(value) && objToString.call(value) == funcTag;
}

/**
 * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.
 * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(1);
 * // => false
 */
function isObject(value) {
  // Avoid a V8 JIT bug in Chrome 19-20.
  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is a native function.
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function, else `false`.
 * @example
 *
 * _.isNative(Array.prototype.push);
 * // => true
 *
 * _.isNative(_);
 * // => false
 */
function isNative(value) {
  if (value == null) {
    return false;
  }
  if (isFunction(value)) {
    return reIsNative.test(fnToString.call(value));
  }
  return isObjectLike(value) && reIsHostCtor.test(value);
}

module.exports = isArray;

},{}]},{},[7])(7)
});
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"), require("redux"));
	else if(typeof define === 'function' && define.amd)
		define(["react", "redux"], factory);
	else if(typeof exports === 'object')
		exports["ReactRedux"] = factory(require("react"), require("redux"));
	else
		root["ReactRedux"] = factory(root["React"], root["Redux"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_12__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.connect = exports.Provider = undefined;

	var _Provider = __webpack_require__(3);

	var _Provider2 = _interopRequireDefault(_Provider);

	var _connect = __webpack_require__(4);

	var _connect2 = _interopRequireDefault(_connect);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

	exports.Provider = _Provider2["default"];
	exports.connect = _connect2["default"];

/***/ },
/* 1 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_1__;

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(1);

	exports["default"] = _react.PropTypes.shape({
	  subscribe: _react.PropTypes.func.isRequired,
	  dispatch: _react.PropTypes.func.isRequired,
	  getState: _react.PropTypes.func.isRequired
	});

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports["default"] = undefined;

	var _react = __webpack_require__(1);

	var _storeShape = __webpack_require__(2);

	var _storeShape2 = _interopRequireDefault(_storeShape);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var didWarnAboutReceivingStore = false;
	function warnAboutReceivingStore() {
	  if (didWarnAboutReceivingStore) {
	    return;
	  }
	  didWarnAboutReceivingStore = true;

	  /* eslint-disable no-console */
	  if (typeof console !== 'undefined' && typeof console.error === 'function') {
	    console.error('<Provider> does not support changing `store` on the fly. ' + 'It is most likely that you see this error because you updated to ' + 'Redux 2.x and React Redux 2.x which no longer hot reload reducers ' + 'automatically. See https://github.com/rackt/react-redux/releases/' + 'tag/v2.0.0 for the migration instructions.');
	  }
	  /* eslint-disable no-console */
	}

	var Provider = function (_Component) {
	  _inherits(Provider, _Component);

	  Provider.prototype.getChildContext = function getChildContext() {
	    return { store: this.store };
	  };

	  function Provider(props, context) {
	    _classCallCheck(this, Provider);

	    var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));

	    _this.store = props.store;
	    return _this;
	  }

	  Provider.prototype.render = function render() {
	    var children = this.props.children;

	    return _react.Children.only(children);
	  };

	  return Provider;
	}(_react.Component);

	exports["default"] = Provider;

	if (true) {
	  Provider.prototype.componentWillReceiveProps = function (nextProps) {
	    var store = this.store;
	    var nextStore = nextProps.store;

	    if (store !== nextStore) {
	      warnAboutReceivingStore();
	    }
	  };
	}

	Provider.propTypes = {
	  store: _storeShape2["default"].isRequired,
	  children: _react.PropTypes.element.isRequired
	};
	Provider.childContextTypes = {
	  store: _storeShape2["default"].isRequired
	};

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.__esModule = true;
	exports["default"] = connect;

	var _react = __webpack_require__(1);

	var _storeShape = __webpack_require__(2);

	var _storeShape2 = _interopRequireDefault(_storeShape);

	var _shallowEqual = __webpack_require__(5);

	var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

	var _wrapActionCreators = __webpack_require__(6);

	var _wrapActionCreators2 = _interopRequireDefault(_wrapActionCreators);

	var _isPlainObject = __webpack_require__(11);

	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

	var _hoistNonReactStatics = __webpack_require__(7);

	var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

	var _invariant = __webpack_require__(8);

	var _invariant2 = _interopRequireDefault(_invariant);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var defaultMapStateToProps = function defaultMapStateToProps(state) {
	  return {};
	}; // eslint-disable-line no-unused-vars
	var defaultMapDispatchToProps = function defaultMapDispatchToProps(dispatch) {
	  return { dispatch: dispatch };
	};
	var defaultMergeProps = function defaultMergeProps(stateProps, dispatchProps, parentProps) {
	  return _extends({}, parentProps, stateProps, dispatchProps);
	};

	function getDisplayName(WrappedComponent) {
	  return WrappedComponent.displayName || WrappedComponent.name || 'Component';
	}

	function checkStateShape(stateProps, dispatch) {
	  (0, _invariant2["default"])((0, _isPlainObject2["default"])(stateProps), '`%sToProps` must return an object. Instead received %s.', dispatch ? 'mapDispatch' : 'mapState', stateProps);
	  return stateProps;
	}

	// Helps track hot reloading.
	var nextVersion = 0;

	function connect(mapStateToProps, mapDispatchToProps, mergeProps) {
	  var options = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];

	  var shouldSubscribe = Boolean(mapStateToProps);
	  var mapState = mapStateToProps || defaultMapStateToProps;
	  var mapDispatch = (0, _isPlainObject2["default"])(mapDispatchToProps) ? (0, _wrapActionCreators2["default"])(mapDispatchToProps) : mapDispatchToProps || defaultMapDispatchToProps;

	  var finalMergeProps = mergeProps || defaultMergeProps;
	  var checkMergedEquals = finalMergeProps !== defaultMergeProps;
	  var _options$pure = options.pure;
	  var pure = _options$pure === undefined ? true : _options$pure;
	  var _options$withRef = options.withRef;
	  var withRef = _options$withRef === undefined ? false : _options$withRef;

	  // Helps track hot reloading.

	  var version = nextVersion++;

	  function computeMergedProps(stateProps, dispatchProps, parentProps) {
	    var mergedProps = finalMergeProps(stateProps, dispatchProps, parentProps);
	    (0, _invariant2["default"])((0, _isPlainObject2["default"])(mergedProps), '`mergeProps` must return an object. Instead received %s.', mergedProps);
	    return mergedProps;
	  }

	  return function wrapWithConnect(WrappedComponent) {
	    var Connect = function (_Component) {
	      _inherits(Connect, _Component);

	      Connect.prototype.shouldComponentUpdate = function shouldComponentUpdate() {
	        return !pure || this.haveOwnPropsChanged || this.hasStoreStateChanged;
	      };

	      function Connect(props, context) {
	        _classCallCheck(this, Connect);

	        var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));

	        _this.version = version;
	        _this.store = props.store || context.store;

	        (0, _invariant2["default"])(_this.store, 'Could not find "store" in either the context or ' + ('props of "' + _this.constructor.displayName + '". ') + 'Either wrap the root component in a <Provider>, ' + ('or explicitly pass "store" as a prop to "' + _this.constructor.displayName + '".'));

	        var storeState = _this.store.getState();
	        _this.state = { storeState: storeState };
	        _this.clearCache();
	        return _this;
	      }

	      Connect.prototype.computeStateProps = function computeStateProps(store, props) {
	        if (!this.finalMapStateToProps) {
	          return this.configureFinalMapState(store, props);
	        }

	        var state = store.getState();
	        var stateProps = this.doStatePropsDependOnOwnProps ? this.finalMapStateToProps(state, props) : this.finalMapStateToProps(state);

	        return checkStateShape(stateProps);
	      };

	      Connect.prototype.configureFinalMapState = function configureFinalMapState(store, props) {
	        var mappedState = mapState(store.getState(), props);
	        var isFactory = typeof mappedState === 'function';

	        this.finalMapStateToProps = isFactory ? mappedState : mapState;
	        this.doStatePropsDependOnOwnProps = this.finalMapStateToProps.length !== 1;

	        return isFactory ? this.computeStateProps(store, props) : checkStateShape(mappedState);
	      };

	      Connect.prototype.computeDispatchProps = function computeDispatchProps(store, props) {
	        if (!this.finalMapDispatchToProps) {
	          return this.configureFinalMapDispatch(store, props);
	        }

	        var dispatch = store.dispatch;

	        var dispatchProps = this.doDispatchPropsDependOnOwnProps ? this.finalMapDispatchToProps(dispatch, props) : this.finalMapDispatchToProps(dispatch);

	        return checkStateShape(dispatchProps, true);
	      };

	      Connect.prototype.configureFinalMapDispatch = function configureFinalMapDispatch(store, props) {
	        var mappedDispatch = mapDispatch(store.dispatch, props);
	        var isFactory = typeof mappedDispatch === 'function';

	        this.finalMapDispatchToProps = isFactory ? mappedDispatch : mapDispatch;
	        this.doDispatchPropsDependOnOwnProps = this.finalMapDispatchToProps.length !== 1;

	        return isFactory ? this.computeDispatchProps(store, props) : checkStateShape(mappedDispatch, true);
	      };

	      Connect.prototype.updateStatePropsIfNeeded = function updateStatePropsIfNeeded() {
	        var nextStateProps = this.computeStateProps(this.store, this.props);
	        if (this.stateProps && (0, _shallowEqual2["default"])(nextStateProps, this.stateProps)) {
	          return false;
	        }

	        this.stateProps = nextStateProps;
	        return true;
	      };

	      Connect.prototype.updateDispatchPropsIfNeeded = function updateDispatchPropsIfNeeded() {
	        var nextDispatchProps = this.computeDispatchProps(this.store, this.props);
	        if (this.dispatchProps && (0, _shallowEqual2["default"])(nextDispatchProps, this.dispatchProps)) {
	          return false;
	        }

	        this.dispatchProps = nextDispatchProps;
	        return true;
	      };

	      Connect.prototype.updateMergedPropsIfNeeded = function updateMergedPropsIfNeeded() {
	        var nextMergedProps = computeMergedProps(this.stateProps, this.dispatchProps, this.props);
	        if (this.mergedProps && checkMergedEquals && (0, _shallowEqual2["default"])(nextMergedProps, this.mergedProps)) {
	          return false;
	        }

	        this.mergedProps = nextMergedProps;
	        return true;
	      };

	      Connect.prototype.isSubscribed = function isSubscribed() {
	        return typeof this.unsubscribe === 'function';
	      };

	      Connect.prototype.trySubscribe = function trySubscribe() {
	        if (shouldSubscribe && !this.unsubscribe) {
	          this.unsubscribe = this.store.subscribe(this.handleChange.bind(this));
	          this.handleChange();
	        }
	      };

	      Connect.prototype.tryUnsubscribe = function tryUnsubscribe() {
	        if (this.unsubscribe) {
	          this.unsubscribe();
	          this.unsubscribe = null;
	        }
	      };

	      Connect.prototype.componentDidMount = function componentDidMount() {
	        this.trySubscribe();
	      };

	      Connect.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	        if (!pure || !(0, _shallowEqual2["default"])(nextProps, this.props)) {
	          this.haveOwnPropsChanged = true;
	        }
	      };

	      Connect.prototype.componentWillUnmount = function componentWillUnmount() {
	        this.tryUnsubscribe();
	        this.clearCache();
	      };

	      Connect.prototype.clearCache = function clearCache() {
	        this.dispatchProps = null;
	        this.stateProps = null;
	        this.mergedProps = null;
	        this.haveOwnPropsChanged = true;
	        this.hasStoreStateChanged = true;
	        this.renderedElement = null;
	        this.finalMapDispatchToProps = null;
	        this.finalMapStateToProps = null;
	      };

	      Connect.prototype.handleChange = function handleChange() {
	        if (!this.unsubscribe) {
	          return;
	        }

	        var prevStoreState = this.state.storeState;
	        var storeState = this.store.getState();

	        if (!pure || prevStoreState !== storeState) {
	          this.hasStoreStateChanged = true;
	          this.setState({ storeState: storeState });
	        }
	      };

	      Connect.prototype.getWrappedInstance = function getWrappedInstance() {
	        (0, _invariant2["default"])(withRef, 'To access the wrapped instance, you need to specify ' + '{ withRef: true } as the fourth argument of the connect() call.');

	        return this.refs.wrappedInstance;
	      };

	      Connect.prototype.render = function render() {
	        var haveOwnPropsChanged = this.haveOwnPropsChanged;
	        var hasStoreStateChanged = this.hasStoreStateChanged;
	        var renderedElement = this.renderedElement;

	        this.haveOwnPropsChanged = false;
	        this.hasStoreStateChanged = false;

	        var shouldUpdateStateProps = true;
	        var shouldUpdateDispatchProps = true;
	        if (pure && renderedElement) {
	          shouldUpdateStateProps = hasStoreStateChanged || haveOwnPropsChanged && this.doStatePropsDependOnOwnProps;
	          shouldUpdateDispatchProps = haveOwnPropsChanged && this.doDispatchPropsDependOnOwnProps;
	        }

	        var haveStatePropsChanged = false;
	        var haveDispatchPropsChanged = false;
	        if (shouldUpdateStateProps) {
	          haveStatePropsChanged = this.updateStatePropsIfNeeded();
	        }
	        if (shouldUpdateDispatchProps) {
	          haveDispatchPropsChanged = this.updateDispatchPropsIfNeeded();
	        }

	        var haveMergedPropsChanged = true;
	        if (haveStatePropsChanged || haveDispatchPropsChanged || haveOwnPropsChanged) {
	          haveMergedPropsChanged = this.updateMergedPropsIfNeeded();
	        } else {
	          haveMergedPropsChanged = false;
	        }

	        if (!haveMergedPropsChanged && renderedElement) {
	          return renderedElement;
	        }

	        if (withRef) {
	          this.renderedElement = (0, _react.createElement)(WrappedComponent, _extends({}, this.mergedProps, {
	            ref: 'wrappedInstance'
	          }));
	        } else {
	          this.renderedElement = (0, _react.createElement)(WrappedComponent, this.mergedProps);
	        }

	        return this.renderedElement;
	      };

	      return Connect;
	    }(_react.Component);

	    Connect.displayName = 'Connect(' + getDisplayName(WrappedComponent) + ')';
	    Connect.WrappedComponent = WrappedComponent;
	    Connect.contextTypes = {
	      store: _storeShape2["default"]
	    };
	    Connect.propTypes = {
	      store: _storeShape2["default"]
	    };

	    if (true) {
	      Connect.prototype.componentWillUpdate = function componentWillUpdate() {
	        if (this.version === version) {
	          return;
	        }

	        // We are hot reloading!
	        this.version = version;
	        this.trySubscribe();
	        this.clearCache();
	      };
	    }

	    return (0, _hoistNonReactStatics2["default"])(Connect, WrappedComponent);
	  };
	}

/***/ },
/* 5 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;
	exports["default"] = shallowEqual;
	function shallowEqual(objA, objB) {
	  if (objA === objB) {
	    return true;
	  }

	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);

	  if (keysA.length !== keysB.length) {
	    return false;
	  }

	  // Test for A's keys different from B.
	  var hasOwn = Object.prototype.hasOwnProperty;
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwn.call(objB, keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {
	      return false;
	    }
	  }

	  return true;
	}

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports["default"] = wrapActionCreators;

	var _redux = __webpack_require__(12);

	function wrapActionCreators(actionCreators) {
	  return function (dispatch) {
	    return (0, _redux.bindActionCreators)(actionCreators, dispatch);
	  };
	}

/***/ },
/* 7 */
/***/ function(module, exports) {

	/**
	 * Copyright 2015, Yahoo! Inc.
	 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
	 */
	'use strict';

	var REACT_STATICS = {
	    childContextTypes: true,
	    contextTypes: true,
	    defaultProps: true,
	    displayName: true,
	    getDefaultProps: true,
	    mixins: true,
	    propTypes: true,
	    type: true
	};

	var KNOWN_STATICS = {
	    name: true,
	    length: true,
	    prototype: true,
	    caller: true,
	    arguments: true,
	    arity: true
	};

	module.exports = function hoistNonReactStatics(targetComponent, sourceComponent) {
	    var keys = Object.getOwnPropertyNames(sourceComponent);
	    for (var i=0; i<keys.length; ++i) {
	        if (!REACT_STATICS[keys[i]] && !KNOWN_STATICS[keys[i]]) {
	            targetComponent[keys[i]] = sourceComponent[keys[i]];
	        }
	    }

	    return targetComponent;
	};


/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var invariant = function(condition, format, a, b, c, d, e, f) {
	  if (true) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error(
	        'Minified exception occurred; use the non-minified dev environment ' +
	        'for the full error message and additional helpful warnings.'
	      );
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(
	        format.replace(/%s/g, function() { return args[argIndex++]; })
	      );
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	};

	module.exports = invariant;


/***/ },
/* 9 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is a host object in IE < 9.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
	 */
	function isHostObject(value) {
	  // Many host objects are `Object` objects that can coerce to strings
	  // despite having improperly defined `toString` methods.
	  var result = false;
	  if (value != null && typeof value.toString != 'function') {
	    try {
	      result = !!(value + '');
	    } catch (e) {}
	  }
	  return result;
	}

	module.exports = isHostObject;


/***/ },
/* 10 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}

	module.exports = isObjectLike;


/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	var isHostObject = __webpack_require__(9),
	    isObjectLike = __webpack_require__(10);

	/** `Object#toString` result references. */
	var objectTag = '[object Object]';

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to resolve the decompiled source of functions. */
	var funcToString = Function.prototype.toString;

	/** Used to infer the `Object` constructor. */
	var objectCtorString = funcToString.call(Object);

	/**
	 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;

	/** Built-in value references. */
	var getPrototypeOf = Object.getPrototypeOf;

	/**
	 * Checks if `value` is a plain object, that is, an object created by the
	 * `Object` constructor or one with a `[[Prototype]]` of `null`.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 * }
	 *
	 * _.isPlainObject(new Foo);
	 * // => false
	 *
	 * _.isPlainObject([1, 2, 3]);
	 * // => false
	 *
	 * _.isPlainObject({ 'x': 0, 'y': 0 });
	 * // => true
	 *
	 * _.isPlainObject(Object.create(null));
	 * // => true
	 */
	function isPlainObject(value) {
	  if (!isObjectLike(value) || objectToString.call(value) != objectTag || isHostObject(value)) {
	    return false;
	  }
	  var proto = objectProto;
	  if (typeof value.constructor == 'function') {
	    proto = getPrototypeOf(value);
	  }
	  if (proto === null) {
	    return true;
	  }
	  var Ctor = proto.constructor;
	  return (typeof Ctor == 'function' &&
	    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);
	}

	module.exports = isPlainObject;


/***/ },
/* 12 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_12__;

/***/ }
/******/ ])
});
;
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"));
	else if(typeof define === 'function' && define.amd)
		define(["react"], factory);
	else if(typeof exports === 'object')
		exports["ReactRouter"] = factory(require("react"));
	else
		root["ReactRouter"] = factory(root["React"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	/* components */
	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _Router2 = __webpack_require__(37);

	var _Router3 = _interopRequireDefault(_Router2);

	exports.Router = _Router3['default'];

	var _Link2 = __webpack_require__(18);

	var _Link3 = _interopRequireDefault(_Link2);

	exports.Link = _Link3['default'];

	var _IndexLink2 = __webpack_require__(31);

	var _IndexLink3 = _interopRequireDefault(_IndexLink2);

	exports.IndexLink = _IndexLink3['default'];

	/* components (configuration) */

	var _IndexRedirect2 = __webpack_require__(32);

	var _IndexRedirect3 = _interopRequireDefault(_IndexRedirect2);

	exports.IndexRedirect = _IndexRedirect3['default'];

	var _IndexRoute2 = __webpack_require__(33);

	var _IndexRoute3 = _interopRequireDefault(_IndexRoute2);

	exports.IndexRoute = _IndexRoute3['default'];

	var _Redirect2 = __webpack_require__(19);

	var _Redirect3 = _interopRequireDefault(_Redirect2);

	exports.Redirect = _Redirect3['default'];

	var _Route2 = __webpack_require__(35);

	var _Route3 = _interopRequireDefault(_Route2);

	exports.Route = _Route3['default'];

	/* mixins */

	var _History2 = __webpack_require__(30);

	var _History3 = _interopRequireDefault(_History2);

	exports.History = _History3['default'];

	var _Lifecycle2 = __webpack_require__(34);

	var _Lifecycle3 = _interopRequireDefault(_Lifecycle2);

	exports.Lifecycle = _Lifecycle3['default'];

	var _RouteContext2 = __webpack_require__(36);

	var _RouteContext3 = _interopRequireDefault(_RouteContext2);

	exports.RouteContext = _RouteContext3['default'];

	/* utils */

	var _useRoutes2 = __webpack_require__(48);

	var _useRoutes3 = _interopRequireDefault(_useRoutes2);

	exports.useRoutes = _useRoutes3['default'];

	var _RouteUtils = __webpack_require__(5);

	exports.createRoutes = _RouteUtils.createRoutes;

	var _RouterContext2 = __webpack_require__(13);

	var _RouterContext3 = _interopRequireDefault(_RouterContext2);

	exports.RouterContext = _RouterContext3['default'];

	var _RoutingContext2 = __webpack_require__(38);

	var _RoutingContext3 = _interopRequireDefault(_RoutingContext2);

	exports.RoutingContext = _RoutingContext3['default'];

	var _PropTypes2 = __webpack_require__(6);

	var _PropTypes3 = _interopRequireDefault(_PropTypes2);

	exports.PropTypes = _PropTypes3['default'];

	var _match2 = __webpack_require__(46);

	var _match3 = _interopRequireDefault(_match2);

	exports.match = _match3['default'];

	var _useRouterHistory2 = __webpack_require__(24);

	var _useRouterHistory3 = _interopRequireDefault(_useRouterHistory2);

	exports.useRouterHistory = _useRouterHistory3['default'];

	var _PatternUtils = __webpack_require__(8);

	exports.formatPattern = _PatternUtils.formatPattern;

	/* histories */

	var _browserHistory2 = __webpack_require__(40);

	var _browserHistory3 = _interopRequireDefault(_browserHistory2);

	exports.browserHistory = _browserHistory3['default'];

	var _hashHistory2 = __webpack_require__(44);

	var _hashHistory3 = _interopRequireDefault(_hashHistory2);

	exports.hashHistory = _hashHistory3['default'];

	var _createMemoryHistory2 = __webpack_require__(21);

	var _createMemoryHistory3 = _interopRequireDefault(_createMemoryHistory2);

	exports.createMemoryHistory = _createMemoryHistory3['default'];

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports['default'] = routerWarning;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _warning = __webpack_require__(4);

	var _warning2 = _interopRequireDefault(_warning);

	function routerWarning(falseToWarn, message) {
	  message = '[react-router] ' + message;

	  for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	    args[_key - 2] = arguments[_key];
	  }

	   false ? _warning2['default'].apply(undefined, [falseToWarn, message].concat(args)) : undefined;
	}

	module.exports = exports['default'];

/***/ },
/* 2 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_2__;

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var invariant = function(condition, format, a, b, c, d, e, f) {
	  if (false) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error(
	        'Minified exception occurred; use the non-minified dev environment ' +
	        'for the full error message and additional helpful warnings.'
	      );
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(
	        format.replace(/%s/g, function() { return args[argIndex++]; })
	      );
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	};

	module.exports = invariant;


/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = function() {};

	if (false) {
	  warning = function(condition, format, args) {
	    var len = arguments.length;
	    args = new Array(len > 2 ? len - 2 : 0);
	    for (var key = 2; key < len; key++) {
	      args[key - 2] = arguments[key];
	    }
	    if (format === undefined) {
	      throw new Error(
	        '`warning(condition, format, ...args)` requires a warning ' +
	        'message argument'
	      );
	    }

	    if (format.length < 10 || (/^[s\W]*$/).test(format)) {
	      throw new Error(
	        'The warning format should be able to uniquely identify this ' +
	        'warning. Please, use a more descriptive format than: ' + format
	      );
	    }

	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' +
	        format.replace(/%s/g, function() {
	          return args[argIndex++];
	        });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch(x) {}
	    }
	  };
	}

	module.exports = warning;


/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.isReactChildren = isReactChildren;
	exports.createRouteFromReactElement = createRouteFromReactElement;
	exports.createRoutesFromReactChildren = createRoutesFromReactChildren;
	exports.createRoutes = createRoutes;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _routerWarning = __webpack_require__(1);

	var _routerWarning2 = _interopRequireDefault(_routerWarning);

	function isValidChild(object) {
	  return object == null || _react2['default'].isValidElement(object);
	}

	function isReactChildren(object) {
	  return isValidChild(object) || Array.isArray(object) && object.every(isValidChild);
	}

	function checkPropTypes(componentName, propTypes, props) {
	  componentName = componentName || 'UnknownComponent';

	  for (var propName in propTypes) {
	    if (propTypes.hasOwnProperty(propName)) {
	      var error = propTypes[propName](props, propName, componentName);

	      /* istanbul ignore if: error logging */
	      if (error instanceof Error)  false ? _routerWarning2['default'](false, error.message) : undefined;
	    }
	  }
	}

	function createRoute(defaultProps, props) {
	  return _extends({}, defaultProps, props);
	}

	function createRouteFromReactElement(element) {
	  var type = element.type;
	  var route = createRoute(type.defaultProps, element.props);

	  if (type.propTypes) checkPropTypes(type.displayName || type.name, type.propTypes, route);

	  if (route.children) {
	    var childRoutes = createRoutesFromReactChildren(route.children, route);

	    if (childRoutes.length) route.childRoutes = childRoutes;

	    delete route.children;
	  }

	  return route;
	}

	/**
	 * Creates and returns a routes object from the given ReactChildren. JSX
	 * provides a convenient way to visualize how routes in the hierarchy are
	 * nested.
	 *
	 *   import { Route, createRoutesFromReactChildren } from 'react-router'
	 *   
	 *   const routes = createRoutesFromReactChildren(
	 *     <Route component={App}>
	 *       <Route path="home" component={Dashboard}/>
	 *       <Route path="news" component={NewsFeed}/>
	 *     </Route>
	 *   )
	 *
	 * Note: This method is automatically used when you provide <Route> children
	 * to a <Router> component.
	 */

	function createRoutesFromReactChildren(children, parentRoute) {
	  var routes = [];

	  _react2['default'].Children.forEach(children, function (element) {
	    if (_react2['default'].isValidElement(element)) {
	      // Component classes may have a static create* method.
	      if (element.type.createRouteFromReactElement) {
	        var route = element.type.createRouteFromReactElement(element, parentRoute);

	        if (route) routes.push(route);
	      } else {
	        routes.push(createRouteFromReactElement(element));
	      }
	    }
	  });

	  return routes;
	}

	/**
	 * Creates and returns an array of routes from the given object which
	 * may be a JSX route, a plain object route, or an array of either.
	 */

	function createRoutes(routes) {
	  if (isReactChildren(routes)) {
	    routes = createRoutesFromReactChildren(routes);
	  } else if (routes && !Array.isArray(routes)) {
	    routes = [routes];
	  }

	  return routes;
	}

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.falsy = falsy;

	var _react = __webpack_require__(2);

	var func = _react.PropTypes.func;
	var object = _react.PropTypes.object;
	var arrayOf = _react.PropTypes.arrayOf;
	var oneOfType = _react.PropTypes.oneOfType;
	var element = _react.PropTypes.element;
	var shape = _react.PropTypes.shape;
	var string = _react.PropTypes.string;

	function falsy(props, propName, componentName) {
	  if (props[propName]) return new Error('<' + componentName + '> should not have a "' + propName + '" prop');
	}

	var history = shape({
	  listen: func.isRequired,
	  pushState: func.isRequired,
	  replaceState: func.isRequired,
	  go: func.isRequired
	});

	exports.history = history;
	var location = shape({
	  pathname: string.isRequired,
	  search: string.isRequired,
	  state: object,
	  action: string.isRequired,
	  key: string
	});

	exports.location = location;
	var component = oneOfType([func, string]);
	exports.component = component;
	var components = oneOfType([component, object]);
	exports.components = components;
	var route = oneOfType([object, element]);
	exports.route = route;
	var routes = oneOfType([route, arrayOf(route)]);

	exports.routes = routes;
	exports['default'] = {
	  falsy: falsy,
	  history: history,
	  location: location,
	  component: component,
	  components: components,
	  route: route
	};

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.extractPath = extractPath;
	exports.parsePath = parsePath;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _warning = __webpack_require__(4);

	var _warning2 = _interopRequireDefault(_warning);

	function extractPath(string) {
	  var match = string.match(/^https?:\/\/[^\/]*/);

	  if (match == null) return string;

	  return string.substring(match[0].length);
	}

	function parsePath(path) {
	  var pathname = extractPath(path);
	  var search = '';
	  var hash = '';

	   false ? _warning2['default'](path === pathname, 'A path must be pathname + search + hash only, not a fully qualified URL like "%s"', path) : undefined;

	  var hashIndex = pathname.indexOf('#');
	  if (hashIndex !== -1) {
	    hash = pathname.substring(hashIndex);
	    pathname = pathname.substring(0, hashIndex);
	  }

	  var searchIndex = pathname.indexOf('?');
	  if (searchIndex !== -1) {
	    search = pathname.substring(searchIndex);
	    pathname = pathname.substring(0, searchIndex);
	  }

	  if (pathname === '') pathname = '/';

	  return {
	    pathname: pathname,
	    search: search,
	    hash: hash
	  };
	}

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.compilePattern = compilePattern;
	exports.matchPattern = matchPattern;
	exports.getParamNames = getParamNames;
	exports.getParams = getParams;
	exports.formatPattern = formatPattern;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _invariant = __webpack_require__(3);

	var _invariant2 = _interopRequireDefault(_invariant);

	function escapeRegExp(string) {
	  return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
	}

	function escapeSource(string) {
	  return escapeRegExp(string).replace(/\/+/g, '/+');
	}

	function _compilePattern(pattern) {
	  var regexpSource = '';
	  var paramNames = [];
	  var tokens = [];

	  var match = undefined,
	      lastIndex = 0,
	      matcher = /:([a-zA-Z_$][a-zA-Z0-9_$]*)|\*\*|\*|\(|\)/g;
	  while (match = matcher.exec(pattern)) {
	    if (match.index !== lastIndex) {
	      tokens.push(pattern.slice(lastIndex, match.index));
	      regexpSource += escapeSource(pattern.slice(lastIndex, match.index));
	    }

	    if (match[1]) {
	      regexpSource += '([^/?#]+)';
	      paramNames.push(match[1]);
	    } else if (match[0] === '**') {
	      regexpSource += '([\\s\\S]*)';
	      paramNames.push('splat');
	    } else if (match[0] === '*') {
	      regexpSource += '([\\s\\S]*?)';
	      paramNames.push('splat');
	    } else if (match[0] === '(') {
	      regexpSource += '(?:';
	    } else if (match[0] === ')') {
	      regexpSource += ')?';
	    }

	    tokens.push(match[0]);

	    lastIndex = matcher.lastIndex;
	  }

	  if (lastIndex !== pattern.length) {
	    tokens.push(pattern.slice(lastIndex, pattern.length));
	    regexpSource += escapeSource(pattern.slice(lastIndex, pattern.length));
	  }

	  return {
	    pattern: pattern,
	    regexpSource: regexpSource,
	    paramNames: paramNames,
	    tokens: tokens
	  };
	}

	var CompiledPatternsCache = {};

	function compilePattern(pattern) {
	  if (!(pattern in CompiledPatternsCache)) CompiledPatternsCache[pattern] = _compilePattern(pattern);

	  return CompiledPatternsCache[pattern];
	}

	/**
	 * Attempts to match a pattern on the given pathname. Patterns may use
	 * the following special characters:
	 *
	 * - :paramName     Matches a URL segment up to the next /, ?, or #. The
	 *                  captured string is considered a "param"
	 * - ()             Wraps a segment of the URL that is optional
	 * - *              Consumes (non-greedy) all characters up to the next
	 *                  character in the pattern, or to the end of the URL if
	 *                  there is none
	 * - **             Consumes (greedy) all characters up to the next character
	 *                  in the pattern, or to the end of the URL if there is none
	 *
	 * The return value is an object with the following properties:
	 *
	 * - remainingPathname
	 * - paramNames
	 * - paramValues
	 */

	function matchPattern(pattern, pathname) {
	  // Make leading slashes consistent between pattern and pathname.
	  if (pattern.charAt(0) !== '/') {
	    pattern = '/' + pattern;
	  }
	  if (pathname.charAt(0) !== '/') {
	    pathname = '/' + pathname;
	  }

	  var _compilePattern2 = compilePattern(pattern);

	  var regexpSource = _compilePattern2.regexpSource;
	  var paramNames = _compilePattern2.paramNames;
	  var tokens = _compilePattern2.tokens;

	  regexpSource += '/*'; // Capture path separators

	  // Special-case patterns like '*' for catch-all routes.
	  var captureRemaining = tokens[tokens.length - 1] !== '*';

	  if (captureRemaining) {
	    // This will match newlines in the remaining path.
	    regexpSource += '([\\s\\S]*?)';
	  }

	  var match = pathname.match(new RegExp('^' + regexpSource + '$', 'i'));

	  var remainingPathname = undefined,
	      paramValues = undefined;
	  if (match != null) {
	    if (captureRemaining) {
	      remainingPathname = match.pop();
	      var matchedPath = match[0].substr(0, match[0].length - remainingPathname.length);

	      // If we didn't match the entire pathname, then make sure that the match
	      // we did get ends at a path separator (potentially the one we added
	      // above at the beginning of the path, if the actual match was empty).
	      if (remainingPathname && matchedPath.charAt(matchedPath.length - 1) !== '/') {
	        return {
	          remainingPathname: null,
	          paramNames: paramNames,
	          paramValues: null
	        };
	      }
	    } else {
	      // If this matched at all, then the match was the entire pathname.
	      remainingPathname = '';
	    }

	    paramValues = match.slice(1).map(function (v) {
	      return v != null ? decodeURIComponent(v) : v;
	    });
	  } else {
	    remainingPathname = paramValues = null;
	  }

	  return {
	    remainingPathname: remainingPathname,
	    paramNames: paramNames,
	    paramValues: paramValues
	  };
	}

	function getParamNames(pattern) {
	  return compilePattern(pattern).paramNames;
	}

	function getParams(pattern, pathname) {
	  var _matchPattern = matchPattern(pattern, pathname);

	  var paramNames = _matchPattern.paramNames;
	  var paramValues = _matchPattern.paramValues;

	  if (paramValues != null) {
	    return paramNames.reduce(function (memo, paramName, index) {
	      memo[paramName] = paramValues[index];
	      return memo;
	    }, {});
	  }

	  return null;
	}

	/**
	 * Returns a version of the given pattern with params interpolated. Throws
	 * if there is a dynamic segment of the pattern for which there is no param.
	 */

	function formatPattern(pattern, params) {
	  params = params || {};

	  var _compilePattern3 = compilePattern(pattern);

	  var tokens = _compilePattern3.tokens;

	  var parenCount = 0,
	      pathname = '',
	      splatIndex = 0;

	  var token = undefined,
	      paramName = undefined,
	      paramValue = undefined;
	  for (var i = 0, len = tokens.length; i < len; ++i) {
	    token = tokens[i];

	    if (token === '*' || token === '**') {
	      paramValue = Array.isArray(params.splat) ? params.splat[splatIndex++] : params.splat;

	      !(paramValue != null || parenCount > 0) ?  false ? _invariant2['default'](false, 'Missing splat #%s for path "%s"', splatIndex, pattern) : _invariant2['default'](false) : undefined;

	      if (paramValue != null) pathname += encodeURI(paramValue);
	    } else if (token === '(') {
	      parenCount += 1;
	    } else if (token === ')') {
	      parenCount -= 1;
	    } else if (token.charAt(0) === ':') {
	      paramName = token.substring(1);
	      paramValue = params[paramName];

	      !(paramValue != null || parenCount > 0) ?  false ? _invariant2['default'](false, 'Missing "%s" parameter for path "%s"', paramName, pattern) : _invariant2['default'](false) : undefined;

	      if (paramValue != null) pathname += encodeURIComponent(paramValue);
	    } else {
	      pathname += token;
	    }
	  }

	  return pathname.replace(/\/+/g, '/');
	}

/***/ },
/* 9 */
/***/ function(module, exports) {

	/**
	 * Indicates that navigation was caused by a call to history.push.
	 */
	'use strict';

	exports.__esModule = true;
	var PUSH = 'PUSH';

	exports.PUSH = PUSH;
	/**
	 * Indicates that navigation was caused by a call to history.replace.
	 */
	var REPLACE = 'REPLACE';

	exports.REPLACE = REPLACE;
	/**
	 * Indicates that navigation was caused by some other action such
	 * as using a browser's back/forward buttons and/or manually manipulating
	 * the URL in a browser's location bar. This is the default.
	 *
	 * See https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onpopstate
	 * for more information.
	 */
	var POP = 'POP';

	exports.POP = POP;
	exports['default'] = {
	  PUSH: PUSH,
	  REPLACE: REPLACE,
	  POP: POP
	};

/***/ },
/* 10 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	exports.canUseDOM = canUseDOM;

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	var _warning = __webpack_require__(4);

	var _warning2 = _interopRequireDefault(_warning);

	var _queryString = __webpack_require__(56);

	var _runTransitionHook = __webpack_require__(17);

	var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);

	var _PathUtils = __webpack_require__(7);

	var _deprecate = __webpack_require__(16);

	var _deprecate2 = _interopRequireDefault(_deprecate);

	var SEARCH_BASE_KEY = '$searchBase';

	function defaultStringifyQuery(query) {
	  return _queryString.stringify(query).replace(/%20/g, '+');
	}

	var defaultParseQueryString = _queryString.parse;

	function isNestedObject(object) {
	  for (var p in object) {
	    if (object.hasOwnProperty(p) && typeof object[p] === 'object' && !Array.isArray(object[p]) && object[p] !== null) return true;
	  }return false;
	}

	/**
	 * Returns a new createHistory function that may be used to create
	 * history objects that know how to handle URL queries.
	 */
	function useQueries(createHistory) {
	  return function () {
	    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    var stringifyQuery = options.stringifyQuery;
	    var parseQueryString = options.parseQueryString;

	    var historyOptions = _objectWithoutProperties(options, ['stringifyQuery', 'parseQueryString']);

	    var history = createHistory(historyOptions);

	    if (typeof stringifyQuery !== 'function') stringifyQuery = defaultStringifyQuery;

	    if (typeof parseQueryString !== 'function') parseQueryString = defaultParseQueryString;

	    function addQuery(location) {
	      if (location.query == null) {
	        var search = location.search;

	        location.query = parseQueryString(search.substring(1));
	        location[SEARCH_BASE_KEY] = { search: search, searchBase: '' };
	      }

	      // TODO: Instead of all the book-keeping here, this should just strip the
	      // stringified query from the search.

	      return location;
	    }

	    function appendQuery(location, query) {
	      var _extends2;

	      var searchBaseSpec = location[SEARCH_BASE_KEY];
	      var queryString = query ? stringifyQuery(query) : '';
	      if (!searchBaseSpec && !queryString) {
	        return location;
	      }

	       false ? _warning2['default'](stringifyQuery !== defaultStringifyQuery || !isNestedObject(query), 'useQueries does not stringify nested query objects by default; ' + 'use a custom stringifyQuery function') : undefined;

	      if (typeof location === 'string') location = _PathUtils.parsePath(location);

	      var searchBase = undefined;
	      if (searchBaseSpec && location.search === searchBaseSpec.search) {
	        searchBase = searchBaseSpec.searchBase;
	      } else {
	        searchBase = location.search || '';
	      }

	      var search = searchBase;
	      if (queryString) {
	        search += (search ? '&' : '?') + queryString;
	      }

	      return _extends({}, location, (_extends2 = {
	        search: search
	      }, _extends2[SEARCH_BASE_KEY] = { search: search, searchBase: searchBase }, _extends2));
	    }

	    // Override all read methods with query-aware versions.
	    function listenBefore(hook) {
	      return history.listenBefore(function (location, callback) {
	        _runTransitionHook2['default'](hook, addQuery(location), callback);
	      });
	    }

	    function listen(listener) {
	      return history.listen(function (location) {
	        listener(addQuery(location));
	      });
	    }

	    // Override all write methods with query-aware versions.
	    function push(location) {
	      history.push(appendQuery(location, location.query));
	    }

	    function replace(location) {
	      history.replace(appendQuery(location, location.query));
	    }

	    function createPath(location, query) {
	       false ? _warning2['default'](!query, 'the query argument to createPath is deprecated; use a location descriptor instead') : undefined;

	      return history.createPath(appendQuery(location, query || location.query));
	    }

	    function createHref(location, query) {
	       false ? _warning2['default'](!query, 'the query argument to createHref is deprecated; use a location descriptor instead') : undefined;

	      return history.createHref(appendQuery(location, query || location.query));
	    }

	    function createLocation(location) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      var fullLocation = history.createLocation.apply(history, [appendQuery(location, location.query)].concat(args));
	      if (location.query) {
	        fullLocation.query = location.query;
	      }
	      return addQuery(fullLocation);
	    }

	    // deprecated
	    function pushState(state, path, query) {
	      if (typeof path === 'string') path = _PathUtils.parsePath(path);

	      push(_extends({ state: state }, path, { query: query }));
	    }

	    // deprecated
	    function replaceState(state, path, query) {
	      if (typeof path === 'string') path = _PathUtils.parsePath(path);

	      replace(_extends({ state: state }, path, { query: query }));
	    }

	    return _extends({}, history, {
	      listenBefore: listenBefore,
	      listen: listen,
	      push: push,
	      replace: replace,
	      createPath: createPath,
	      createHref: createHref,
	      createLocation: createLocation,

	      pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),
	      replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')
	    });
	  };
	}

	exports['default'] = useQueries;
	module.exports = exports['default'];

/***/ },
/* 12 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;
	var _slice = Array.prototype.slice;
	exports.loopAsync = loopAsync;
	exports.mapAsync = mapAsync;

	function loopAsync(turns, work, callback) {
	  var currentTurn = 0,
	      isDone = false;
	  var sync = false,
	      hasNext = false,
	      doneArgs = undefined;

	  function done() {
	    isDone = true;
	    if (sync) {
	      // Iterate instead of recursing if possible.
	      doneArgs = [].concat(_slice.call(arguments));
	      return;
	    }

	    callback.apply(this, arguments);
	  }

	  function next() {
	    if (isDone) {
	      return;
	    }

	    hasNext = true;
	    if (sync) {
	      // Iterate instead of recursing if possible.
	      return;
	    }

	    sync = true;

	    while (!isDone && currentTurn < turns && hasNext) {
	      hasNext = false;
	      work.call(this, currentTurn++, next, done);
	    }

	    sync = false;

	    if (isDone) {
	      // This means the loop finished synchronously.
	      callback.apply(this, doneArgs);
	      return;
	    }

	    if (currentTurn >= turns && hasNext) {
	      isDone = true;
	      callback();
	    }
	  }

	  next();
	}

	function mapAsync(array, work, callback) {
	  var length = array.length;
	  var values = [];

	  if (length === 0) return callback(null, values);

	  var isDone = false,
	      doneCount = 0;

	  function done(index, error, value) {
	    if (isDone) return;

	    if (error) {
	      isDone = true;
	      callback(error);
	    } else {
	      values[index] = value;

	      isDone = ++doneCount === length;

	      if (isDone) callback(null, values);
	    }
	  }

	  array.forEach(function (item, index) {
	    work(item, index, function (error, value) {
	      done(index, error, value);
	    });
	  });
	}

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _invariant = __webpack_require__(3);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _deprecateObjectProperties = __webpack_require__(23);

	var _deprecateObjectProperties2 = _interopRequireDefault(_deprecateObjectProperties);

	var _getRouteParams = __webpack_require__(43);

	var _getRouteParams2 = _interopRequireDefault(_getRouteParams);

	var _RouteUtils = __webpack_require__(5);

	var _routerWarning = __webpack_require__(1);

	var _routerWarning2 = _interopRequireDefault(_routerWarning);

	var _React$PropTypes = _react2['default'].PropTypes;
	var array = _React$PropTypes.array;
	var func = _React$PropTypes.func;
	var object = _React$PropTypes.object;

	/**
	 * A <RouterContext> renders the component tree for a given router state
	 * and sets the history object and the current location in context.
	 */
	var RouterContext = _react2['default'].createClass({
	  displayName: 'RouterContext',

	  propTypes: {
	    history: object,
	    router: object.isRequired,
	    location: object.isRequired,
	    routes: array.isRequired,
	    params: object.isRequired,
	    components: array.isRequired,
	    createElement: func.isRequired
	  },

	  getDefaultProps: function getDefaultProps() {
	    return {
	      createElement: _react2['default'].createElement
	    };
	  },

	  childContextTypes: {
	    history: object,
	    location: object.isRequired,
	    router: object.isRequired
	  },

	  getChildContext: function getChildContext() {
	    var _props = this.props;
	    var router = _props.router;
	    var history = _props.history;
	    var location = _props.location;

	    if (!router) {
	       false ? _routerWarning2['default'](false, '`<RouterContext>` expects a `router` rather than a `history`') : undefined;

	      router = _extends({}, history, {
	        setRouteLeaveHook: history.listenBeforeLeavingRoute
	      });
	      delete router.listenBeforeLeavingRoute;
	    }

	    if (false) {
	      location = _deprecateObjectProperties2['default'](location, '`context.location` is deprecated, please use a route component\'s `props.location` instead. http://tiny.cc/router-accessinglocation');
	    }

	    return { history: history, location: location, router: router };
	  },

	  createElement: function createElement(component, props) {
	    return component == null ? null : this.props.createElement(component, props);
	  },

	  render: function render() {
	    var _this = this;

	    var _props2 = this.props;
	    var history = _props2.history;
	    var location = _props2.location;
	    var routes = _props2.routes;
	    var params = _props2.params;
	    var components = _props2.components;

	    var element = null;

	    if (components) {
	      element = components.reduceRight(function (element, components, index) {
	        if (components == null) return element; // Don't create new children; use the grandchildren.

	        var route = routes[index];
	        var routeParams = _getRouteParams2['default'](route, params);
	        var props = {
	          history: history,
	          location: location,
	          params: params,
	          route: route,
	          routeParams: routeParams,
	          routes: routes
	        };

	        if (_RouteUtils.isReactChildren(element)) {
	          props.children = element;
	        } else if (element) {
	          for (var prop in element) {
	            if (element.hasOwnProperty(prop)) props[prop] = element[prop];
	          }
	        }

	        if (typeof components === 'object') {
	          var elements = {};

	          for (var key in components) {
	            if (components.hasOwnProperty(key)) {
	              // Pass through the key as a prop to createElement to allow
	              // custom createElement functions to know which named component
	              // they're rendering, for e.g. matching up to fetched data.
	              elements[key] = _this.createElement(components[key], _extends({
	                key: key }, props));
	            }
	          }

	          return elements;
	        }

	        return _this.createElement(components, props);
	      }, element);
	    }

	    !(element === null || element === false || _react2['default'].isValidElement(element)) ?  false ? _invariant2['default'](false, 'The root route must render a single element') : _invariant2['default'](false) : undefined;

	    return element;
	  }

	});

	exports['default'] = RouterContext;
	module.exports = exports['default'];

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports['default'] = createTransitionManager;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _routerWarning = __webpack_require__(1);

	var _routerWarning2 = _interopRequireDefault(_routerWarning);

	var _historyLibActions = __webpack_require__(9);

	var _computeChangedRoutes2 = __webpack_require__(41);

	var _computeChangedRoutes3 = _interopRequireDefault(_computeChangedRoutes2);

	var _TransitionUtils = __webpack_require__(39);

	var _isActive2 = __webpack_require__(45);

	var _isActive3 = _interopRequireDefault(_isActive2);

	var _getComponents = __webpack_require__(42);

	var _getComponents2 = _interopRequireDefault(_getComponents);

	var _matchRoutes = __webpack_require__(47);

	var _matchRoutes2 = _interopRequireDefault(_matchRoutes);

	function hasAnyProperties(object) {
	  for (var p in object) {
	    if (object.hasOwnProperty(p)) return true;
	  }return false;
	}

	function createTransitionManager(history, routes) {
	  var state = {};

	  // Signature should be (location, indexOnly), but needs to support (path,
	  // query, indexOnly)
	  function isActive(location) {
	    var indexOnlyOrDeprecatedQuery = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];
	    var deprecatedIndexOnly = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];

	    var indexOnly = undefined;
	    if (indexOnlyOrDeprecatedQuery && indexOnlyOrDeprecatedQuery !== true || deprecatedIndexOnly !== null) {
	       false ? _routerWarning2['default'](false, '`isActive(pathname, query, indexOnly) is deprecated; use `isActive(location, indexOnly)` with a location descriptor instead. http://tiny.cc/router-isActivedeprecated') : undefined;
	      location = { pathname: location, query: indexOnlyOrDeprecatedQuery };
	      indexOnly = deprecatedIndexOnly || false;
	    } else {
	      location = history.createLocation(location);
	      indexOnly = indexOnlyOrDeprecatedQuery;
	    }

	    return _isActive3['default'](location, indexOnly, state.location, state.routes, state.params);
	  }

	  function createLocationFromRedirectInfo(location) {
	    return history.createLocation(location, _historyLibActions.REPLACE);
	  }

	  var partialNextState = undefined;

	  function match(location, callback) {
	    if (partialNextState && partialNextState.location === location) {
	      // Continue from where we left off.
	      finishMatch(partialNextState, callback);
	    } else {
	      _matchRoutes2['default'](routes, location, function (error, nextState) {
	        if (error) {
	          callback(error);
	        } else if (nextState) {
	          finishMatch(_extends({}, nextState, { location: location }), callback);
	        } else {
	          callback();
	        }
	      });
	    }
	  }

	  function finishMatch(nextState, callback) {
	    var _computeChangedRoutes = _computeChangedRoutes3['default'](state, nextState);

	    var leaveRoutes = _computeChangedRoutes.leaveRoutes;
	    var enterRoutes = _computeChangedRoutes.enterRoutes;

	    _TransitionUtils.runLeaveHooks(leaveRoutes);

	    // Tear down confirmation hooks for left routes
	    leaveRoutes.filter(function (route) {
	      return enterRoutes.indexOf(route) === -1;
	    }).forEach(removeListenBeforeHooksForRoute);

	    _TransitionUtils.runEnterHooks(enterRoutes, nextState, function (error, redirectInfo) {
	      if (error) {
	        callback(error);
	      } else if (redirectInfo) {
	        callback(null, createLocationFromRedirectInfo(redirectInfo));
	      } else {
	        // TODO: Fetch components after state is updated.
	        _getComponents2['default'](nextState, function (error, components) {
	          if (error) {
	            callback(error);
	          } else {
	            // TODO: Make match a pure function and have some other API
	            // for "match and update state".
	            callback(null, null, state = _extends({}, nextState, { components: components }));
	          }
	        });
	      }
	    });
	  }

	  var RouteGuid = 1;

	  function getRouteID(route) {
	    var create = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];

	    return route.__id__ || create && (route.__id__ = RouteGuid++);
	  }

	  var RouteHooks = {};

	  function getRouteHooksForRoutes(routes) {
	    return routes.reduce(function (hooks, route) {
	      hooks.push.apply(hooks, RouteHooks[getRouteID(route)]);
	      return hooks;
	    }, []);
	  }

	  function transitionHook(location, callback) {
	    _matchRoutes2['default'](routes, location, function (error, nextState) {
	      if (nextState == null) {
	        // TODO: We didn't actually match anything, but hang
	        // onto error/nextState so we don't have to matchRoutes
	        // again in the listen callback.
	        callback();
	        return;
	      }

	      // Cache some state here so we don't have to
	      // matchRoutes() again in the listen callback.
	      partialNextState = _extends({}, nextState, { location: location });

	      var hooks = getRouteHooksForRoutes(_computeChangedRoutes3['default'](state, partialNextState).leaveRoutes);

	      var result = undefined;
	      for (var i = 0, len = hooks.length; result == null && i < len; ++i) {
	        // Passing the location arg here indicates to
	        // the user that this is a transition hook.
	        result = hooks[i](location);
	      }

	      callback(result);
	    });
	  }

	  /* istanbul ignore next: untestable with Karma */
	  function beforeUnloadHook() {
	    // Synchronously check to see if any route hooks want
	    // to prevent the current window/tab from closing.
	    if (state.routes) {
	      var hooks = getRouteHooksForRoutes(state.routes);

	      var message = undefined;
	      for (var i = 0, len = hooks.length; typeof message !== 'string' && i < len; ++i) {
	        // Passing no args indicates to the user that this is a
	        // beforeunload hook. We don't know the next location.
	        message = hooks[i]();
	      }

	      return message;
	    }
	  }

	  var unlistenBefore = undefined,
	      unlistenBeforeUnload = undefined;

	  function removeListenBeforeHooksForRoute(route) {
	    var routeID = getRouteID(route, false);
	    if (!routeID) {
	      return;
	    }

	    delete RouteHooks[routeID];

	    if (!hasAnyProperties(RouteHooks)) {
	      // teardown transition & beforeunload hooks
	      if (unlistenBefore) {
	        unlistenBefore();
	        unlistenBefore = null;
	      }

	      if (unlistenBeforeUnload) {
	        unlistenBeforeUnload();
	        unlistenBeforeUnload = null;
	      }
	    }
	  }

	  /**
	   * Registers the given hook function to run before leaving the given route.
	   *
	   * During a normal transition, the hook function receives the next location
	   * as its only argument and must return either a) a prompt message to show
	   * the user, to make sure they want to leave the page or b) false, to prevent
	   * the transition.
	   *
	   * During the beforeunload event (in browsers) the hook receives no arguments.
	   * In this case it must return a prompt message to prevent the transition.
	   *
	   * Returns a function that may be used to unbind the listener.
	   */
	  function listenBeforeLeavingRoute(route, hook) {
	    // TODO: Warn if they register for a route that isn't currently
	    // active. They're probably doing something wrong, like re-creating
	    // route objects on every location change.
	    var routeID = getRouteID(route);
	    var hooks = RouteHooks[routeID];

	    if (!hooks) {
	      var thereWereNoRouteHooks = !hasAnyProperties(RouteHooks);

	      RouteHooks[routeID] = [hook];

	      if (thereWereNoRouteHooks) {
	        // setup transition & beforeunload hooks
	        unlistenBefore = history.listenBefore(transitionHook);

	        if (history.listenBeforeUnload) unlistenBeforeUnload = history.listenBeforeUnload(beforeUnloadHook);
	      }
	    } else {
	      if (hooks.indexOf(hook) === -1) {
	         false ? _routerWarning2['default'](false, 'adding multiple leave hooks for the same route is deprecated; manage multiple confirmations in your own code instead') : undefined;

	        hooks.push(hook);
	      }
	    }

	    return function () {
	      var hooks = RouteHooks[routeID];

	      if (hooks) {
	        var newHooks = hooks.filter(function (item) {
	          return item !== hook;
	        });

	        if (newHooks.length === 0) {
	          removeListenBeforeHooksForRoute(route);
	        } else {
	          RouteHooks[routeID] = newHooks;
	        }
	      }
	    };
	  }

	  /**
	   * This is the API for stateful environments. As the location
	   * changes, we update state and call the listener. We can also
	   * gracefully handle errors and redirects.
	   */
	  function listen(listener) {
	    // TODO: Only use a single history listener. Otherwise we'll
	    // end up with multiple concurrent calls to match.
	    return history.listen(function (location) {
	      if (state.location === location) {
	        listener(null, state);
	      } else {
	        match(location, function (error, redirectLocation, nextState) {
	          if (error) {
	            listener(error);
	          } else if (redirectLocation) {
	            history.transitionTo(redirectLocation);
	          } else if (nextState) {
	            listener(null, nextState);
	          } else {
	             false ? _routerWarning2['default'](false, 'Location "%s" did not match any routes', location.pathname + location.search + location.hash) : undefined;
	          }
	        });
	      }
	    });
	  }

	  return {
	    isActive: isActive,
	    match: match,
	    listenBeforeLeavingRoute: listenBeforeLeavingRoute,
	    listen: listen
	  };
	}

	//export default useRoutes
	module.exports = exports['default'];

/***/ },
/* 15 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports.addEventListener = addEventListener;
	exports.removeEventListener = removeEventListener;
	exports.getHashPath = getHashPath;
	exports.replaceHashPath = replaceHashPath;
	exports.getWindowPath = getWindowPath;
	exports.go = go;
	exports.getUserConfirmation = getUserConfirmation;
	exports.supportsHistory = supportsHistory;
	exports.supportsGoWithoutReloadUsingHash = supportsGoWithoutReloadUsingHash;

	function addEventListener(node, event, listener) {
	  if (node.addEventListener) {
	    node.addEventListener(event, listener, false);
	  } else {
	    node.attachEvent('on' + event, listener);
	  }
	}

	function removeEventListener(node, event, listener) {
	  if (node.removeEventListener) {
	    node.removeEventListener(event, listener, false);
	  } else {
	    node.detachEvent('on' + event, listener);
	  }
	}

	function getHashPath() {
	  // We can't use window.location.hash here because it's not
	  // consistent across browsers - Firefox will pre-decode it!
	  return window.location.href.split('#')[1] || '';
	}

	function replaceHashPath(path) {
	  window.location.replace(window.location.pathname + window.location.search + '#' + path);
	}

	function getWindowPath() {
	  return window.location.pathname + window.location.search + window.location.hash;
	}

	function go(n) {
	  if (n) window.history.go(n);
	}

	function getUserConfirmation(message, callback) {
	  callback(window.confirm(message));
	}

	/**
	 * Returns true if the HTML5 history API is supported. Taken from Modernizr.
	 *
	 * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
	 * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
	 * changed to avoid false negatives for Windows Phones: https://github.com/rackt/react-router/issues/586
	 */

	function supportsHistory() {
	  var ua = navigator.userAgent;
	  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) {
	    return false;
	  }
	  return window.history && 'pushState' in window.history;
	}

	/**
	 * Returns false if using go(n) with hash history causes a full page reload.
	 */

	function supportsGoWithoutReloadUsingHash() {
	  var ua = navigator.userAgent;
	  return ua.indexOf('Firefox') === -1;
	}

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _warning = __webpack_require__(4);

	var _warning2 = _interopRequireDefault(_warning);

	function deprecate(fn, message) {
	  return function () {
	     false ? _warning2['default'](false, '[history] ' + message) : undefined;
	    return fn.apply(this, arguments);
	  };
	}

	exports['default'] = deprecate;
	module.exports = exports['default'];

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _warning = __webpack_require__(4);

	var _warning2 = _interopRequireDefault(_warning);

	function runTransitionHook(hook, location, callback) {
	  var result = hook(location, callback);

	  if (hook.length < 2) {
	    // Assume the hook runs synchronously and automatically
	    // call the callback with the return value.
	    callback(result);
	  } else {
	     false ? _warning2['default'](result === undefined, 'You should not "return" in a transition hook with a callback argument; call the callback instead') : undefined;
	  }
	}

	exports['default'] = runTransitionHook;
	module.exports = exports['default'];

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _routerWarning = __webpack_require__(1);

	var _routerWarning2 = _interopRequireDefault(_routerWarning);

	var _React$PropTypes = _react2['default'].PropTypes;
	var bool = _React$PropTypes.bool;
	var object = _React$PropTypes.object;
	var string = _React$PropTypes.string;
	var func = _React$PropTypes.func;
	var oneOfType = _React$PropTypes.oneOfType;

	function isLeftClickEvent(event) {
	  return event.button === 0;
	}

	function isModifiedEvent(event) {
	  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
	}

	function isEmptyObject(object) {
	  for (var p in object) {
	    if (object.hasOwnProperty(p)) return false;
	  }return true;
	}

	function createLocationDescriptor(to, _ref) {
	  var query = _ref.query;
	  var hash = _ref.hash;
	  var state = _ref.state;

	  if (query || hash || state) {
	    return { pathname: to, query: query, hash: hash, state: state };
	  }

	  return to;
	}

	/**
	 * A <Link> is used to create an <a> element that links to a route.
	 * When that route is active, the link gets the value of its
	 * activeClassName prop.
	 *
	 * For example, assuming you have the following route:
	 *
	 *   <Route path="/posts/:postID" component={Post} />
	 *
	 * You could use the following component to link to that route:
	 *
	 *   <Link to={`/posts/${post.id}`} />
	 *
	 * Links may pass along location state and/or query string parameters
	 * in the state/query props, respectively.
	 *
	 *   <Link ... query={{ show: true }} state={{ the: 'state' }} />
	 */
	var Link = _react2['default'].createClass({
	  displayName: 'Link',

	  contextTypes: {
	    router: object
	  },

	  propTypes: {
	    to: oneOfType([string, object]).isRequired,
	    query: object,
	    hash: string,
	    state: object,
	    activeStyle: object,
	    activeClassName: string,
	    onlyActiveOnIndex: bool.isRequired,
	    onClick: func
	  },

	  getDefaultProps: function getDefaultProps() {
	    return {
	      onlyActiveOnIndex: false,
	      className: '',
	      style: {}
	    };
	  },

	  handleClick: function handleClick(event) {
	    var allowTransition = true;

	    if (this.props.onClick) this.props.onClick(event);

	    if (isModifiedEvent(event) || !isLeftClickEvent(event)) return;

	    if (event.defaultPrevented === true) allowTransition = false;

	    // If target prop is set (e.g. to "_blank") let browser handle link.
	    /* istanbul ignore if: untestable with Karma */
	    if (this.props.target) {
	      if (!allowTransition) event.preventDefault();

	      return;
	    }

	    event.preventDefault();

	    if (allowTransition) {
	      var _props = this.props;
	      var to = _props.to;
	      var query = _props.query;
	      var hash = _props.hash;
	      var state = _props.state;

	      var _location = createLocationDescriptor(to, { query: query, hash: hash, state: state });

	      this.context.router.push(_location);
	    }
	  },

	  render: function render() {
	    var _props2 = this.props;
	    var to = _props2.to;
	    var query = _props2.query;
	    var hash = _props2.hash;
	    var state = _props2.state;
	    var activeClassName = _props2.activeClassName;
	    var activeStyle = _props2.activeStyle;
	    var onlyActiveOnIndex = _props2.onlyActiveOnIndex;

	    var props = _objectWithoutProperties(_props2, ['to', 'query', 'hash', 'state', 'activeClassName', 'activeStyle', 'onlyActiveOnIndex']);

	     false ? _routerWarning2['default'](!(query || hash || state), 'the `query`, `hash`, and `state` props on `<Link>` are deprecated, use `<Link to={{ pathname, query, hash, state }}/>. http://tiny.cc/router-isActivedeprecated') : undefined;

	    // Ignore if rendered outside the context of router, simplifies unit testing.
	    var router = this.context.router;

	    if (router) {
	      var _location2 = createLocationDescriptor(to, { query: query, hash: hash, state: state });
	      props.href = router.createHref(_location2);

	      if (activeClassName || activeStyle != null && !isEmptyObject(activeStyle)) {
	        if (router.isActive(_location2, onlyActiveOnIndex)) {
	          if (activeClassName) props.className += props.className === '' ? activeClassName : ' ' + activeClassName;

	          if (activeStyle) props.style = _extends({}, props.style, activeStyle);
	        }
	      }
	    }

	    return _react2['default'].createElement('a', _extends({}, props, { onClick: this.handleClick }));
	  }

	});

	exports['default'] = Link;
	module.exports = exports['default'];

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _invariant = __webpack_require__(3);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _RouteUtils = __webpack_require__(5);

	var _PatternUtils = __webpack_require__(8);

	var _PropTypes = __webpack_require__(6);

	var _React$PropTypes = _react2['default'].PropTypes;
	var string = _React$PropTypes.string;
	var object = _React$PropTypes.object;

	/**
	 * A <Redirect> is used to declare another URL path a client should
	 * be sent to when they request a given URL.
	 *
	 * Redirects are placed alongside routes in the route configuration
	 * and are traversed in the same manner.
	 */
	var Redirect = _react2['default'].createClass({
	  displayName: 'Redirect',

	  statics: {

	    createRouteFromReactElement: function createRouteFromReactElement(element) {
	      var route = _RouteUtils.createRouteFromReactElement(element);

	      if (route.from) route.path = route.from;

	      route.onEnter = function (nextState, replace) {
	        var location = nextState.location;
	        var params = nextState.params;

	        var pathname = undefined;
	        if (route.to.charAt(0) === '/') {
	          pathname = _PatternUtils.formatPattern(route.to, params);
	        } else if (!route.to) {
	          pathname = location.pathname;
	        } else {
	          var routeIndex = nextState.routes.indexOf(route);
	          var parentPattern = Redirect.getRoutePattern(nextState.routes, routeIndex - 1);
	          var pattern = parentPattern.replace(/\/*$/, '/') + route.to;
	          pathname = _PatternUtils.formatPattern(pattern, params);
	        }

	        replace({
	          pathname: pathname,
	          query: route.query || location.query,
	          state: route.state || location.state
	        });
	      };

	      return route;
	    },

	    getRoutePattern: function getRoutePattern(routes, routeIndex) {
	      var parentPattern = '';

	      for (var i = routeIndex; i >= 0; i--) {
	        var route = routes[i];
	        var pattern = route.path || '';

	        parentPattern = pattern.replace(/\/*$/, '/') + parentPattern;

	        if (pattern.indexOf('/') === 0) break;
	      }

	      return '/' + parentPattern;
	    }

	  },

	  propTypes: {
	    path: string,
	    from: string, // Alias for path
	    to: string.isRequired,
	    query: object,
	    state: object,
	    onEnter: _PropTypes.falsy,
	    children: _PropTypes.falsy
	  },

	  /* istanbul ignore next: sanity check */
	  render: function render() {
	     true ?  false ? _invariant2['default'](false, '<Redirect> elements are for router configuration only and should not be rendered') : _invariant2['default'](false) : undefined;
	  }

	});

	exports['default'] = Redirect;
	module.exports = exports['default'];

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.createRouterObject = createRouterObject;
	exports.createRoutingHistory = createRoutingHistory;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _deprecateObjectProperties = __webpack_require__(23);

	var _deprecateObjectProperties2 = _interopRequireDefault(_deprecateObjectProperties);

	function createRouterObject(history, transitionManager) {
	  return _extends({}, history, {
	    setRouteLeaveHook: transitionManager.listenBeforeLeavingRoute,
	    isActive: transitionManager.isActive
	  });
	}

	// deprecated

	function createRoutingHistory(history, transitionManager) {
	  history = _extends({}, history, transitionManager);

	  if (false) {
	    history = _deprecateObjectProperties2['default'](history, '`props.history` and `context.history` are deprecated. Please use `context.router`. http://tiny.cc/router-contextchanges');
	  }

	  return history;
	}

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports['default'] = createMemoryHistory;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _historyLibUseQueries = __webpack_require__(11);

	var _historyLibUseQueries2 = _interopRequireDefault(_historyLibUseQueries);

	var _historyLibUseBasename = __webpack_require__(29);

	var _historyLibUseBasename2 = _interopRequireDefault(_historyLibUseBasename);

	var _historyLibCreateMemoryHistory = __webpack_require__(55);

	var _historyLibCreateMemoryHistory2 = _interopRequireDefault(_historyLibCreateMemoryHistory);

	function createMemoryHistory(options) {
	  // signatures and type checking differ between `useRoutes` and
	  // `createMemoryHistory`, have to create `memoryHistory` first because
	  // `useQueries` doesn't understand the signature
	  var memoryHistory = _historyLibCreateMemoryHistory2['default'](options);
	  var createHistory = function createHistory() {
	    return memoryHistory;
	  };
	  var history = _historyLibUseQueries2['default'](_historyLibUseBasename2['default'](createHistory))(options);
	  history.__v2_compatible__ = true;
	  return history;
	}

	module.exports = exports['default'];

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _useRouterHistory = __webpack_require__(24);

	var _useRouterHistory2 = _interopRequireDefault(_useRouterHistory);

	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

	exports['default'] = function (createHistory) {
	  var history = undefined;
	  if (canUseDOM) history = _useRouterHistory2['default'](createHistory)();
	  return history;
	};

	module.exports = exports['default'];

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	/*eslint no-empty: 0*/
	'use strict';

	exports.__esModule = true;
	exports['default'] = deprecateObjectProperties;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _routerWarning = __webpack_require__(1);

	var _routerWarning2 = _interopRequireDefault(_routerWarning);

	var useMembrane = false;

	if (false) {
	  try {
	    if (Object.defineProperty({}, 'x', { get: function get() {
	        return true;
	      } }).x) {
	      useMembrane = true;
	    }
	  } catch (e) {}
	}

	// wraps an object in a membrane to warn about deprecated property access

	function deprecateObjectProperties(object, message) {
	  if (!useMembrane) return object;

	  var membrane = {};

	  var _loop = function (prop) {
	    if (typeof object[prop] === 'function') {
	      membrane[prop] = function () {
	         false ? _routerWarning2['default'](false, message) : undefined;
	        return object[prop].apply(object, arguments);
	      };
	    } else {
	      Object.defineProperty(membrane, prop, {
	        configurable: false,
	        enumerable: false,
	        get: function get() {
	           false ? _routerWarning2['default'](false, message) : undefined;
	          return object[prop];
	        }
	      });
	    }
	  };

	  for (var prop in object) {
	    _loop(prop);
	  }

	  return membrane;
	}

	module.exports = exports['default'];

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports['default'] = useRouterHistory;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _historyLibUseQueries = __webpack_require__(11);

	var _historyLibUseQueries2 = _interopRequireDefault(_historyLibUseQueries);

	var _historyLibUseBasename = __webpack_require__(29);

	var _historyLibUseBasename2 = _interopRequireDefault(_historyLibUseBasename);

	function useRouterHistory(createHistory) {
	  return function (options) {
	    var history = _historyLibUseQueries2['default'](_historyLibUseBasename2['default'](createHistory))(options);
	    history.__v2_compatible__ = true;
	    return history;
	  };
	}

	module.exports = exports['default'];

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	/*eslint-disable no-empty */
	'use strict';

	exports.__esModule = true;
	exports.saveState = saveState;
	exports.readState = readState;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _warning = __webpack_require__(4);

	var _warning2 = _interopRequireDefault(_warning);

	var KeyPrefix = '@@History/';
	var QuotaExceededErrors = ['QuotaExceededError', 'QUOTA_EXCEEDED_ERR'];

	var SecurityError = 'SecurityError';

	function createKey(key) {
	  return KeyPrefix + key;
	}

	function saveState(key, state) {
	  try {
	    if (state == null) {
	      window.sessionStorage.removeItem(createKey(key));
	    } else {
	      window.sessionStorage.setItem(createKey(key), JSON.stringify(state));
	    }
	  } catch (error) {
	    if (error.name === SecurityError) {
	      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any
	      // attempt to access window.sessionStorage.
	       false ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available due to security settings') : undefined;

	      return;
	    }

	    if (QuotaExceededErrors.indexOf(error.name) >= 0 && window.sessionStorage.length === 0) {
	      // Safari "private mode" throws QuotaExceededError.
	       false ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available in Safari private mode') : undefined;

	      return;
	    }

	    throw error;
	  }
	}

	function readState(key) {
	  var json = undefined;
	  try {
	    json = window.sessionStorage.getItem(createKey(key));
	  } catch (error) {
	    if (error.name === SecurityError) {
	      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any
	      // attempt to access window.sessionStorage.
	       false ? _warning2['default'](false, '[history] Unable to read state; sessionStorage is not available due to security settings') : undefined;

	      return null;
	    }
	  }

	  if (json) {
	    try {
	      return JSON.parse(json);
	    } catch (error) {
	      // Ignore invalid JSON.
	    }
	  }

	  return null;
	}

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _invariant = __webpack_require__(3);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _ExecutionEnvironment = __webpack_require__(10);

	var _DOMUtils = __webpack_require__(15);

	var _createHistory = __webpack_require__(28);

	var _createHistory2 = _interopRequireDefault(_createHistory);

	function createDOMHistory(options) {
	  var history = _createHistory2['default'](_extends({
	    getUserConfirmation: _DOMUtils.getUserConfirmation
	  }, options, {
	    go: _DOMUtils.go
	  }));

	  function listen(listener) {
	    !_ExecutionEnvironment.canUseDOM ?  false ? _invariant2['default'](false, 'DOM history needs a DOM') : _invariant2['default'](false) : undefined;

	    return history.listen(listener);
	  }

	  return _extends({}, history, {
	    listen: listen
	  });
	}

	exports['default'] = createDOMHistory;
	module.exports = exports['default'];

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _warning = __webpack_require__(4);

	var _warning2 = _interopRequireDefault(_warning);

	var _invariant = __webpack_require__(3);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _Actions = __webpack_require__(9);

	var _PathUtils = __webpack_require__(7);

	var _ExecutionEnvironment = __webpack_require__(10);

	var _DOMUtils = __webpack_require__(15);

	var _DOMStateStorage = __webpack_require__(25);

	var _createDOMHistory = __webpack_require__(26);

	var _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);

	function isAbsolutePath(path) {
	  return typeof path === 'string' && path.charAt(0) === '/';
	}

	function ensureSlash() {
	  var path = _DOMUtils.getHashPath();

	  if (isAbsolutePath(path)) return true;

	  _DOMUtils.replaceHashPath('/' + path);

	  return false;
	}

	function addQueryStringValueToPath(path, key, value) {
	  return path + (path.indexOf('?') === -1 ? '?' : '&') + (key + '=' + value);
	}

	function stripQueryStringValueFromPath(path, key) {
	  return path.replace(new RegExp('[?&]?' + key + '=[a-zA-Z0-9]+'), '');
	}

	function getQueryStringValueFromPath(path, key) {
	  var match = path.match(new RegExp('\\?.*?\\b' + key + '=(.+?)\\b'));
	  return match && match[1];
	}

	var DefaultQueryKey = '_k';

	function createHashHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	  !_ExecutionEnvironment.canUseDOM ?  false ? _invariant2['default'](false, 'Hash history needs a DOM') : _invariant2['default'](false) : undefined;

	  var queryKey = options.queryKey;

	  if (queryKey === undefined || !!queryKey) queryKey = typeof queryKey === 'string' ? queryKey : DefaultQueryKey;

	  function getCurrentLocation() {
	    var path = _DOMUtils.getHashPath();

	    var key = undefined,
	        state = undefined;
	    if (queryKey) {
	      key = getQueryStringValueFromPath(path, queryKey);
	      path = stripQueryStringValueFromPath(path, queryKey);

	      if (key) {
	        state = _DOMStateStorage.readState(key);
	      } else {
	        state = null;
	        key = history.createKey();
	        _DOMUtils.replaceHashPath(addQueryStringValueToPath(path, queryKey, key));
	      }
	    } else {
	      key = state = null;
	    }

	    var location = _PathUtils.parsePath(path);

	    return history.createLocation(_extends({}, location, { state: state }), undefined, key);
	  }

	  function startHashChangeListener(_ref) {
	    var transitionTo = _ref.transitionTo;

	    function hashChangeListener() {
	      if (!ensureSlash()) return; // Always make sure hashes are preceeded with a /.

	      transitionTo(getCurrentLocation());
	    }

	    ensureSlash();
	    _DOMUtils.addEventListener(window, 'hashchange', hashChangeListener);

	    return function () {
	      _DOMUtils.removeEventListener(window, 'hashchange', hashChangeListener);
	    };
	  }

	  function finishTransition(location) {
	    var basename = location.basename;
	    var pathname = location.pathname;
	    var search = location.search;
	    var state = location.state;
	    var action = location.action;
	    var key = location.key;

	    if (action === _Actions.POP) return; // Nothing to do.

	    var path = (basename || '') + pathname + search;

	    if (queryKey) {
	      path = addQueryStringValueToPath(path, queryKey, key);
	      _DOMStateStorage.saveState(key, state);
	    } else {
	      // Drop key and state.
	      location.key = location.state = null;
	    }

	    var currentHash = _DOMUtils.getHashPath();

	    if (action === _Actions.PUSH) {
	      if (currentHash !== path) {
	        window.location.hash = path;
	      } else {
	         false ? _warning2['default'](false, 'You cannot PUSH the same path using hash history') : undefined;
	      }
	    } else if (currentHash !== path) {
	      // REPLACE
	      _DOMUtils.replaceHashPath(path);
	    }
	  }

	  var history = _createDOMHistory2['default'](_extends({}, options, {
	    getCurrentLocation: getCurrentLocation,
	    finishTransition: finishTransition,
	    saveState: _DOMStateStorage.saveState
	  }));

	  var listenerCount = 0,
	      stopHashChangeListener = undefined;

	  function listenBefore(listener) {
	    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);

	    var unlisten = history.listenBefore(listener);

	    return function () {
	      unlisten();

	      if (--listenerCount === 0) stopHashChangeListener();
	    };
	  }

	  function listen(listener) {
	    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);

	    var unlisten = history.listen(listener);

	    return function () {
	      unlisten();

	      if (--listenerCount === 0) stopHashChangeListener();
	    };
	  }

	  function push(location) {
	     false ? _warning2['default'](queryKey || location.state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;

	    history.push(location);
	  }

	  function replace(location) {
	     false ? _warning2['default'](queryKey || location.state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;

	    history.replace(location);
	  }

	  var goIsSupportedWithoutReload = _DOMUtils.supportsGoWithoutReloadUsingHash();

	  function go(n) {
	     false ? _warning2['default'](goIsSupportedWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : undefined;

	    history.go(n);
	  }

	  function createHref(path) {
	    return '#' + history.createHref(path);
	  }

	  // deprecated
	  function registerTransitionHook(hook) {
	    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);

	    history.registerTransitionHook(hook);
	  }

	  // deprecated
	  function unregisterTransitionHook(hook) {
	    history.unregisterTransitionHook(hook);

	    if (--listenerCount === 0) stopHashChangeListener();
	  }

	  // deprecated
	  function pushState(state, path) {
	     false ? _warning2['default'](queryKey || state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;

	    history.pushState(state, path);
	  }

	  // deprecated
	  function replaceState(state, path) {
	     false ? _warning2['default'](queryKey || state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;

	    history.replaceState(state, path);
	  }

	  return _extends({}, history, {
	    listenBefore: listenBefore,
	    listen: listen,
	    push: push,
	    replace: replace,
	    go: go,
	    createHref: createHref,

	    registerTransitionHook: registerTransitionHook, // deprecated - warning is in createHistory
	    unregisterTransitionHook: unregisterTransitionHook, // deprecated - warning is in createHistory
	    pushState: pushState, // deprecated - warning is in createHistory
	    replaceState: replaceState // deprecated - warning is in createHistory
	  });
	}

	exports['default'] = createHashHistory;
	module.exports = exports['default'];

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _warning = __webpack_require__(4);

	var _warning2 = _interopRequireDefault(_warning);

	var _deepEqual = __webpack_require__(49);

	var _deepEqual2 = _interopRequireDefault(_deepEqual);

	var _PathUtils = __webpack_require__(7);

	var _AsyncUtils = __webpack_require__(52);

	var _Actions = __webpack_require__(9);

	var _createLocation2 = __webpack_require__(54);

	var _createLocation3 = _interopRequireDefault(_createLocation2);

	var _runTransitionHook = __webpack_require__(17);

	var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);

	var _deprecate = __webpack_require__(16);

	var _deprecate2 = _interopRequireDefault(_deprecate);

	function createRandomKey(length) {
	  return Math.random().toString(36).substr(2, length);
	}

	function locationsAreEqual(a, b) {
	  return a.pathname === b.pathname && a.search === b.search &&
	  //a.action === b.action && // Different action !== location change.
	  a.key === b.key && _deepEqual2['default'](a.state, b.state);
	}

	var DefaultKeyLength = 6;

	function createHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	  var getCurrentLocation = options.getCurrentLocation;
	  var finishTransition = options.finishTransition;
	  var saveState = options.saveState;
	  var go = options.go;
	  var keyLength = options.keyLength;
	  var getUserConfirmation = options.getUserConfirmation;

	  if (typeof keyLength !== 'number') keyLength = DefaultKeyLength;

	  var transitionHooks = [];

	  function listenBefore(hook) {
	    transitionHooks.push(hook);

	    return function () {
	      transitionHooks = transitionHooks.filter(function (item) {
	        return item !== hook;
	      });
	    };
	  }

	  var allKeys = [];
	  var changeListeners = [];
	  var location = undefined;

	  function getCurrent() {
	    if (pendingLocation && pendingLocation.action === _Actions.POP) {
	      return allKeys.indexOf(pendingLocation.key);
	    } else if (location) {
	      return allKeys.indexOf(location.key);
	    } else {
	      return -1;
	    }
	  }

	  function updateLocation(newLocation) {
	    var current = getCurrent();

	    location = newLocation;

	    if (location.action === _Actions.PUSH) {
	      allKeys = [].concat(allKeys.slice(0, current + 1), [location.key]);
	    } else if (location.action === _Actions.REPLACE) {
	      allKeys[current] = location.key;
	    }

	    changeListeners.forEach(function (listener) {
	      listener(location);
	    });
	  }

	  function listen(listener) {
	    changeListeners.push(listener);

	    if (location) {
	      listener(location);
	    } else {
	      var _location = getCurrentLocation();
	      allKeys = [_location.key];
	      updateLocation(_location);
	    }

	    return function () {
	      changeListeners = changeListeners.filter(function (item) {
	        return item !== listener;
	      });
	    };
	  }

	  function confirmTransitionTo(location, callback) {
	    _AsyncUtils.loopAsync(transitionHooks.length, function (index, next, done) {
	      _runTransitionHook2['default'](transitionHooks[index], location, function (result) {
	        if (result != null) {
	          done(result);
	        } else {
	          next();
	        }
	      });
	    }, function (message) {
	      if (getUserConfirmation && typeof message === 'string') {
	        getUserConfirmation(message, function (ok) {
	          callback(ok !== false);
	        });
	      } else {
	        callback(message !== false);
	      }
	    });
	  }

	  var pendingLocation = undefined;

	  function transitionTo(nextLocation) {
	    if (location && locationsAreEqual(location, nextLocation)) return; // Nothing to do.

	    pendingLocation = nextLocation;

	    confirmTransitionTo(nextLocation, function (ok) {
	      if (pendingLocation !== nextLocation) return; // Transition was interrupted.

	      if (ok) {
	        // treat PUSH to current path like REPLACE to be consistent with browsers
	        if (nextLocation.action === _Actions.PUSH) {
	          var prevPath = createPath(location);
	          var nextPath = createPath(nextLocation);

	          if (nextPath === prevPath && _deepEqual2['default'](location.state, nextLocation.state)) nextLocation.action = _Actions.REPLACE;
	        }

	        if (finishTransition(nextLocation) !== false) updateLocation(nextLocation);
	      } else if (location && nextLocation.action === _Actions.POP) {
	        var prevIndex = allKeys.indexOf(location.key);
	        var nextIndex = allKeys.indexOf(nextLocation.key);

	        if (prevIndex !== -1 && nextIndex !== -1) go(prevIndex - nextIndex); // Restore the URL.
	      }
	    });
	  }

	  function push(location) {
	    transitionTo(createLocation(location, _Actions.PUSH, createKey()));
	  }

	  function replace(location) {
	    transitionTo(createLocation(location, _Actions.REPLACE, createKey()));
	  }

	  function goBack() {
	    go(-1);
	  }

	  function goForward() {
	    go(1);
	  }

	  function createKey() {
	    return createRandomKey(keyLength);
	  }

	  function createPath(location) {
	    if (location == null || typeof location === 'string') return location;

	    var pathname = location.pathname;
	    var search = location.search;
	    var hash = location.hash;

	    var result = pathname;

	    if (search) result += search;

	    if (hash) result += hash;

	    return result;
	  }

	  function createHref(location) {
	    return createPath(location);
	  }

	  function createLocation(location, action) {
	    var key = arguments.length <= 2 || arguments[2] === undefined ? createKey() : arguments[2];

	    if (typeof action === 'object') {
	       false ? _warning2['default'](false, 'The state (2nd) argument to history.createLocation is deprecated; use a ' + 'location descriptor instead') : undefined;

	      if (typeof location === 'string') location = _PathUtils.parsePath(location);

	      location = _extends({}, location, { state: action });

	      action = key;
	      key = arguments[3] || createKey();
	    }

	    return _createLocation3['default'](location, action, key);
	  }

	  // deprecated
	  function setState(state) {
	    if (location) {
	      updateLocationState(location, state);
	      updateLocation(location);
	    } else {
	      updateLocationState(getCurrentLocation(), state);
	    }
	  }

	  function updateLocationState(location, state) {
	    location.state = _extends({}, location.state, state);
	    saveState(location.key, location.state);
	  }

	  // deprecated
	  function registerTransitionHook(hook) {
	    if (transitionHooks.indexOf(hook) === -1) transitionHooks.push(hook);
	  }

	  // deprecated
	  function unregisterTransitionHook(hook) {
	    transitionHooks = transitionHooks.filter(function (item) {
	      return item !== hook;
	    });
	  }

	  // deprecated
	  function pushState(state, path) {
	    if (typeof path === 'string') path = _PathUtils.parsePath(path);

	    push(_extends({ state: state }, path));
	  }

	  // deprecated
	  function replaceState(state, path) {
	    if (typeof path === 'string') path = _PathUtils.parsePath(path);

	    replace(_extends({ state: state }, path));
	  }

	  return {
	    listenBefore: listenBefore,
	    listen: listen,
	    transitionTo: transitionTo,
	    push: push,
	    replace: replace,
	    go: go,
	    goBack: goBack,
	    goForward: goForward,
	    createKey: createKey,
	    createPath: createPath,
	    createHref: createHref,
	    createLocation: createLocation,

	    setState: _deprecate2['default'](setState, 'setState is deprecated; use location.key to save state instead'),
	    registerTransitionHook: _deprecate2['default'](registerTransitionHook, 'registerTransitionHook is deprecated; use listenBefore instead'),
	    unregisterTransitionHook: _deprecate2['default'](unregisterTransitionHook, 'unregisterTransitionHook is deprecated; use the callback returned from listenBefore instead'),
	    pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),
	    replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')
	  };
	}

	exports['default'] = createHistory;
	module.exports = exports['default'];

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	var _ExecutionEnvironment = __webpack_require__(10);

	var _PathUtils = __webpack_require__(7);

	var _runTransitionHook = __webpack_require__(17);

	var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);

	var _deprecate = __webpack_require__(16);

	var _deprecate2 = _interopRequireDefault(_deprecate);

	function useBasename(createHistory) {
	  return function () {
	    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    var basename = options.basename;

	    var historyOptions = _objectWithoutProperties(options, ['basename']);

	    var history = createHistory(historyOptions);

	    // Automatically use the value of <base href> in HTML
	    // documents as basename if it's not explicitly given.
	    if (basename == null && _ExecutionEnvironment.canUseDOM) {
	      var base = document.getElementsByTagName('base')[0];

	      if (base) basename = _PathUtils.extractPath(base.href);
	    }

	    function addBasename(location) {
	      if (basename && location.basename == null) {
	        if (location.pathname.indexOf(basename) === 0) {
	          location.pathname = location.pathname.substring(basename.length);
	          location.basename = basename;

	          if (location.pathname === '') location.pathname = '/';
	        } else {
	          location.basename = '';
	        }
	      }

	      return location;
	    }

	    function prependBasename(location) {
	      if (!basename) return location;

	      if (typeof location === 'string') location = _PathUtils.parsePath(location);

	      var pname = location.pathname;
	      var normalizedBasename = basename.slice(-1) === '/' ? basename : basename + '/';
	      var normalizedPathname = pname.charAt(0) === '/' ? pname.slice(1) : pname;
	      var pathname = normalizedBasename + normalizedPathname;

	      return _extends({}, location, {
	        pathname: pathname
	      });
	    }

	    // Override all read methods with basename-aware versions.
	    function listenBefore(hook) {
	      return history.listenBefore(function (location, callback) {
	        _runTransitionHook2['default'](hook, addBasename(location), callback);
	      });
	    }

	    function listen(listener) {
	      return history.listen(function (location) {
	        listener(addBasename(location));
	      });
	    }

	    // Override all write methods with basename-aware versions.
	    function push(location) {
	      history.push(prependBasename(location));
	    }

	    function replace(location) {
	      history.replace(prependBasename(location));
	    }

	    function createPath(location) {
	      return history.createPath(prependBasename(location));
	    }

	    function createHref(location) {
	      return history.createHref(prependBasename(location));
	    }

	    function createLocation(location) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      return addBasename(history.createLocation.apply(history, [prependBasename(location)].concat(args)));
	    }

	    // deprecated
	    function pushState(state, path) {
	      if (typeof path === 'string') path = _PathUtils.parsePath(path);

	      push(_extends({ state: state }, path));
	    }

	    // deprecated
	    function replaceState(state, path) {
	      if (typeof path === 'string') path = _PathUtils.parsePath(path);

	      replace(_extends({ state: state }, path));
	    }

	    return _extends({}, history, {
	      listenBefore: listenBefore,
	      listen: listen,
	      push: push,
	      replace: replace,
	      createPath: createPath,
	      createHref: createHref,
	      createLocation: createLocation,

	      pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),
	      replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')
	    });
	  };
	}

	exports['default'] = useBasename;
	module.exports = exports['default'];

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _routerWarning = __webpack_require__(1);

	var _routerWarning2 = _interopRequireDefault(_routerWarning);

	var _PropTypes = __webpack_require__(6);

	/**
	 * A mixin that adds the "history" instance variable to components.
	 */
	var History = {

	  contextTypes: {
	    history: _PropTypes.history
	  },

	  componentWillMount: function componentWillMount() {
	     false ? _routerWarning2['default'](false, 'the `History` mixin is deprecated, please access `context.router` with your own `contextTypes`. http://tiny.cc/router-historymixin') : undefined;
	    this.history = this.context.history;
	  }

	};

	exports['default'] = History;
	module.exports = exports['default'];

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Link = __webpack_require__(18);

	var _Link2 = _interopRequireDefault(_Link);

	/**
	 * An <IndexLink> is used to link to an <IndexRoute>.
	 */
	var IndexLink = _react2['default'].createClass({
	  displayName: 'IndexLink',

	  render: function render() {
	    return _react2['default'].createElement(_Link2['default'], _extends({}, this.props, { onlyActiveOnIndex: true }));
	  }

	});

	exports['default'] = IndexLink;
	module.exports = exports['default'];

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _routerWarning = __webpack_require__(1);

	var _routerWarning2 = _interopRequireDefault(_routerWarning);

	var _invariant = __webpack_require__(3);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _Redirect = __webpack_require__(19);

	var _Redirect2 = _interopRequireDefault(_Redirect);

	var _PropTypes = __webpack_require__(6);

	var _React$PropTypes = _react2['default'].PropTypes;
	var string = _React$PropTypes.string;
	var object = _React$PropTypes.object;

	/**
	 * An <IndexRedirect> is used to redirect from an indexRoute.
	 */
	var IndexRedirect = _react2['default'].createClass({
	  displayName: 'IndexRedirect',

	  statics: {

	    createRouteFromReactElement: function createRouteFromReactElement(element, parentRoute) {
	      /* istanbul ignore else: sanity check */
	      if (parentRoute) {
	        parentRoute.indexRoute = _Redirect2['default'].createRouteFromReactElement(element);
	      } else {
	         false ? _routerWarning2['default'](false, 'An <IndexRedirect> does not make sense at the root of your route config') : undefined;
	      }
	    }

	  },

	  propTypes: {
	    to: string.isRequired,
	    query: object,
	    state: object,
	    onEnter: _PropTypes.falsy,
	    children: _PropTypes.falsy
	  },

	  /* istanbul ignore next: sanity check */
	  render: function render() {
	     true ?  false ? _invariant2['default'](false, '<IndexRedirect> elements are for router configuration only and should not be rendered') : _invariant2['default'](false) : undefined;
	  }

	});

	exports['default'] = IndexRedirect;
	module.exports = exports['default'];

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _routerWarning = __webpack_require__(1);

	var _routerWarning2 = _interopRequireDefault(_routerWarning);

	var _invariant = __webpack_require__(3);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _RouteUtils = __webpack_require__(5);

	var _PropTypes = __webpack_require__(6);

	var func = _react2['default'].PropTypes.func;

	/**
	 * An <IndexRoute> is used to specify its parent's <Route indexRoute> in
	 * a JSX route config.
	 */
	var IndexRoute = _react2['default'].createClass({
	  displayName: 'IndexRoute',

	  statics: {

	    createRouteFromReactElement: function createRouteFromReactElement(element, parentRoute) {
	      /* istanbul ignore else: sanity check */
	      if (parentRoute) {
	        parentRoute.indexRoute = _RouteUtils.createRouteFromReactElement(element);
	      } else {
	         false ? _routerWarning2['default'](false, 'An <IndexRoute> does not make sense at the root of your route config') : undefined;
	      }
	    }

	  },

	  propTypes: {
	    path: _PropTypes.falsy,
	    component: _PropTypes.component,
	    components: _PropTypes.components,
	    getComponent: func,
	    getComponents: func
	  },

	  /* istanbul ignore next: sanity check */
	  render: function render() {
	     true ?  false ? _invariant2['default'](false, '<IndexRoute> elements are for router configuration only and should not be rendered') : _invariant2['default'](false) : undefined;
	  }

	});

	exports['default'] = IndexRoute;
	module.exports = exports['default'];

/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _routerWarning = __webpack_require__(1);

	var _routerWarning2 = _interopRequireDefault(_routerWarning);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _invariant = __webpack_require__(3);

	var _invariant2 = _interopRequireDefault(_invariant);

	var object = _react2['default'].PropTypes.object;

	/**
	 * The Lifecycle mixin adds the routerWillLeave lifecycle method to a
	 * component that may be used to cancel a transition or prompt the user
	 * for confirmation.
	 *
	 * On standard transitions, routerWillLeave receives a single argument: the
	 * location we're transitioning to. To cancel the transition, return false.
	 * To prompt the user for confirmation, return a prompt message (string).
	 *
	 * During the beforeunload event (assuming you're using the useBeforeUnload
	 * history enhancer), routerWillLeave does not receive a location object
	 * because it isn't possible for us to know the location we're transitioning
	 * to. In this case routerWillLeave must return a prompt message to prevent
	 * the user from closing the window/tab.
	 */
	var Lifecycle = {

	  contextTypes: {
	    history: object.isRequired,
	    // Nested children receive the route as context, either
	    // set by the route component using the RouteContext mixin
	    // or by some other ancestor.
	    route: object
	  },

	  propTypes: {
	    // Route components receive the route object as a prop.
	    route: object
	  },

	  componentDidMount: function componentDidMount() {
	     false ? _routerWarning2['default'](false, 'the `Lifecycle` mixin is deprecated, please use `context.router.setRouteLeaveHook(route, hook)`. http://tiny.cc/router-lifecyclemixin') : undefined;
	    !this.routerWillLeave ?  false ? _invariant2['default'](false, 'The Lifecycle mixin requires you to define a routerWillLeave method') : _invariant2['default'](false) : undefined;

	    var route = this.props.route || this.context.route;

	    !route ?  false ? _invariant2['default'](false, 'The Lifecycle mixin must be used on either a) a <Route component> or ' + 'b) a descendant of a <Route component> that uses the RouteContext mixin') : _invariant2['default'](false) : undefined;

	    this._unlistenBeforeLeavingRoute = this.context.history.listenBeforeLeavingRoute(route, this.routerWillLeave);
	  },

	  componentWillUnmount: function componentWillUnmount() {
	    if (this._unlistenBeforeLeavingRoute) this._unlistenBeforeLeavingRoute();
	  }

	};

	exports['default'] = Lifecycle;
	module.exports = exports['default'];

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _invariant = __webpack_require__(3);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _RouteUtils = __webpack_require__(5);

	var _PropTypes = __webpack_require__(6);

	var _React$PropTypes = _react2['default'].PropTypes;
	var string = _React$PropTypes.string;
	var func = _React$PropTypes.func;

	/**
	 * A <Route> is used to declare which components are rendered to the
	 * page when the URL matches a given pattern.
	 *
	 * Routes are arranged in a nested tree structure. When a new URL is
	 * requested, the tree is searched depth-first to find a route whose
	 * path matches the URL.  When one is found, all routes in the tree
	 * that lead to it are considered "active" and their components are
	 * rendered into the DOM, nested in the same order as in the tree.
	 */
	var Route = _react2['default'].createClass({
	  displayName: 'Route',

	  statics: {
	    createRouteFromReactElement: _RouteUtils.createRouteFromReactElement
	  },

	  propTypes: {
	    path: string,
	    component: _PropTypes.component,
	    components: _PropTypes.components,
	    getComponent: func,
	    getComponents: func
	  },

	  /* istanbul ignore next: sanity check */
	  render: function render() {
	     true ?  false ? _invariant2['default'](false, '<Route> elements are for router configuration only and should not be rendered') : _invariant2['default'](false) : undefined;
	  }

	});

	exports['default'] = Route;
	module.exports = exports['default'];

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _routerWarning = __webpack_require__(1);

	var _routerWarning2 = _interopRequireDefault(_routerWarning);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var object = _react2['default'].PropTypes.object;

	/**
	 * The RouteContext mixin provides a convenient way for route
	 * components to set the route in context. This is needed for
	 * routes that render elements that want to use the Lifecycle
	 * mixin to prevent transitions.
	 */
	var RouteContext = {

	  propTypes: {
	    route: object.isRequired
	  },

	  childContextTypes: {
	    route: object.isRequired
	  },

	  getChildContext: function getChildContext() {
	    return {
	      route: this.props.route
	    };
	  },

	  componentWillMount: function componentWillMount() {
	     false ? _routerWarning2['default'](false, 'The `RouteContext` mixin is deprecated. You can provide `this.props.route` on context with your own `contextTypes`. http://tiny.cc/router-routecontextmixin') : undefined;
	  }

	};

	exports['default'] = RouteContext;
	module.exports = exports['default'];

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	var _historyLibCreateHashHistory = __webpack_require__(27);

	var _historyLibCreateHashHistory2 = _interopRequireDefault(_historyLibCreateHashHistory);

	var _historyLibUseQueries = __webpack_require__(11);

	var _historyLibUseQueries2 = _interopRequireDefault(_historyLibUseQueries);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _createTransitionManager = __webpack_require__(14);

	var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);

	var _PropTypes = __webpack_require__(6);

	var _RouterContext = __webpack_require__(13);

	var _RouterContext2 = _interopRequireDefault(_RouterContext);

	var _RouteUtils = __webpack_require__(5);

	var _RouterUtils = __webpack_require__(20);

	var _routerWarning = __webpack_require__(1);

	var _routerWarning2 = _interopRequireDefault(_routerWarning);

	function isDeprecatedHistory(history) {
	  return !history || !history.__v2_compatible__;
	}

	var _React$PropTypes = _react2['default'].PropTypes;
	var func = _React$PropTypes.func;
	var object = _React$PropTypes.object;

	/**
	 * A <Router> is a high-level API for automatically setting up
	 * a router that renders a <RouterContext> with all the props
	 * it needs each time the URL changes.
	 */
	var Router = _react2['default'].createClass({
	  displayName: 'Router',

	  propTypes: {
	    history: object,
	    children: _PropTypes.routes,
	    routes: _PropTypes.routes, // alias for children
	    render: func,
	    createElement: func,
	    onError: func,
	    onUpdate: func,

	    // PRIVATE: For client-side rehydration of server match.
	    matchContext: object
	  },

	  getDefaultProps: function getDefaultProps() {
	    return {
	      render: function render(props) {
	        return _react2['default'].createElement(_RouterContext2['default'], props);
	      }
	    };
	  },

	  getInitialState: function getInitialState() {
	    return {
	      location: null,
	      routes: null,
	      params: null,
	      components: null
	    };
	  },

	  handleError: function handleError(error) {
	    if (this.props.onError) {
	      this.props.onError.call(this, error);
	    } else {
	      // Throw errors by default so we don't silently swallow them!
	      throw error; // This error probably occurred in getChildRoutes or getComponents.
	    }
	  },

	  componentWillMount: function componentWillMount() {
	    var _this = this;

	    var _props = this.props;
	    var parseQueryString = _props.parseQueryString;
	    var stringifyQuery = _props.stringifyQuery;

	     false ? _routerWarning2['default'](!(parseQueryString || stringifyQuery), '`parseQueryString` and `stringifyQuery` are deprecated. Please create a custom history. http://tiny.cc/router-customquerystring') : undefined;

	    var _createRouterObjects = this.createRouterObjects();

	    var history = _createRouterObjects.history;
	    var transitionManager = _createRouterObjects.transitionManager;
	    var router = _createRouterObjects.router;

	    this._unlisten = transitionManager.listen(function (error, state) {
	      if (error) {
	        _this.handleError(error);
	      } else {
	        _this.setState(state, _this.props.onUpdate);
	      }
	    });

	    this.history = history;
	    this.router = router;
	  },

	  createRouterObjects: function createRouterObjects() {
	    var matchContext = this.props.matchContext;

	    if (matchContext) {
	      return matchContext;
	    }

	    var history = this.props.history;
	    var _props2 = this.props;
	    var routes = _props2.routes;
	    var children = _props2.children;

	    if (isDeprecatedHistory(history)) {
	      history = this.wrapDeprecatedHistory(history);
	    }

	    var transitionManager = _createTransitionManager2['default'](history, _RouteUtils.createRoutes(routes || children));
	    var router = _RouterUtils.createRouterObject(history, transitionManager);
	    var routingHistory = _RouterUtils.createRoutingHistory(history, transitionManager);

	    return { history: routingHistory, transitionManager: transitionManager, router: router };
	  },

	  wrapDeprecatedHistory: function wrapDeprecatedHistory(history) {
	    var _props3 = this.props;
	    var parseQueryString = _props3.parseQueryString;
	    var stringifyQuery = _props3.stringifyQuery;

	    var createHistory = undefined;
	    if (history) {
	       false ? _routerWarning2['default'](false, 'It appears you have provided a deprecated history object to `<Router/>`, please use a history provided by ' + 'React Router with `import { browserHistory } from \'react-router\'` or `import { hashHistory } from \'react-router\'`. ' + 'If you are using a custom history please create it with `useRouterHistory`, see http://tiny.cc/router-usinghistory for details.') : undefined;
	      createHistory = function () {
	        return history;
	      };
	    } else {
	       false ? _routerWarning2['default'](false, '`Router` no longer defaults the history prop to hash history. Please use the `hashHistory` singleton instead. http://tiny.cc/router-defaulthistory') : undefined;
	      createHistory = _historyLibCreateHashHistory2['default'];
	    }

	    return _historyLibUseQueries2['default'](createHistory)({ parseQueryString: parseQueryString, stringifyQuery: stringifyQuery });
	  },

	  /* istanbul ignore next: sanity check */
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	     false ? _routerWarning2['default'](nextProps.history === this.props.history, 'You cannot change <Router history>; it will be ignored') : undefined;

	     false ? _routerWarning2['default']((nextProps.routes || nextProps.children) === (this.props.routes || this.props.children), 'You cannot change <Router routes>; it will be ignored') : undefined;
	  },

	  componentWillUnmount: function componentWillUnmount() {
	    if (this._unlisten) this._unlisten();
	  },

	  render: function render() {
	    var _state = this.state;
	    var location = _state.location;
	    var routes = _state.routes;
	    var params = _state.params;
	    var components = _state.components;
	    var _props4 = this.props;
	    var createElement = _props4.createElement;
	    var render = _props4.render;

	    var props = _objectWithoutProperties(_props4, ['createElement', 'render']);

	    if (location == null) return null; // Async match

	    // Only forward non-Router-specific props to routing context, as those are
	    // the only ones that might be custom routing context props.
	    Object.keys(Router.propTypes).forEach(function (propType) {
	      return delete props[propType];
	    });

	    return render(_extends({}, props, {
	      history: this.history,
	      router: this.router,
	      location: location,
	      routes: routes,
	      params: params,
	      components: components,
	      createElement: createElement
	    }));
	  }

	});

	exports['default'] = Router;
	module.exports = exports['default'];

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _RouterContext = __webpack_require__(13);

	var _RouterContext2 = _interopRequireDefault(_RouterContext);

	var _routerWarning = __webpack_require__(1);

	var _routerWarning2 = _interopRequireDefault(_routerWarning);

	var RoutingContext = _react2['default'].createClass({
	  displayName: 'RoutingContext',

	  componentWillMount: function componentWillMount() {
	     false ? _routerWarning2['default'](false, '`RoutingContext` has been renamed to `RouterContext`. Please use `import { RouterContext } from \'react-router\'`. http://tiny.cc/router-routercontext') : undefined;
	  },

	  render: function render() {
	    return _react2['default'].createElement(_RouterContext2['default'], this.props);
	  }
	});

	exports['default'] = RoutingContext;
	module.exports = exports['default'];

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.runEnterHooks = runEnterHooks;
	exports.runLeaveHooks = runLeaveHooks;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _AsyncUtils = __webpack_require__(12);

	var _routerWarning = __webpack_require__(1);

	var _routerWarning2 = _interopRequireDefault(_routerWarning);

	function createEnterHook(hook, route) {
	  return function (a, b, callback) {
	    hook.apply(route, arguments);

	    if (hook.length < 3) {
	      // Assume hook executes synchronously and
	      // automatically call the callback.
	      callback();
	    }
	  };
	}

	function getEnterHooks(routes) {
	  return routes.reduce(function (hooks, route) {
	    if (route.onEnter) hooks.push(createEnterHook(route.onEnter, route));

	    return hooks;
	  }, []);
	}

	/**
	 * Runs all onEnter hooks in the given array of routes in order
	 * with onEnter(nextState, replace, callback) and calls
	 * callback(error, redirectInfo) when finished. The first hook
	 * to use replace short-circuits the loop.
	 *
	 * If a hook needs to run asynchronously, it may use the callback
	 * function. However, doing so will cause the transition to pause,
	 * which could lead to a non-responsive UI if the hook is slow.
	 */

	function runEnterHooks(routes, nextState, callback) {
	  var hooks = getEnterHooks(routes);

	  if (!hooks.length) {
	    callback();
	    return;
	  }

	  var redirectInfo = undefined;
	  function replace(location, deprecatedPathname, deprecatedQuery) {
	    if (deprecatedPathname) {
	       false ? _routerWarning2['default'](false, '`replaceState(state, pathname, query) is deprecated; use `replace(location)` with a location descriptor instead. http://tiny.cc/router-isActivedeprecated') : undefined;
	      redirectInfo = {
	        pathname: deprecatedPathname,
	        query: deprecatedQuery,
	        state: location
	      };

	      return;
	    }

	    redirectInfo = location;
	  }

	  _AsyncUtils.loopAsync(hooks.length, function (index, next, done) {
	    hooks[index](nextState, replace, function (error) {
	      if (error || redirectInfo) {
	        done(error, redirectInfo); // No need to continue.
	      } else {
	          next();
	        }
	    });
	  }, callback);
	}

	/**
	 * Runs all onLeave hooks in the given array of routes in order.
	 */

	function runLeaveHooks(routes) {
	  for (var i = 0, len = routes.length; i < len; ++i) {
	    if (routes[i].onLeave) routes[i].onLeave.call(routes[i]);
	  }
	}

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _historyLibCreateBrowserHistory = __webpack_require__(53);

	var _historyLibCreateBrowserHistory2 = _interopRequireDefault(_historyLibCreateBrowserHistory);

	var _createRouterHistory = __webpack_require__(22);

	var _createRouterHistory2 = _interopRequireDefault(_createRouterHistory);

	exports['default'] = _createRouterHistory2['default'](_historyLibCreateBrowserHistory2['default']);
	module.exports = exports['default'];

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _PatternUtils = __webpack_require__(8);

	function routeParamsChanged(route, prevState, nextState) {
	  if (!route.path) return false;

	  var paramNames = _PatternUtils.getParamNames(route.path);

	  return paramNames.some(function (paramName) {
	    return prevState.params[paramName] !== nextState.params[paramName];
	  });
	}

	/**
	 * Returns an object of { leaveRoutes, enterRoutes } determined by
	 * the change from prevState to nextState. We leave routes if either
	 * 1) they are not in the next state or 2) they are in the next state
	 * but their params have changed (i.e. /users/123 => /users/456).
	 *
	 * leaveRoutes are ordered starting at the leaf route of the tree
	 * we're leaving up to the common parent route. enterRoutes are ordered
	 * from the top of the tree we're entering down to the leaf route.
	 */
	function computeChangedRoutes(prevState, nextState) {
	  var prevRoutes = prevState && prevState.routes;
	  var nextRoutes = nextState.routes;

	  var leaveRoutes = undefined,
	      enterRoutes = undefined;
	  if (prevRoutes) {
	    (function () {
	      var parentIsLeaving = false;
	      leaveRoutes = prevRoutes.filter(function (route) {
	        if (parentIsLeaving) {
	          return true;
	        } else {
	          var isLeaving = nextRoutes.indexOf(route) === -1 || routeParamsChanged(route, prevState, nextState);
	          if (isLeaving) parentIsLeaving = true;
	          return isLeaving;
	        }
	      });

	      // onLeave hooks start at the leaf route.
	      leaveRoutes.reverse();

	      enterRoutes = nextRoutes.filter(function (route) {
	        return prevRoutes.indexOf(route) === -1 || leaveRoutes.indexOf(route) !== -1;
	      });
	    })();
	  } else {
	    leaveRoutes = [];
	    enterRoutes = nextRoutes;
	  }

	  return {
	    leaveRoutes: leaveRoutes,
	    enterRoutes: enterRoutes
	  };
	}

	exports['default'] = computeChangedRoutes;
	module.exports = exports['default'];

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _AsyncUtils = __webpack_require__(12);

	function getComponentsForRoute(location, route, callback) {
	  if (route.component || route.components) {
	    callback(null, route.component || route.components);
	  } else if (route.getComponent) {
	    route.getComponent(location, callback);
	  } else if (route.getComponents) {
	    route.getComponents(location, callback);
	  } else {
	    callback();
	  }
	}

	/**
	 * Asynchronously fetches all components needed for the given router
	 * state and calls callback(error, components) when finished.
	 *
	 * Note: This operation may finish synchronously if no routes have an
	 * asynchronous getComponents method.
	 */
	function getComponents(nextState, callback) {
	  _AsyncUtils.mapAsync(nextState.routes, function (route, index, callback) {
	    getComponentsForRoute(nextState.location, route, callback);
	  }, callback);
	}

	exports['default'] = getComponents;
	module.exports = exports['default'];

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _PatternUtils = __webpack_require__(8);

	/**
	 * Extracts an object of params the given route cares about from
	 * the given params object.
	 */
	function getRouteParams(route, params) {
	  var routeParams = {};

	  if (!route.path) return routeParams;

	  var paramNames = _PatternUtils.getParamNames(route.path);

	  for (var p in params) {
	    if (params.hasOwnProperty(p) && paramNames.indexOf(p) !== -1) routeParams[p] = params[p];
	  }return routeParams;
	}

	exports['default'] = getRouteParams;
	module.exports = exports['default'];

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _historyLibCreateHashHistory = __webpack_require__(27);

	var _historyLibCreateHashHistory2 = _interopRequireDefault(_historyLibCreateHashHistory);

	var _createRouterHistory = __webpack_require__(22);

	var _createRouterHistory2 = _interopRequireDefault(_createRouterHistory);

	exports['default'] = _createRouterHistory2['default'](_historyLibCreateHashHistory2['default']);
	module.exports = exports['default'];

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports['default'] = isActive;

	var _PatternUtils = __webpack_require__(8);

	function deepEqual(a, b) {
	  if (a == b) return true;

	  if (a == null || b == null) return false;

	  if (Array.isArray(a)) {
	    return Array.isArray(b) && a.length === b.length && a.every(function (item, index) {
	      return deepEqual(item, b[index]);
	    });
	  }

	  if (typeof a === 'object') {
	    for (var p in a) {
	      if (!a.hasOwnProperty(p)) {
	        continue;
	      }

	      if (a[p] === undefined) {
	        if (b[p] !== undefined) {
	          return false;
	        }
	      } else if (!b.hasOwnProperty(p)) {
	        return false;
	      } else if (!deepEqual(a[p], b[p])) {
	        return false;
	      }
	    }

	    return true;
	  }

	  return String(a) === String(b);
	}

	function paramsAreActive(paramNames, paramValues, activeParams) {
	  // FIXME: This doesn't work on repeated params in activeParams.
	  return paramNames.every(function (paramName, index) {
	    return String(paramValues[index]) === String(activeParams[paramName]);
	  });
	}

	function getMatchingRouteIndex(pathname, activeRoutes, activeParams) {
	  var remainingPathname = pathname,
	      paramNames = [],
	      paramValues = [];

	  for (var i = 0, len = activeRoutes.length; i < len; ++i) {
	    var route = activeRoutes[i];
	    var pattern = route.path || '';

	    if (pattern.charAt(0) === '/') {
	      remainingPathname = pathname;
	      paramNames = [];
	      paramValues = [];
	    }

	    if (remainingPathname !== null) {
	      var matched = _PatternUtils.matchPattern(pattern, remainingPathname);
	      remainingPathname = matched.remainingPathname;
	      paramNames = [].concat(paramNames, matched.paramNames);
	      paramValues = [].concat(paramValues, matched.paramValues);
	    }

	    if (remainingPathname === '' && route.path && paramsAreActive(paramNames, paramValues, activeParams)) return i;
	  }

	  return null;
	}

	/**
	 * Returns true if the given pathname matches the active routes
	 * and params.
	 */
	function routeIsActive(pathname, routes, params, indexOnly) {
	  var i = getMatchingRouteIndex(pathname, routes, params);

	  if (i === null) {
	    // No match.
	    return false;
	  } else if (!indexOnly) {
	    // Any match is good enough.
	    return true;
	  }

	  // If any remaining routes past the match index have paths, then we can't
	  // be on the index route.
	  return routes.slice(i + 1).every(function (route) {
	    return !route.path;
	  });
	}

	/**
	 * Returns true if all key/value pairs in the given query are
	 * currently active.
	 */
	function queryIsActive(query, activeQuery) {
	  if (activeQuery == null) return query == null;

	  if (query == null) return true;

	  return deepEqual(query, activeQuery);
	}

	/**
	 * Returns true if a <Link> to the given pathname/query combination is
	 * currently active.
	 */

	function isActive(_ref, indexOnly, currentLocation, routes, params) {
	  var pathname = _ref.pathname;
	  var query = _ref.query;

	  if (currentLocation == null) return false;

	  if (!routeIsActive(pathname, routes, params, indexOnly)) return false;

	  return queryIsActive(query, currentLocation.query);
	}

	module.exports = exports['default'];

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	var _invariant = __webpack_require__(3);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _createMemoryHistory = __webpack_require__(21);

	var _createMemoryHistory2 = _interopRequireDefault(_createMemoryHistory);

	var _createTransitionManager = __webpack_require__(14);

	var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);

	var _RouteUtils = __webpack_require__(5);

	var _RouterUtils = __webpack_require__(20);

	/**
	 * A high-level API to be used for server-side rendering.
	 *
	 * This function matches a location to a set of routes and calls
	 * callback(error, redirectLocation, renderProps) when finished.
	 *
	 * Note: You probably don't want to use this in a browser unless you're using
	 * server-side rendering with async routes.
	 */
	function match(_ref, callback) {
	  var history = _ref.history;
	  var routes = _ref.routes;
	  var location = _ref.location;

	  var options = _objectWithoutProperties(_ref, ['history', 'routes', 'location']);

	  !(history || location) ?  false ? _invariant2['default'](false, 'match needs a history or a location') : _invariant2['default'](false) : undefined;

	  history = history ? history : _createMemoryHistory2['default'](options);
	  var transitionManager = _createTransitionManager2['default'](history, _RouteUtils.createRoutes(routes));

	  var unlisten = undefined;

	  if (location) {
	    // Allow match({ location: '/the/path', ... })
	    location = history.createLocation(location);
	  } else {
	    // Pick up the location from the history via synchronous history.listen
	    // call if needed.
	    unlisten = history.listen(function (historyLocation) {
	      location = historyLocation;
	    });
	  }

	  var router = _RouterUtils.createRouterObject(history, transitionManager);
	  history = _RouterUtils.createRoutingHistory(history, transitionManager);

	  transitionManager.match(location, function (error, redirectLocation, nextState) {
	    callback(error, redirectLocation, nextState && _extends({}, nextState, {
	      history: history,
	      router: router,
	      matchContext: { history: history, transitionManager: transitionManager, router: router }
	    }));

	    // Defer removing the listener to here to prevent DOM histories from having
	    // to unwind DOM event listeners unnecessarily, in case callback renders a
	    // <Router> and attaches another history listener.
	    if (unlisten) {
	      unlisten();
	    }
	  });
	}

	exports['default'] = match;
	module.exports = exports['default'];

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _routerWarning = __webpack_require__(1);

	var _routerWarning2 = _interopRequireDefault(_routerWarning);

	var _AsyncUtils = __webpack_require__(12);

	var _PatternUtils = __webpack_require__(8);

	var _RouteUtils = __webpack_require__(5);

	function getChildRoutes(route, location, callback) {
	  if (route.childRoutes) {
	    return [null, route.childRoutes];
	  }
	  if (!route.getChildRoutes) {
	    return [];
	  }

	  var sync = true,
	      result = undefined;

	  route.getChildRoutes(location, function (error, childRoutes) {
	    childRoutes = !error && _RouteUtils.createRoutes(childRoutes);
	    if (sync) {
	      result = [error, childRoutes];
	      return;
	    }

	    callback(error, childRoutes);
	  });

	  sync = false;
	  return result; // Might be undefined.
	}

	function getIndexRoute(route, location, callback) {
	  if (route.indexRoute) {
	    callback(null, route.indexRoute);
	  } else if (route.getIndexRoute) {
	    route.getIndexRoute(location, function (error, indexRoute) {
	      callback(error, !error && _RouteUtils.createRoutes(indexRoute)[0]);
	    });
	  } else if (route.childRoutes) {
	    (function () {
	      var pathless = route.childRoutes.filter(function (obj) {
	        return !obj.hasOwnProperty('path');
	      });

	      _AsyncUtils.loopAsync(pathless.length, function (index, next, done) {
	        getIndexRoute(pathless[index], location, function (error, indexRoute) {
	          if (error || indexRoute) {
	            var routes = [pathless[index]].concat(Array.isArray(indexRoute) ? indexRoute : [indexRoute]);
	            done(error, routes);
	          } else {
	            next();
	          }
	        });
	      }, function (err, routes) {
	        callback(null, routes);
	      });
	    })();
	  } else {
	    callback();
	  }
	}

	function assignParams(params, paramNames, paramValues) {
	  return paramNames.reduce(function (params, paramName, index) {
	    var paramValue = paramValues && paramValues[index];

	    if (Array.isArray(params[paramName])) {
	      params[paramName].push(paramValue);
	    } else if (paramName in params) {
	      params[paramName] = [params[paramName], paramValue];
	    } else {
	      params[paramName] = paramValue;
	    }

	    return params;
	  }, params);
	}

	function createParams(paramNames, paramValues) {
	  return assignParams({}, paramNames, paramValues);
	}

	function matchRouteDeep(route, location, remainingPathname, paramNames, paramValues, callback) {
	  var pattern = route.path || '';

	  if (pattern.charAt(0) === '/') {
	    remainingPathname = location.pathname;
	    paramNames = [];
	    paramValues = [];
	  }

	  if (remainingPathname !== null) {
	    var matched = _PatternUtils.matchPattern(pattern, remainingPathname);
	    remainingPathname = matched.remainingPathname;
	    paramNames = [].concat(paramNames, matched.paramNames);
	    paramValues = [].concat(paramValues, matched.paramValues);

	    if (remainingPathname === '' && route.path) {
	      var _ret2 = (function () {
	        var match = {
	          routes: [route],
	          params: createParams(paramNames, paramValues)
	        };

	        getIndexRoute(route, location, function (error, indexRoute) {
	          if (error) {
	            callback(error);
	          } else {
	            if (Array.isArray(indexRoute)) {
	              var _match$routes;

	               false ? _routerWarning2['default'](indexRoute.every(function (route) {
	                return !route.path;
	              }), 'Index routes should not have paths') : undefined;
	              (_match$routes = match.routes).push.apply(_match$routes, indexRoute);
	            } else if (indexRoute) {
	               false ? _routerWarning2['default'](!indexRoute.path, 'Index routes should not have paths') : undefined;
	              match.routes.push(indexRoute);
	            }

	            callback(null, match);
	          }
	        });
	        return {
	          v: undefined
	        };
	      })();

	      if (typeof _ret2 === 'object') return _ret2.v;
	    }
	  }

	  if (remainingPathname != null || route.childRoutes) {
	    // Either a) this route matched at least some of the path or b)
	    // we don't have to load this route's children asynchronously. In
	    // either case continue checking for matches in the subtree.
	    var onChildRoutes = function onChildRoutes(error, childRoutes) {
	      if (error) {
	        callback(error);
	      } else if (childRoutes) {
	        // Check the child routes to see if any of them match.
	        matchRoutes(childRoutes, location, function (error, match) {
	          if (error) {
	            callback(error);
	          } else if (match) {
	            // A child route matched! Augment the match and pass it up the stack.
	            match.routes.unshift(route);
	            callback(null, match);
	          } else {
	            callback();
	          }
	        }, remainingPathname, paramNames, paramValues);
	      } else {
	        callback();
	      }
	    };

	    var result = getChildRoutes(route, location, onChildRoutes);
	    if (result) {
	      onChildRoutes.apply(undefined, result);
	    }
	  } else {
	    callback();
	  }
	}

	/**
	 * Asynchronously matches the given location to a set of routes and calls
	 * callback(error, state) when finished. The state object will have the
	 * following properties:
	 *
	 * - routes       An array of routes that matched, in hierarchical order
	 * - params       An object of URL parameters
	 *
	 * Note: This operation may finish synchronously if no routes have an
	 * asynchronous getChildRoutes method.
	 */
	function matchRoutes(routes, location, callback) {
	  var remainingPathname = arguments.length <= 3 || arguments[3] === undefined ? location.pathname : arguments[3];
	  var paramNames = arguments.length <= 4 || arguments[4] === undefined ? [] : arguments[4];
	  var paramValues = arguments.length <= 5 || arguments[5] === undefined ? [] : arguments[5];
	  return (function () {
	    _AsyncUtils.loopAsync(routes.length, function (index, next, done) {
	      matchRouteDeep(routes[index], location, remainingPathname, paramNames, paramValues, function (error, match) {
	        if (error || match) {
	          done(error, match);
	        } else {
	          next();
	        }
	      });
	    }, callback);
	  })();
	}

	exports['default'] = matchRoutes;
	module.exports = exports['default'];

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	var _historyLibUseQueries = __webpack_require__(11);

	var _historyLibUseQueries2 = _interopRequireDefault(_historyLibUseQueries);

	var _createTransitionManager = __webpack_require__(14);

	var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);

	var _routerWarning = __webpack_require__(1);

	var _routerWarning2 = _interopRequireDefault(_routerWarning);

	/**
	 * Returns a new createHistory function that may be used to create
	 * history objects that know about routing.
	 *
	 * Enhances history objects with the following methods:
	 *
	 * - listen((error, nextState) => {})
	 * - listenBeforeLeavingRoute(route, (nextLocation) => {})
	 * - match(location, (error, redirectLocation, nextState) => {})
	 * - isActive(pathname, query, indexOnly=false)
	 */
	function useRoutes(createHistory) {
	   false ? _routerWarning2['default'](false, '`useRoutes` is deprecated. Please use `createTransitionManager` instead.') : undefined;

	  return function () {
	    var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	    var routes = _ref.routes;

	    var options = _objectWithoutProperties(_ref, ['routes']);

	    var history = _historyLibUseQueries2['default'](createHistory)(options);
	    var transitionManager = _createTransitionManager2['default'](history, routes);
	    return _extends({}, history, transitionManager);
	  };
	}

	exports['default'] = useRoutes;
	module.exports = exports['default'];

/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	var pSlice = Array.prototype.slice;
	var objectKeys = __webpack_require__(51);
	var isArguments = __webpack_require__(50);

	var deepEqual = module.exports = function (actual, expected, opts) {
	  if (!opts) opts = {};
	  // 7.1. All identical values are equivalent, as determined by ===.
	  if (actual === expected) {
	    return true;

	  } else if (actual instanceof Date && expected instanceof Date) {
	    return actual.getTime() === expected.getTime();

	  // 7.3. Other pairs that do not both pass typeof value == 'object',
	  // equivalence is determined by ==.
	  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {
	    return opts.strict ? actual === expected : actual == expected;

	  // 7.4. For all other Object pairs, including Array objects, equivalence is
	  // determined by having the same number of owned properties (as verified
	  // with Object.prototype.hasOwnProperty.call), the same set of keys
	  // (although not necessarily the same order), equivalent values for every
	  // corresponding key, and an identical 'prototype' property. Note: this
	  // accounts for both named and indexed properties on Arrays.
	  } else {
	    return objEquiv(actual, expected, opts);
	  }
	}

	function isUndefinedOrNull(value) {
	  return value === null || value === undefined;
	}

	function isBuffer (x) {
	  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;
	  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
	    return false;
	  }
	  if (x.length > 0 && typeof x[0] !== 'number') return false;
	  return true;
	}

	function objEquiv(a, b, opts) {
	  var i, key;
	  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))
	    return false;
	  // an identical 'prototype' property.
	  if (a.prototype !== b.prototype) return false;
	  //~~~I've managed to break Object.keys through screwy arguments passing.
	  //   Converting to array solves the problem.
	  if (isArguments(a)) {
	    if (!isArguments(b)) {
	      return false;
	    }
	    a = pSlice.call(a);
	    b = pSlice.call(b);
	    return deepEqual(a, b, opts);
	  }
	  if (isBuffer(a)) {
	    if (!isBuffer(b)) {
	      return false;
	    }
	    if (a.length !== b.length) return false;
	    for (i = 0; i < a.length; i++) {
	      if (a[i] !== b[i]) return false;
	    }
	    return true;
	  }
	  try {
	    var ka = objectKeys(a),
	        kb = objectKeys(b);
	  } catch (e) {//happens when one is a string literal and the other isn't
	    return false;
	  }
	  // having the same number of owned properties (keys incorporates
	  // hasOwnProperty)
	  if (ka.length != kb.length)
	    return false;
	  //the same set of keys (although not necessarily the same order),
	  ka.sort();
	  kb.sort();
	  //~~~cheap key test
	  for (i = ka.length - 1; i >= 0; i--) {
	    if (ka[i] != kb[i])
	      return false;
	  }
	  //equivalent values for every corresponding key, and
	  //~~~possibly expensive deep test
	  for (i = ka.length - 1; i >= 0; i--) {
	    key = ka[i];
	    if (!deepEqual(a[key], b[key], opts)) return false;
	  }
	  return typeof a === typeof b;
	}


/***/ },
/* 50 */
/***/ function(module, exports) {

	var supportsArgumentsClass = (function(){
	  return Object.prototype.toString.call(arguments)
	})() == '[object Arguments]';

	exports = module.exports = supportsArgumentsClass ? supported : unsupported;

	exports.supported = supported;
	function supported(object) {
	  return Object.prototype.toString.call(object) == '[object Arguments]';
	};

	exports.unsupported = unsupported;
	function unsupported(object){
	  return object &&
	    typeof object == 'object' &&
	    typeof object.length == 'number' &&
	    Object.prototype.hasOwnProperty.call(object, 'callee') &&
	    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||
	    false;
	};


/***/ },
/* 51 */
/***/ function(module, exports) {

	exports = module.exports = typeof Object.keys === 'function'
	  ? Object.keys : shim;

	exports.shim = shim;
	function shim (obj) {
	  var keys = [];
	  for (var key in obj) keys.push(key);
	  return keys;
	}


/***/ },
/* 52 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;
	exports.loopAsync = loopAsync;

	function loopAsync(turns, work, callback) {
	  var currentTurn = 0;
	  var isDone = false;

	  function done() {
	    isDone = true;
	    callback.apply(this, arguments);
	  }

	  function next() {
	    if (isDone) return;

	    if (currentTurn < turns) {
	      work.call(this, currentTurn++, next, done);
	    } else {
	      done.apply(this, arguments);
	    }
	  }

	  next();
	}

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _invariant = __webpack_require__(3);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _Actions = __webpack_require__(9);

	var _PathUtils = __webpack_require__(7);

	var _ExecutionEnvironment = __webpack_require__(10);

	var _DOMUtils = __webpack_require__(15);

	var _DOMStateStorage = __webpack_require__(25);

	var _createDOMHistory = __webpack_require__(26);

	var _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);

	/**
	 * Creates and returns a history object that uses HTML5's history API
	 * (pushState, replaceState, and the popstate event) to manage history.
	 * This is the recommended method of managing history in browsers because
	 * it provides the cleanest URLs.
	 *
	 * Note: In browsers that do not support the HTML5 history API full
	 * page reloads will be used to preserve URLs.
	 */
	function createBrowserHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	  !_ExecutionEnvironment.canUseDOM ?  false ? _invariant2['default'](false, 'Browser history needs a DOM') : _invariant2['default'](false) : undefined;

	  var forceRefresh = options.forceRefresh;

	  var isSupported = _DOMUtils.supportsHistory();
	  var useRefresh = !isSupported || forceRefresh;

	  function getCurrentLocation(historyState) {
	    historyState = historyState || window.history.state || {};

	    var path = _DOMUtils.getWindowPath();
	    var _historyState = historyState;
	    var key = _historyState.key;

	    var state = undefined;
	    if (key) {
	      state = _DOMStateStorage.readState(key);
	    } else {
	      state = null;
	      key = history.createKey();

	      if (isSupported) window.history.replaceState(_extends({}, historyState, { key: key }), null, path);
	    }

	    var location = _PathUtils.parsePath(path);

	    return history.createLocation(_extends({}, location, { state: state }), undefined, key);
	  }

	  function startPopStateListener(_ref) {
	    var transitionTo = _ref.transitionTo;

	    function popStateListener(event) {
	      if (event.state === undefined) return; // Ignore extraneous popstate events in WebKit.

	      transitionTo(getCurrentLocation(event.state));
	    }

	    _DOMUtils.addEventListener(window, 'popstate', popStateListener);

	    return function () {
	      _DOMUtils.removeEventListener(window, 'popstate', popStateListener);
	    };
	  }

	  function finishTransition(location) {
	    var basename = location.basename;
	    var pathname = location.pathname;
	    var search = location.search;
	    var hash = location.hash;
	    var state = location.state;
	    var action = location.action;
	    var key = location.key;

	    if (action === _Actions.POP) return; // Nothing to do.

	    _DOMStateStorage.saveState(key, state);

	    var path = (basename || '') + pathname + search + hash;
	    var historyState = {
	      key: key
	    };

	    if (action === _Actions.PUSH) {
	      if (useRefresh) {
	        window.location.href = path;
	        return false; // Prevent location update.
	      } else {
	          window.history.pushState(historyState, null, path);
	        }
	    } else {
	      // REPLACE
	      if (useRefresh) {
	        window.location.replace(path);
	        return false; // Prevent location update.
	      } else {
	          window.history.replaceState(historyState, null, path);
	        }
	    }
	  }

	  var history = _createDOMHistory2['default'](_extends({}, options, {
	    getCurrentLocation: getCurrentLocation,
	    finishTransition: finishTransition,
	    saveState: _DOMStateStorage.saveState
	  }));

	  var listenerCount = 0,
	      stopPopStateListener = undefined;

	  function listenBefore(listener) {
	    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);

	    var unlisten = history.listenBefore(listener);

	    return function () {
	      unlisten();

	      if (--listenerCount === 0) stopPopStateListener();
	    };
	  }

	  function listen(listener) {
	    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);

	    var unlisten = history.listen(listener);

	    return function () {
	      unlisten();

	      if (--listenerCount === 0) stopPopStateListener();
	    };
	  }

	  // deprecated
	  function registerTransitionHook(hook) {
	    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);

	    history.registerTransitionHook(hook);
	  }

	  // deprecated
	  function unregisterTransitionHook(hook) {
	    history.unregisterTransitionHook(hook);

	    if (--listenerCount === 0) stopPopStateListener();
	  }

	  return _extends({}, history, {
	    listenBefore: listenBefore,
	    listen: listen,
	    registerTransitionHook: registerTransitionHook,
	    unregisterTransitionHook: unregisterTransitionHook
	  });
	}

	exports['default'] = createBrowserHistory;
	module.exports = exports['default'];

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _warning = __webpack_require__(4);

	var _warning2 = _interopRequireDefault(_warning);

	var _Actions = __webpack_require__(9);

	var _PathUtils = __webpack_require__(7);

	function createLocation() {
	  var location = arguments.length <= 0 || arguments[0] === undefined ? '/' : arguments[0];
	  var action = arguments.length <= 1 || arguments[1] === undefined ? _Actions.POP : arguments[1];
	  var key = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];

	  var _fourthArg = arguments.length <= 3 || arguments[3] === undefined ? null : arguments[3];

	  if (typeof location === 'string') location = _PathUtils.parsePath(location);

	  if (typeof action === 'object') {
	     false ? _warning2['default'](false, 'The state (2nd) argument to createLocation is deprecated; use a ' + 'location descriptor instead') : undefined;

	    location = _extends({}, location, { state: action });

	    action = key || _Actions.POP;
	    key = _fourthArg;
	  }

	  var pathname = location.pathname || '/';
	  var search = location.search || '';
	  var hash = location.hash || '';
	  var state = location.state || null;

	  return {
	    pathname: pathname,
	    search: search,
	    hash: hash,
	    state: state,
	    action: action,
	    key: key
	  };
	}

	exports['default'] = createLocation;
	module.exports = exports['default'];

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _warning = __webpack_require__(4);

	var _warning2 = _interopRequireDefault(_warning);

	var _invariant = __webpack_require__(3);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _PathUtils = __webpack_require__(7);

	var _Actions = __webpack_require__(9);

	var _createHistory = __webpack_require__(28);

	var _createHistory2 = _interopRequireDefault(_createHistory);

	function createStateStorage(entries) {
	  return entries.filter(function (entry) {
	    return entry.state;
	  }).reduce(function (memo, entry) {
	    memo[entry.key] = entry.state;
	    return memo;
	  }, {});
	}

	function createMemoryHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	  if (Array.isArray(options)) {
	    options = { entries: options };
	  } else if (typeof options === 'string') {
	    options = { entries: [options] };
	  }

	  var history = _createHistory2['default'](_extends({}, options, {
	    getCurrentLocation: getCurrentLocation,
	    finishTransition: finishTransition,
	    saveState: saveState,
	    go: go
	  }));

	  var _options = options;
	  var entries = _options.entries;
	  var current = _options.current;

	  if (typeof entries === 'string') {
	    entries = [entries];
	  } else if (!Array.isArray(entries)) {
	    entries = ['/'];
	  }

	  entries = entries.map(function (entry) {
	    var key = history.createKey();

	    if (typeof entry === 'string') return { pathname: entry, key: key };

	    if (typeof entry === 'object' && entry) return _extends({}, entry, { key: key });

	     true ?  false ? _invariant2['default'](false, 'Unable to create history entry from %s', entry) : _invariant2['default'](false) : undefined;
	  });

	  if (current == null) {
	    current = entries.length - 1;
	  } else {
	    !(current >= 0 && current < entries.length) ?  false ? _invariant2['default'](false, 'Current index must be >= 0 and < %s, was %s', entries.length, current) : _invariant2['default'](false) : undefined;
	  }

	  var storage = createStateStorage(entries);

	  function saveState(key, state) {
	    storage[key] = state;
	  }

	  function readState(key) {
	    return storage[key];
	  }

	  function getCurrentLocation() {
	    var entry = entries[current];
	    var key = entry.key;
	    var basename = entry.basename;
	    var pathname = entry.pathname;
	    var search = entry.search;

	    var path = (basename || '') + pathname + (search || '');

	    var state = undefined;
	    if (key) {
	      state = readState(key);
	    } else {
	      state = null;
	      key = history.createKey();
	      entry.key = key;
	    }

	    var location = _PathUtils.parsePath(path);

	    return history.createLocation(_extends({}, location, { state: state }), undefined, key);
	  }

	  function canGo(n) {
	    var index = current + n;
	    return index >= 0 && index < entries.length;
	  }

	  function go(n) {
	    if (n) {
	      if (!canGo(n)) {
	         false ? _warning2['default'](false, 'Cannot go(%s) there is not enough history', n) : undefined;
	        return;
	      }

	      current += n;

	      var currentLocation = getCurrentLocation();

	      // change action to POP
	      history.transitionTo(_extends({}, currentLocation, { action: _Actions.POP }));
	    }
	  }

	  function finishTransition(location) {
	    switch (location.action) {
	      case _Actions.PUSH:
	        current += 1;

	        // if we are not on the top of stack
	        // remove rest and push new
	        if (current < entries.length) entries.splice(current);

	        entries.push(location);
	        saveState(location.key, location.state);
	        break;
	      case _Actions.REPLACE:
	        entries[current] = location;
	        saveState(location.key, location.state);
	        break;
	    }
	  }

	  return history;
	}

	exports['default'] = createMemoryHistory;
	module.exports = exports['default'];

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var strictUriEncode = __webpack_require__(57);

	exports.extract = function (str) {
		return str.split('?')[1] || '';
	};

	exports.parse = function (str) {
		if (typeof str !== 'string') {
			return {};
		}

		str = str.trim().replace(/^(\?|#|&)/, '');

		if (!str) {
			return {};
		}

		return str.split('&').reduce(function (ret, param) {
			var parts = param.replace(/\+/g, ' ').split('=');
			// Firefox (pre 40) decodes `%3D` to `=`
			// https://github.com/sindresorhus/query-string/pull/37
			var key = parts.shift();
			var val = parts.length > 0 ? parts.join('=') : undefined;

			key = decodeURIComponent(key);

			// missing `=` should be `null`:
			// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters
			val = val === undefined ? null : decodeURIComponent(val);

			if (!ret.hasOwnProperty(key)) {
				ret[key] = val;
			} else if (Array.isArray(ret[key])) {
				ret[key].push(val);
			} else {
				ret[key] = [ret[key], val];
			}

			return ret;
		}, {});
	};

	exports.stringify = function (obj) {
		return obj ? Object.keys(obj).sort().map(function (key) {
			var val = obj[key];

			if (val === undefined) {
				return '';
			}

			if (val === null) {
				return key;
			}

			if (Array.isArray(val)) {
				return val.sort().map(function (val2) {
					return strictUriEncode(key) + '=' + strictUriEncode(val2);
				}).join('&');
			}

			return strictUriEncode(key) + '=' + strictUriEncode(val);
		}).filter(function (x) {
			return x.length > 0;
		}).join('&') : '';
	};


/***/ },
/* 57 */
/***/ function(module, exports) {

	'use strict';
	module.exports = function (str) {
		return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {
			return '%' + c.charCodeAt(0).toString(16).toUpperCase();
		});
	};


/***/ }
/******/ ])
});
;
(function() {
    "use strict";
    var $$utils$$hop = Object.prototype.hasOwnProperty;

    function $$utils$$extend(obj) {
        var sources = Array.prototype.slice.call(arguments, 1),
            i, len, source, key;

        for (i = 0, len = sources.length; i < len; i += 1) {
            source = sources[i];
            if (!source) { continue; }

            for (key in source) {
                if ($$utils$$hop.call(source, key)) {
                    obj[key] = source[key];
                }
            }
        }

        return obj;
    }

    // Purposely using the same implementation as the Intl.js `Intl` polyfill.
    // Copyright 2013 Andy Earnshaw, MIT License

    var $$es5$$realDefineProp = (function () {
        try { return !!Object.defineProperty({}, 'a', {}); }
        catch (e) { return false; }
    })();

    var $$es5$$es3 = !$$es5$$realDefineProp && !Object.prototype.__defineGetter__;

    var $$es5$$defineProperty = $$es5$$realDefineProp ? Object.defineProperty :
            function (obj, name, desc) {

        if ('get' in desc && obj.__defineGetter__) {
            obj.__defineGetter__(name, desc.get);
        } else if (!$$utils$$hop.call(obj, name) || 'value' in desc) {
            obj[name] = desc.value;
        }
    };

    var $$es5$$objCreate = Object.create || function (proto, props) {
        var obj, k;

        function F() {}
        F.prototype = proto;
        obj = new F();

        for (k in props) {
            if ($$utils$$hop.call(props, k)) {
                $$es5$$defineProperty(obj, k, props[k]);
            }
        }

        return obj;
    };
    var $$compiler$$default = $$compiler$$Compiler;

    function $$compiler$$Compiler(locales, formats, pluralFn) {
        this.locales  = locales;
        this.formats  = formats;
        this.pluralFn = pluralFn;
    }

    $$compiler$$Compiler.prototype.compile = function (ast) {
        this.pluralStack        = [];
        this.currentPlural      = null;
        this.pluralNumberFormat = null;

        return this.compileMessage(ast);
    };

    $$compiler$$Compiler.prototype.compileMessage = function (ast) {
        if (!(ast && ast.type === 'messageFormatPattern')) {
            throw new Error('Message AST is not of type: "messageFormatPattern"');
        }

        var elements = ast.elements,
            pattern  = [];

        var i, len, element;

        for (i = 0, len = elements.length; i < len; i += 1) {
            element = elements[i];

            switch (element.type) {
                case 'messageTextElement':
                    pattern.push(this.compileMessageText(element));
                    break;

                case 'argumentElement':
                    pattern.push(this.compileArgument(element));
                    break;

                default:
                    throw new Error('Message element does not have a valid type');
            }
        }

        return pattern;
    };

    $$compiler$$Compiler.prototype.compileMessageText = function (element) {
        // When this `element` is part of plural sub-pattern and its value contains
        // an unescaped '#', use a `PluralOffsetString` helper to properly output
        // the number with the correct offset in the string.
        if (this.currentPlural && /(^|[^\\])#/g.test(element.value)) {
            // Create a cache a NumberFormat instance that can be reused for any
            // PluralOffsetString instance in this message.
            if (!this.pluralNumberFormat) {
                this.pluralNumberFormat = new Intl.NumberFormat(this.locales);
            }

            return new $$compiler$$PluralOffsetString(
                    this.currentPlural.id,
                    this.currentPlural.format.offset,
                    this.pluralNumberFormat,
                    element.value);
        }

        // Unescape the escaped '#'s in the message text.
        return element.value.replace(/\\#/g, '#');
    };

    $$compiler$$Compiler.prototype.compileArgument = function (element) {
        var format = element.format;

        if (!format) {
            return new $$compiler$$StringFormat(element.id);
        }

        var formats  = this.formats,
            locales  = this.locales,
            pluralFn = this.pluralFn,
            options;

        switch (format.type) {
            case 'numberFormat':
                options = formats.number[format.style];
                return {
                    id    : element.id,
                    format: new Intl.NumberFormat(locales, options).format
                };

            case 'dateFormat':
                options = formats.date[format.style];
                return {
                    id    : element.id,
                    format: new Intl.DateTimeFormat(locales, options).format
                };

            case 'timeFormat':
                options = formats.time[format.style];
                return {
                    id    : element.id,
                    format: new Intl.DateTimeFormat(locales, options).format
                };

            case 'pluralFormat':
                options = this.compileOptions(element);
                return new $$compiler$$PluralFormat(
                    element.id, format.ordinal, format.offset, options, pluralFn
                );

            case 'selectFormat':
                options = this.compileOptions(element);
                return new $$compiler$$SelectFormat(element.id, options);

            default:
                throw new Error('Message element does not have a valid format type');
        }
    };

    $$compiler$$Compiler.prototype.compileOptions = function (element) {
        var format      = element.format,
            options     = format.options,
            optionsHash = {};

        // Save the current plural element, if any, then set it to a new value when
        // compiling the options sub-patterns. This conforms the spec's algorithm
        // for handling `"#"` syntax in message text.
        this.pluralStack.push(this.currentPlural);
        this.currentPlural = format.type === 'pluralFormat' ? element : null;

        var i, len, option;

        for (i = 0, len = options.length; i < len; i += 1) {
            option = options[i];

            // Compile the sub-pattern and save it under the options's selector.
            optionsHash[option.selector] = this.compileMessage(option.value);
        }

        // Pop the plural stack to put back the original current plural value.
        this.currentPlural = this.pluralStack.pop();

        return optionsHash;
    };

    // -- Compiler Helper Classes --------------------------------------------------

    function $$compiler$$StringFormat(id) {
        this.id = id;
    }

    $$compiler$$StringFormat.prototype.format = function (value) {
        if (!value) {
            return '';
        }

        return typeof value === 'string' ? value : String(value);
    };

    function $$compiler$$PluralFormat(id, useOrdinal, offset, options, pluralFn) {
        this.id         = id;
        this.useOrdinal = useOrdinal;
        this.offset     = offset;
        this.options    = options;
        this.pluralFn   = pluralFn;
    }

    $$compiler$$PluralFormat.prototype.getOption = function (value) {
        var options = this.options;

        var option = options['=' + value] ||
                options[this.pluralFn(value - this.offset, this.useOrdinal)];

        return option || options.other;
    };

    function $$compiler$$PluralOffsetString(id, offset, numberFormat, string) {
        this.id           = id;
        this.offset       = offset;
        this.numberFormat = numberFormat;
        this.string       = string;
    }

    $$compiler$$PluralOffsetString.prototype.format = function (value) {
        var number = this.numberFormat.format(value - this.offset);

        return this.string
                .replace(/(^|[^\\])#/g, '$1' + number)
                .replace(/\\#/g, '#');
    };

    function $$compiler$$SelectFormat(id, options) {
        this.id      = id;
        this.options = options;
    }

    $$compiler$$SelectFormat.prototype.getOption = function (value) {
        var options = this.options;
        return options[value] || options.other;
    };

    var intl$messageformat$parser$$default = (function() {
      /*
       * Generated by PEG.js 0.8.0.
       *
       * http://pegjs.majda.cz/
       */

      function peg$subclass(child, parent) {
        function ctor() { this.constructor = child; }
        ctor.prototype = parent.prototype;
        child.prototype = new ctor();
      }

      function SyntaxError(message, expected, found, offset, line, column) {
        this.message  = message;
        this.expected = expected;
        this.found    = found;
        this.offset   = offset;
        this.line     = line;
        this.column   = column;

        this.name     = "SyntaxError";
      }

      peg$subclass(SyntaxError, Error);

      function parse(input) {
        var options = arguments.length > 1 ? arguments[1] : {},

            peg$FAILED = {},

            peg$startRuleFunctions = { start: peg$parsestart },
            peg$startRuleFunction  = peg$parsestart,

            peg$c0 = [],
            peg$c1 = function(elements) {
                    return {
                        type    : 'messageFormatPattern',
                        elements: elements
                    };
                },
            peg$c2 = peg$FAILED,
            peg$c3 = function(text) {
                    var string = '',
                        i, j, outerLen, inner, innerLen;

                    for (i = 0, outerLen = text.length; i < outerLen; i += 1) {
                        inner = text[i];

                        for (j = 0, innerLen = inner.length; j < innerLen; j += 1) {
                            string += inner[j];
                        }
                    }

                    return string;
                },
            peg$c4 = function(messageText) {
                    return {
                        type : 'messageTextElement',
                        value: messageText
                    };
                },
            peg$c5 = /^[^ \t\n\r,.+={}#]/,
            peg$c6 = { type: "class", value: "[^ \\t\\n\\r,.+={}#]", description: "[^ \\t\\n\\r,.+={}#]" },
            peg$c7 = "{",
            peg$c8 = { type: "literal", value: "{", description: "\"{\"" },
            peg$c9 = null,
            peg$c10 = ",",
            peg$c11 = { type: "literal", value: ",", description: "\",\"" },
            peg$c12 = "}",
            peg$c13 = { type: "literal", value: "}", description: "\"}\"" },
            peg$c14 = function(id, format) {
                    return {
                        type  : 'argumentElement',
                        id    : id,
                        format: format && format[2]
                    };
                },
            peg$c15 = "number",
            peg$c16 = { type: "literal", value: "number", description: "\"number\"" },
            peg$c17 = "date",
            peg$c18 = { type: "literal", value: "date", description: "\"date\"" },
            peg$c19 = "time",
            peg$c20 = { type: "literal", value: "time", description: "\"time\"" },
            peg$c21 = function(type, style) {
                    return {
                        type : type + 'Format',
                        style: style && style[2]
                    };
                },
            peg$c22 = "plural",
            peg$c23 = { type: "literal", value: "plural", description: "\"plural\"" },
            peg$c24 = function(pluralStyle) {
                    return {
                        type   : pluralStyle.type,
                        ordinal: false,
                        offset : pluralStyle.offset || 0,
                        options: pluralStyle.options
                    };
                },
            peg$c25 = "selectordinal",
            peg$c26 = { type: "literal", value: "selectordinal", description: "\"selectordinal\"" },
            peg$c27 = function(pluralStyle) {
                    return {
                        type   : pluralStyle.type,
                        ordinal: true,
                        offset : pluralStyle.offset || 0,
                        options: pluralStyle.options
                    }
                },
            peg$c28 = "select",
            peg$c29 = { type: "literal", value: "select", description: "\"select\"" },
            peg$c30 = function(options) {
                    return {
                        type   : 'selectFormat',
                        options: options
                    };
                },
            peg$c31 = "=",
            peg$c32 = { type: "literal", value: "=", description: "\"=\"" },
            peg$c33 = function(selector, pattern) {
                    return {
                        type    : 'optionalFormatPattern',
                        selector: selector,
                        value   : pattern
                    };
                },
            peg$c34 = "offset:",
            peg$c35 = { type: "literal", value: "offset:", description: "\"offset:\"" },
            peg$c36 = function(number) {
                    return number;
                },
            peg$c37 = function(offset, options) {
                    return {
                        type   : 'pluralFormat',
                        offset : offset,
                        options: options
                    };
                },
            peg$c38 = { type: "other", description: "whitespace" },
            peg$c39 = /^[ \t\n\r]/,
            peg$c40 = { type: "class", value: "[ \\t\\n\\r]", description: "[ \\t\\n\\r]" },
            peg$c41 = { type: "other", description: "optionalWhitespace" },
            peg$c42 = /^[0-9]/,
            peg$c43 = { type: "class", value: "[0-9]", description: "[0-9]" },
            peg$c44 = /^[0-9a-f]/i,
            peg$c45 = { type: "class", value: "[0-9a-f]i", description: "[0-9a-f]i" },
            peg$c46 = "0",
            peg$c47 = { type: "literal", value: "0", description: "\"0\"" },
            peg$c48 = /^[1-9]/,
            peg$c49 = { type: "class", value: "[1-9]", description: "[1-9]" },
            peg$c50 = function(digits) {
                return parseInt(digits, 10);
            },
            peg$c51 = /^[^{}\\\0-\x1F \t\n\r]/,
            peg$c52 = { type: "class", value: "[^{}\\\\\\0-\\x1F \\t\\n\\r]", description: "[^{}\\\\\\0-\\x1F \\t\\n\\r]" },
            peg$c53 = "\\#",
            peg$c54 = { type: "literal", value: "\\#", description: "\"\\\\#\"" },
            peg$c55 = function() { return '\\#'; },
            peg$c56 = "\\{",
            peg$c57 = { type: "literal", value: "\\{", description: "\"\\\\{\"" },
            peg$c58 = function() { return '\u007B'; },
            peg$c59 = "\\}",
            peg$c60 = { type: "literal", value: "\\}", description: "\"\\\\}\"" },
            peg$c61 = function() { return '\u007D'; },
            peg$c62 = "\\u",
            peg$c63 = { type: "literal", value: "\\u", description: "\"\\\\u\"" },
            peg$c64 = function(digits) {
                    return String.fromCharCode(parseInt(digits, 16));
                },
            peg$c65 = function(chars) { return chars.join(''); },

            peg$currPos          = 0,
            peg$reportedPos      = 0,
            peg$cachedPos        = 0,
            peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },
            peg$maxFailPos       = 0,
            peg$maxFailExpected  = [],
            peg$silentFails      = 0,

            peg$result;

        if ("startRule" in options) {
          if (!(options.startRule in peg$startRuleFunctions)) {
            throw new Error("Can't start parsing from rule \"" + options.startRule + "\".");
          }

          peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
        }

        function text() {
          return input.substring(peg$reportedPos, peg$currPos);
        }

        function offset() {
          return peg$reportedPos;
        }

        function line() {
          return peg$computePosDetails(peg$reportedPos).line;
        }

        function column() {
          return peg$computePosDetails(peg$reportedPos).column;
        }

        function expected(description) {
          throw peg$buildException(
            null,
            [{ type: "other", description: description }],
            peg$reportedPos
          );
        }

        function error(message) {
          throw peg$buildException(message, null, peg$reportedPos);
        }

        function peg$computePosDetails(pos) {
          function advance(details, startPos, endPos) {
            var p, ch;

            for (p = startPos; p < endPos; p++) {
              ch = input.charAt(p);
              if (ch === "\n") {
                if (!details.seenCR) { details.line++; }
                details.column = 1;
                details.seenCR = false;
              } else if (ch === "\r" || ch === "\u2028" || ch === "\u2029") {
                details.line++;
                details.column = 1;
                details.seenCR = true;
              } else {
                details.column++;
                details.seenCR = false;
              }
            }
          }

          if (peg$cachedPos !== pos) {
            if (peg$cachedPos > pos) {
              peg$cachedPos = 0;
              peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };
            }
            advance(peg$cachedPosDetails, peg$cachedPos, pos);
            peg$cachedPos = pos;
          }

          return peg$cachedPosDetails;
        }

        function peg$fail(expected) {
          if (peg$currPos < peg$maxFailPos) { return; }

          if (peg$currPos > peg$maxFailPos) {
            peg$maxFailPos = peg$currPos;
            peg$maxFailExpected = [];
          }

          peg$maxFailExpected.push(expected);
        }

        function peg$buildException(message, expected, pos) {
          function cleanupExpected(expected) {
            var i = 1;

            expected.sort(function(a, b) {
              if (a.description < b.description) {
                return -1;
              } else if (a.description > b.description) {
                return 1;
              } else {
                return 0;
              }
            });

            while (i < expected.length) {
              if (expected[i - 1] === expected[i]) {
                expected.splice(i, 1);
              } else {
                i++;
              }
            }
          }

          function buildMessage(expected, found) {
            function stringEscape(s) {
              function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }

              return s
                .replace(/\\/g,   '\\\\')
                .replace(/"/g,    '\\"')
                .replace(/\x08/g, '\\b')
                .replace(/\t/g,   '\\t')
                .replace(/\n/g,   '\\n')
                .replace(/\f/g,   '\\f')
                .replace(/\r/g,   '\\r')
                .replace(/[\x00-\x07\x0B\x0E\x0F]/g, function(ch) { return '\\x0' + hex(ch); })
                .replace(/[\x10-\x1F\x80-\xFF]/g,    function(ch) { return '\\x'  + hex(ch); })
                .replace(/[\u0180-\u0FFF]/g,         function(ch) { return '\\u0' + hex(ch); })
                .replace(/[\u1080-\uFFFF]/g,         function(ch) { return '\\u'  + hex(ch); });
            }

            var expectedDescs = new Array(expected.length),
                expectedDesc, foundDesc, i;

            for (i = 0; i < expected.length; i++) {
              expectedDescs[i] = expected[i].description;
            }

            expectedDesc = expected.length > 1
              ? expectedDescs.slice(0, -1).join(", ")
                  + " or "
                  + expectedDescs[expected.length - 1]
              : expectedDescs[0];

            foundDesc = found ? "\"" + stringEscape(found) + "\"" : "end of input";

            return "Expected " + expectedDesc + " but " + foundDesc + " found.";
          }

          var posDetails = peg$computePosDetails(pos),
              found      = pos < input.length ? input.charAt(pos) : null;

          if (expected !== null) {
            cleanupExpected(expected);
          }

          return new SyntaxError(
            message !== null ? message : buildMessage(expected, found),
            expected,
            found,
            pos,
            posDetails.line,
            posDetails.column
          );
        }

        function peg$parsestart() {
          var s0;

          s0 = peg$parsemessageFormatPattern();

          return s0;
        }

        function peg$parsemessageFormatPattern() {
          var s0, s1, s2;

          s0 = peg$currPos;
          s1 = [];
          s2 = peg$parsemessageFormatElement();
          while (s2 !== peg$FAILED) {
            s1.push(s2);
            s2 = peg$parsemessageFormatElement();
          }
          if (s1 !== peg$FAILED) {
            peg$reportedPos = s0;
            s1 = peg$c1(s1);
          }
          s0 = s1;

          return s0;
        }

        function peg$parsemessageFormatElement() {
          var s0;

          s0 = peg$parsemessageTextElement();
          if (s0 === peg$FAILED) {
            s0 = peg$parseargumentElement();
          }

          return s0;
        }

        function peg$parsemessageText() {
          var s0, s1, s2, s3, s4, s5;

          s0 = peg$currPos;
          s1 = [];
          s2 = peg$currPos;
          s3 = peg$parse_();
          if (s3 !== peg$FAILED) {
            s4 = peg$parsechars();
            if (s4 !== peg$FAILED) {
              s5 = peg$parse_();
              if (s5 !== peg$FAILED) {
                s3 = [s3, s4, s5];
                s2 = s3;
              } else {
                peg$currPos = s2;
                s2 = peg$c2;
              }
            } else {
              peg$currPos = s2;
              s2 = peg$c2;
            }
          } else {
            peg$currPos = s2;
            s2 = peg$c2;
          }
          if (s2 !== peg$FAILED) {
            while (s2 !== peg$FAILED) {
              s1.push(s2);
              s2 = peg$currPos;
              s3 = peg$parse_();
              if (s3 !== peg$FAILED) {
                s4 = peg$parsechars();
                if (s4 !== peg$FAILED) {
                  s5 = peg$parse_();
                  if (s5 !== peg$FAILED) {
                    s3 = [s3, s4, s5];
                    s2 = s3;
                  } else {
                    peg$currPos = s2;
                    s2 = peg$c2;
                  }
                } else {
                  peg$currPos = s2;
                  s2 = peg$c2;
                }
              } else {
                peg$currPos = s2;
                s2 = peg$c2;
              }
            }
          } else {
            s1 = peg$c2;
          }
          if (s1 !== peg$FAILED) {
            peg$reportedPos = s0;
            s1 = peg$c3(s1);
          }
          s0 = s1;
          if (s0 === peg$FAILED) {
            s0 = peg$currPos;
            s1 = peg$parsews();
            if (s1 !== peg$FAILED) {
              s1 = input.substring(s0, peg$currPos);
            }
            s0 = s1;
          }

          return s0;
        }

        function peg$parsemessageTextElement() {
          var s0, s1;

          s0 = peg$currPos;
          s1 = peg$parsemessageText();
          if (s1 !== peg$FAILED) {
            peg$reportedPos = s0;
            s1 = peg$c4(s1);
          }
          s0 = s1;

          return s0;
        }

        function peg$parseargument() {
          var s0, s1, s2;

          s0 = peg$parsenumber();
          if (s0 === peg$FAILED) {
            s0 = peg$currPos;
            s1 = [];
            if (peg$c5.test(input.charAt(peg$currPos))) {
              s2 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s2 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c6); }
            }
            if (s2 !== peg$FAILED) {
              while (s2 !== peg$FAILED) {
                s1.push(s2);
                if (peg$c5.test(input.charAt(peg$currPos))) {
                  s2 = input.charAt(peg$currPos);
                  peg$currPos++;
                } else {
                  s2 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c6); }
                }
              }
            } else {
              s1 = peg$c2;
            }
            if (s1 !== peg$FAILED) {
              s1 = input.substring(s0, peg$currPos);
            }
            s0 = s1;
          }

          return s0;
        }

        function peg$parseargumentElement() {
          var s0, s1, s2, s3, s4, s5, s6, s7, s8;

          s0 = peg$currPos;
          if (input.charCodeAt(peg$currPos) === 123) {
            s1 = peg$c7;
            peg$currPos++;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c8); }
          }
          if (s1 !== peg$FAILED) {
            s2 = peg$parse_();
            if (s2 !== peg$FAILED) {
              s3 = peg$parseargument();
              if (s3 !== peg$FAILED) {
                s4 = peg$parse_();
                if (s4 !== peg$FAILED) {
                  s5 = peg$currPos;
                  if (input.charCodeAt(peg$currPos) === 44) {
                    s6 = peg$c10;
                    peg$currPos++;
                  } else {
                    s6 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c11); }
                  }
                  if (s6 !== peg$FAILED) {
                    s7 = peg$parse_();
                    if (s7 !== peg$FAILED) {
                      s8 = peg$parseelementFormat();
                      if (s8 !== peg$FAILED) {
                        s6 = [s6, s7, s8];
                        s5 = s6;
                      } else {
                        peg$currPos = s5;
                        s5 = peg$c2;
                      }
                    } else {
                      peg$currPos = s5;
                      s5 = peg$c2;
                    }
                  } else {
                    peg$currPos = s5;
                    s5 = peg$c2;
                  }
                  if (s5 === peg$FAILED) {
                    s5 = peg$c9;
                  }
                  if (s5 !== peg$FAILED) {
                    s6 = peg$parse_();
                    if (s6 !== peg$FAILED) {
                      if (input.charCodeAt(peg$currPos) === 125) {
                        s7 = peg$c12;
                        peg$currPos++;
                      } else {
                        s7 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c13); }
                      }
                      if (s7 !== peg$FAILED) {
                        peg$reportedPos = s0;
                        s1 = peg$c14(s3, s5);
                        s0 = s1;
                      } else {
                        peg$currPos = s0;
                        s0 = peg$c2;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$c2;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$c2;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$c2;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c2;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c2;
          }

          return s0;
        }

        function peg$parseelementFormat() {
          var s0;

          s0 = peg$parsesimpleFormat();
          if (s0 === peg$FAILED) {
            s0 = peg$parsepluralFormat();
            if (s0 === peg$FAILED) {
              s0 = peg$parseselectOrdinalFormat();
              if (s0 === peg$FAILED) {
                s0 = peg$parseselectFormat();
              }
            }
          }

          return s0;
        }

        function peg$parsesimpleFormat() {
          var s0, s1, s2, s3, s4, s5, s6;

          s0 = peg$currPos;
          if (input.substr(peg$currPos, 6) === peg$c15) {
            s1 = peg$c15;
            peg$currPos += 6;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c16); }
          }
          if (s1 === peg$FAILED) {
            if (input.substr(peg$currPos, 4) === peg$c17) {
              s1 = peg$c17;
              peg$currPos += 4;
            } else {
              s1 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c18); }
            }
            if (s1 === peg$FAILED) {
              if (input.substr(peg$currPos, 4) === peg$c19) {
                s1 = peg$c19;
                peg$currPos += 4;
              } else {
                s1 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c20); }
              }
            }
          }
          if (s1 !== peg$FAILED) {
            s2 = peg$parse_();
            if (s2 !== peg$FAILED) {
              s3 = peg$currPos;
              if (input.charCodeAt(peg$currPos) === 44) {
                s4 = peg$c10;
                peg$currPos++;
              } else {
                s4 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c11); }
              }
              if (s4 !== peg$FAILED) {
                s5 = peg$parse_();
                if (s5 !== peg$FAILED) {
                  s6 = peg$parsechars();
                  if (s6 !== peg$FAILED) {
                    s4 = [s4, s5, s6];
                    s3 = s4;
                  } else {
                    peg$currPos = s3;
                    s3 = peg$c2;
                  }
                } else {
                  peg$currPos = s3;
                  s3 = peg$c2;
                }
              } else {
                peg$currPos = s3;
                s3 = peg$c2;
              }
              if (s3 === peg$FAILED) {
                s3 = peg$c9;
              }
              if (s3 !== peg$FAILED) {
                peg$reportedPos = s0;
                s1 = peg$c21(s1, s3);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$c2;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c2;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c2;
          }

          return s0;
        }

        function peg$parsepluralFormat() {
          var s0, s1, s2, s3, s4, s5;

          s0 = peg$currPos;
          if (input.substr(peg$currPos, 6) === peg$c22) {
            s1 = peg$c22;
            peg$currPos += 6;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c23); }
          }
          if (s1 !== peg$FAILED) {
            s2 = peg$parse_();
            if (s2 !== peg$FAILED) {
              if (input.charCodeAt(peg$currPos) === 44) {
                s3 = peg$c10;
                peg$currPos++;
              } else {
                s3 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c11); }
              }
              if (s3 !== peg$FAILED) {
                s4 = peg$parse_();
                if (s4 !== peg$FAILED) {
                  s5 = peg$parsepluralStyle();
                  if (s5 !== peg$FAILED) {
                    peg$reportedPos = s0;
                    s1 = peg$c24(s5);
                    s0 = s1;
                  } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$c2;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$c2;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c2;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c2;
          }

          return s0;
        }

        function peg$parseselectOrdinalFormat() {
          var s0, s1, s2, s3, s4, s5;

          s0 = peg$currPos;
          if (input.substr(peg$currPos, 13) === peg$c25) {
            s1 = peg$c25;
            peg$currPos += 13;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c26); }
          }
          if (s1 !== peg$FAILED) {
            s2 = peg$parse_();
            if (s2 !== peg$FAILED) {
              if (input.charCodeAt(peg$currPos) === 44) {
                s3 = peg$c10;
                peg$currPos++;
              } else {
                s3 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c11); }
              }
              if (s3 !== peg$FAILED) {
                s4 = peg$parse_();
                if (s4 !== peg$FAILED) {
                  s5 = peg$parsepluralStyle();
                  if (s5 !== peg$FAILED) {
                    peg$reportedPos = s0;
                    s1 = peg$c27(s5);
                    s0 = s1;
                  } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$c2;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$c2;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c2;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c2;
          }

          return s0;
        }

        function peg$parseselectFormat() {
          var s0, s1, s2, s3, s4, s5, s6;

          s0 = peg$currPos;
          if (input.substr(peg$currPos, 6) === peg$c28) {
            s1 = peg$c28;
            peg$currPos += 6;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c29); }
          }
          if (s1 !== peg$FAILED) {
            s2 = peg$parse_();
            if (s2 !== peg$FAILED) {
              if (input.charCodeAt(peg$currPos) === 44) {
                s3 = peg$c10;
                peg$currPos++;
              } else {
                s3 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c11); }
              }
              if (s3 !== peg$FAILED) {
                s4 = peg$parse_();
                if (s4 !== peg$FAILED) {
                  s5 = [];
                  s6 = peg$parseoptionalFormatPattern();
                  if (s6 !== peg$FAILED) {
                    while (s6 !== peg$FAILED) {
                      s5.push(s6);
                      s6 = peg$parseoptionalFormatPattern();
                    }
                  } else {
                    s5 = peg$c2;
                  }
                  if (s5 !== peg$FAILED) {
                    peg$reportedPos = s0;
                    s1 = peg$c30(s5);
                    s0 = s1;
                  } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$c2;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$c2;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c2;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c2;
          }

          return s0;
        }

        function peg$parseselector() {
          var s0, s1, s2, s3;

          s0 = peg$currPos;
          s1 = peg$currPos;
          if (input.charCodeAt(peg$currPos) === 61) {
            s2 = peg$c31;
            peg$currPos++;
          } else {
            s2 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c32); }
          }
          if (s2 !== peg$FAILED) {
            s3 = peg$parsenumber();
            if (s3 !== peg$FAILED) {
              s2 = [s2, s3];
              s1 = s2;
            } else {
              peg$currPos = s1;
              s1 = peg$c2;
            }
          } else {
            peg$currPos = s1;
            s1 = peg$c2;
          }
          if (s1 !== peg$FAILED) {
            s1 = input.substring(s0, peg$currPos);
          }
          s0 = s1;
          if (s0 === peg$FAILED) {
            s0 = peg$parsechars();
          }

          return s0;
        }

        function peg$parseoptionalFormatPattern() {
          var s0, s1, s2, s3, s4, s5, s6, s7, s8;

          s0 = peg$currPos;
          s1 = peg$parse_();
          if (s1 !== peg$FAILED) {
            s2 = peg$parseselector();
            if (s2 !== peg$FAILED) {
              s3 = peg$parse_();
              if (s3 !== peg$FAILED) {
                if (input.charCodeAt(peg$currPos) === 123) {
                  s4 = peg$c7;
                  peg$currPos++;
                } else {
                  s4 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c8); }
                }
                if (s4 !== peg$FAILED) {
                  s5 = peg$parse_();
                  if (s5 !== peg$FAILED) {
                    s6 = peg$parsemessageFormatPattern();
                    if (s6 !== peg$FAILED) {
                      s7 = peg$parse_();
                      if (s7 !== peg$FAILED) {
                        if (input.charCodeAt(peg$currPos) === 125) {
                          s8 = peg$c12;
                          peg$currPos++;
                        } else {
                          s8 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c13); }
                        }
                        if (s8 !== peg$FAILED) {
                          peg$reportedPos = s0;
                          s1 = peg$c33(s2, s6);
                          s0 = s1;
                        } else {
                          peg$currPos = s0;
                          s0 = peg$c2;
                        }
                      } else {
                        peg$currPos = s0;
                        s0 = peg$c2;
                      }
                    } else {
                      peg$currPos = s0;
                      s0 = peg$c2;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                  }
                } else {
                  peg$currPos = s0;
                  s0 = peg$c2;
                }
              } else {
                peg$currPos = s0;
                s0 = peg$c2;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c2;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c2;
          }

          return s0;
        }

        function peg$parseoffset() {
          var s0, s1, s2, s3;

          s0 = peg$currPos;
          if (input.substr(peg$currPos, 7) === peg$c34) {
            s1 = peg$c34;
            peg$currPos += 7;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c35); }
          }
          if (s1 !== peg$FAILED) {
            s2 = peg$parse_();
            if (s2 !== peg$FAILED) {
              s3 = peg$parsenumber();
              if (s3 !== peg$FAILED) {
                peg$reportedPos = s0;
                s1 = peg$c36(s3);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$c2;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c2;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c2;
          }

          return s0;
        }

        function peg$parsepluralStyle() {
          var s0, s1, s2, s3, s4;

          s0 = peg$currPos;
          s1 = peg$parseoffset();
          if (s1 === peg$FAILED) {
            s1 = peg$c9;
          }
          if (s1 !== peg$FAILED) {
            s2 = peg$parse_();
            if (s2 !== peg$FAILED) {
              s3 = [];
              s4 = peg$parseoptionalFormatPattern();
              if (s4 !== peg$FAILED) {
                while (s4 !== peg$FAILED) {
                  s3.push(s4);
                  s4 = peg$parseoptionalFormatPattern();
                }
              } else {
                s3 = peg$c2;
              }
              if (s3 !== peg$FAILED) {
                peg$reportedPos = s0;
                s1 = peg$c37(s1, s3);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$c2;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$c2;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$c2;
          }

          return s0;
        }

        function peg$parsews() {
          var s0, s1;

          peg$silentFails++;
          s0 = [];
          if (peg$c39.test(input.charAt(peg$currPos))) {
            s1 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c40); }
          }
          if (s1 !== peg$FAILED) {
            while (s1 !== peg$FAILED) {
              s0.push(s1);
              if (peg$c39.test(input.charAt(peg$currPos))) {
                s1 = input.charAt(peg$currPos);
                peg$currPos++;
              } else {
                s1 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c40); }
              }
            }
          } else {
            s0 = peg$c2;
          }
          peg$silentFails--;
          if (s0 === peg$FAILED) {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c38); }
          }

          return s0;
        }

        function peg$parse_() {
          var s0, s1, s2;

          peg$silentFails++;
          s0 = peg$currPos;
          s1 = [];
          s2 = peg$parsews();
          while (s2 !== peg$FAILED) {
            s1.push(s2);
            s2 = peg$parsews();
          }
          if (s1 !== peg$FAILED) {
            s1 = input.substring(s0, peg$currPos);
          }
          s0 = s1;
          peg$silentFails--;
          if (s0 === peg$FAILED) {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c41); }
          }

          return s0;
        }

        function peg$parsedigit() {
          var s0;

          if (peg$c42.test(input.charAt(peg$currPos))) {
            s0 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c43); }
          }

          return s0;
        }

        function peg$parsehexDigit() {
          var s0;

          if (peg$c44.test(input.charAt(peg$currPos))) {
            s0 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c45); }
          }

          return s0;
        }

        function peg$parsenumber() {
          var s0, s1, s2, s3, s4, s5;

          s0 = peg$currPos;
          if (input.charCodeAt(peg$currPos) === 48) {
            s1 = peg$c46;
            peg$currPos++;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c47); }
          }
          if (s1 === peg$FAILED) {
            s1 = peg$currPos;
            s2 = peg$currPos;
            if (peg$c48.test(input.charAt(peg$currPos))) {
              s3 = input.charAt(peg$currPos);
              peg$currPos++;
            } else {
              s3 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c49); }
            }
            if (s3 !== peg$FAILED) {
              s4 = [];
              s5 = peg$parsedigit();
              while (s5 !== peg$FAILED) {
                s4.push(s5);
                s5 = peg$parsedigit();
              }
              if (s4 !== peg$FAILED) {
                s3 = [s3, s4];
                s2 = s3;
              } else {
                peg$currPos = s2;
                s2 = peg$c2;
              }
            } else {
              peg$currPos = s2;
              s2 = peg$c2;
            }
            if (s2 !== peg$FAILED) {
              s2 = input.substring(s1, peg$currPos);
            }
            s1 = s2;
          }
          if (s1 !== peg$FAILED) {
            peg$reportedPos = s0;
            s1 = peg$c50(s1);
          }
          s0 = s1;

          return s0;
        }

        function peg$parsechar() {
          var s0, s1, s2, s3, s4, s5, s6, s7;

          if (peg$c51.test(input.charAt(peg$currPos))) {
            s0 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c52); }
          }
          if (s0 === peg$FAILED) {
            s0 = peg$currPos;
            if (input.substr(peg$currPos, 2) === peg$c53) {
              s1 = peg$c53;
              peg$currPos += 2;
            } else {
              s1 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c54); }
            }
            if (s1 !== peg$FAILED) {
              peg$reportedPos = s0;
              s1 = peg$c55();
            }
            s0 = s1;
            if (s0 === peg$FAILED) {
              s0 = peg$currPos;
              if (input.substr(peg$currPos, 2) === peg$c56) {
                s1 = peg$c56;
                peg$currPos += 2;
              } else {
                s1 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c57); }
              }
              if (s1 !== peg$FAILED) {
                peg$reportedPos = s0;
                s1 = peg$c58();
              }
              s0 = s1;
              if (s0 === peg$FAILED) {
                s0 = peg$currPos;
                if (input.substr(peg$currPos, 2) === peg$c59) {
                  s1 = peg$c59;
                  peg$currPos += 2;
                } else {
                  s1 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c60); }
                }
                if (s1 !== peg$FAILED) {
                  peg$reportedPos = s0;
                  s1 = peg$c61();
                }
                s0 = s1;
                if (s0 === peg$FAILED) {
                  s0 = peg$currPos;
                  if (input.substr(peg$currPos, 2) === peg$c62) {
                    s1 = peg$c62;
                    peg$currPos += 2;
                  } else {
                    s1 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c63); }
                  }
                  if (s1 !== peg$FAILED) {
                    s2 = peg$currPos;
                    s3 = peg$currPos;
                    s4 = peg$parsehexDigit();
                    if (s4 !== peg$FAILED) {
                      s5 = peg$parsehexDigit();
                      if (s5 !== peg$FAILED) {
                        s6 = peg$parsehexDigit();
                        if (s6 !== peg$FAILED) {
                          s7 = peg$parsehexDigit();
                          if (s7 !== peg$FAILED) {
                            s4 = [s4, s5, s6, s7];
                            s3 = s4;
                          } else {
                            peg$currPos = s3;
                            s3 = peg$c2;
                          }
                        } else {
                          peg$currPos = s3;
                          s3 = peg$c2;
                        }
                      } else {
                        peg$currPos = s3;
                        s3 = peg$c2;
                      }
                    } else {
                      peg$currPos = s3;
                      s3 = peg$c2;
                    }
                    if (s3 !== peg$FAILED) {
                      s3 = input.substring(s2, peg$currPos);
                    }
                    s2 = s3;
                    if (s2 !== peg$FAILED) {
                      peg$reportedPos = s0;
                      s1 = peg$c64(s2);
                      s0 = s1;
                    } else {
                      peg$currPos = s0;
                      s0 = peg$c2;
                    }
                  } else {
                    peg$currPos = s0;
                    s0 = peg$c2;
                  }
                }
              }
            }
          }

          return s0;
        }

        function peg$parsechars() {
          var s0, s1, s2;

          s0 = peg$currPos;
          s1 = [];
          s2 = peg$parsechar();
          if (s2 !== peg$FAILED) {
            while (s2 !== peg$FAILED) {
              s1.push(s2);
              s2 = peg$parsechar();
            }
          } else {
            s1 = peg$c2;
          }
          if (s1 !== peg$FAILED) {
            peg$reportedPos = s0;
            s1 = peg$c65(s1);
          }
          s0 = s1;

          return s0;
        }

        peg$result = peg$startRuleFunction();

        if (peg$result !== peg$FAILED && peg$currPos === input.length) {
          return peg$result;
        } else {
          if (peg$result !== peg$FAILED && peg$currPos < input.length) {
            peg$fail({ type: "end", description: "end of input" });
          }

          throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);
        }
      }

      return {
        SyntaxError: SyntaxError,
        parse:       parse
      };
    })();

    var $$core$$default = $$core$$MessageFormat;

    // -- MessageFormat --------------------------------------------------------

    function $$core$$MessageFormat(message, locales, formats) {
        // Parse string messages into an AST.
        var ast = typeof message === 'string' ?
                $$core$$MessageFormat.__parse(message) : message;

        if (!(ast && ast.type === 'messageFormatPattern')) {
            throw new TypeError('A message must be provided as a String or AST.');
        }

        // Creates a new object with the specified `formats` merged with the default
        // formats.
        formats = this._mergeFormats($$core$$MessageFormat.formats, formats);

        // Defined first because it's used to build the format pattern.
        $$es5$$defineProperty(this, '_locale',  {value: this._resolveLocale(locales)});

        // Compile the `ast` to a pattern that is highly optimized for repeated
        // `format()` invocations. **Note:** This passes the `locales` set provided
        // to the constructor instead of just the resolved locale.
        var pluralFn = this._findPluralRuleFunction(this._locale);
        var pattern  = this._compilePattern(ast, locales, formats, pluralFn);

        // "Bind" `format()` method to `this` so it can be passed by reference like
        // the other `Intl` APIs.
        var messageFormat = this;
        this.format = function (values) {
            return messageFormat._format(pattern, values);
        };
    }

    // Default format options used as the prototype of the `formats` provided to the
    // constructor. These are used when constructing the internal Intl.NumberFormat
    // and Intl.DateTimeFormat instances.
    $$es5$$defineProperty($$core$$MessageFormat, 'formats', {
        enumerable: true,

        value: {
            number: {
                'currency': {
                    style: 'currency'
                },

                'percent': {
                    style: 'percent'
                }
            },

            date: {
                'short': {
                    month: 'numeric',
                    day  : 'numeric',
                    year : '2-digit'
                },

                'medium': {
                    month: 'short',
                    day  : 'numeric',
                    year : 'numeric'
                },

                'long': {
                    month: 'long',
                    day  : 'numeric',
                    year : 'numeric'
                },

                'full': {
                    weekday: 'long',
                    month  : 'long',
                    day    : 'numeric',
                    year   : 'numeric'
                }
            },

            time: {
                'short': {
                    hour  : 'numeric',
                    minute: 'numeric'
                },

                'medium':  {
                    hour  : 'numeric',
                    minute: 'numeric',
                    second: 'numeric'
                },

                'long': {
                    hour        : 'numeric',
                    minute      : 'numeric',
                    second      : 'numeric',
                    timeZoneName: 'short'
                },

                'full': {
                    hour        : 'numeric',
                    minute      : 'numeric',
                    second      : 'numeric',
                    timeZoneName: 'short'
                }
            }
        }
    });

    // Define internal private properties for dealing with locale data.
    $$es5$$defineProperty($$core$$MessageFormat, '__localeData__', {value: $$es5$$objCreate(null)});
    $$es5$$defineProperty($$core$$MessageFormat, '__addLocaleData', {value: function (data) {
        if (!(data && data.locale)) {
            throw new Error(
                'Locale data provided to IntlMessageFormat is missing a ' +
                '`locale` property'
            );
        }

        $$core$$MessageFormat.__localeData__[data.locale.toLowerCase()] = data;
    }});

    // Defines `__parse()` static method as an exposed private.
    $$es5$$defineProperty($$core$$MessageFormat, '__parse', {value: intl$messageformat$parser$$default.parse});

    // Define public `defaultLocale` property which defaults to English, but can be
    // set by the developer.
    $$es5$$defineProperty($$core$$MessageFormat, 'defaultLocale', {
        enumerable: true,
        writable  : true,
        value     : undefined
    });

    $$core$$MessageFormat.prototype.resolvedOptions = function () {
        // TODO: Provide anything else?
        return {
            locale: this._locale
        };
    };

    $$core$$MessageFormat.prototype._compilePattern = function (ast, locales, formats, pluralFn) {
        var compiler = new $$compiler$$default(locales, formats, pluralFn);
        return compiler.compile(ast);
    };

    $$core$$MessageFormat.prototype._findPluralRuleFunction = function (locale) {
        var localeData = $$core$$MessageFormat.__localeData__;
        var data       = localeData[locale.toLowerCase()];

        // The locale data is de-duplicated, so we have to traverse the locale's
        // hierarchy until we find a `pluralRuleFunction` to return.
        while (data) {
            if (data.pluralRuleFunction) {
                return data.pluralRuleFunction;
            }

            data = data.parentLocale && localeData[data.parentLocale.toLowerCase()];
        }

        throw new Error(
            'Locale data added to IntlMessageFormat is missing a ' +
            '`pluralRuleFunction` for :' + locale
        );
    };

    $$core$$MessageFormat.prototype._format = function (pattern, values) {
        var result = '',
            i, len, part, id, value;

        for (i = 0, len = pattern.length; i < len; i += 1) {
            part = pattern[i];

            // Exist early for string parts.
            if (typeof part === 'string') {
                result += part;
                continue;
            }

            id = part.id;

            // Enforce that all required values are provided by the caller.
            if (!(values && $$utils$$hop.call(values, id))) {
                throw new Error('A value must be provided for: ' + id);
            }

            value = values[id];

            // Recursively format plural and select parts' option — which can be a
            // nested pattern structure. The choosing of the option to use is
            // abstracted-by and delegated-to the part helper object.
            if (part.options) {
                result += this._format(part.getOption(value), values);
            } else {
                result += part.format(value);
            }
        }

        return result;
    };

    $$core$$MessageFormat.prototype._mergeFormats = function (defaults, formats) {
        var mergedFormats = {},
            type, mergedType;

        for (type in defaults) {
            if (!$$utils$$hop.call(defaults, type)) { continue; }

            mergedFormats[type] = mergedType = $$es5$$objCreate(defaults[type]);

            if (formats && $$utils$$hop.call(formats, type)) {
                $$utils$$extend(mergedType, formats[type]);
            }
        }

        return mergedFormats;
    };

    $$core$$MessageFormat.prototype._resolveLocale = function (locales) {
        if (typeof locales === 'string') {
            locales = [locales];
        }

        // Create a copy of the array so we can push on the default locale.
        locales = (locales || []).concat($$core$$MessageFormat.defaultLocale);

        var localeData = $$core$$MessageFormat.__localeData__;
        var i, len, localeParts, data;

        // Using the set of locales + the default locale, we look for the first one
        // which that has been registered. When data does not exist for a locale, we
        // traverse its ancestors to find something that's been registered within
        // its hierarchy of locales. Since we lack the proper `parentLocale` data
        // here, we must take a naive approach to traversal.
        for (i = 0, len = locales.length; i < len; i += 1) {
            localeParts = locales[i].toLowerCase().split('-');

            while (localeParts.length) {
                data = localeData[localeParts.join('-')];
                if (data) {
                    // Return the normalized locale string; e.g., we return "en-US",
                    // instead of "en-us".
                    return data.locale;
                }

                localeParts.pop();
            }
        }

        var defaultLocale = locales.pop();
        throw new Error(
            'No locale data has been added to IntlMessageFormat for: ' +
            locales.join(', ') + ', or the default locale: ' + defaultLocale
        );
    };
    var $$en1$$default = {"locale":"en","pluralRuleFunction":function (n,ord){var s=String(n).split("."),v0=!s[1],t0=Number(s[0])==n,n10=t0&&s[0].slice(-1),n100=t0&&s[0].slice(-2);if(ord)return n10==1&&n100!=11?"one":n10==2&&n100!=12?"two":n10==3&&n100!=13?"few":"other";return n==1&&v0?"one":"other"}};

    $$core$$default.__addLocaleData($$en1$$default);
    $$core$$default.defaultLocale = 'en';

    var intl$messageformat$$default = $$core$$default;

    var $$diff$$round = Math.round;

    function $$diff$$daysToYears(days) {
        // 400 years have 146097 days (taking into account leap year rules)
        return days * 400 / 146097;
    }

    var $$diff$$default = function (from, to) {
        // Convert to ms timestamps.
        from = +from;
        to   = +to;

        var millisecond = $$diff$$round(to - from),
            second      = $$diff$$round(millisecond / 1000),
            minute      = $$diff$$round(second / 60),
            hour        = $$diff$$round(minute / 60),
            day         = $$diff$$round(hour / 24),
            week        = $$diff$$round(day / 7);

        var rawYears = $$diff$$daysToYears(day),
            month    = $$diff$$round(rawYears * 12),
            year     = $$diff$$round(rawYears);

        return {
            millisecond: millisecond,
            second     : second,
            minute     : minute,
            hour       : hour,
            day        : day,
            week       : week,
            month      : month,
            year       : year
        };
    };

    // Purposely using the same implementation as the Intl.js `Intl` polyfill.
    // Copyright 2013 Andy Earnshaw, MIT License

    var $$es51$$hop = Object.prototype.hasOwnProperty;
    var $$es51$$toString = Object.prototype.toString;

    var $$es51$$realDefineProp = (function () {
        try { return !!Object.defineProperty({}, 'a', {}); }
        catch (e) { return false; }
    })();

    var $$es51$$es3 = !$$es51$$realDefineProp && !Object.prototype.__defineGetter__;

    var $$es51$$defineProperty = $$es51$$realDefineProp ? Object.defineProperty :
            function (obj, name, desc) {

        if ('get' in desc && obj.__defineGetter__) {
            obj.__defineGetter__(name, desc.get);
        } else if (!$$es51$$hop.call(obj, name) || 'value' in desc) {
            obj[name] = desc.value;
        }
    };

    var $$es51$$objCreate = Object.create || function (proto, props) {
        var obj, k;

        function F() {}
        F.prototype = proto;
        obj = new F();

        for (k in props) {
            if ($$es51$$hop.call(props, k)) {
                $$es51$$defineProperty(obj, k, props[k]);
            }
        }

        return obj;
    };

    var $$es51$$arrIndexOf = Array.prototype.indexOf || function (search, fromIndex) {
        /*jshint validthis:true */
        var arr = this;
        if (!arr.length) {
            return -1;
        }

        for (var i = fromIndex || 0, max = arr.length; i < max; i++) {
            if (arr[i] === search) {
                return i;
            }
        }

        return -1;
    };

    var $$es51$$isArray = Array.isArray || function (obj) {
        return $$es51$$toString.call(obj) === '[object Array]';
    };

    var $$es51$$dateNow = Date.now || function () {
        return new Date().getTime();
    };
    var $$core1$$default = $$core1$$RelativeFormat;

    // -----------------------------------------------------------------------------

    var $$core1$$FIELDS = ['second', 'minute', 'hour', 'day', 'month', 'year'];
    var $$core1$$STYLES = ['best fit', 'numeric'];

    // -- RelativeFormat -----------------------------------------------------------

    function $$core1$$RelativeFormat(locales, options) {
        options = options || {};

        // Make a copy of `locales` if it's an array, so that it doesn't change
        // since it's used lazily.
        if ($$es51$$isArray(locales)) {
            locales = locales.concat();
        }

        $$es51$$defineProperty(this, '_locale', {value: this._resolveLocale(locales)});
        $$es51$$defineProperty(this, '_options', {value: {
            style: this._resolveStyle(options.style),
            units: this._isValidUnits(options.units) && options.units
        }});

        $$es51$$defineProperty(this, '_locales', {value: locales});
        $$es51$$defineProperty(this, '_fields', {value: this._findFields(this._locale)});
        $$es51$$defineProperty(this, '_messages', {value: $$es51$$objCreate(null)});

        // "Bind" `format()` method to `this` so it can be passed by reference like
        // the other `Intl` APIs.
        var relativeFormat = this;
        this.format = function format(date, options) {
            return relativeFormat._format(date, options);
        };
    }

    // Define internal private properties for dealing with locale data.
    $$es51$$defineProperty($$core1$$RelativeFormat, '__localeData__', {value: $$es51$$objCreate(null)});
    $$es51$$defineProperty($$core1$$RelativeFormat, '__addLocaleData', {value: function (data) {
        if (!(data && data.locale)) {
            throw new Error(
                'Locale data provided to IntlRelativeFormat is missing a ' +
                '`locale` property value'
            );
        }

        $$core1$$RelativeFormat.__localeData__[data.locale.toLowerCase()] = data;

        // Add data to IntlMessageFormat.
        intl$messageformat$$default.__addLocaleData(data);
    }});

    // Define public `defaultLocale` property which can be set by the developer, or
    // it will be set when the first RelativeFormat instance is created by
    // leveraging the resolved locale from `Intl`.
    $$es51$$defineProperty($$core1$$RelativeFormat, 'defaultLocale', {
        enumerable: true,
        writable  : true,
        value     : undefined
    });

    // Define public `thresholds` property which can be set by the developer, and
    // defaults to relative time thresholds from moment.js.
    $$es51$$defineProperty($$core1$$RelativeFormat, 'thresholds', {
        enumerable: true,

        value: {
            second: 45,  // seconds to minute
            minute: 45,  // minutes to hour
            hour  : 22,  // hours to day
            day   : 26,  // days to month
            month : 11   // months to year
        }
    });

    $$core1$$RelativeFormat.prototype.resolvedOptions = function () {
        return {
            locale: this._locale,
            style : this._options.style,
            units : this._options.units
        };
    };

    $$core1$$RelativeFormat.prototype._compileMessage = function (units) {
        // `this._locales` is the original set of locales the user specified to the
        // constructor, while `this._locale` is the resolved root locale.
        var locales        = this._locales;
        var resolvedLocale = this._locale;

        var field        = this._fields[units];
        var relativeTime = field.relativeTime;
        var future       = '';
        var past         = '';
        var i;

        for (i in relativeTime.future) {
            if (relativeTime.future.hasOwnProperty(i)) {
                future += ' ' + i + ' {' +
                    relativeTime.future[i].replace('{0}', '#') + '}';
            }
        }

        for (i in relativeTime.past) {
            if (relativeTime.past.hasOwnProperty(i)) {
                past += ' ' + i + ' {' +
                    relativeTime.past[i].replace('{0}', '#') + '}';
            }
        }

        var message = '{when, select, future {{0, plural, ' + future + '}}' +
                                     'past {{0, plural, ' + past + '}}}';

        // Create the synthetic IntlMessageFormat instance using the original
        // locales value specified by the user when constructing the the parent
        // IntlRelativeFormat instance.
        return new intl$messageformat$$default(message, locales);
    };

    $$core1$$RelativeFormat.prototype._getMessage = function (units) {
        var messages = this._messages;

        // Create a new synthetic message based on the locale data from CLDR.
        if (!messages[units]) {
            messages[units] = this._compileMessage(units);
        }

        return messages[units];
    };

    $$core1$$RelativeFormat.prototype._getRelativeUnits = function (diff, units) {
        var field = this._fields[units];

        if (field.relative) {
            return field.relative[diff];
        }
    };

    $$core1$$RelativeFormat.prototype._findFields = function (locale) {
        var localeData = $$core1$$RelativeFormat.__localeData__;
        var data       = localeData[locale.toLowerCase()];

        // The locale data is de-duplicated, so we have to traverse the locale's
        // hierarchy until we find `fields` to return.
        while (data) {
            if (data.fields) {
                return data.fields;
            }

            data = data.parentLocale && localeData[data.parentLocale.toLowerCase()];
        }

        throw new Error(
            'Locale data added to IntlRelativeFormat is missing `fields` for :' +
            locale
        );
    };

    $$core1$$RelativeFormat.prototype._format = function (date, options) {
        var now = options && options.now !== undefined ? options.now : $$es51$$dateNow();

        if (date === undefined) {
            date = now;
        }

        // Determine if the `date` and optional `now` values are valid, and throw a
        // similar error to what `Intl.DateTimeFormat#format()` would throw.
        if (!isFinite(now)) {
            throw new RangeError(
                'The `now` option provided to IntlRelativeFormat#format() is not ' +
                'in valid range.'
            );
        }

        if (!isFinite(date)) {
            throw new RangeError(
                'The date value provided to IntlRelativeFormat#format() is not ' +
                'in valid range.'
            );
        }

        var diffReport  = $$diff$$default(now, date);
        var units       = this._options.units || this._selectUnits(diffReport);
        var diffInUnits = diffReport[units];

        if (this._options.style !== 'numeric') {
            var relativeUnits = this._getRelativeUnits(diffInUnits, units);
            if (relativeUnits) {
                return relativeUnits;
            }
        }

        return this._getMessage(units).format({
            '0' : Math.abs(diffInUnits),
            when: diffInUnits < 0 ? 'past' : 'future'
        });
    };

    $$core1$$RelativeFormat.prototype._isValidUnits = function (units) {
        if (!units || $$es51$$arrIndexOf.call($$core1$$FIELDS, units) >= 0) {
            return true;
        }

        if (typeof units === 'string') {
            var suggestion = /s$/.test(units) && units.substr(0, units.length - 1);
            if (suggestion && $$es51$$arrIndexOf.call($$core1$$FIELDS, suggestion) >= 0) {
                throw new Error(
                    '"' + units + '" is not a valid IntlRelativeFormat `units` ' +
                    'value, did you mean: ' + suggestion
                );
            }
        }

        throw new Error(
            '"' + units + '" is not a valid IntlRelativeFormat `units` value, it ' +
            'must be one of: "' + $$core1$$FIELDS.join('", "') + '"'
        );
    };

    $$core1$$RelativeFormat.prototype._resolveLocale = function (locales) {
        if (typeof locales === 'string') {
            locales = [locales];
        }

        // Create a copy of the array so we can push on the default locale.
        locales = (locales || []).concat($$core1$$RelativeFormat.defaultLocale);

        var localeData = $$core1$$RelativeFormat.__localeData__;
        var i, len, localeParts, data;

        // Using the set of locales + the default locale, we look for the first one
        // which that has been registered. When data does not exist for a locale, we
        // traverse its ancestors to find something that's been registered within
        // its hierarchy of locales. Since we lack the proper `parentLocale` data
        // here, we must take a naive approach to traversal.
        for (i = 0, len = locales.length; i < len; i += 1) {
            localeParts = locales[i].toLowerCase().split('-');

            while (localeParts.length) {
                data = localeData[localeParts.join('-')];
                if (data) {
                    // Return the normalized locale string; e.g., we return "en-US",
                    // instead of "en-us".
                    return data.locale;
                }

                localeParts.pop();
            }
        }

        var defaultLocale = locales.pop();
        throw new Error(
            'No locale data has been added to IntlRelativeFormat for: ' +
            locales.join(', ') + ', or the default locale: ' + defaultLocale
        );
    };

    $$core1$$RelativeFormat.prototype._resolveStyle = function (style) {
        // Default to "best fit" style.
        if (!style) {
            return $$core1$$STYLES[0];
        }

        if ($$es51$$arrIndexOf.call($$core1$$STYLES, style) >= 0) {
            return style;
        }

        throw new Error(
            '"' + style + '" is not a valid IntlRelativeFormat `style` value, it ' +
            'must be one of: "' + $$core1$$STYLES.join('", "') + '"'
        );
    };

    $$core1$$RelativeFormat.prototype._selectUnits = function (diffReport) {
        var i, l, units;

        for (i = 0, l = $$core1$$FIELDS.length; i < l; i += 1) {
            units = $$core1$$FIELDS[i];

            if (Math.abs(diffReport[units]) < $$core1$$RelativeFormat.thresholds[units]) {
                break;
            }
        }

        return units;
    };
    var $$en2$$default = {"locale":"en","pluralRuleFunction":function (n,ord){var s=String(n).split("."),v0=!s[1],t0=Number(s[0])==n,n10=t0&&s[0].slice(-1),n100=t0&&s[0].slice(-2);if(ord)return n10==1&&n100!=11?"one":n10==2&&n100!=12?"two":n10==3&&n100!=13?"few":"other";return n==1&&v0?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"one":"in {0} year","other":"in {0} years"},"past":{"one":"{0} year ago","other":"{0} years ago"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"one":"in {0} month","other":"in {0} months"},"past":{"one":"{0} month ago","other":"{0} months ago"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"one":"in {0} day","other":"in {0} days"},"past":{"one":"{0} day ago","other":"{0} days ago"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"one":"in {0} hour","other":"in {0} hours"},"past":{"one":"{0} hour ago","other":"{0} hours ago"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"one":"in {0} minute","other":"in {0} minutes"},"past":{"one":"{0} minute ago","other":"{0} minutes ago"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"one":"in {0} second","other":"in {0} seconds"},"past":{"one":"{0} second ago","other":"{0} seconds ago"}}}}};

    $$core1$$default.__addLocaleData($$en2$$default);
    $$core1$$default.defaultLocale = 'en';

    var intl$relativeformat$$default = $$core1$$default;
    var $$en$$default = {"locale":"en","pluralRuleFunction":function (n,ord){var s=String(n).split("."),v0=!s[1],t0=Number(s[0])==n,n10=t0&&s[0].slice(-1),n100=t0&&s[0].slice(-2);if(ord)return n10==1&&n100!=11?"one":n10==2&&n100!=12?"two":n10==3&&n100!=13?"few":"other";return n==1&&v0?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"one":"in {0} year","other":"in {0} years"},"past":{"one":"{0} year ago","other":"{0} years ago"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"one":"in {0} month","other":"in {0} months"},"past":{"one":"{0} month ago","other":"{0} months ago"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"one":"in {0} day","other":"in {0} days"},"past":{"one":"{0} day ago","other":"{0} days ago"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"one":"in {0} hour","other":"in {0} hours"},"past":{"one":"{0} hour ago","other":"{0} hours ago"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"one":"in {0} minute","other":"in {0} minutes"},"past":{"one":"{0} minute ago","other":"{0} minutes ago"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"one":"in {0} second","other":"in {0} seconds"},"past":{"one":"{0} second ago","other":"{0} seconds ago"}}}}};
    var $$react$$default = React;

    var $$es52$$bind = Function.prototype.bind || function (oThis) {
        if (typeof this !== 'function') {
          // closest thing possible to the ECMAScript 5
          // internal IsCallable function
          throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');
        }

        var aArgs   = Array.prototype.slice.call(arguments, 1),
            fToBind = this,
            fNOP    = function() {},
            fBound  = function() {
              return fToBind.apply(this instanceof fNOP
                     ? this
                     : oThis,
                     aArgs.concat(Array.prototype.slice.call(arguments)));
            };

        if (this.prototype) {
          // native functions don't have a prototype
          fNOP.prototype = this.prototype;
        }
        fBound.prototype = new fNOP();

        return fBound;
    };

    // Purposely using the same implementation as the Intl.js `Intl` polyfill.
    // Copyright 2013 Andy Earnshaw, MIT License

    var $$es52$$hop = Object.prototype.hasOwnProperty;

    var $$es52$$realDefineProp = (function () {
        try { return !!Object.defineProperty({}, 'a', {}); }
        catch (e) { return false; }
    })();

    var $$es52$$es3 = !$$es52$$realDefineProp && !Object.prototype.__defineGetter__;

    var $$es52$$defineProperty = $$es52$$realDefineProp ? Object.defineProperty :
            function (obj, name, desc) {

        if ('get' in desc && obj.__defineGetter__) {
            obj.__defineGetter__(name, desc.get);
        } else if (!$$es52$$hop.call(obj, name) || 'value' in desc) {
            obj[name] = desc.value;
        }
    };

    var $$es52$$objCreate = Object.create || function (proto, props) {
        var obj, k;

        function F() {}
        F.prototype = proto;
        obj = new F();

        for (k in props) {
            if ($$es52$$hop.call(props, k)) {
                $$es52$$defineProperty(obj, k, props[k]);
            }
        }

        return obj;
    };

    var intl$format$cache$$default = intl$format$cache$$createFormatCache;

    // -----------------------------------------------------------------------------

    function intl$format$cache$$createFormatCache(FormatConstructor) {
        var cache = $$es52$$objCreate(null);

        return function () {
            var args    = Array.prototype.slice.call(arguments);
            var cacheId = intl$format$cache$$getCacheId(args);
            var format  = cacheId && cache[cacheId];

            if (!format) {
                format = new ($$es52$$bind.apply(FormatConstructor, [null].concat(args)))();

                if (cacheId) {
                    cache[cacheId] = format;
                }
            }

            return format;
        };
    }

    // -- Utilities ----------------------------------------------------------------

    function intl$format$cache$$getCacheId(inputs) {
        // When JSON is not available in the runtime, we will not create a cache id.
        if (typeof JSON === 'undefined') { return; }

        var cacheId = [];

        var i, len, input;

        for (i = 0, len = inputs.length; i < len; i += 1) {
            input = inputs[i];

            if (input && typeof input === 'object') {
                cacheId.push(intl$format$cache$$orderedProps(input));
            } else {
                cacheId.push(input);
            }
        }

        return JSON.stringify(cacheId);
    }

    function intl$format$cache$$orderedProps(obj) {
        var props = [],
            keys  = [];

        var key, i, len, prop;

        for (key in obj) {
            if (obj.hasOwnProperty(key)) {
                keys.push(key);
            }
        }

        var orderedKeys = keys.sort();

        for (i = 0, len = orderedKeys.length; i < len; i += 1) {
            key  = orderedKeys[i];
            prop = {};

            prop[key] = obj[key];
            props[i]  = prop;
        }

        return props;
    }

    // -----------------------------------------------------------------------------

    var $$mixin$$typesSpec = {
        locales: $$react$$default.PropTypes.oneOfType([
            $$react$$default.PropTypes.string,
            $$react$$default.PropTypes.array
        ]),

        formats : $$react$$default.PropTypes.object,
        messages: $$react$$default.PropTypes.object
    };

    function $$mixin$$assertIsDate(date, errMsg) {
        // Determine if the `date` is valid by checking if it is finite, which is
        // the same way that `Intl.DateTimeFormat#format()` checks.
        if (!isFinite(date)) {
            throw new TypeError(errMsg);
        }
    }

    var $$mixin$$default = {
        statics: {
            filterFormatOptions: function (obj, defaults) {
                if (!defaults) { defaults = {}; }

                return (this.formatOptions || []).reduce(function (opts, name) {
                    if (obj.hasOwnProperty(name)) {
                        opts[name] = obj[name];
                    } else if (defaults.hasOwnProperty(name)) {
                        opts[name] = defaults[name];
                    }

                    return opts;
                }, {});
            }
        },

        propTypes        : $$mixin$$typesSpec,
        contextTypes     : $$mixin$$typesSpec,
        childContextTypes: $$mixin$$typesSpec,

        getNumberFormat  : intl$format$cache$$default(Intl.NumberFormat),
        getDateTimeFormat: intl$format$cache$$default(Intl.DateTimeFormat),
        getMessageFormat : intl$format$cache$$default(intl$messageformat$$default),
        getRelativeFormat: intl$format$cache$$default(intl$relativeformat$$default),

        getChildContext: function () {
            var context = this.context;
            var props   = this.props;

            return {
                locales:  props.locales  || context.locales,
                formats:  props.formats  || context.formats,
                messages: props.messages || context.messages
            };
        },

        formatDate: function (date, options) {
            date = new Date(date);
            $$mixin$$assertIsDate(date, 'A date or timestamp must be provided to formatDate()');
            return this._format('date', date, options);
        },

        formatTime: function (date, options) {
            date = new Date(date);
            $$mixin$$assertIsDate(date, 'A date or timestamp must be provided to formatTime()');
            return this._format('time', date, options);
        },

        formatRelative: function (date, options, formatOptions) {
            date = new Date(date);
            $$mixin$$assertIsDate(date, 'A date or timestamp must be provided to formatRelative()');
            return this._format('relative', date, options, formatOptions);
        },

        formatNumber: function (num, options) {
            return this._format('number', num, options);
        },

        formatMessage: function (message, values) {
            var locales = this.props.locales || this.context.locales;
            var formats = this.props.formats || this.context.formats;

            // When `message` is a function, assume it's an IntlMessageFormat
            // instance's `format()` method passed by reference, and call it. This
            // is possible because its `this` will be pre-bound to the instance.
            if (typeof message === 'function') {
                return message(values);
            }

            if (typeof message === 'string') {
                message = this.getMessageFormat(message, locales, formats);
            }

            return message.format(values);
        },

        getIntlMessage: function (path) {
            var messages  = this.props.messages || this.context.messages;
            var pathParts = path.split('.');

            var message;

            try {
                message = pathParts.reduce(function (obj, pathPart) {
                    return obj[pathPart];
                }, messages);
            } finally {
                if (message === undefined) {
                    throw new ReferenceError('Could not find Intl message: ' + path);
                }
            }

            return message;
        },

        getNamedFormat: function (type, name) {
            var formats = this.props.formats || this.context.formats;
            var format  = null;

            try {
                format = formats[type][name];
            } finally {
                if (!format) {
                    throw new ReferenceError(
                        'No ' + type + ' format named: ' + name
                    );
                }
            }

            return format;
        },

        _format: function (type, value, options, formatOptions) {
            var locales = this.props.locales || this.context.locales;

            if (options && typeof options === 'string') {
                options = this.getNamedFormat(type, options);
            }

            switch(type) {
                case 'date':
                case 'time':
                    return this.getDateTimeFormat(locales, options).format(value);
                case 'number':
                    return this.getNumberFormat(locales, options).format(value);
                case 'relative':
                    return this.getRelativeFormat(locales, options).format(value, formatOptions);
                default:
                    throw new Error('Unrecognized format type: ' + type);
            }
        }
    };

    var $$components$date$$FormattedDate = $$react$$default.createClass({
        displayName: 'FormattedDate',
        mixins     : [$$mixin$$default],

        statics: {
            formatOptions: [
                'localeMatcher', 'timeZone', 'hour12', 'formatMatcher', 'weekday',
                'era', 'year', 'month', 'day', 'hour', 'minute', 'second',
                'timeZoneName'
            ]
        },

        propTypes: {
            format: $$react$$default.PropTypes.string,
            value : $$react$$default.PropTypes.any.isRequired
        },

        render: function () {
            var props    = this.props;
            var value    = props.value;
            var format   = props.format;
            var defaults = format && this.getNamedFormat('date', format);
            var options  = $$components$date$$FormattedDate.filterFormatOptions(props, defaults);

            return $$react$$default.DOM.span(null, this.formatDate(value, options));
        }
    });

    var $$components$date$$default = $$components$date$$FormattedDate;

    var $$components$time$$FormattedTime = $$react$$default.createClass({
        displayName: 'FormattedTime',
        mixins     : [$$mixin$$default],

        statics: {
            formatOptions: [
                'localeMatcher', 'timeZone', 'hour12', 'formatMatcher', 'weekday',
                'era', 'year', 'month', 'day', 'hour', 'minute', 'second',
                'timeZoneName'
            ]
        },

        propTypes: {
            format: $$react$$default.PropTypes.string,
            value : $$react$$default.PropTypes.any.isRequired
        },

        render: function () {
            var props    = this.props;
            var value    = props.value;
            var format   = props.format;
            var defaults = format && this.getNamedFormat('time', format);
            var options  = $$components$time$$FormattedTime.filterFormatOptions(props, defaults);

            return $$react$$default.DOM.span(null, this.formatTime(value, options));
        }
    });

    var $$components$time$$default = $$components$time$$FormattedTime;

    var $$components$relative$$FormattedRelative = $$react$$default.createClass({
        displayName: 'FormattedRelative',
        mixins     : [$$mixin$$default],

        statics: {
            formatOptions: [
                'style', 'units'
            ]
        },

        propTypes: {
            format: $$react$$default.PropTypes.string,
            value : $$react$$default.PropTypes.any.isRequired,
            now   : $$react$$default.PropTypes.any
        },

        render: function () {
            var props    = this.props;
            var value    = props.value;
            var format   = props.format;
            var defaults = format && this.getNamedFormat('relative', format);
            var options  = $$components$relative$$FormattedRelative.filterFormatOptions(props, defaults);

            var formattedRelativeTime = this.formatRelative(value, options, {
                now: props.now
            });

            return $$react$$default.DOM.span(null, formattedRelativeTime);
        }
    });

    var $$components$relative$$default = $$components$relative$$FormattedRelative;

    var $$components$number$$FormattedNumber = $$react$$default.createClass({
        displayName: 'FormattedNumber',
        mixins     : [$$mixin$$default],

        statics: {
            formatOptions: [
                'localeMatcher', 'style', 'currency', 'currencyDisplay',
                'useGrouping', 'minimumIntegerDigits', 'minimumFractionDigits',
                'maximumFractionDigits', 'minimumSignificantDigits',
                'maximumSignificantDigits'
            ]
        },

        propTypes: {
            format: $$react$$default.PropTypes.string,
            value : $$react$$default.PropTypes.any.isRequired
        },

        render: function () {
            var props    = this.props;
            var value    = props.value;
            var format   = props.format;
            var defaults = format && this.getNamedFormat('number', format);
            var options  = $$components$number$$FormattedNumber.filterFormatOptions(props, defaults);

            return $$react$$default.DOM.span(null, this.formatNumber(value, options));
        }
    });

    var $$components$number$$default = $$components$number$$FormattedNumber;

    var $$components$message$$FormattedMessage = $$react$$default.createClass({
        displayName: 'FormattedMessage',
        mixins     : [$$mixin$$default],

        propTypes: {
            tagName: $$react$$default.PropTypes.string,
            message: $$react$$default.PropTypes.string.isRequired
        },

        getDefaultProps: function () {
            return {tagName: 'span'};
        },

        render: function () {
            var props   = this.props;
            var tagName = props.tagName;
            var message = props.message;

            // Creates a token with a random guid that should not be guessable or
            // conflict with other parts of the `message` string.
            var guid       = Math.floor(Math.random() * 0x10000000000).toString(16);
            var tokenRegex = new RegExp('(@__ELEMENT-' + guid + '-\\d+__@)', 'g');
            var elements   = {};

            var generateToken = (function () {
                var counter = 0;
                return function () {
                    return '@__ELEMENT-' + guid + '-' + (counter += 1) + '__@';
                };
            }());

            // Iterates over the `props` to keep track of any React Element values
            // so they can be represented by the `token` as a placeholder when the
            // `message` is formatted. This allows the formatted message to then be
            // broken-up into parts with references to the React Elements inserted
            // back in.
            var values = Object.keys(props).reduce(function (values, name) {
                var value = props[name];
                var token;

                if ($$react$$default.isValidElement(value)) {
                    token           = generateToken();
                    values[name]    = token;
                    elements[token] = value;
                } else {
                    values[name] = value;
                }

                return values;
            }, {});

            // Formats the `message` with the `values`, including the `token`
            // placeholders for React Element values.
            var formattedMessage = this.formatMessage(message, values);

            // Split the message into parts so the React Element values captured
            // above can be inserted back into the rendered message. This
            // approach allows messages to render with React Elements while keeping
            // React's virtual diffing working properly.
            var children = formattedMessage.split(tokenRegex)
                .filter(function (part) {
                    // Ignore empty string parts.
                    return !!part;
                })
                .map(function (part) {
                    // When the `part` is a token, get a ref to the React Element.
                    return elements[part] || part;
                });

            var elementArgs = [tagName, null].concat(children);
            return $$react$$default.createElement.apply(null, elementArgs);
        }
    });

    var $$components$message$$default = $$components$message$$FormattedMessage;
    var $$$escape$$ESCAPED_CHARS = {
        '&' : '&amp;',
        '>' : '&gt;',
        '<' : '&lt;',
        '"' : '&quot;',
        '\'': '&#x27;'
    };

    var $$$escape$$UNSAFE_CHARS_REGEX = /[&><"']/g;

    var $$$escape$$default = function (str) {
        return ('' + str).replace($$$escape$$UNSAFE_CHARS_REGEX, function (match) {
            return $$$escape$$ESCAPED_CHARS[match];
        });
    };

    var $$components$html$message$$FormattedHTMLMessage = $$react$$default.createClass({
        displayName: 'FormattedHTMLMessage',
        mixins     : [$$mixin$$default],

        propTypes: {
            tagName: $$react$$default.PropTypes.string,
            message: $$react$$default.PropTypes.string.isRequired
        },

        getDefaultProps: function () {
            return {tagName: 'span'};
        },

        render: function () {
            var props   = this.props;
            var tagName = props.tagName;
            var message = props.message;

            // Process all the props before they are used as values when formatting
            // the ICU Message string. Since the formatted message will be injected
            // via `innerHTML`, all String-based values need to be HTML-escaped. Any
            // React Elements that are passed as props will be rendered to a static
            // markup string that is presumed to be safe.
            var values = Object.keys(props).reduce(function (values, name) {
                var value = props[name];

                if (typeof value === 'string') {
                    value = $$$escape$$default(value);
                } else if ($$react$$default.isValidElement(value)) {
                    value = $$react$$default.renderToStaticMarkup(value);
                }

                values[name] = value;
                return values;
            }, {});

            // Since the message presumably has HTML in it, we need to set
            // `innerHTML` in order for it to be rendered and not escaped by React.
            // To be safe, all string prop values were escaped before formatting the
            // message. It is assumed that the message is not UGC, and came from
            // the developer making it more like a template.
            //
            // Note: There's a perf impact of using this component since there's no
            // way for React to do its virtual DOM diffing.
            return $$react$$default.DOM[tagName]({
                dangerouslySetInnerHTML: {
                    __html: this.formatMessage(message, values)
                }
            });
        }
    });

    var $$components$html$message$$default = $$components$html$message$$FormattedHTMLMessage;
    function $$react$intl$$__addLocaleData(data) {
        intl$messageformat$$default.__addLocaleData(data);
        intl$relativeformat$$default.__addLocaleData(data);
    }

    $$react$intl$$__addLocaleData($$en$$default);

    var src$main$$default = {
        IntlMixin           : $$mixin$$default,
        FormattedDate       : $$components$date$$default,
        FormattedTime       : $$components$time$$default,
        FormattedRelative   : $$components$relative$$default,
        FormattedNumber     : $$components$number$$default,
        FormattedMessage    : $$components$message$$default,
        FormattedHTMLMessage: $$components$html$message$$default,

        __addLocaleData: $$react$intl$$__addLocaleData
    };

    // Back-compat for v1.0.0. This adds a `ReactIntlMixin` global that references
    // the mixin directly. This will be deprecated in v2.0.0.
    if (typeof window !== 'undefined') {
        window.ReactIntlMixin     = $$mixin$$default;
        $$mixin$$default.__addLocaleData = $$react$intl$$__addLocaleData;
    }
    this['ReactIntl'] = src$main$$default;
}).call(this);

//
ReactIntl.__addLocaleData({"locale":"aa","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"aa-DJ","parentLocale":"aa"});
ReactIntl.__addLocaleData({"locale":"aa-ER","parentLocale":"aa"});
ReactIntl.__addLocaleData({"locale":"aa-ET","parentLocale":"aa"});

ReactIntl.__addLocaleData({"locale":"af","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Jaar","relative":{"0":"hierdie jaar","1":"volgende jaar","-1":"verlede jaar"},"relativeTime":{"future":{"one":"Oor {0} jaar","other":"Oor {0} jaar"},"past":{"one":"{0} jaar gelede","other":"{0} jaar gelede"}}},"month":{"displayName":"Maand","relative":{"0":"vandeesmaand","1":"volgende maand","-1":"verlede maand"},"relativeTime":{"future":{"one":"Oor {0} maand","other":"Oor {0} maande"},"past":{"one":"{0} maand gelede","other":"{0} maande gelede"}}},"day":{"displayName":"Dag","relative":{"0":"vandag","1":"môre","2":"oormôre","-1":"gister","-2":"eergister"},"relativeTime":{"future":{"one":"Oor {0} dag","other":"Oor {0} dae"},"past":{"one":"{0} dag gelede","other":"{0} dae gelede"}}},"hour":{"displayName":"Uur","relativeTime":{"future":{"one":"Oor {0} uur","other":"Oor {0} uur"},"past":{"one":"{0} uur gelede","other":"{0} uur gelede"}}},"minute":{"displayName":"Minuut","relativeTime":{"future":{"one":"Oor {0} minuut","other":"Oor {0} minute"},"past":{"one":"{0} minuut gelede","other":"{0} minute gelede"}}},"second":{"displayName":"Sekonde","relative":{"0":"nou"},"relativeTime":{"future":{"one":"Oor {0} sekonde","other":"Oor {0} sekondes"},"past":{"one":"{0} sekonde gelede","other":"{0} sekondes gelede"}}}}});
ReactIntl.__addLocaleData({"locale":"af-NA","parentLocale":"af"});
ReactIntl.__addLocaleData({"locale":"af-ZA","parentLocale":"af"});

ReactIntl.__addLocaleData({"locale":"agq","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"kɨnûm","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"ndzɔŋ","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"utsuʔ","relative":{"0":"nɛ","1":"tsʉtsʉ","-1":"ā zūɛɛ"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"tàm","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"menè","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"sɛkɔ̀n","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"agq-CM","parentLocale":"agq"});

ReactIntl.__addLocaleData({"locale":"ak","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==0||n==1?"one":"other"},"fields":{"year":{"displayName":"Afe","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Bosome","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Da","relative":{"0":"Ndɛ","1":"Ɔkyena","-1":"Ndeda"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Dɔnhwer","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Sema","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Sɛkɛnd","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"ak-GH","parentLocale":"ak"});

ReactIntl.__addLocaleData({"locale":"am","pluralRuleFunction":function (n,ord){if(ord)return"other";return n>=0&&n<=1?"one":"other"},"fields":{"year":{"displayName":"ዓመት","relative":{"0":"በዚህ ዓመት","1":"የሚቀጥለው ዓመት","-1":"ያለፈው ዓመት"},"relativeTime":{"future":{"one":"በ{0} ዓመታት ውስጥ","other":"በ{0} ዓመታት ውስጥ"},"past":{"one":"ከ{0} ዓመት በፊት","other":"ከ{0} ዓመታት በፊት"}}},"month":{"displayName":"ወር","relative":{"0":"በዚህ ወር","1":"የሚቀጥለው ወር","-1":"ያለፈው ወር"},"relativeTime":{"future":{"one":"በ{0} ወር ውስጥ","other":"በ{0} ወራት ውስጥ"},"past":{"one":"ከ{0} ወር በፊት","other":"ከ{0} ወራት በፊት"}}},"day":{"displayName":"ቀን","relative":{"0":"ዛሬ","1":"ነገ","2":"ከነገ ወዲያ","-1":"ትናንት","-2":"ከትናንት ወዲያ"},"relativeTime":{"future":{"one":"በ{0} ቀን ውስጥ","other":"በ{0} ቀናት ውስጥ"},"past":{"one":"ከ{0} ቀን በፊት","other":"ከ{0} ቀናት በፊት"}}},"hour":{"displayName":"ሰዓት","relativeTime":{"future":{"one":"በ{0} ሰዓት ውስጥ","other":"በ{0} ሰዓቶች ውስጥ"},"past":{"one":"ከ{0} ሰዓት በፊት","other":"ከ{0} ሰዓቶች በፊት"}}},"minute":{"displayName":"ደቂቃ","relativeTime":{"future":{"one":"በ{0} ደቂቃ ውስጥ","other":"በ{0} ደቂቃዎች ውስጥ"},"past":{"one":"ከ{0} ደቂቃ በፊት","other":"ከ{0} ደቂቃዎች በፊት"}}},"second":{"displayName":"ሰከንድ","relative":{"0":"አሁን"},"relativeTime":{"future":{"one":"በ{0} ሰከንድ ውስጥ","other":"በ{0} ሰከንዶች ውስጥ"},"past":{"one":"ከ{0} ሰከንድ በፊት","other":"ከ{0} ሰከንዶች በፊት"}}}}});
ReactIntl.__addLocaleData({"locale":"am-ET","parentLocale":"am"});

ReactIntl.__addLocaleData({"locale":"ar","pluralRuleFunction":function (n,ord){var s=String(n).split("."),t0=Number(s[0])==n,n100=t0&&s[0].slice(-2);if(ord)return"other";return n==0?"zero":n==1?"one":n==2?"two":n100>=3&&n100<=10?"few":n100>=11&&n100<=99?"many":"other"},"fields":{"year":{"displayName":"السنة","relative":{"0":"السنة الحالية","1":"السنة التالية","-1":"السنة الماضية"},"relativeTime":{"future":{"zero":"خلال {0} من السنوات","one":"خلال {0} من السنوات","two":"خلال سنتين","few":"خلال {0} سنوات","many":"خلال {0} سنة","other":"خلال {0} من السنوات"},"past":{"zero":"قبل {0} من السنوات","one":"قبل {0} من السنوات","two":"قبل سنتين","few":"قبل {0} سنوات","many":"قبل {0} سنة","other":"قبل {0} من السنوات"}}},"month":{"displayName":"الشهر","relative":{"0":"هذا الشهر","1":"الشهر التالي","-1":"الشهر الماضي"},"relativeTime":{"future":{"zero":"خلال {0} من الشهور","one":"خلال {0} من الشهور","two":"خلال شهرين","few":"خلال {0} شهور","many":"خلال {0} شهرًا","other":"خلال {0} من الشهور"},"past":{"zero":"قبل {0} من الشهور","one":"قبل {0} من الشهور","two":"قبل شهرين","few":"قبل {0} أشهر","many":"قبل {0} شهرًا","other":"قبل {0} من الشهور"}}},"day":{"displayName":"يوم","relative":{"0":"اليوم","1":"غدًا","2":"بعد الغد","-1":"أمس","-2":"أول أمس"},"relativeTime":{"future":{"zero":"خلال {0} من الأيام","one":"خلال {0} من الأيام","two":"خلال يومين","few":"خلال {0} أيام","many":"خلال {0} يومًا","other":"خلال {0} من الأيام"},"past":{"zero":"قبل {0} من الأيام","one":"قبل {0} من الأيام","two":"قبل يومين","few":"قبل {0} أيام","many":"قبل {0} يومًا","other":"قبل {0} من الأيام"}}},"hour":{"displayName":"الساعات","relativeTime":{"future":{"zero":"خلال {0} من الساعات","one":"خلال {0} من الساعات","two":"خلال ساعتين","few":"خلال {0} ساعات","many":"خلال {0} ساعة","other":"خلال {0} من الساعات"},"past":{"zero":"قبل {0} من الساعات","one":"قبل {0} من الساعات","two":"قبل ساعتين","few":"قبل {0} ساعات","many":"قبل {0} ساعة","other":"قبل {0} من الساعات"}}},"minute":{"displayName":"الدقائق","relativeTime":{"future":{"zero":"خلال {0} من الدقائق","one":"خلال {0} من الدقائق","two":"خلال دقيقتين","few":"خلال {0} دقائق","many":"خلال {0} دقيقة","other":"خلال {0} من الدقائق"},"past":{"zero":"قبل {0} من الدقائق","one":"قبل {0} من الدقائق","two":"قبل دقيقتين","few":"قبل {0} دقائق","many":"قبل {0} دقيقة","other":"قبل {0} من الدقائق"}}},"second":{"displayName":"الثواني","relative":{"0":"الآن"},"relativeTime":{"future":{"zero":"خلال {0} من الثواني","one":"خلال {0} من الثواني","two":"خلال ثانيتين","few":"خلال {0} ثوانِ","many":"خلال {0} ثانية","other":"خلال {0} من الثواني"},"past":{"zero":"قبل {0} من الثواني","one":"قبل {0} من الثواني","two":"قبل ثانيتين","few":"قبل {0} ثوانِ","many":"قبل {0} ثانية","other":"قبل {0} من الثواني"}}}}});
ReactIntl.__addLocaleData({"locale":"ar-001","parentLocale":"ar"});
ReactIntl.__addLocaleData({"locale":"ar-AE","parentLocale":"ar","fields":{"year":{"displayName":"السنة","relative":{"0":"هذه السنة","1":"السنة التالية","-1":"السنة الماضية"},"relativeTime":{"future":{"zero":"خلال {0} من السنوات","one":"خلال {0} من السنوات","two":"خلال سنتين","few":"خلال {0} سنوات","many":"خلال {0} سنة","other":"خلال {0} من السنوات"},"past":{"zero":"قبل {0} من السنوات","one":"قبل {0} من السنوات","two":"قبل سنتين","few":"قبل {0} سنوات","many":"قبل {0} سنة","other":"قبل {0} من السنوات"}}},"month":{"displayName":"الشهر","relative":{"0":"هذا الشهر","1":"الشهر التالي","-1":"الشهر الماضي"},"relativeTime":{"future":{"zero":"خلال {0} من الشهور","one":"خلال {0} من الشهور","two":"خلال شهرين","few":"خلال {0} شهور","many":"خلال {0} شهرًا","other":"خلال {0} من الشهور"},"past":{"zero":"قبل {0} من الشهور","one":"قبل {0} من الشهور","two":"قبل شهرين","few":"قبل {0} أشهر","many":"قبل {0} شهرًا","other":"قبل {0} من الشهور"}}},"day":{"displayName":"يوم","relative":{"0":"اليوم","1":"غدًا","2":"بعد الغد","-1":"أمس","-2":"أول أمس"},"relativeTime":{"future":{"zero":"خلال {0} من الأيام","one":"خلال {0} من الأيام","two":"خلال يومين","few":"خلال {0} أيام","many":"خلال {0} يومًا","other":"خلال {0} من الأيام"},"past":{"zero":"قبل {0} من الأيام","one":"قبل {0} من الأيام","two":"قبل يومين","few":"قبل {0} أيام","many":"قبل {0} يومًا","other":"قبل {0} من الأيام"}}},"hour":{"displayName":"الساعات","relativeTime":{"future":{"zero":"خلال {0} من الساعات","one":"خلال {0} من الساعات","two":"خلال ساعتين","few":"خلال {0} ساعات","many":"خلال {0} ساعة","other":"خلال {0} من الساعات"},"past":{"zero":"قبل {0} من الساعات","one":"قبل {0} من الساعات","two":"قبل ساعتين","few":"قبل {0} ساعات","many":"قبل {0} ساعة","other":"قبل {0} من الساعات"}}},"minute":{"displayName":"الدقائق","relativeTime":{"future":{"zero":"خلال {0} من الدقائق","one":"خلال {0} من الدقائق","two":"خلال دقيقتين","few":"خلال {0} دقائق","many":"خلال {0} دقيقة","other":"خلال {0} من الدقائق"},"past":{"zero":"قبل {0} من الدقائق","one":"قبل {0} من الدقائق","two":"قبل دقيقتين","few":"قبل {0} دقائق","many":"قبل {0} دقيقة","other":"قبل {0} من الدقائق"}}},"second":{"displayName":"الثواني","relative":{"0":"الآن"},"relativeTime":{"future":{"zero":"خلال {0} من الثواني","one":"خلال {0} من الثواني","two":"خلال ثانيتين","few":"خلال {0} ثوانِ","many":"خلال {0} ثانية","other":"خلال {0} من الثواني"},"past":{"zero":"قبل {0} من الثواني","one":"قبل {0} من الثواني","two":"قبل ثانيتين","few":"قبل {0} ثوانِ","many":"قبل {0} ثانية","other":"قبل {0} من الثواني"}}}}});
ReactIntl.__addLocaleData({"locale":"ar-BH","parentLocale":"ar"});
ReactIntl.__addLocaleData({"locale":"ar-DJ","parentLocale":"ar"});
ReactIntl.__addLocaleData({"locale":"ar-DZ","parentLocale":"ar"});
ReactIntl.__addLocaleData({"locale":"ar-EG","parentLocale":"ar"});
ReactIntl.__addLocaleData({"locale":"ar-EH","parentLocale":"ar"});
ReactIntl.__addLocaleData({"locale":"ar-ER","parentLocale":"ar"});
ReactIntl.__addLocaleData({"locale":"ar-IL","parentLocale":"ar"});
ReactIntl.__addLocaleData({"locale":"ar-IQ","parentLocale":"ar"});
ReactIntl.__addLocaleData({"locale":"ar-JO","parentLocale":"ar"});
ReactIntl.__addLocaleData({"locale":"ar-KM","parentLocale":"ar"});
ReactIntl.__addLocaleData({"locale":"ar-KW","parentLocale":"ar"});
ReactIntl.__addLocaleData({"locale":"ar-LB","parentLocale":"ar"});
ReactIntl.__addLocaleData({"locale":"ar-LY","parentLocale":"ar"});
ReactIntl.__addLocaleData({"locale":"ar-MA","parentLocale":"ar"});
ReactIntl.__addLocaleData({"locale":"ar-MR","parentLocale":"ar"});
ReactIntl.__addLocaleData({"locale":"ar-OM","parentLocale":"ar"});
ReactIntl.__addLocaleData({"locale":"ar-PS","parentLocale":"ar"});
ReactIntl.__addLocaleData({"locale":"ar-QA","parentLocale":"ar"});
ReactIntl.__addLocaleData({"locale":"ar-SA","parentLocale":"ar"});
ReactIntl.__addLocaleData({"locale":"ar-SD","parentLocale":"ar"});
ReactIntl.__addLocaleData({"locale":"ar-SO","parentLocale":"ar"});
ReactIntl.__addLocaleData({"locale":"ar-SS","parentLocale":"ar"});
ReactIntl.__addLocaleData({"locale":"ar-SY","parentLocale":"ar"});
ReactIntl.__addLocaleData({"locale":"ar-TD","parentLocale":"ar"});
ReactIntl.__addLocaleData({"locale":"ar-TN","parentLocale":"ar"});
ReactIntl.__addLocaleData({"locale":"ar-YE","parentLocale":"ar"});

ReactIntl.__addLocaleData({"locale":"as","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"বছৰ","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"মাহ","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"দিন","relative":{"0":"today","1":"কাইলৈ","2":"পৰহিলৈ","-1":"কালি","-2":"পৰহি"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"ঘণ্টা","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"মিনিট","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"ছেকেণ্ড","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"as-IN","parentLocale":"as"});

ReactIntl.__addLocaleData({"locale":"asa","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Mwaka","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Mweji","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Thiku","relative":{"0":"Iyoo","1":"Yavo","-1":"Ighuo"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Thaa","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Dakika","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Thekunde","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"asa-TZ","parentLocale":"asa"});

ReactIntl.__addLocaleData({"locale":"ast","pluralRuleFunction":function (n,ord){var s=String(n).split("."),v0=!s[1];if(ord)return"other";return n==1&&v0?"one":"other"},"fields":{"year":{"displayName":"añu","relative":{"0":"esti añu","1":"l’añu viniente","-1":"l’añu pasáu"},"relativeTime":{"future":{"one":"En {0} añu","other":"En {0} años"},"past":{"one":"Hai {0} añu","other":"Hai {0} años"}}},"month":{"displayName":"mes","relative":{"0":"esti mes","1":"el mes viniente","-1":"el mes pasáu"},"relativeTime":{"future":{"one":"En {0} mes","other":"En {0} meses"},"past":{"one":"Hai {0} mes","other":"Hai {0} meses"}}},"day":{"displayName":"día","relative":{"0":"güei","1":"mañana","2":"pasao mañana","-1":"ayeri","-2":"antayeri"},"relativeTime":{"future":{"one":"En {0} dia","other":"En {0} díes"},"past":{"one":"Hai {0} dia","other":"Hai {0} díes"}}},"hour":{"displayName":"hora","relativeTime":{"future":{"one":"En {0} hora","other":"En {0} hores"},"past":{"one":"Hai {0} hora","other":"Hai {0} hores"}}},"minute":{"displayName":"minutu","relativeTime":{"future":{"one":"En {0} minutu","other":"En {0} minutos"},"past":{"one":"Hai {0} minutu","other":"Hai {0} minutos"}}},"second":{"displayName":"segundu","relative":{"0":"now"},"relativeTime":{"future":{"one":"En {0} segundu","other":"En {0} segundos"},"past":{"one":"Hai {0} segundu","other":"Hai {0} segundos"}}}}});
ReactIntl.__addLocaleData({"locale":"ast-ES","parentLocale":"ast"});

ReactIntl.__addLocaleData({"locale":"az","pluralRuleFunction":function (n,ord){var s=String(n).split("."),i=s[0],i10=i.slice(-1),i100=i.slice(-2),i1000=i.slice(-3);if(ord)return i10==1||i10==2||i10==5||i10==7||i10==8||(i100==20||i100==50||i100==70||i100==80)?"one":i10==3||i10==4||(i1000==100||i1000==200||i1000==300||i1000==400||i1000==500||i1000==600||i1000==700||i1000==800||i1000==900)?"few":i==0||i10==6||(i100==40||i100==60||i100==90)?"many":"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"İl","relative":{"0":"bu il","1":"gələn il","-1":"keçən il"},"relativeTime":{"future":{"one":"{0} il ərzində","other":"{0} il ərzində"},"past":{"one":"{0} il öncə","other":"{0} il öncə"}}},"month":{"displayName":"Ay","relative":{"0":"bu ay","1":"gələn ay","-1":"keçən ay"},"relativeTime":{"future":{"one":"{0} ay ərzində","other":"{0} ay ərzində"},"past":{"one":"{0} ay öncə","other":"{0} ay öncə"}}},"day":{"displayName":"Gün","relative":{"0":"bu gün","1":"sabah","-1":"dünən"},"relativeTime":{"future":{"one":"{0} gün ərzində","other":"{0} gün ərzində"},"past":{"one":"{0} gün öncə","other":"{0} gün öncə"}}},"hour":{"displayName":"Saat","relativeTime":{"future":{"one":"{0} saat ərzində","other":"{0} saat ərzində"},"past":{"one":"{0} saat öncə","other":"{0} saat öncə"}}},"minute":{"displayName":"Dəqiqə","relativeTime":{"future":{"one":"{0} dəqiqə ərzində","other":"{0} dəqiqə ərzində"},"past":{"one":"{0} dəqiqə öncə","other":"{0} dəqiqə öncə"}}},"second":{"displayName":"Saniyə","relative":{"0":"indi"},"relativeTime":{"future":{"one":"{0} saniyə ərzində","other":"{0} saniyə ərzində"},"past":{"one":"{0} saniyə öncə","other":"{0} saniyə öncə"}}}}});
ReactIntl.__addLocaleData({"locale":"az-Cyrl","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"az-Cyrl-AZ","parentLocale":"az-Cyrl"});
ReactIntl.__addLocaleData({"locale":"az-Latn","parentLocale":"az"});
ReactIntl.__addLocaleData({"locale":"az-Latn-AZ","parentLocale":"az-Latn"});

ReactIntl.__addLocaleData({"locale":"bas","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"ŋwìi","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"soŋ","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"kɛl","relative":{"0":"lɛ̀n","1":"yàni","-1":"yààni"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"ŋgɛŋ","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"ŋget","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"hìŋgeŋget","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"bas-CM","parentLocale":"bas"});

ReactIntl.__addLocaleData({"locale":"be","pluralRuleFunction":function (n,ord){var s=String(n).split("."),t0=Number(s[0])==n,n10=t0&&s[0].slice(-1),n100=t0&&s[0].slice(-2);if(ord)return"other";return n10==1&&n100!=11?"one":n10>=2&&n10<=4&&(n100<12||n100>14)?"few":t0&&n10==0||n10>=5&&n10<=9||n100>=11&&n100<=14?"many":"other"},"fields":{"year":{"displayName":"год","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"месяц","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"дзень","relative":{"0":"сёння","1":"заўтра","2":"паслязаўтра","-1":"учора","-2":"пазаўчора"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"гадзіна","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"хвіліна","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"секунда","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"be-BY","parentLocale":"be"});

ReactIntl.__addLocaleData({"locale":"bem","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Umwaka","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Umweshi","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Ubushiku","relative":{"0":"Lelo","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Insa","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Mineti","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Sekondi","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"bem-ZM","parentLocale":"bem"});

ReactIntl.__addLocaleData({"locale":"bez","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Mwaha","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Mwedzi","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Sihu","relative":{"0":"Neng’u ni","1":"Hilawu","-1":"Igolo"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Saa","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Dakika","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Sekunde","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"bez-TZ","parentLocale":"bez"});

ReactIntl.__addLocaleData({"locale":"bg","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"година","relative":{"0":"тази година","1":"следващата година","-1":"миналата година"},"relativeTime":{"future":{"one":"след {0} година","other":"след {0} години"},"past":{"one":"преди {0} година","other":"преди {0} години"}}},"month":{"displayName":"месец","relative":{"0":"този месец","1":"следващият месец","-1":"миналият месец"},"relativeTime":{"future":{"one":"след {0} месец","other":"след {0} месеца"},"past":{"one":"преди {0} месец","other":"преди {0} месеца"}}},"day":{"displayName":"ден","relative":{"0":"днес","1":"утре","2":"вдругиден","-1":"вчера","-2":"онзи ден"},"relativeTime":{"future":{"one":"след {0} ден","other":"след {0} дни"},"past":{"one":"преди {0} ден","other":"преди {0} дни"}}},"hour":{"displayName":"час","relativeTime":{"future":{"one":"след {0} час","other":"след {0} часа"},"past":{"one":"преди {0} час","other":"преди {0} часа"}}},"minute":{"displayName":"минута","relativeTime":{"future":{"one":"след {0} минута","other":"след {0} минути"},"past":{"one":"преди {0} минута","other":"преди {0} минути"}}},"second":{"displayName":"секунда","relative":{"0":"сега"},"relativeTime":{"future":{"one":"след {0} секунда","other":"след {0} секунди"},"past":{"one":"преди {0} секунда","other":"преди {0} секунди"}}}}});
ReactIntl.__addLocaleData({"locale":"bg-BG","parentLocale":"bg"});

ReactIntl.__addLocaleData({"locale":"bh","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==0||n==1?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});

ReactIntl.__addLocaleData({"locale":"bm","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"san","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"kalo","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"don","relative":{"0":"bi","1":"sini","-1":"kunu"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"lɛrɛ","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"miniti","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"sekondi","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"bm-Latn","parentLocale":"bm"});
ReactIntl.__addLocaleData({"locale":"bm-Latn-ML","parentLocale":"bm-Latn"});
ReactIntl.__addLocaleData({"locale":"bm-Nkoo","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});

ReactIntl.__addLocaleData({"locale":"bn","pluralRuleFunction":function (n,ord){if(ord)return n==1||n==5||n==7||n==8||n==9||n==10?"one":n==2||n==3?"two":n==4?"few":n==6?"many":"other";return n>=0&&n<=1?"one":"other"},"fields":{"year":{"displayName":"বছর","relative":{"0":"এই বছর","1":"পরের বছর","-1":"গত বছর"},"relativeTime":{"future":{"one":"{0} বছরে","other":"{0} বছরে"},"past":{"one":"{0} বছর পূর্বে","other":"{0} বছর পূর্বে"}}},"month":{"displayName":"মাস","relative":{"0":"এই মাস","1":"পরের মাস","-1":"গত মাস"},"relativeTime":{"future":{"one":"{0} মাসে","other":"{0} মাসে"},"past":{"one":"{0} মাস পূর্বে","other":"{0} মাস পূর্বে"}}},"day":{"displayName":"দিন","relative":{"0":"আজ","1":"আগামীকাল","2":"আগামী পরশু","-1":"গতকাল","-2":"গত পরশু"},"relativeTime":{"future":{"one":"{0} দিনের মধ্যে","other":"{0} দিনের মধ্যে"},"past":{"one":"{0} দিন পূর্বে","other":"{0} দিন পূর্বে"}}},"hour":{"displayName":"ঘন্টা","relativeTime":{"future":{"one":"{0} ঘন্টায়","other":"{0} ঘন্টায়"},"past":{"one":"{0} ঘন্টা আগে","other":"{0} ঘন্টা আগে"}}},"minute":{"displayName":"মিনিট","relativeTime":{"future":{"one":"{0} মিনিটে","other":"{0} মিনিটে"},"past":{"one":"{0} মিনিট পূর্বে","other":"{0} মিনিট পূর্বে"}}},"second":{"displayName":"সেকেন্ড","relative":{"0":"এখন"},"relativeTime":{"future":{"one":"{0} সেকেন্ডে","other":"{0} সেকেন্ডে"},"past":{"one":"{0} সেকেন্ড পূর্বে","other":"{0} সেকেন্ড পূর্বে"}}}}});
ReactIntl.__addLocaleData({"locale":"bn-BD","parentLocale":"bn"});
ReactIntl.__addLocaleData({"locale":"bn-IN","parentLocale":"bn"});

ReactIntl.__addLocaleData({"locale":"bo","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"ལོ།","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"ཟླ་བ་","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"ཉིན།","relative":{"0":"དེ་རིང་","1":"སང་ཉིན་","2":"གནངས་ཉིན་ཀ་","-1":"ཁས་ས་","-2":"ཁས་ཉིན་ཀ་"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"ཆུ་ཙོ་","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"སྐར་མ།","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"སྐར་ཆ།","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"bo-CN","parentLocale":"bo"});
ReactIntl.__addLocaleData({"locale":"bo-IN","parentLocale":"bo"});

ReactIntl.__addLocaleData({"locale":"br","pluralRuleFunction":function (n,ord){var s=String(n).split("."),t0=Number(s[0])==n,n10=t0&&s[0].slice(-1),n100=t0&&s[0].slice(-2),n1000000=t0&&s[0].slice(-6);if(ord)return"other";return n10==1&&n100!=11&&n100!=71&&n100!=91?"one":n10==2&&n100!=12&&n100!=72&&n100!=92?"two":(n10==3||n10==4||n10==9)&&(n100<10||n100>19)&&(n100<70||n100>79)&&(n100<90||n100>99)?"few":n!=0&&t0&&n1000000==0?"many":"other"},"fields":{"year":{"displayName":"bloaz","relative":{"0":"this year","1":"next year","-1":"warlene"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"miz","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"deiz","relative":{"0":"hiziv","1":"warcʼhoazh","-1":"decʼh","-2":"dercʼhent-decʼh"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"eur","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"munut","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"eilenn","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"br-FR","parentLocale":"br"});

ReactIntl.__addLocaleData({"locale":"brx","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"बोसोर","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"दान","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"सान","relative":{"0":"दिनै","1":"गाबोन","-1":"मैया"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"रिंगा","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"मिनिथ","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"सेखेन्द","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"brx-IN","parentLocale":"brx"});

ReactIntl.__addLocaleData({"locale":"bs","pluralRuleFunction":function (n,ord){var s=String(n).split("."),i=s[0],f=s[1]||"",v0=!s[1],i10=i.slice(-1),i100=i.slice(-2),f10=f.slice(-1),f100=f.slice(-2);if(ord)return"other";return v0&&i10==1&&i100!=11||f10==1&&f100!=11?"one":v0&&(i10>=2&&i10<=4)&&(i100<12||i100>14)||f10>=2&&f10<=4&&(f100<12||f100>14)?"few":"other"},"fields":{"year":{"displayName":"godina","relative":{"0":"ove godine","1":"sljedeće godine","-1":"prošle godine"},"relativeTime":{"future":{"one":"za {0} godinu","few":"za {0} godine","other":"za {0} godina"},"past":{"one":"prije {0} godinu","few":"prije {0} godine","other":"prije {0} godina"}}},"month":{"displayName":"mjesec","relative":{"0":"ovaj mjesec","1":"sljedeći mjesec","-1":"prošli mjesec"},"relativeTime":{"future":{"one":"za {0} mjesec","few":"za {0} mjeseca","other":"za {0} mjeseci"},"past":{"one":"prije {0} mjesec","few":"prije {0} mjeseca","other":"prije {0} mjeseci"}}},"day":{"displayName":"dan","relative":{"0":"danas","1":"sutra","2":"prekosutra","-1":"juče","-2":"prekjuče"},"relativeTime":{"future":{"one":"za {0} dan","few":"za {0} dana","other":"za {0} dana"},"past":{"one":"prije {0} dan","few":"prije {0} dana","other":"prije {0} dana"}}},"hour":{"displayName":"sat","relativeTime":{"future":{"one":"za {0} sat","few":"za {0} sata","other":"za {0} sati"},"past":{"one":"prije {0} sat","few":"prije {0} sata","other":"prije {0} sati"}}},"minute":{"displayName":"minut","relativeTime":{"future":{"one":"za {0} minutu","few":"za {0} minute","other":"za {0} minuta"},"past":{"one":"prije {0} minutu","few":"prije {0} minute","other":"prije {0} minuta"}}},"second":{"displayName":"sekund","relative":{"0":"sada"},"relativeTime":{"future":{"one":"za {0} sekundu","few":"za {0} sekunde","other":"za {0} sekundi"},"past":{"one":"prije {0} sekundu","few":"prije {0} sekunde","other":"prije {0} sekundi"}}}}});
ReactIntl.__addLocaleData({"locale":"bs-Cyrl","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"година","relative":{"0":"Ове године","1":"Следеће године","-1":"Прошле године"},"relativeTime":{"future":{"one":"за {0} годину","few":"за {0} године","other":"за {0} година"},"past":{"one":"пре {0} годину","few":"пре {0} године","other":"пре {0} година"}}},"month":{"displayName":"месец","relative":{"0":"Овог месеца","1":"Следећег месеца","-1":"Прошлог месеца"},"relativeTime":{"future":{"one":"за {0} месец","few":"за {0} месеца","other":"за {0} месеци"},"past":{"one":"пре {0} месец","few":"пре {0} месеца","other":"пре {0} месеци"}}},"day":{"displayName":"дан","relative":{"0":"данас","1":"сутра","2":"прекосутра","-1":"јуче","-2":"прекјуче"},"relativeTime":{"future":{"one":"за {0} дан","few":"за {0} дана","other":"за {0} дана"},"past":{"one":"пре {0} дан","few":"пре {0} дана","other":"пре {0} дана"}}},"hour":{"displayName":"час","relativeTime":{"future":{"one":"за {0} сат","few":"за {0} сата","other":"за {0} сати"},"past":{"one":"пре {0} сат","few":"пре {0} сата","other":"пре {0} сати"}}},"minute":{"displayName":"минут","relativeTime":{"future":{"one":"за {0} минут","few":"за {0} минута","other":"за {0} минута"},"past":{"one":"пре {0} минут","few":"пре {0} минута","other":"пре {0} минута"}}},"second":{"displayName":"секунд","relative":{"0":"now"},"relativeTime":{"future":{"one":"за {0} секунд","few":"за {0} секунде","other":"за {0} секунди"},"past":{"one":"пре {0} секунд","few":"пре {0} секунде","other":"пре {0} секунди"}}}}});
ReactIntl.__addLocaleData({"locale":"bs-Cyrl-BA","parentLocale":"bs-Cyrl"});
ReactIntl.__addLocaleData({"locale":"bs-Latn","parentLocale":"bs"});
ReactIntl.__addLocaleData({"locale":"bs-Latn-BA","parentLocale":"bs-Latn"});

ReactIntl.__addLocaleData({"locale":"ca","pluralRuleFunction":function (n,ord){var s=String(n).split("."),v0=!s[1];if(ord)return n==1||n==3?"one":n==2?"two":n==4?"few":"other";return n==1&&v0?"one":"other"},"fields":{"year":{"displayName":"any","relative":{"0":"enguany","1":"l’any que ve","-1":"l’any passat"},"relativeTime":{"future":{"one":"d’aquí a {0} any","other":"d’aquí a {0} anys"},"past":{"one":"fa {0} any","other":"fa {0} anys"}}},"month":{"displayName":"mes","relative":{"0":"aquest mes","1":"el mes que ve","-1":"el mes passat"},"relativeTime":{"future":{"one":"d’aquí a {0} mes","other":"d’aquí a {0} mesos"},"past":{"one":"fa {0} mes","other":"fa {0} mesos"}}},"day":{"displayName":"dia","relative":{"0":"avui","1":"demà","2":"demà passat","-1":"ahir","-2":"abans-d’ahir"},"relativeTime":{"future":{"one":"d’aquí a {0} dia","other":"d’aquí a {0} dies"},"past":{"one":"fa {0} dia","other":"fa {0} dies"}}},"hour":{"displayName":"hora","relativeTime":{"future":{"one":"d’aquí a {0} hora","other":"d’aquí {0} hores"},"past":{"one":"fa {0} hora","other":"fa {0} hores"}}},"minute":{"displayName":"minut","relativeTime":{"future":{"one":"d’aquí a {0} minut","other":"d’aquí a {0} minuts"},"past":{"one":"fa {0} minut","other":"fa {0} minuts"}}},"second":{"displayName":"segon","relative":{"0":"ara"},"relativeTime":{"future":{"one":"d’aquí a {0} segon","other":"d’aquí a {0} segons"},"past":{"one":"fa {0} segon","other":"fa {0} segons"}}}}});
ReactIntl.__addLocaleData({"locale":"ca-AD","parentLocale":"ca"});
ReactIntl.__addLocaleData({"locale":"ca-ES","parentLocale":"ca"});
ReactIntl.__addLocaleData({"locale":"ca-ES-VALENCIA","parentLocale":"ca-ES"});
ReactIntl.__addLocaleData({"locale":"ca-FR","parentLocale":"ca"});
ReactIntl.__addLocaleData({"locale":"ca-IT","parentLocale":"ca"});

ReactIntl.__addLocaleData({"locale":"cgg","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Omwaka","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Omwezi","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Eizooba","relative":{"0":"Erizooba","1":"Nyenkyakare","-1":"Nyomwabazyo"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Shaaha","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Edakiika","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Obucweka\u002FEsekendi","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"cgg-UG","parentLocale":"cgg"});

ReactIntl.__addLocaleData({"locale":"chr","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"ᏑᏕᏘᏴᏓ","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"ᏏᏅᏓ","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"ᏏᎦ","relative":{"0":"ᎪᎯ ᎢᎦ","1":"ᏌᎾᎴᎢ","-1":"ᏒᎯ"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"ᏑᏣᎶᏓ","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"ᎢᏯᏔᏬᏍᏔᏅ","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"ᎠᏎᏢ","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"chr-US","parentLocale":"chr"});

ReactIntl.__addLocaleData({"locale":"ckb","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});

ReactIntl.__addLocaleData({"locale":"cs","pluralRuleFunction":function (n,ord){var s=String(n).split("."),i=s[0],v0=!s[1];if(ord)return"other";return n==1&&v0?"one":i>=2&&i<=4&&v0?"few":!v0?"many":"other"},"fields":{"year":{"displayName":"Rok","relative":{"0":"tento rok","1":"příští rok","-1":"minulý rok"},"relativeTime":{"future":{"one":"za {0} rok","few":"za {0} roky","many":"za {0} roku","other":"za {0} let"},"past":{"one":"před {0} rokem","few":"před {0} lety","many":"před {0} rokem","other":"před {0} lety"}}},"month":{"displayName":"Měsíc","relative":{"0":"tento měsíc","1":"příští měsíc","-1":"minulý měsíc"},"relativeTime":{"future":{"one":"za {0} měsíc","few":"za {0} měsíce","many":"za {0} měsíce","other":"za {0} měsíců"},"past":{"one":"před {0} měsícem","few":"před {0} měsíci","many":"před {0} měsícem","other":"před {0} měsíci"}}},"day":{"displayName":"Den","relative":{"0":"dnes","1":"zítra","2":"pozítří","-1":"včera","-2":"předevčírem"},"relativeTime":{"future":{"one":"za {0} den","few":"za {0} dny","many":"za {0} dne","other":"za {0} dní"},"past":{"one":"před {0} dnem","few":"před {0} dny","many":"před {0} dnem","other":"před {0} dny"}}},"hour":{"displayName":"Hodina","relativeTime":{"future":{"one":"za {0} hodinu","few":"za {0} hodiny","many":"za {0} hodiny","other":"za {0} hodin"},"past":{"one":"před {0} hodinou","few":"před {0} hodinami","many":"před {0} hodinou","other":"před {0} hodinami"}}},"minute":{"displayName":"Minuta","relativeTime":{"future":{"one":"za {0} minutu","few":"za {0} minuty","many":"za {0} minuty","other":"za {0} minut"},"past":{"one":"před {0} minutou","few":"před {0} minutami","many":"před {0} minutou","other":"před {0} minutami"}}},"second":{"displayName":"Sekunda","relative":{"0":"nyní"},"relativeTime":{"future":{"one":"za {0} sekundu","few":"za {0} sekundy","many":"za {0} sekundy","other":"za {0} sekund"},"past":{"one":"před {0} sekundou","few":"před {0} sekundami","many":"před {0} sekundou","other":"před {0} sekundami"}}}}});
ReactIntl.__addLocaleData({"locale":"cs-CZ","parentLocale":"cs"});

ReactIntl.__addLocaleData({"locale":"cy","pluralRuleFunction":function (n,ord){if(ord)return n==0||n==7||n==8||n==9?"zero":n==1?"one":n==2?"two":n==3||n==4?"few":n==5||n==6?"many":"other";return n==0?"zero":n==1?"one":n==2?"two":n==3?"few":n==6?"many":"other"},"fields":{"year":{"displayName":"Blwyddyn","relative":{"0":"eleni","1":"blwyddyn nesaf","-1":"llynedd"},"relativeTime":{"future":{"zero":"Ymhen {0} mlynedd","one":"Ymhen blwyddyn","two":"Ymhen {0} flynedd","few":"Ymhen {0} blynedd","many":"Ymhen {0} blynedd","other":"Ymhen {0} mlynedd"},"past":{"zero":"{0} o flynyddoedd yn ôl","one":"blwyddyn yn ôl","two":"{0} flynedd yn ôl","few":"{0} blynedd yn ôl","many":"{0} blynedd yn ôl","other":"{0} o flynyddoedd yn ôl"}}},"month":{"displayName":"Mis","relative":{"0":"y mis hwn","1":"mis nesaf","-1":"mis diwethaf"},"relativeTime":{"future":{"zero":"Ymhen {0} mis","one":"Ymhen mis","two":"Ymhen deufis","few":"Ymhen {0} mis","many":"Ymhen {0} mis","other":"Ymhen {0} mis"},"past":{"zero":"{0} mis yn ôl","one":"{0} mis yn ôl","two":"{0} fis yn ôl","few":"{0} mis yn ôl","many":"{0} mis yn ôl","other":"{0} mis yn ôl"}}},"day":{"displayName":"Dydd","relative":{"0":"heddiw","1":"yfory","2":"drennydd","-1":"ddoe","-2":"echdoe"},"relativeTime":{"future":{"zero":"Ymhen {0} diwrnod","one":"Ymhen diwrnod","two":"Ymhen deuddydd","few":"Ymhen tridiau","many":"Ymhen {0} diwrnod","other":"Ymhen {0} diwrnod"},"past":{"zero":"{0} diwrnod yn ôl","one":"{0} diwrnod yn ôl","two":"{0} ddiwrnod yn ôl","few":"{0} diwrnod yn ôl","many":"{0} diwrnod yn ôl","other":"{0} diwrnod yn ôl"}}},"hour":{"displayName":"Awr","relativeTime":{"future":{"zero":"Ymhen {0} awr","one":"Ymhen {0} awr","two":"Ymhen {0} awr","few":"Ymhen {0} awr","many":"Ymhen {0} awr","other":"Ymhen {0} awr"},"past":{"zero":"{0} awr yn ôl","one":"awr yn ôl","two":"{0} awr yn ôl","few":"{0} awr yn ôl","many":"{0} awr yn ôl","other":"{0} awr yn ôl"}}},"minute":{"displayName":"Munud","relativeTime":{"future":{"zero":"Ymhen {0} munud","one":"Ymhen munud","two":"Ymhen {0} funud","few":"Ymhen {0} munud","many":"Ymhen {0} munud","other":"Ymhen {0} munud"},"past":{"zero":"{0} munud yn ôl","one":"{0} munud yn ôl","two":"{0} funud yn ôl","few":"{0} munud yn ôl","many":"{0} munud yn ôl","other":"{0} munud yn ôl"}}},"second":{"displayName":"Eiliad","relative":{"0":"nawr"},"relativeTime":{"future":{"zero":"Ymhen {0} eiliad","one":"Ymhen eiliad","two":"Ymhen {0} eiliad","few":"Ymhen {0} eiliad","many":"Ymhen {0} eiliad","other":"Ymhen {0} eiliad"},"past":{"zero":"{0} eiliad yn ôl","one":"eiliad yn ôl","two":"{0} eiliad yn ôl","few":"{0} eiliad yn ôl","many":"{0} eiliad yn ôl","other":"{0} eiliad yn ôl"}}}}});
ReactIntl.__addLocaleData({"locale":"cy-GB","parentLocale":"cy"});

ReactIntl.__addLocaleData({"locale":"da","pluralRuleFunction":function (n,ord){var s=String(n).split("."),i=s[0],t0=Number(s[0])==n;if(ord)return"other";return n==1||!t0&&(i==0||i==1)?"one":"other"},"fields":{"year":{"displayName":"År","relative":{"0":"i år","1":"næste år","-1":"sidste år"},"relativeTime":{"future":{"one":"om {0} år","other":"om {0} år"},"past":{"one":"for {0} år siden","other":"for {0} år siden"}}},"month":{"displayName":"Måned","relative":{"0":"denne måned","1":"næste måned","-1":"sidste måned"},"relativeTime":{"future":{"one":"om {0} måned","other":"om {0} måneder"},"past":{"one":"for {0} måned siden","other":"for {0} måneder siden"}}},"day":{"displayName":"Dag","relative":{"0":"i dag","1":"i morgen","2":"i overmorgen","-1":"i går","-2":"i forgårs"},"relativeTime":{"future":{"one":"om {0} dag","other":"om {0} dage"},"past":{"one":"for {0} dag siden","other":"for {0} dage siden"}}},"hour":{"displayName":"Time","relativeTime":{"future":{"one":"om {0} time","other":"om {0} timer"},"past":{"one":"for {0} time siden","other":"for {0} timer siden"}}},"minute":{"displayName":"Minut","relativeTime":{"future":{"one":"om {0} minut","other":"om {0} minutter"},"past":{"one":"for {0} minut siden","other":"for {0} minutter siden"}}},"second":{"displayName":"Sekund","relative":{"0":"nu"},"relativeTime":{"future":{"one":"om {0} sekund","other":"om {0} sekunder"},"past":{"one":"for {0} sekund siden","other":"for {0} sekunder siden"}}}}});
ReactIntl.__addLocaleData({"locale":"da-DK","parentLocale":"da"});
ReactIntl.__addLocaleData({"locale":"da-GL","parentLocale":"da"});

ReactIntl.__addLocaleData({"locale":"dav","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Mwaka","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Mori","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Ituku","relative":{"0":"Idime","1":"Kesho","-1":"Iguo"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Saa","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Dakika","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Sekunde","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"dav-KE","parentLocale":"dav"});

ReactIntl.__addLocaleData({"locale":"de","pluralRuleFunction":function (n,ord){var s=String(n).split("."),v0=!s[1];if(ord)return"other";return n==1&&v0?"one":"other"},"fields":{"year":{"displayName":"Jahr","relative":{"0":"dieses Jahr","1":"nächstes Jahr","-1":"letztes Jahr"},"relativeTime":{"future":{"one":"in {0} Jahr","other":"in {0} Jahren"},"past":{"one":"vor {0} Jahr","other":"vor {0} Jahren"}}},"month":{"displayName":"Monat","relative":{"0":"diesen Monat","1":"nächsten Monat","-1":"letzten Monat"},"relativeTime":{"future":{"one":"in {0} Monat","other":"in {0} Monaten"},"past":{"one":"vor {0} Monat","other":"vor {0} Monaten"}}},"day":{"displayName":"Tag","relative":{"0":"heute","1":"morgen","2":"übermorgen","-1":"gestern","-2":"vorgestern"},"relativeTime":{"future":{"one":"in {0} Tag","other":"in {0} Tagen"},"past":{"one":"vor {0} Tag","other":"vor {0} Tagen"}}},"hour":{"displayName":"Stunde","relativeTime":{"future":{"one":"in {0} Stunde","other":"in {0} Stunden"},"past":{"one":"vor {0} Stunde","other":"vor {0} Stunden"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"one":"in {0} Minute","other":"in {0} Minuten"},"past":{"one":"vor {0} Minute","other":"vor {0} Minuten"}}},"second":{"displayName":"Sekunde","relative":{"0":"jetzt"},"relativeTime":{"future":{"one":"in {0} Sekunde","other":"in {0} Sekunden"},"past":{"one":"vor {0} Sekunde","other":"vor {0} Sekunden"}}}}});
ReactIntl.__addLocaleData({"locale":"de-AT","parentLocale":"de"});
ReactIntl.__addLocaleData({"locale":"de-BE","parentLocale":"de"});
ReactIntl.__addLocaleData({"locale":"de-CH","parentLocale":"de"});
ReactIntl.__addLocaleData({"locale":"de-DE","parentLocale":"de"});
ReactIntl.__addLocaleData({"locale":"de-LI","parentLocale":"de"});
ReactIntl.__addLocaleData({"locale":"de-LU","parentLocale":"de"});

ReactIntl.__addLocaleData({"locale":"dje","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Jiiri","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Handu","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Zaari","relative":{"0":"Hõo","1":"Suba","-1":"Bi"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Guuru","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Miniti","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Miti","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"dje-NE","parentLocale":"dje"});

ReactIntl.__addLocaleData({"locale":"dsb","pluralRuleFunction":function (n,ord){var s=String(n).split("."),i=s[0],f=s[1]||"",v0=!s[1],i100=i.slice(-2),f100=f.slice(-2);if(ord)return"other";return v0&&i100==1||f100==1?"one":v0&&i100==2||f100==2?"two":v0&&(i100==3||i100==4)||(f100==3||f100==4)?"few":"other"},"fields":{"year":{"displayName":"lěto","relative":{"0":"lětosa","1":"znowa","-1":"łoni"},"relativeTime":{"future":{"one":"za {0} lěto","two":"za {0} lěśe","few":"za {0} lěta","other":"za {0} lět"},"past":{"one":"pśed {0} lětom","two":"pśed {0} lětoma","few":"pśed {0} lětami","other":"pśed {0} lětami"}}},"month":{"displayName":"mjasec","relative":{"0":"ten mjasec","1":"pśiducy mjasec","-1":"slědny mjasec"},"relativeTime":{"future":{"one":"za {0} mjasec","two":"za {0} mjaseca","few":"za {0} mjasecy","other":"za {0} mjasecow"},"past":{"one":"pśed {0} mjasecom","two":"pśed {0} mjasecoma","few":"pśed {0} mjasecami","other":"pśed {0} mjasecami"}}},"day":{"displayName":"źeń","relative":{"0":"źinsa","1":"witśe","-1":"cora"},"relativeTime":{"future":{"one":"za {0} źeń","two":"za {0} dnja","few":"za {0} dny","other":"za {0} dnjow"},"past":{"one":"pśed {0} dnjom","two":"pśed {0} dnjoma","few":"pśed {0} dnjami","other":"pśed {0} dnjami"}}},"hour":{"displayName":"góźina","relativeTime":{"future":{"one":"za {0} góźinu","two":"za {0} góźinje","few":"za {0} góźiny","other":"za {0} góźin"},"past":{"one":"pśed {0} góźinu","two":"pśed {0} góźinoma","few":"pśed {0} góźinami","other":"pśed {0} góźinami"}}},"minute":{"displayName":"minuta","relativeTime":{"future":{"one":"za {0} minutu","two":"za {0} minuśe","few":"za {0} minuty","other":"za {0} minutow"},"past":{"one":"pśed {0} minutu","two":"pśed {0} minutoma","few":"pśed {0} minutami","other":"pśed {0} minutami"}}},"second":{"displayName":"sekunda","relative":{"0":"now"},"relativeTime":{"future":{"one":"za {0} sekundu","two":"za {0} sekunźe","few":"za {0} sekundy","other":"za {0} sekundow"},"past":{"one":"pśed {0} sekundu","two":"pśed {0} sekundoma","few":"pśed {0} sekundami","other":"pśed {0} sekundami"}}}}});
ReactIntl.__addLocaleData({"locale":"dsb-DE","parentLocale":"dsb"});

ReactIntl.__addLocaleData({"locale":"dua","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"mbú","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"mɔ́di","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"búnyá","relative":{"0":"wɛ́ŋgɛ̄","1":"kíɛlɛ","-1":"kíɛlɛ nítómb́í"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"ŋgandɛ","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"ndɔkɔ","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"píndí","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"dua-CM","parentLocale":"dua"});

ReactIntl.__addLocaleData({"locale":"dv","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});

ReactIntl.__addLocaleData({"locale":"dyo","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Emit","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Fuleeŋ","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Funak","relative":{"0":"Jaat","1":"Kajom","-1":"Fucen"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"dyo-SN","parentLocale":"dyo"});

ReactIntl.__addLocaleData({"locale":"dz","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"ལོ","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"ལོ་འཁོར་ {0} ནང་"},"past":{"other":"ལོ་འཁོར་ {0} ཧེ་མ་"}}},"month":{"displayName":"ཟླ་ཝ་","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"ཟླཝ་ {0} ནང་"},"past":{"other":"ཟླཝ་ {0} ཧེ་མ་"}}},"day":{"displayName":"ཚེས་","relative":{"0":"ད་རིས་","1":"ནངས་པ་","2":"གནངས་ཚེ","-1":"ཁ་ཙ་","-2":"ཁ་ཉིམ"},"relativeTime":{"future":{"other":"ཉིནམ་ {0} ནང་"},"past":{"other":"ཉིནམ་ {0} ཧེ་མ་"}}},"hour":{"displayName":"ཆུ་ཚོད","relativeTime":{"future":{"other":"ཆུ་ཚོད་ {0} ནང་"},"past":{"other":"ཆུ་ཚོད་ {0} ཧེ་མ་"}}},"minute":{"displayName":"སྐར་མ","relativeTime":{"future":{"other":"སྐར་མ་ {0} ནང་"},"past":{"other":"སྐར་མ་ {0} ཧེ་མ་"}}},"second":{"displayName":"སྐར་ཆཱ་","relative":{"0":"now"},"relativeTime":{"future":{"other":"སྐར་ཆ་ {0} ནང་"},"past":{"other":"སྐར་ཆ་ {0} ཧེ་མ་"}}}}});
ReactIntl.__addLocaleData({"locale":"dz-BT","parentLocale":"dz"});

ReactIntl.__addLocaleData({"locale":"ebu","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Mwaka","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Mweri","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Mũthenya","relative":{"0":"Ũmũnthĩ","1":"Rũciũ","-1":"Ĩgoro"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Ithaa","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Ndagĩka","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Sekondi","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"ebu-KE","parentLocale":"ebu"});

ReactIntl.__addLocaleData({"locale":"ee","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"ƒe","relative":{"0":"ƒe sia","1":"ƒe si gbɔ na","-1":"ƒe si va yi"},"relativeTime":{"future":{"one":"le ƒe {0} me","other":"le ƒe {0} wo me"},"past":{"one":"ƒe {0} si va yi","other":"ƒe {0} si wo va yi"}}},"month":{"displayName":"ɣleti","relative":{"0":"ɣleti sia","1":"ɣleti si gbɔ na","-1":"ɣleti si va yi"},"relativeTime":{"future":{"one":"le ɣleti {0} me","other":"le ɣleti {0} wo me"},"past":{"one":"ɣleti {0} si va yi","other":"ɣleti {0} si wo va yi"}}},"day":{"displayName":"ŋkeke","relative":{"0":"egbe","1":"etsɔ si gbɔna","2":"nyitsɔ si gbɔna","-1":"etsɔ si va yi","-2":"nyitsɔ si va yi"},"relativeTime":{"future":{"one":"le ŋkeke {0} me","other":"le ŋkeke {0} wo me"},"past":{"one":"ŋkeke {0} si va yi","other":"ŋkeke {0} si wo va yi"}}},"hour":{"displayName":"gaƒoƒo","relativeTime":{"future":{"one":"le gaƒoƒo {0} me","other":"le gaƒoƒo {0} wo me"},"past":{"one":"gaƒoƒo {0} si va yi","other":"gaƒoƒo {0} si wo va yi"}}},"minute":{"displayName":"aɖabaƒoƒo","relativeTime":{"future":{"one":"le aɖabaƒoƒo {0} me","other":"le aɖabaƒoƒo {0} wo me"},"past":{"one":"aɖabaƒoƒo {0} si va yi","other":"aɖabaƒoƒo {0} si wo va yi"}}},"second":{"displayName":"sekend","relative":{"0":"fifi"},"relativeTime":{"future":{"one":"le sekend {0} me","other":"le sekend {0} wo me"},"past":{"one":"sekend {0} si va yi","other":"sekend {0} si wo va yi"}}}}});
ReactIntl.__addLocaleData({"locale":"ee-GH","parentLocale":"ee"});
ReactIntl.__addLocaleData({"locale":"ee-TG","parentLocale":"ee"});

ReactIntl.__addLocaleData({"locale":"el","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Έτος","relative":{"0":"φέτος","1":"επόμενο έτος","-1":"προηγούμενο έτος"},"relativeTime":{"future":{"one":"σε {0} έτος","other":"σε {0} έτη"},"past":{"one":"πριν από {0} έτος","other":"πριν από {0} έτη"}}},"month":{"displayName":"Μήνας","relative":{"0":"τρέχων μήνας","1":"επόμενος μήνας","-1":"προηγούμενος μήνας"},"relativeTime":{"future":{"one":"σε {0} μήνα","other":"σε {0} μήνες"},"past":{"one":"πριν από {0} μήνα","other":"πριν από {0} μήνες"}}},"day":{"displayName":"Ημέρα","relative":{"0":"σήμερα","1":"αύριο","2":"μεθαύριο","-1":"χθες","-2":"προχθές"},"relativeTime":{"future":{"one":"σε {0} ημέρα","other":"σε {0} ημέρες"},"past":{"one":"πριν από {0} ημέρα","other":"πριν από {0} ημέρες"}}},"hour":{"displayName":"Ώρα","relativeTime":{"future":{"one":"σε {0} ώρα","other":"σε {0} ώρες"},"past":{"one":"πριν από {0} ώρα","other":"πριν από {0} ώρες"}}},"minute":{"displayName":"Λεπτό","relativeTime":{"future":{"one":"σε {0} λεπτό","other":"σε {0} λεπτά"},"past":{"one":"πριν από {0} λεπτό","other":"πριν από {0} λεπτά"}}},"second":{"displayName":"Δευτερόλεπτο","relative":{"0":"τώρα"},"relativeTime":{"future":{"one":"σε {0} δευτερόλεπτο","other":"σε {0} δευτερόλεπτα"},"past":{"one":"πριν από {0} δευτερόλεπτο","other":"πριν από {0} δευτερόλεπτα"}}}}});
ReactIntl.__addLocaleData({"locale":"el-CY","parentLocale":"el"});
ReactIntl.__addLocaleData({"locale":"el-GR","parentLocale":"el"});

ReactIntl.__addLocaleData({"locale":"en","pluralRuleFunction":function (n,ord){var s=String(n).split("."),v0=!s[1],t0=Number(s[0])==n,n10=t0&&s[0].slice(-1),n100=t0&&s[0].slice(-2);if(ord)return n10==1&&n100!=11?"one":n10==2&&n100!=12?"two":n10==3&&n100!=13?"few":"other";return n==1&&v0?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"one":"in {0} year","other":"in {0} years"},"past":{"one":"{0} year ago","other":"{0} years ago"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"one":"in {0} month","other":"in {0} months"},"past":{"one":"{0} month ago","other":"{0} months ago"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"one":"in {0} day","other":"in {0} days"},"past":{"one":"{0} day ago","other":"{0} days ago"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"one":"in {0} hour","other":"in {0} hours"},"past":{"one":"{0} hour ago","other":"{0} hours ago"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"one":"in {0} minute","other":"in {0} minutes"},"past":{"one":"{0} minute ago","other":"{0} minutes ago"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"one":"in {0} second","other":"in {0} seconds"},"past":{"one":"{0} second ago","other":"{0} seconds ago"}}}}});
ReactIntl.__addLocaleData({"locale":"en-001","parentLocale":"en"});
ReactIntl.__addLocaleData({"locale":"en-150","parentLocale":"en-GB"});
ReactIntl.__addLocaleData({"locale":"en-GB","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-AG","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-AI","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-AS","parentLocale":"en"});
ReactIntl.__addLocaleData({"locale":"en-AU","parentLocale":"en-GB","fields":{"year":{"displayName":"Year","relative":{"0":"This year","1":"Next year","-1":"Last year"},"relativeTime":{"future":{"one":"in {0} year","other":"in {0} years"},"past":{"one":"{0} year ago","other":"{0} years ago"}}},"month":{"displayName":"Month","relative":{"0":"This month","1":"Next month","-1":"Last month"},"relativeTime":{"future":{"one":"in {0} month","other":"in {0} months"},"past":{"one":"{0} month ago","other":"{0} months ago"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"one":"in {0} day","other":"in {0} days"},"past":{"one":"{0} day ago","other":"{0} days ago"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"one":"in {0} hour","other":"in {0} hours"},"past":{"one":"{0} hour ago","other":"{0} hours ago"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"one":"in {0} minute","other":"in {0} minutes"},"past":{"one":"{0} minute ago","other":"{0} minutes ago"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"one":"in {0} second","other":"in {0} seconds"},"past":{"one":"{0} second ago","other":"{0} seconds ago"}}}}});
ReactIntl.__addLocaleData({"locale":"en-BB","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-BE","parentLocale":"en-GB"});
ReactIntl.__addLocaleData({"locale":"en-BM","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-BS","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-BW","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-BZ","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-CA","parentLocale":"en"});
ReactIntl.__addLocaleData({"locale":"en-CC","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-CK","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-CM","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-CX","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-DG","parentLocale":"en-GB"});
ReactIntl.__addLocaleData({"locale":"en-DM","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-Dsrt","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"en-ER","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-FJ","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-FK","parentLocale":"en-GB"});
ReactIntl.__addLocaleData({"locale":"en-FM","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-GD","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-GG","parentLocale":"en-GB"});
ReactIntl.__addLocaleData({"locale":"en-GH","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-GI","parentLocale":"en-GB"});
ReactIntl.__addLocaleData({"locale":"en-GM","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-GU","parentLocale":"en"});
ReactIntl.__addLocaleData({"locale":"en-GY","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-HK","parentLocale":"en-GB"});
ReactIntl.__addLocaleData({"locale":"en-IE","parentLocale":"en-GB"});
ReactIntl.__addLocaleData({"locale":"en-IM","parentLocale":"en-GB"});
ReactIntl.__addLocaleData({"locale":"en-IN","parentLocale":"en-GB"});
ReactIntl.__addLocaleData({"locale":"en-IO","parentLocale":"en-GB"});
ReactIntl.__addLocaleData({"locale":"en-JE","parentLocale":"en-GB"});
ReactIntl.__addLocaleData({"locale":"en-JM","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-KE","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-KI","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-KN","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-KY","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-LC","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-LR","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-LS","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-MG","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-MH","parentLocale":"en"});
ReactIntl.__addLocaleData({"locale":"en-MO","parentLocale":"en-GB"});
ReactIntl.__addLocaleData({"locale":"en-MP","parentLocale":"en"});
ReactIntl.__addLocaleData({"locale":"en-MS","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-MT","parentLocale":"en-GB"});
ReactIntl.__addLocaleData({"locale":"en-MU","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-MW","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-MY","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-NA","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-NF","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-NG","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-NR","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-NU","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-NZ","parentLocale":"en-GB"});
ReactIntl.__addLocaleData({"locale":"en-PG","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-PH","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-PK","parentLocale":"en-GB"});
ReactIntl.__addLocaleData({"locale":"en-PN","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-PR","parentLocale":"en"});
ReactIntl.__addLocaleData({"locale":"en-PW","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-RW","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-SB","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-SC","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-SD","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-SG","parentLocale":"en-GB"});
ReactIntl.__addLocaleData({"locale":"en-SH","parentLocale":"en-GB"});
ReactIntl.__addLocaleData({"locale":"en-SL","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-SS","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-SX","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-SZ","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-TC","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-TK","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-TO","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-TT","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-TV","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-TZ","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-UG","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-UM","parentLocale":"en"});
ReactIntl.__addLocaleData({"locale":"en-US","parentLocale":"en"});
ReactIntl.__addLocaleData({"locale":"en-US-POSIX","parentLocale":"en-US"});
ReactIntl.__addLocaleData({"locale":"en-VC","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-VG","parentLocale":"en-GB"});
ReactIntl.__addLocaleData({"locale":"en-VI","parentLocale":"en"});
ReactIntl.__addLocaleData({"locale":"en-VU","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-WS","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-ZA","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-ZM","parentLocale":"en-001"});
ReactIntl.__addLocaleData({"locale":"en-ZW","parentLocale":"en-001"});

ReactIntl.__addLocaleData({"locale":"eo","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"jaro","relative":{"0":"nuna jaro","1":"venonta jaro","-1":"pasinta jaro"},"relativeTime":{"future":{"one":"post {0} jaro","other":"post {0} jaroj"},"past":{"one":"antaŭ {0} jaro","other":"antaŭ {0} jaroj"}}},"month":{"displayName":"monato","relative":{"0":"nuna monato","1":"venonta monato","-1":"pasinta monato"},"relativeTime":{"future":{"one":"post {0} monato","other":"post {0} monatoj"},"past":{"one":"antaŭ {0} monato","other":"antaŭ {0} monatoj"}}},"day":{"displayName":"tago","relative":{"0":"hodiaŭ","1":"morgaŭ","-1":"hieraŭ"},"relativeTime":{"future":{"one":"post {0} tago","other":"post {0} tagoj"},"past":{"one":"antaŭ {0} tago","other":"antaŭ {0} tagoj"}}},"hour":{"displayName":"horo","relativeTime":{"future":{"one":"post {0} horo","other":"post {0} horoj"},"past":{"one":"antaŭ {0} horo","other":"antaŭ {0} horoj"}}},"minute":{"displayName":"minuto","relativeTime":{"future":{"one":"post {0} minuto","other":"post {0} minutoj"},"past":{"one":"antaŭ {0} minuto","other":"antaŭ {0} minutoj"}}},"second":{"displayName":"sekundo","relative":{"0":"now"},"relativeTime":{"future":{"one":"post {0} sekundo","other":"post {0} sekundoj"},"past":{"one":"antaŭ {0} sekundo","other":"antaŭ {0} sekundoj"}}}}});
ReactIntl.__addLocaleData({"locale":"eo-001","parentLocale":"eo"});

ReactIntl.__addLocaleData({"locale":"es","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Año","relative":{"0":"este año","1":"el próximo año","-1":"el año pasado"},"relativeTime":{"future":{"one":"dentro de {0} año","other":"dentro de {0} años"},"past":{"one":"hace {0} año","other":"hace {0} años"}}},"month":{"displayName":"Mes","relative":{"0":"este mes","1":"el próximo mes","-1":"el mes pasado"},"relativeTime":{"future":{"one":"dentro de {0} mes","other":"dentro de {0} meses"},"past":{"one":"hace {0} mes","other":"hace {0} meses"}}},"day":{"displayName":"Día","relative":{"0":"hoy","1":"mañana","2":"pasado mañana","-1":"ayer","-2":"antes de ayer"},"relativeTime":{"future":{"one":"dentro de {0} día","other":"dentro de {0} días"},"past":{"one":"hace {0} día","other":"hace {0} días"}}},"hour":{"displayName":"Hora","relativeTime":{"future":{"one":"dentro de {0} hora","other":"dentro de {0} horas"},"past":{"one":"hace {0} hora","other":"hace {0} horas"}}},"minute":{"displayName":"Minuto","relativeTime":{"future":{"one":"dentro de {0} minuto","other":"dentro de {0} minutos"},"past":{"one":"hace {0} minuto","other":"hace {0} minutos"}}},"second":{"displayName":"Segundo","relative":{"0":"ahora"},"relativeTime":{"future":{"one":"dentro de {0} segundo","other":"dentro de {0} segundos"},"past":{"one":"hace {0} segundo","other":"hace {0} segundos"}}}}});
ReactIntl.__addLocaleData({"locale":"es-419","parentLocale":"es","fields":{"year":{"displayName":"Año","relative":{"0":"Este año","1":"Año próximo","-1":"Año pasado"},"relativeTime":{"future":{"one":"En {0} año","other":"En {0} años"},"past":{"one":"hace {0} año","other":"hace {0} años"}}},"month":{"displayName":"Mes","relative":{"0":"Este mes","1":"Mes próximo","-1":"El mes pasado"},"relativeTime":{"future":{"one":"En {0} mes","other":"En {0} meses"},"past":{"one":"hace {0} mes","other":"hace {0} meses"}}},"day":{"displayName":"Día","relative":{"0":"hoy","1":"mañana","2":"pasado mañana","-1":"ayer","-2":"antes de ayer"},"relativeTime":{"future":{"one":"En {0} día","other":"En {0} días"},"past":{"one":"hace {0} día","other":"hace {0} días"}}},"hour":{"displayName":"Hora","relativeTime":{"future":{"one":"En {0} hora","other":"En {0} horas"},"past":{"one":"hace {0} hora","other":"hace {0} horas"}}},"minute":{"displayName":"Minuto","relativeTime":{"future":{"one":"En {0} minuto","other":"En {0} minutos"},"past":{"one":"hace {0} minuto","other":"hace {0} minutos"}}},"second":{"displayName":"Segundo","relative":{"0":"ahora"},"relativeTime":{"future":{"one":"En {0} segundo","other":"En {0} segundos"},"past":{"one":"hace {0} segundo","other":"hace {0} segundos"}}}}});
ReactIntl.__addLocaleData({"locale":"es-AR","parentLocale":"es-419"});
ReactIntl.__addLocaleData({"locale":"es-BO","parentLocale":"es-419"});
ReactIntl.__addLocaleData({"locale":"es-CL","parentLocale":"es-419"});
ReactIntl.__addLocaleData({"locale":"es-CO","parentLocale":"es-419"});
ReactIntl.__addLocaleData({"locale":"es-CR","parentLocale":"es-419"});
ReactIntl.__addLocaleData({"locale":"es-CU","parentLocale":"es-419"});
ReactIntl.__addLocaleData({"locale":"es-DO","parentLocale":"es-419"});
ReactIntl.__addLocaleData({"locale":"es-EA","parentLocale":"es"});
ReactIntl.__addLocaleData({"locale":"es-EC","parentLocale":"es-419"});
ReactIntl.__addLocaleData({"locale":"es-ES","parentLocale":"es"});
ReactIntl.__addLocaleData({"locale":"es-GQ","parentLocale":"es"});
ReactIntl.__addLocaleData({"locale":"es-GT","parentLocale":"es-419"});
ReactIntl.__addLocaleData({"locale":"es-HN","parentLocale":"es-419"});
ReactIntl.__addLocaleData({"locale":"es-IC","parentLocale":"es"});
ReactIntl.__addLocaleData({"locale":"es-MX","parentLocale":"es-419","fields":{"year":{"displayName":"Año","relative":{"0":"este año","1":"el año próximo","-1":"el año pasado"},"relativeTime":{"future":{"one":"En {0} año","other":"En {0} años"},"past":{"one":"hace {0} año","other":"hace {0} años"}}},"month":{"displayName":"Mes","relative":{"0":"este mes","1":"el mes próximo","-1":"el mes pasado"},"relativeTime":{"future":{"one":"en {0} mes","other":"en {0} meses"},"past":{"one":"hace {0} mes","other":"hace {0} meses"}}},"day":{"displayName":"Día","relative":{"0":"hoy","1":"mañana","2":"pasado mañana","-1":"ayer","-2":"antes de ayer"},"relativeTime":{"future":{"one":"En {0} día","other":"En {0} días"},"past":{"one":"hace {0} día","other":"hace {0} días"}}},"hour":{"displayName":"Hora","relativeTime":{"future":{"one":"En {0} hora","other":"En {0} horas"},"past":{"one":"hace {0} hora","other":"hace {0} horas"}}},"minute":{"displayName":"Minuto","relativeTime":{"future":{"one":"En {0} minuto","other":"En {0} minutos"},"past":{"one":"hace {0} minuto","other":"hace {0} minutos"}}},"second":{"displayName":"Segundo","relative":{"0":"ahora"},"relativeTime":{"future":{"one":"En {0} segundo","other":"En {0} segundos"},"past":{"one":"hace {0} segundo","other":"hace {0} segundos"}}}}});
ReactIntl.__addLocaleData({"locale":"es-NI","parentLocale":"es-419"});
ReactIntl.__addLocaleData({"locale":"es-PA","parentLocale":"es-419"});
ReactIntl.__addLocaleData({"locale":"es-PE","parentLocale":"es-419"});
ReactIntl.__addLocaleData({"locale":"es-PH","parentLocale":"es"});
ReactIntl.__addLocaleData({"locale":"es-PR","parentLocale":"es-419"});
ReactIntl.__addLocaleData({"locale":"es-PY","parentLocale":"es-419"});
ReactIntl.__addLocaleData({"locale":"es-SV","parentLocale":"es-419"});
ReactIntl.__addLocaleData({"locale":"es-US","parentLocale":"es-419"});
ReactIntl.__addLocaleData({"locale":"es-UY","parentLocale":"es-419"});
ReactIntl.__addLocaleData({"locale":"es-VE","parentLocale":"es-419"});

ReactIntl.__addLocaleData({"locale":"et","pluralRuleFunction":function (n,ord){var s=String(n).split("."),v0=!s[1];if(ord)return"other";return n==1&&v0?"one":"other"},"fields":{"year":{"displayName":"aasta","relative":{"0":"käesolev aasta","1":"järgmine aasta","-1":"eelmine aasta"},"relativeTime":{"future":{"one":"{0} aasta pärast","other":"{0} aasta pärast"},"past":{"one":"{0} aasta eest","other":"{0} aasta eest"}}},"month":{"displayName":"kuu","relative":{"0":"käesolev kuu","1":"järgmine kuu","-1":"eelmine kuu"},"relativeTime":{"future":{"one":"{0} kuu pärast","other":"{0} kuu pärast"},"past":{"one":"{0} kuu eest","other":"{0} kuu eest"}}},"day":{"displayName":"päev","relative":{"0":"täna","1":"homme","2":"ülehomme","-1":"eile","-2":"üleeile"},"relativeTime":{"future":{"one":"{0} päeva pärast","other":"{0} päeva pärast"},"past":{"one":"{0} päeva eest","other":"{0} päeva eest"}}},"hour":{"displayName":"tund","relativeTime":{"future":{"one":"{0} tunni pärast","other":"{0} tunni pärast"},"past":{"one":"{0} tunni eest","other":"{0} tunni eest"}}},"minute":{"displayName":"minut","relativeTime":{"future":{"one":"{0} minuti pärast","other":"{0} minuti pärast"},"past":{"one":"{0} minuti eest","other":"{0} minuti eest"}}},"second":{"displayName":"sekund","relative":{"0":"nüüd"},"relativeTime":{"future":{"one":"{0} sekundi pärast","other":"{0} sekundi pärast"},"past":{"one":"{0} sekundi eest","other":"{0} sekundi eest"}}}}});
ReactIntl.__addLocaleData({"locale":"et-EE","parentLocale":"et"});

ReactIntl.__addLocaleData({"locale":"eu","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Urtea","relative":{"0":"aurten","1":"hurrengo urtea","-1":"aurreko urtea"},"relativeTime":{"future":{"one":"{0} urte barru","other":"{0} urte barru"},"past":{"one":"Duela {0} urte","other":"Duela {0} urte"}}},"month":{"displayName":"Hilabetea","relative":{"0":"hilabete hau","1":"hurrengo hilabetea","-1":"aurreko hilabetea"},"relativeTime":{"future":{"one":"{0} hilabete barru","other":"{0} hilabete barru"},"past":{"one":"Duela {0} hilabete","other":"Duela {0} hilabete"}}},"day":{"displayName":"Eguna","relative":{"0":"gaur","1":"bihar","2":"etzi","-1":"atzo","-2":"herenegun"},"relativeTime":{"future":{"one":"{0} egun barru","other":"{0} egun barru"},"past":{"one":"Duela {0} egun","other":"Duela {0} egun"}}},"hour":{"displayName":"Ordua","relativeTime":{"future":{"one":"{0} ordu barru","other":"{0} ordu barru"},"past":{"one":"Duela {0} ordu","other":"Duela {0} ordu"}}},"minute":{"displayName":"Minutua","relativeTime":{"future":{"one":"{0} minutu barru","other":"{0} minutu barru"},"past":{"one":"Duela {0} minutu","other":"Duela {0} minutu"}}},"second":{"displayName":"Segundoa","relative":{"0":"orain"},"relativeTime":{"future":{"one":"{0} segundo barru","other":"{0} segundo barru"},"past":{"one":"Duela {0} segundo","other":"Duela {0} segundo"}}}}});
ReactIntl.__addLocaleData({"locale":"eu-ES","parentLocale":"eu"});

ReactIntl.__addLocaleData({"locale":"ewo","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"M̀bú","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Ngɔn","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Amǒs","relative":{"0":"Aná","1":"Okírí","-1":"Angogé"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Awola","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Enútɛn","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Akábəga","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"ewo-CM","parentLocale":"ewo"});

ReactIntl.__addLocaleData({"locale":"fa","pluralRuleFunction":function (n,ord){if(ord)return"other";return n>=0&&n<=1?"one":"other"},"fields":{"year":{"displayName":"سال","relative":{"0":"امسال","1":"سال آینده","-1":"سال گذشته"},"relativeTime":{"future":{"one":"{0} سال بعد","other":"{0} سال بعد"},"past":{"one":"{0} سال پیش","other":"{0} سال پیش"}}},"month":{"displayName":"ماه","relative":{"0":"این ماه","1":"ماه آینده","-1":"ماه گذشته"},"relativeTime":{"future":{"one":"{0} ماه بعد","other":"{0} ماه بعد"},"past":{"one":"{0} ماه پیش","other":"{0} ماه پیش"}}},"day":{"displayName":"روز","relative":{"0":"امروز","1":"فردا","2":"پس‌فردا","-1":"دیروز","-2":"پریروز"},"relativeTime":{"future":{"one":"{0} روز بعد","other":"{0} روز بعد"},"past":{"one":"{0} روز پیش","other":"{0} روز پیش"}}},"hour":{"displayName":"ساعت","relativeTime":{"future":{"one":"{0} ساعت بعد","other":"{0} ساعت بعد"},"past":{"one":"{0} ساعت پیش","other":"{0} ساعت پیش"}}},"minute":{"displayName":"دقیقه","relativeTime":{"future":{"one":"{0} دقیقه بعد","other":"{0} دقیقه بعد"},"past":{"one":"{0} دقیقه پیش","other":"{0} دقیقه پیش"}}},"second":{"displayName":"ثانیه","relative":{"0":"اکنون"},"relativeTime":{"future":{"one":"{0} ثانیه بعد","other":"{0} ثانیه بعد"},"past":{"one":"{0} ثانیه پیش","other":"{0} ثانیه پیش"}}}}});
ReactIntl.__addLocaleData({"locale":"fa-AF","parentLocale":"fa"});
ReactIntl.__addLocaleData({"locale":"fa-IR","parentLocale":"fa"});

ReactIntl.__addLocaleData({"locale":"ff","pluralRuleFunction":function (n,ord){if(ord)return"other";return n>=0&&n<2?"one":"other"},"fields":{"year":{"displayName":"Hitaande","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Lewru","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Ñalnde","relative":{"0":"Hannde","1":"Jaŋngo","-1":"Haŋki"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Waktu","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Hoƴom","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Majaango","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"ff-CM","parentLocale":"ff"});
ReactIntl.__addLocaleData({"locale":"ff-GN","parentLocale":"ff"});
ReactIntl.__addLocaleData({"locale":"ff-MR","parentLocale":"ff"});
ReactIntl.__addLocaleData({"locale":"ff-SN","parentLocale":"ff"});

ReactIntl.__addLocaleData({"locale":"fi","pluralRuleFunction":function (n,ord){var s=String(n).split("."),v0=!s[1];if(ord)return"other";return n==1&&v0?"one":"other"},"fields":{"year":{"displayName":"vuosi","relative":{"0":"tänä vuonna","1":"ensi vuonna","-1":"viime vuonna"},"relativeTime":{"future":{"one":"{0} vuoden päästä","other":"{0} vuoden päästä"},"past":{"one":"{0} vuosi sitten","other":"{0} vuotta sitten"}}},"month":{"displayName":"kuukausi","relative":{"0":"tässä kuussa","1":"ensi kuussa","-1":"viime kuussa"},"relativeTime":{"future":{"one":"{0} kuukauden päästä","other":"{0} kuukauden päästä"},"past":{"one":"{0} kuukausi sitten","other":"{0} kuukautta sitten"}}},"day":{"displayName":"päivä","relative":{"0":"tänään","1":"huomenna","2":"ylihuomenna","-1":"eilen","-2":"toissa päivänä"},"relativeTime":{"future":{"one":"{0} päivän päästä","other":"{0} päivän päästä"},"past":{"one":"{0} päivä sitten","other":"{0} päivää sitten"}}},"hour":{"displayName":"tunti","relativeTime":{"future":{"one":"{0} tunnin päästä","other":"{0} tunnin päästä"},"past":{"one":"{0} tunti sitten","other":"{0} tuntia sitten"}}},"minute":{"displayName":"minuutti","relativeTime":{"future":{"one":"{0} minuutin päästä","other":"{0} minuutin päästä"},"past":{"one":"{0} minuutti sitten","other":"{0} minuuttia sitten"}}},"second":{"displayName":"sekunti","relative":{"0":"nyt"},"relativeTime":{"future":{"one":"{0} sekunnin päästä","other":"{0} sekunnin päästä"},"past":{"one":"{0} sekunti sitten","other":"{0} sekuntia sitten"}}}}});
ReactIntl.__addLocaleData({"locale":"fi-FI","parentLocale":"fi"});

ReactIntl.__addLocaleData({"locale":"fil","pluralRuleFunction":function (n,ord){var s=String(n).split("."),i=s[0],f=s[1]||"",v0=!s[1],i10=i.slice(-1),f10=f.slice(-1);if(ord)return n==1?"one":"other";return v0&&(i==1||i==2||i==3)||v0&&i10!=4&&i10!=6&&i10!=9||!v0&&f10!=4&&f10!=6&&f10!=9?"one":"other"},"fields":{"year":{"displayName":"Taon","relative":{"0":"ngayong taon","1":"susunod na taon","-1":"nakaraang taon"},"relativeTime":{"future":{"one":"sa {0} taon","other":"sa {0} (na) taon"},"past":{"one":"{0} taon ang nakalipas","other":"{0} (na) taon ang nakalipas"}}},"month":{"displayName":"Buwan","relative":{"0":"ngayong buwan","1":"susunod na buwan","-1":"nakaraang buwan"},"relativeTime":{"future":{"one":"sa {0} buwan","other":"sa {0} (na) buwan"},"past":{"one":"{0} buwan ang nakalipas","other":"{0} (na) buwan ang nakalipas"}}},"day":{"displayName":"Araw","relative":{"0":"ngayong araw","1":"bukas","2":"Samakalawa","-1":"kahapon","-2":"Araw bago ang kahapon"},"relativeTime":{"future":{"one":"sa {0} araw","other":"sa {0} (na) araw"},"past":{"one":"{0} araw ang nakalipas","other":"{0} (na) araw ang nakalipas"}}},"hour":{"displayName":"Oras","relativeTime":{"future":{"one":"sa {0} oras","other":"sa {0} (na) oras"},"past":{"one":"{0} oras ang nakalipas","other":"{0} (na) oras ang nakalipas"}}},"minute":{"displayName":"Minuto","relativeTime":{"future":{"one":"sa {0} minuto","other":"sa {0} (na) minuto"},"past":{"one":"{0} minuto ang nakalipas","other":"sa {0} (na) minuto"}}},"second":{"displayName":"Segundo","relative":{"0":"ngayon"},"relativeTime":{"future":{"one":"sa {0} segundo","other":"sa {0} (na) segundo"},"past":{"one":"{0} segundo ang nakalipas","other":"{0} (na) segundo ang nakalipas"}}}}});
ReactIntl.__addLocaleData({"locale":"fil-PH","parentLocale":"fil"});

ReactIntl.__addLocaleData({"locale":"fo","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"ár","relative":{"0":"hetta ár","1":"næstu ár","-1":"síðstu ár"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"mánuður","relative":{"0":"henda mánuður","1":"næstu mánuður","-1":"síðstu mánuður"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"dagur","relative":{"0":"í dag","1":"á morgunn","2":"á yfirmorgunn","-1":"í gær","-2":"í fyrradag"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"klukkustund","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"mínúta","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"sekund","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"fo-FO","parentLocale":"fo"});

ReactIntl.__addLocaleData({"locale":"fr","pluralRuleFunction":function (n,ord){if(ord)return n==1?"one":"other";return n>=0&&n<2?"one":"other"},"fields":{"year":{"displayName":"année","relative":{"0":"cette année","1":"l’année prochaine","-1":"l’année dernière"},"relativeTime":{"future":{"one":"dans {0} an","other":"dans {0} ans"},"past":{"one":"il y a {0} an","other":"il y a {0} ans"}}},"month":{"displayName":"mois","relative":{"0":"ce mois-ci","1":"le mois prochain","-1":"le mois dernier"},"relativeTime":{"future":{"one":"dans {0} mois","other":"dans {0} mois"},"past":{"one":"il y a {0} mois","other":"il y a {0} mois"}}},"day":{"displayName":"jour","relative":{"0":"aujourd’hui","1":"demain","2":"après-demain","-1":"hier","-2":"avant-hier"},"relativeTime":{"future":{"one":"dans {0} jour","other":"dans {0} jours"},"past":{"one":"il y a {0} jour","other":"il y a {0} jours"}}},"hour":{"displayName":"heure","relativeTime":{"future":{"one":"dans {0} heure","other":"dans {0} heures"},"past":{"one":"il y a {0} heure","other":"il y a {0} heures"}}},"minute":{"displayName":"minute","relativeTime":{"future":{"one":"dans {0} minute","other":"dans {0} minutes"},"past":{"one":"il y a {0} minute","other":"il y a {0} minutes"}}},"second":{"displayName":"seconde","relative":{"0":"maintenant"},"relativeTime":{"future":{"one":"dans {0} seconde","other":"dans {0} secondes"},"past":{"one":"il y a {0} seconde","other":"il y a {0} secondes"}}}}});
ReactIntl.__addLocaleData({"locale":"fr-BE","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-BF","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-BI","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-BJ","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-BL","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-CA","parentLocale":"fr","fields":{"year":{"displayName":"année","relative":{"0":"cette année","1":"l’année prochaine","-1":"l’année dernière"},"relativeTime":{"future":{"one":"Dans {0} an","other":"Dans {0} ans"},"past":{"one":"Il y a {0} an","other":"Il y a {0} ans"}}},"month":{"displayName":"mois","relative":{"0":"ce mois-ci","1":"le mois prochain","-1":"le mois dernier"},"relativeTime":{"future":{"one":"Dans {0} mois","other":"Dans {0} mois"},"past":{"one":"Il y a {0} mois","other":"Il y a {0} mois"}}},"day":{"displayName":"jour","relative":{"0":"aujourd’hui","1":"demain","2":"après-demain","-1":"hier","-2":"avant-hier"},"relativeTime":{"future":{"one":"Dans {0} jour","other":"Dans {0} jours"},"past":{"one":"Il y a {0} jour","other":"Il y a {0} jours"}}},"hour":{"displayName":"heure","relativeTime":{"future":{"one":"Dans {0} heure","other":"Dans {0} heures"},"past":{"one":"Il y a {0} heure","other":"Il y a {0} heures"}}},"minute":{"displayName":"minute","relativeTime":{"future":{"one":"Dans {0} minute","other":"Dans {0} minutes"},"past":{"one":"Il y a {0} minute","other":"Il y a {0} minutes"}}},"second":{"displayName":"seconde","relative":{"0":"maintenant"},"relativeTime":{"future":{"one":"Dans {0} seconde","other":"Dans {0} secondes"},"past":{"one":"Il y a {0} seconde","other":"Il y a {0} secondes"}}}}});
ReactIntl.__addLocaleData({"locale":"fr-CD","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-CF","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-CG","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-CH","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-CI","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-CM","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-DJ","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-DZ","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-FR","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-GA","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-GF","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-GN","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-GP","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-GQ","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-HT","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-KM","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-LU","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-MA","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-MC","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-MF","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-MG","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-ML","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-MQ","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-MR","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-MU","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-NC","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-NE","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-PF","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-PM","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-RE","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-RW","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-SC","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-SN","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-SY","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-TD","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-TG","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-TN","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-VU","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-WF","parentLocale":"fr"});
ReactIntl.__addLocaleData({"locale":"fr-YT","parentLocale":"fr"});

ReactIntl.__addLocaleData({"locale":"fur","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"an","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"one":"ca di {0} an","other":"ca di {0} agns"},"past":{"one":"{0} an indaûr","other":"{0} agns indaûr"}}},"month":{"displayName":"mês","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"one":"ca di {0} mês","other":"ca di {0} mês"},"past":{"one":"{0} mês indaûr","other":"{0} mês indaûr"}}},"day":{"displayName":"dì","relative":{"0":"vuê","1":"doman","2":"passantdoman","-1":"îr","-2":"îr l’altri"},"relativeTime":{"future":{"one":"ca di {0} zornade","other":"ca di {0} zornadis"},"past":{"one":"{0} zornade indaûr","other":"{0} zornadis indaûr"}}},"hour":{"displayName":"ore","relativeTime":{"future":{"one":"ca di {0} ore","other":"ca di {0} oris"},"past":{"one":"{0} ore indaûr","other":"{0} oris indaûr"}}},"minute":{"displayName":"minût","relativeTime":{"future":{"one":"ca di {0} minût","other":"ca di {0} minûts"},"past":{"one":"{0} minût indaûr","other":"{0} minûts indaûr"}}},"second":{"displayName":"secont","relative":{"0":"now"},"relativeTime":{"future":{"one":"ca di {0} secont","other":"ca di {0} seconts"},"past":{"one":"{0} secont indaûr","other":"{0} seconts indaûr"}}}}});
ReactIntl.__addLocaleData({"locale":"fur-IT","parentLocale":"fur"});

ReactIntl.__addLocaleData({"locale":"fy","pluralRuleFunction":function (n,ord){var s=String(n).split("."),v0=!s[1];if(ord)return"other";return n==1&&v0?"one":"other"},"fields":{"year":{"displayName":"Jier","relative":{"0":"dit jier","1":"folgjend jier","-1":"foarich jier"},"relativeTime":{"future":{"one":"Oer {0} jier","other":"Oer {0} jier"},"past":{"one":"{0} jier lyn","other":"{0} jier lyn"}}},"month":{"displayName":"Moanne","relative":{"0":"dizze moanne","1":"folgjende moanne","-1":"foarige moanne"},"relativeTime":{"future":{"one":"Oer {0} moanne","other":"Oer {0} moannen"},"past":{"one":"{0} moanne lyn","other":"{0} moannen lyn"}}},"day":{"displayName":"dei","relative":{"0":"vandaag","1":"morgen","2":"Oermorgen","-1":"gisteren","-2":"eergisteren"},"relativeTime":{"future":{"one":"Oer {0} dei","other":"Oer {0} deien"},"past":{"one":"{0} dei lyn","other":"{0} deien lyn"}}},"hour":{"displayName":"oere","relativeTime":{"future":{"one":"Oer {0} oere","other":"Oer {0} oere"},"past":{"one":"{0} oere lyn","other":"{0} oere lyn"}}},"minute":{"displayName":"Minút","relativeTime":{"future":{"one":"Oer {0} minút","other":"Oer {0} minuten"},"past":{"one":"{0} minút lyn","other":"{0} minuten lyn"}}},"second":{"displayName":"Sekonde","relative":{"0":"nu"},"relativeTime":{"future":{"one":"Oer {0} sekonde","other":"Oer {0} sekonden"},"past":{"one":"{0} sekonde lyn","other":"{0} sekonden lyn"}}}}});
ReactIntl.__addLocaleData({"locale":"fy-NL","parentLocale":"fy"});

ReactIntl.__addLocaleData({"locale":"ga","pluralRuleFunction":function (n,ord){var s=String(n).split("."),t0=Number(s[0])==n;if(ord)return"other";return n==1?"one":n==2?"two":t0&&n>=3&&n<=6?"few":t0&&n>=7&&n<=10?"many":"other"},"fields":{"year":{"displayName":"Bliain","relative":{"0":"an bhliain seo","1":"an bhliain seo chugainn","-1":"anuraidh"},"relativeTime":{"future":{"one":"i gceann {0} bhliain","two":"i gceann {0} bhliain","few":"i gceann {0} bliana","many":"i gceann {0} mbliana","other":"i gceann {0} bliain"},"past":{"one":"{0} bhliain ó shin","two":"{0} bhliain ó shin","few":"{0} bliana ó shin","many":"{0} mbliana ó shin","other":"{0} bliain ó shin"}}},"month":{"displayName":"Mí","relative":{"0":"an mhí seo","1":"an mhí seo chugainn","-1":"an mhí seo caite"},"relativeTime":{"future":{"one":"i gceann {0} mhí","two":"i gceann {0} mhí","few":"i gceann {0} mhí","many":"i gceann {0} mí","other":"i gceann {0} mí"},"past":{"one":"{0} mhí ó shin","two":"{0} mhí ó shin","few":"{0} mhí ó shin","many":"{0} mí ó shin","other":"{0} mí ó shin"}}},"day":{"displayName":"Lá","relative":{"0":"inniu","1":"amárach","2":"arú amárach","-1":"inné","-2":"arú inné"},"relativeTime":{"future":{"one":"i gceann {0} lá","two":"i gceann {0} lá","few":"i gceann {0} lá","many":"i gceann {0} lá","other":"i gceann {0} lá"},"past":{"one":"{0} lá ó shin","two":"{0} lá ó shin","few":"{0} lá ó shin","many":"{0} lá ó shin","other":"{0} lá ó shin"}}},"hour":{"displayName":"Uair","relativeTime":{"future":{"one":"i gceann {0} uair an chloig","two":"i gceann {0} uair an chloig","few":"i gceann {0} huaire an chloig","many":"i gceann {0} n-uaire an chloig","other":"i gceann {0} uair an chloig"},"past":{"one":"{0} uair an chloig ó shin","two":"{0} uair an chloig ó shin","few":"{0} huaire an chloig ó shin","many":"{0} n-uaire an chloig ó shin","other":"{0} uair an chloig ó shin"}}},"minute":{"displayName":"Nóiméad","relativeTime":{"future":{"one":"i gceann {0} nóiméad","two":"i gceann {0} nóiméad","few":"i gceann {0} nóiméad","many":"i gceann {0} nóiméad","other":"i gceann {0} nóiméad"},"past":{"one":"{0} nóiméad ó shin","two":"{0} nóiméad ó shin","few":"{0} nóiméad ó shin","many":"{0} nóiméad ó shin","other":"{0} nóiméad ó shin"}}},"second":{"displayName":"Soicind","relative":{"0":"now"},"relativeTime":{"future":{"one":"i gceann {0} soicind","two":"i gceann {0} shoicind","few":"i gceann {0} shoicind","many":"i gceann {0} soicind","other":"i gceann {0} soicind"},"past":{"one":"{0} soicind ó shin","two":"{0} shoicind ó shin","few":"{0} shoicind ó shin","many":"{0} soicind ó shin","other":"{0} soicind ó shin"}}}}});
ReactIntl.__addLocaleData({"locale":"ga-IE","parentLocale":"ga"});

ReactIntl.__addLocaleData({"locale":"gd","pluralRuleFunction":function (n,ord){var s=String(n).split("."),t0=Number(s[0])==n;if(ord)return"other";return n==1||n==11?"one":n==2||n==12?"two":t0&&n>=3&&n<=10||t0&&n>=13&&n<=19?"few":"other"},"fields":{"year":{"displayName":"bliadhna","relative":{"0":"am bliadhna","1":"an ath-bhliadhna","-1":"an-uiridh","-2":"a-bhòn-uiridh"},"relativeTime":{"future":{"one":"an ceann {0} bhliadhna","two":"an ceann {0} bhliadhna","few":"an ceann {0} bliadhnaichean","other":"an ceann {0} bliadhna"},"past":{"one":"o chionn {0} bhliadhna","two":"o chionn {0} bhliadhna","few":"o chionn {0} bliadhnaichean","other":"o chionn {0} bliadhna"}}},"month":{"displayName":"mìos","relative":{"0":"am mìos seo","1":"an ath-mhìos","-1":"am mìos seo chaidh"},"relativeTime":{"future":{"one":"an ceann {0} mhìosa","two":"an ceann {0} mhìosa","few":"an ceann {0} mìosan","other":"an ceann {0} mìosa"},"past":{"one":"o chionn {0} mhìosa","two":"o chionn {0} mhìosa","few":"o chionn {0} mìosan","other":"o chionn {0} mìosa"}}},"day":{"displayName":"latha","relative":{"0":"an-diugh","1":"a-màireach","2":"an-earar","3":"an-eararais","-1":"an-dè","-2":"a-bhòin-dè"},"relativeTime":{"future":{"one":"an ceann {0} latha","two":"an ceann {0} latha","few":"an ceann {0} làithean","other":"an ceann {0} latha"},"past":{"one":"o chionn {0} latha","two":"o chionn {0} latha","few":"o chionn {0} làithean","other":"o chionn {0} latha"}}},"hour":{"displayName":"uair a thìde","relativeTime":{"future":{"one":"an ceann {0} uair a thìde","two":"an ceann {0} uair a thìde","few":"an ceann {0} uairean a thìde","other":"an ceann {0} uair a thìde"},"past":{"one":"o chionn {0} uair a thìde","two":"o chionn {0} uair a thìde","few":"o chionn {0} uairean a thìde","other":"o chionn {0} uair a thìde"}}},"minute":{"displayName":"mionaid","relativeTime":{"future":{"one":"an ceann {0} mhionaid","two":"an ceann {0} mhionaid","few":"an ceann {0} mionaidean","other":"an ceann {0} mionaid"},"past":{"one":"o chionn {0} mhionaid","two":"o chionn {0} mhionaid","few":"o chionn {0} mionaidean","other":"o chionn {0} mionaid"}}},"second":{"displayName":"diog","relative":{"0":"now"},"relativeTime":{"future":{"one":"an ceann {0} diog","two":"an ceann {0} dhiog","few":"an ceann {0} diogan","other":"an ceann {0} diog"},"past":{"one":"o chionn {0} diog","two":"o chionn {0} dhiog","few":"o chionn {0} diogan","other":"o chionn {0} diog"}}}}});
ReactIntl.__addLocaleData({"locale":"gd-GB","parentLocale":"gd"});

ReactIntl.__addLocaleData({"locale":"gl","pluralRuleFunction":function (n,ord){var s=String(n).split("."),v0=!s[1];if(ord)return"other";return n==1&&v0?"one":"other"},"fields":{"year":{"displayName":"Ano","relative":{"0":"este ano","1":"seguinte ano","-1":"ano pasado"},"relativeTime":{"future":{"one":"En {0} ano","other":"En {0} anos"},"past":{"one":"Hai {0} ano","other":"Hai {0} anos"}}},"month":{"displayName":"Mes","relative":{"0":"este mes","1":"mes seguinte","-1":"mes pasado"},"relativeTime":{"future":{"one":"En {0} mes","other":"En {0} meses"},"past":{"one":"Hai {0} mes","other":"Hai {0} meses"}}},"day":{"displayName":"Día","relative":{"0":"hoxe","1":"mañá","2":"pasadomañá","-1":"onte","-2":"antonte"},"relativeTime":{"future":{"one":"En {0} día","other":"En {0} días"},"past":{"one":"Hai {0} día","other":"Hai {0} días"}}},"hour":{"displayName":"Hora","relativeTime":{"future":{"one":"En {0} hora","other":"En {0} horas"},"past":{"one":"Hai {0} hora","other":"Hai {0} horas"}}},"minute":{"displayName":"Minuto","relativeTime":{"future":{"one":"En {0} minuto","other":"En {0} minutos"},"past":{"one":"Hai {0} minuto","other":"Hai {0} minutos"}}},"second":{"displayName":"Segundo","relative":{"0":"agora"},"relativeTime":{"future":{"one":"En {0} segundo","other":"En {0} segundos"},"past":{"one":"Hai {0} segundo","other":"Hai {0} segundos"}}}}});
ReactIntl.__addLocaleData({"locale":"gl-ES","parentLocale":"gl"});

ReactIntl.__addLocaleData({"locale":"gsw","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Jaar","relative":{"0":"diese Jaar","1":"nächste Jaar","-1":"letzte Jaar"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Monet","relative":{"0":"diese Monet","1":"nächste Monet","-1":"letzte Monet"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Tag","relative":{"0":"hüt","1":"moorn","2":"übermoorn","-1":"geschter","-2":"vorgeschter"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Schtund","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minuute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Sekunde","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"gsw-CH","parentLocale":"gsw"});
ReactIntl.__addLocaleData({"locale":"gsw-FR","parentLocale":"gsw"});
ReactIntl.__addLocaleData({"locale":"gsw-LI","parentLocale":"gsw"});

ReactIntl.__addLocaleData({"locale":"gu","pluralRuleFunction":function (n,ord){if(ord)return n==1?"one":n==2||n==3?"two":n==4?"few":n==6?"many":"other";return n>=0&&n<=1?"one":"other"},"fields":{"year":{"displayName":"વર્ષ","relative":{"0":"આ વર્ષે","1":"આવતા વર્ષે","-1":"ગયા વર્ષે"},"relativeTime":{"future":{"one":"{0} વર્ષમાં","other":"{0} વર્ષમાં"},"past":{"one":"{0} વર્ષ પહેલા","other":"{0} વર્ષ પહેલા"}}},"month":{"displayName":"મહિનો","relative":{"0":"આ મહિને","1":"આવતા મહિને","-1":"ગયા મહિને"},"relativeTime":{"future":{"one":"{0} મહિનામાં","other":"{0} મહિનામાં"},"past":{"one":"{0} મહિના પહેલા","other":"{0} મહિના પહેલા"}}},"day":{"displayName":"દિવસ","relative":{"0":"આજે","1":"આવતીકાલે","2":"પરમદિવસે","-1":"ગઈકાલે","-2":"ગયા પરમદિવસે"},"relativeTime":{"future":{"one":"{0} દિવસમાં","other":"{0} દિવસમાં"},"past":{"one":"{0} દિવસ પહેલા","other":"{0} દિવસ પહેલા"}}},"hour":{"displayName":"કલાક","relativeTime":{"future":{"one":"{0} કલાકમાં","other":"{0} કલાકમાં"},"past":{"one":"{0} કલાક પહેલા","other":"{0} કલાક પહેલા"}}},"minute":{"displayName":"મિનિટ","relativeTime":{"future":{"one":"{0} મિનિટમાં","other":"{0} મિનિટમાં"},"past":{"one":"{0} મિનિટ પહેલા","other":"{0} મિનિટ પહેલા"}}},"second":{"displayName":"સેકન્ડ","relative":{"0":"હમણાં"},"relativeTime":{"future":{"one":"{0} સેકંડમાં","other":"{0} સેકંડમાં"},"past":{"one":"{0} સેકંડ પહેલા","other":"{0} સેકંડ પહેલા"}}}}});
ReactIntl.__addLocaleData({"locale":"gu-IN","parentLocale":"gu"});

ReactIntl.__addLocaleData({"locale":"guw","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==0||n==1?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});

ReactIntl.__addLocaleData({"locale":"guz","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Omwaka","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Omotienyi","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Rituko","relative":{"0":"Rero","1":"Mambia","-1":"Igoro"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Ensa","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Edakika","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Esekendi","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"guz-KE","parentLocale":"guz"});

ReactIntl.__addLocaleData({"locale":"gv","pluralRuleFunction":function (n,ord){var s=String(n).split("."),i=s[0],v0=!s[1],i10=i.slice(-1),i100=i.slice(-2);if(ord)return"other";return v0&&i10==1?"one":v0&&i10==2?"two":v0&&(i100==0||i100==20||i100==40||i100==60||i100==80)?"few":!v0?"many":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"gv-IM","parentLocale":"gv"});

ReactIntl.__addLocaleData({"locale":"ha","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Shekara","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Wata","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Kwana","relative":{"0":"Yau","1":"Gobe","-1":"Jiya"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Awa","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minti","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Daƙiƙa","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"ha-Arab","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"ha-Latn","parentLocale":"ha"});
ReactIntl.__addLocaleData({"locale":"ha-Latn-GH","parentLocale":"ha-Latn"});
ReactIntl.__addLocaleData({"locale":"ha-Latn-NE","parentLocale":"ha-Latn"});
ReactIntl.__addLocaleData({"locale":"ha-Latn-NG","parentLocale":"ha-Latn"});

ReactIntl.__addLocaleData({"locale":"haw","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"haw-US","parentLocale":"haw"});

ReactIntl.__addLocaleData({"locale":"he","pluralRuleFunction":function (n,ord){var s=String(n).split("."),i=s[0],v0=!s[1],t0=Number(s[0])==n,n10=t0&&s[0].slice(-1);if(ord)return"other";return n==1&&v0?"one":i==2&&v0?"two":v0&&(n<0||n>10)&&t0&&n10==0?"many":"other"},"fields":{"year":{"displayName":"שנה","relative":{"0":"השנה","1":"השנה הבאה","-1":"השנה שעברה"},"relativeTime":{"future":{"one":"בעוד שנה","two":"בעוד שנתיים","many":"בעוד {0} שנה","other":"בעוד {0} שנים"},"past":{"one":"לפני שנה","two":"לפני שנתיים","many":"לפני {0} שנה","other":"לפני {0} שנים"}}},"month":{"displayName":"חודש","relative":{"0":"החודש","1":"החודש הבא","-1":"החודש שעבר"},"relativeTime":{"future":{"one":"בעוד חודש","two":"בעוד חודשיים","many":"בעוד {0} חודשים","other":"בעוד {0} חודשים"},"past":{"one":"לפני חודש","two":"לפני חודשיים","many":"לפני {0} חודשים","other":"לפני {0} חודשים"}}},"day":{"displayName":"יום","relative":{"0":"היום","1":"מחר","2":"מחרתיים","-1":"אתמול","-2":"שלשום"},"relativeTime":{"future":{"one":"בעוד יום {0}","two":"בעוד יומיים","many":"בעוד {0} ימים","other":"בעוד {0} ימים"},"past":{"one":"לפני יום {0}","two":"לפני יומיים","many":"לפני {0} ימים","other":"לפני {0} ימים"}}},"hour":{"displayName":"שעה","relativeTime":{"future":{"one":"בעוד שעה","two":"בעוד שעתיים","many":"בעוד {0} שעות","other":"בעוד {0} שעות"},"past":{"one":"לפני שעה","two":"לפני שעתיים","many":"לפני {0} שעות","other":"לפני {0} שעות"}}},"minute":{"displayName":"דקה","relativeTime":{"future":{"one":"בעוד דקה","two":"בעוד שתי דקות","many":"בעוד {0} דקות","other":"בעוד {0} דקות"},"past":{"one":"לפני דקה","two":"לפני שתי דקות","many":"לפני {0} דקות","other":"לפני {0} דקות"}}},"second":{"displayName":"שנייה","relative":{"0":"עכשיו"},"relativeTime":{"future":{"one":"בעוד שנייה","two":"בעוד שתי שניות","many":"בעוד {0} שניות","other":"בעוד {0} שניות"},"past":{"one":"לפני שנייה","two":"לפני שתי שניות","many":"לפני {0} שניות","other":"לפני {0} שניות"}}}}});
ReactIntl.__addLocaleData({"locale":"he-IL","parentLocale":"he"});

ReactIntl.__addLocaleData({"locale":"hi","pluralRuleFunction":function (n,ord){if(ord)return n==1?"one":n==2||n==3?"two":n==4?"few":n==6?"many":"other";return n>=0&&n<=1?"one":"other"},"fields":{"year":{"displayName":"वर्ष","relative":{"0":"इस वर्ष","1":"अगला वर्ष","-1":"पिछला वर्ष"},"relativeTime":{"future":{"one":"{0} वर्ष में","other":"{0} वर्ष में"},"past":{"one":"{0} वर्ष पहले","other":"{0} वर्ष पहले"}}},"month":{"displayName":"माह","relative":{"0":"इस माह","1":"अगला माह","-1":"पिछला माह"},"relativeTime":{"future":{"one":"{0} माह में","other":"{0} माह में"},"past":{"one":"{0} माह पहले","other":"{0} माह पहले"}}},"day":{"displayName":"दिन","relative":{"0":"आज","1":"कल","2":"परसों","-1":"कल","-2":"बीता परसों"},"relativeTime":{"future":{"one":"{0} दिन में","other":"{0} दिन में"},"past":{"one":"{0} दिन पहले","other":"{0} दिन पहले"}}},"hour":{"displayName":"घंटा","relativeTime":{"future":{"one":"{0} घंटे में","other":"{0} घंटे में"},"past":{"one":"{0} घंटे पहले","other":"{0} घंटे पहले"}}},"minute":{"displayName":"मिनट","relativeTime":{"future":{"one":"{0} मिनट में","other":"{0} मिनट में"},"past":{"one":"{0} मिनट पहले","other":"{0} मिनट पहले"}}},"second":{"displayName":"सेकंड","relative":{"0":"अब"},"relativeTime":{"future":{"one":"{0} सेकंड में","other":"{0} सेकंड में"},"past":{"one":"{0} सेकंड पहले","other":"{0} सेकंड पहले"}}}}});
ReactIntl.__addLocaleData({"locale":"hi-IN","parentLocale":"hi"});

ReactIntl.__addLocaleData({"locale":"hr","pluralRuleFunction":function (n,ord){var s=String(n).split("."),i=s[0],f=s[1]||"",v0=!s[1],i10=i.slice(-1),i100=i.slice(-2),f10=f.slice(-1),f100=f.slice(-2);if(ord)return"other";return v0&&i10==1&&i100!=11||f10==1&&f100!=11?"one":v0&&(i10>=2&&i10<=4)&&(i100<12||i100>14)||f10>=2&&f10<=4&&(f100<12||f100>14)?"few":"other"},"fields":{"year":{"displayName":"Godina","relative":{"0":"ove godine","1":"sljedeće godine","-1":"prošle godine"},"relativeTime":{"future":{"one":"za {0} godinu","few":"za {0} godine","other":"za {0} godina"},"past":{"one":"prije {0} godinu","few":"prije {0} godine","other":"prije {0} godina"}}},"month":{"displayName":"Mjesec","relative":{"0":"ovaj mjesec","1":"sljedeći mjesec","-1":"prošli mjesec"},"relativeTime":{"future":{"one":"za {0} mjesec","few":"za {0} mjeseca","other":"za {0} mjeseci"},"past":{"one":"prije {0} mjesec","few":"prije {0} mjeseca","other":"prije {0} mjeseci"}}},"day":{"displayName":"Dan","relative":{"0":"danas","1":"sutra","2":"prekosutra","-1":"jučer","-2":"prekjučer"},"relativeTime":{"future":{"one":"za {0} dan","few":"za {0} dana","other":"za {0} dana"},"past":{"one":"prije {0} dan","few":"prije {0} dana","other":"prije {0} dana"}}},"hour":{"displayName":"Sat","relativeTime":{"future":{"one":"za {0} sat","few":"za {0} sata","other":"za {0} sati"},"past":{"one":"prije {0} sat","few":"prije {0} sata","other":"prije {0} sati"}}},"minute":{"displayName":"Minuta","relativeTime":{"future":{"one":"za {0} minutu","few":"za {0} minute","other":"za {0} minuta"},"past":{"one":"prije {0} minutu","few":"prije {0} minute","other":"prije {0} minuta"}}},"second":{"displayName":"Sekunda","relative":{"0":"sada"},"relativeTime":{"future":{"one":"za {0} sekundu","few":"za {0} sekunde","other":"za {0} sekundi"},"past":{"one":"prije {0} sekundu","few":"prije {0} sekunde","other":"prije {0} sekundi"}}}}});
ReactIntl.__addLocaleData({"locale":"hr-BA","parentLocale":"hr"});
ReactIntl.__addLocaleData({"locale":"hr-HR","parentLocale":"hr"});

ReactIntl.__addLocaleData({"locale":"hsb","pluralRuleFunction":function (n,ord){var s=String(n).split("."),i=s[0],f=s[1]||"",v0=!s[1],i100=i.slice(-2),f100=f.slice(-2);if(ord)return"other";return v0&&i100==1||f100==1?"one":v0&&i100==2||f100==2?"two":v0&&(i100==3||i100==4)||(f100==3||f100==4)?"few":"other"},"fields":{"year":{"displayName":"lěto","relative":{"0":"lětsa","1":"klětu","-1":"loni"},"relativeTime":{"future":{"one":"za {0} lěto","two":"za {0} lěće","few":"za {0} lěta","other":"za {0} lět"},"past":{"one":"před {0} lětom","two":"před {0} lětomaj","few":"před {0} lětami","other":"před {0} lětami"}}},"month":{"displayName":"měsac","relative":{"0":"tutón měsac","1":"přichodny měsac","-1":"zašły měsac"},"relativeTime":{"future":{"one":"za {0} měsac","two":"za {0} měsacaj","few":"za {0} měsacy","other":"za {0} měsacow"},"past":{"one":"před {0} měsacom","two":"před {0} měsacomaj","few":"před {0} měsacami","other":"před {0} měsacami"}}},"day":{"displayName":"dźeń","relative":{"0":"dźensa","1":"jutře","-1":"wčera"},"relativeTime":{"future":{"one":"za {0} dźeń","two":"za {0} dnjej","few":"za {0} dny","other":"za {0} dnjow"},"past":{"one":"před {0} dnjom","two":"před {0} dnjomaj","few":"před {0} dnjemi","other":"před {0} dnjemi"}}},"hour":{"displayName":"hodźina","relativeTime":{"future":{"one":"za {0} hodźinu","two":"za {0} hodźinje","few":"za {0} hodźiny","other":"za {0} hodźin"},"past":{"one":"před {0} hodźinu","two":"před {0} hodźinomaj","few":"před {0} hodźinami","other":"před {0} hodźinami"}}},"minute":{"displayName":"minuta","relativeTime":{"future":{"one":"za {0} minutu","two":"za {0} minuće","few":"za {0} minuty","other":"za {0} minutow"},"past":{"one":"před {0} minutu","two":"před {0} minutomaj","few":"před {0} minutami","other":"před {0} minutami"}}},"second":{"displayName":"sekunda","relative":{"0":"now"},"relativeTime":{"future":{"one":"za {0} sekundu","two":"za {0} sekundźe","few":"za {0} sekundy","other":"za {0} sekundow"},"past":{"one":"před {0} sekundu","two":"před {0} sekundomaj","few":"před {0} sekundami","other":"před {0} sekundami"}}}}});
ReactIntl.__addLocaleData({"locale":"hsb-DE","parentLocale":"hsb"});

ReactIntl.__addLocaleData({"locale":"hu","pluralRuleFunction":function (n,ord){if(ord)return n==1||n==5?"one":"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"év","relative":{"0":"ez az év","1":"következő év","-1":"előző év"},"relativeTime":{"future":{"one":"{0} év múlva","other":"{0} év múlva"},"past":{"one":"{0} évvel ezelőtt","other":"{0} évvel ezelőtt"}}},"month":{"displayName":"hónap","relative":{"0":"ez a hónap","1":"következő hónap","-1":"előző hónap"},"relativeTime":{"future":{"one":"{0} hónap múlva","other":"{0} hónap múlva"},"past":{"one":"{0} hónappal ezelőtt","other":"{0} hónappal ezelőtt"}}},"day":{"displayName":"nap","relative":{"0":"ma","1":"holnap","2":"holnapután","-1":"tegnap","-2":"tegnapelőtt"},"relativeTime":{"future":{"one":"{0} nap múlva","other":"{0} nap múlva"},"past":{"one":"{0} nappal ezelőtt","other":"{0} nappal ezelőtt"}}},"hour":{"displayName":"óra","relativeTime":{"future":{"one":"{0} óra múlva","other":"{0} óra múlva"},"past":{"one":"{0} órával ezelőtt","other":"{0} órával ezelőtt"}}},"minute":{"displayName":"perc","relativeTime":{"future":{"one":"{0} perc múlva","other":"{0} perc múlva"},"past":{"one":"{0} perccel ezelőtt","other":"{0} perccel ezelőtt"}}},"second":{"displayName":"másodperc","relative":{"0":"most"},"relativeTime":{"future":{"one":"{0} másodperc múlva","other":"{0} másodperc múlva"},"past":{"one":"{0} másodperccel ezelőtt","other":"{0} másodperccel ezelőtt"}}}}});
ReactIntl.__addLocaleData({"locale":"hu-HU","parentLocale":"hu"});

ReactIntl.__addLocaleData({"locale":"hy","pluralRuleFunction":function (n,ord){if(ord)return n==1?"one":"other";return n>=0&&n<2?"one":"other"},"fields":{"year":{"displayName":"Տարի","relative":{"0":"այս տարի","1":"հաջորդ տարի","-1":"անցյալ տարի"},"relativeTime":{"future":{"one":"{0} տարի անց","other":"{0} տարի անց"},"past":{"one":"{0} տարի առաջ","other":"{0} տարի առաջ"}}},"month":{"displayName":"Ամիս","relative":{"0":"այս ամիս","1":"հաջորդ ամիս","-1":"անցյալ ամիս"},"relativeTime":{"future":{"one":"{0} ամիս անց","other":"{0} ամիս անց"},"past":{"one":"{0} ամիս առաջ","other":"{0} ամիս առաջ"}}},"day":{"displayName":"Օր","relative":{"0":"այսօր","1":"վաղը","2":"վաղը չէ մյուս օրը","-1":"երեկ","-2":"երեկ չէ առաջի օրը"},"relativeTime":{"future":{"one":"{0} օր անց","other":"{0} օր անց"},"past":{"one":"{0} օր առաջ","other":"{0} օր առաջ"}}},"hour":{"displayName":"Ժամ","relativeTime":{"future":{"one":"{0} ժամ անց","other":"{0} ժամ անց"},"past":{"one":"{0} ժամ առաջ","other":"{0} ժամ առաջ"}}},"minute":{"displayName":"Րոպե","relativeTime":{"future":{"one":"{0} րոպե անց","other":"{0} րոպե անց"},"past":{"one":"{0} րոպե առաջ","other":"{0} րոպե առաջ"}}},"second":{"displayName":"Վայրկյան","relative":{"0":"այժմ"},"relativeTime":{"future":{"one":"{0} վայրկյան անց","other":"{0} վայրկյան անց"},"past":{"one":"{0} վայրկյան առաջ","other":"{0} վայրկյան առաջ"}}}}});
ReactIntl.__addLocaleData({"locale":"hy-AM","parentLocale":"hy"});

ReactIntl.__addLocaleData({"locale":"ia","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"ia-FR","parentLocale":"ia"});

ReactIntl.__addLocaleData({"locale":"id","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Tahun","relative":{"0":"tahun ini","1":"tahun depan","-1":"tahun lalu"},"relativeTime":{"future":{"other":"Dalam {0} tahun"},"past":{"other":"{0} tahun yang lalu"}}},"month":{"displayName":"Bulan","relative":{"0":"bulan ini","1":"Bulan berikutnya","-1":"bulan lalu"},"relativeTime":{"future":{"other":"Dalam {0} bulan"},"past":{"other":"{0} bulan yang lalu"}}},"day":{"displayName":"Hari","relative":{"0":"hari ini","1":"besok","2":"lusa","-1":"kemarin","-2":"kemarin lusa"},"relativeTime":{"future":{"other":"Dalam {0} hari"},"past":{"other":"{0} hari yang lalu"}}},"hour":{"displayName":"Jam","relativeTime":{"future":{"other":"Dalam {0} jam"},"past":{"other":"{0} jam yang lalu"}}},"minute":{"displayName":"Menit","relativeTime":{"future":{"other":"Dalam {0} menit"},"past":{"other":"{0} menit yang lalu"}}},"second":{"displayName":"Detik","relative":{"0":"sekarang"},"relativeTime":{"future":{"other":"Dalam {0} detik"},"past":{"other":"{0} detik yang lalu"}}}}});
ReactIntl.__addLocaleData({"locale":"id-ID","parentLocale":"id"});

ReactIntl.__addLocaleData({"locale":"ig","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Afọ","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Ọnwa","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Ụbọchị","relative":{"0":"Taata","1":"Echi","-1":"Nnyaafụ"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Elekere","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Nkeji","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Nkejinta","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"ig-NG","parentLocale":"ig"});

ReactIntl.__addLocaleData({"locale":"ii","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"ꈎ","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"ꆪ","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"ꑍ","relative":{"0":"ꀃꑍ","1":"ꃆꏂꑍ","2":"ꌕꀿꑍ","-1":"ꀋꅔꉈ","-2":"ꎴꂿꋍꑍ"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"ꄮꈉ","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"ꃏ","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"ꇙ","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"ii-CN","parentLocale":"ii"});

ReactIntl.__addLocaleData({"locale":"in","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});

ReactIntl.__addLocaleData({"locale":"is","pluralRuleFunction":function (n,ord){var s=String(n).split("."),i=s[0],t0=Number(s[0])==n,i10=i.slice(-1),i100=i.slice(-2);if(ord)return"other";return t0&&i10==1&&i100!=11||!t0?"one":"other"},"fields":{"year":{"displayName":"ár","relative":{"0":"á þessu ári","1":"á næsta ári","-1":"á síðasta ári"},"relativeTime":{"future":{"one":"eftir {0} ár","other":"eftir {0} ár"},"past":{"one":"fyrir {0} ári","other":"fyrir {0} árum"}}},"month":{"displayName":"mánuður","relative":{"0":"í þessum mánuði","1":"í næsta mánuði","-1":"í síðasta mánuði"},"relativeTime":{"future":{"one":"eftir {0} mánuð","other":"eftir {0} mánuði"},"past":{"one":"fyrir {0} mánuði","other":"fyrir {0} mánuðum"}}},"day":{"displayName":"dagur","relative":{"0":"í dag","1":"á morgun","2":"eftir tvo daga","-1":"í gær","-2":"í fyrradag"},"relativeTime":{"future":{"one":"eftir {0} dag","other":"eftir {0} daga"},"past":{"one":"fyrir {0} degi","other":"fyrir {0} dögum"}}},"hour":{"displayName":"klukkustund","relativeTime":{"future":{"one":"eftir {0} klukkustund","other":"eftir {0} klukkustundir"},"past":{"one":"fyrir {0} klukkustund","other":"fyrir {0} klukkustundum"}}},"minute":{"displayName":"mínúta","relativeTime":{"future":{"one":"eftir {0} mínútu","other":"eftir {0} mínútur"},"past":{"one":"fyrir {0} mínútu","other":"fyrir {0} mínútum"}}},"second":{"displayName":"sekúnda","relative":{"0":"núna"},"relativeTime":{"future":{"one":"eftir {0} sekúndu","other":"eftir {0} sekúndur"},"past":{"one":"fyrir {0} sekúndu","other":"fyrir {0} sekúndum"}}}}});
ReactIntl.__addLocaleData({"locale":"is-IS","parentLocale":"is"});

ReactIntl.__addLocaleData({"locale":"it","pluralRuleFunction":function (n,ord){var s=String(n).split("."),v0=!s[1];if(ord)return n==11||n==8||n==80||n==800?"many":"other";return n==1&&v0?"one":"other"},"fields":{"year":{"displayName":"Anno","relative":{"0":"quest’anno","1":"anno prossimo","-1":"anno scorso"},"relativeTime":{"future":{"one":"tra {0} anno","other":"tra {0} anni"},"past":{"one":"{0} anno fa","other":"{0} anni fa"}}},"month":{"displayName":"Mese","relative":{"0":"questo mese","1":"mese prossimo","-1":"mese scorso"},"relativeTime":{"future":{"one":"tra {0} mese","other":"tra {0} mesi"},"past":{"one":"{0} mese fa","other":"{0} mesi fa"}}},"day":{"displayName":"Giorno","relative":{"0":"oggi","1":"domani","2":"dopodomani","-1":"ieri","-2":"l’altro ieri"},"relativeTime":{"future":{"one":"tra {0} giorno","other":"tra {0} giorni"},"past":{"one":"{0} giorno fa","other":"{0} giorni fa"}}},"hour":{"displayName":"Ora","relativeTime":{"future":{"one":"tra {0} ora","other":"tra {0} ore"},"past":{"one":"{0} ora fa","other":"{0} ore fa"}}},"minute":{"displayName":"Minuto","relativeTime":{"future":{"one":"tra {0} minuto","other":"tra {0} minuti"},"past":{"one":"{0} minuto fa","other":"{0} minuti fa"}}},"second":{"displayName":"Secondo","relative":{"0":"ora"},"relativeTime":{"future":{"one":"tra {0} secondo","other":"tra {0} secondi"},"past":{"one":"{0} secondo fa","other":"{0} secondi fa"}}}}});
ReactIntl.__addLocaleData({"locale":"it-CH","parentLocale":"it"});
ReactIntl.__addLocaleData({"locale":"it-IT","parentLocale":"it"});
ReactIntl.__addLocaleData({"locale":"it-SM","parentLocale":"it"});

ReactIntl.__addLocaleData({"locale":"iu","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":n==2?"two":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});

ReactIntl.__addLocaleData({"locale":"iw","pluralRuleFunction":function (n,ord){var s=String(n).split("."),i=s[0],v0=!s[1],t0=Number(s[0])==n,n10=t0&&s[0].slice(-1);if(ord)return"other";return n==1&&v0?"one":i==2&&v0?"two":v0&&(n<0||n>10)&&t0&&n10==0?"many":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});

ReactIntl.__addLocaleData({"locale":"ja","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"年","relative":{"0":"今年","1":"翌年","-1":"昨年"},"relativeTime":{"future":{"other":"{0} 年後"},"past":{"other":"{0} 年前"}}},"month":{"displayName":"月","relative":{"0":"今月","1":"翌月","-1":"先月"},"relativeTime":{"future":{"other":"{0} か月後"},"past":{"other":"{0} か月前"}}},"day":{"displayName":"日","relative":{"0":"今日","1":"明日","2":"明後日","-1":"昨日","-2":"一昨日"},"relativeTime":{"future":{"other":"{0} 日後"},"past":{"other":"{0} 日前"}}},"hour":{"displayName":"時","relativeTime":{"future":{"other":"{0} 時間後"},"past":{"other":"{0} 時間前"}}},"minute":{"displayName":"分","relativeTime":{"future":{"other":"{0} 分後"},"past":{"other":"{0} 分前"}}},"second":{"displayName":"秒","relative":{"0":"今すぐ"},"relativeTime":{"future":{"other":"{0} 秒後"},"past":{"other":"{0} 秒前"}}}}});
ReactIntl.__addLocaleData({"locale":"ja-JP","parentLocale":"ja"});

ReactIntl.__addLocaleData({"locale":"jbo","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});

ReactIntl.__addLocaleData({"locale":"jgo","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"one":"Nǔu ŋguꞋ {0}","other":"Nǔu ŋguꞋ {0}"},"past":{"one":"Ɛ́gɛ́ mɔ́ ŋguꞋ {0}","other":"Ɛ́gɛ́ mɔ́ ŋguꞋ {0}"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"one":"Nǔu {0} saŋ","other":"Nǔu {0} saŋ"},"past":{"one":"ɛ́ gɛ́ mɔ́ pɛsaŋ {0}","other":"ɛ́ gɛ́ mɔ́ pɛsaŋ {0}"}}},"day":{"displayName":"Day","relative":{"0":"lɔꞋɔ","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"one":"Nǔu lɛ́Ꞌ {0}","other":"Nǔu lɛ́Ꞌ {0}"},"past":{"one":"Ɛ́ gɛ́ mɔ́ lɛ́Ꞌ {0}","other":"Ɛ́ gɛ́ mɔ́ lɛ́Ꞌ {0}"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"one":"nǔu háwa {0}","other":"nǔu háwa {0}"},"past":{"one":"ɛ́ gɛ mɔ́ {0} háwa","other":"ɛ́ gɛ mɔ́ {0} háwa"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"one":"nǔu {0} minút","other":"nǔu {0} minút"},"past":{"one":"ɛ́ gɛ́ mɔ́ minút {0}","other":"ɛ́ gɛ́ mɔ́ minút {0}"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"jgo-CM","parentLocale":"jgo"});

ReactIntl.__addLocaleData({"locale":"ji","pluralRuleFunction":function (n,ord){var s=String(n).split("."),v0=!s[1];if(ord)return"other";return n==1&&v0?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});

ReactIntl.__addLocaleData({"locale":"jmc","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Maka","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Mori","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Mfiri","relative":{"0":"Inu","1":"Ngama","-1":"Ukou"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Saa","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Dakyika","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Sekunde","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"jmc-TZ","parentLocale":"jmc"});

ReactIntl.__addLocaleData({"locale":"jv","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});

ReactIntl.__addLocaleData({"locale":"jw","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});

ReactIntl.__addLocaleData({"locale":"ka","pluralRuleFunction":function (n,ord){var s=String(n).split("."),i=s[0],i100=i.slice(-2);if(ord)return i==1?"one":i==0||(i100>=2&&i100<=20||i100==40||i100==60||i100==80)?"many":"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"წელი","relative":{"0":"ამ წელს","1":"მომავალ წელს","-1":"გასულ წელს"},"relativeTime":{"future":{"one":"{0} წელიწადში","other":"{0} წელიწადში"},"past":{"one":"{0} წლის წინ","other":"{0} წლის წინ"}}},"month":{"displayName":"თვე","relative":{"0":"ამ თვეში","1":"მომავალ თვეს","-1":"გასულ თვეს"},"relativeTime":{"future":{"one":"{0} თვეში","other":"{0} თვეში"},"past":{"one":"{0} თვის წინ","other":"{0} თვის წინ"}}},"day":{"displayName":"დღე","relative":{"0":"დღეს","1":"ხვალ","2":"ზეგ","-1":"გუშინ","-2":"გუშინწინ"},"relativeTime":{"future":{"one":"{0} დღეში","other":"{0} დღეში"},"past":{"one":"{0} დღის წინ","other":"{0} დღის წინ"}}},"hour":{"displayName":"საათი","relativeTime":{"future":{"one":"{0} საათში","other":"{0} საათში"},"past":{"one":"{0} საათის წინ","other":"{0} საათის წინ"}}},"minute":{"displayName":"წუთი","relativeTime":{"future":{"one":"{0} წუთში","other":"{0} წუთში"},"past":{"one":"{0} წუთის წინ","other":"{0} წუთის წინ"}}},"second":{"displayName":"წამი","relative":{"0":"ახლა"},"relativeTime":{"future":{"one":"{0} წამში","other":"{0} წამში"},"past":{"one":"{0} წამის წინ","other":"{0} წამის წინ"}}}}});
ReactIntl.__addLocaleData({"locale":"ka-GE","parentLocale":"ka"});

ReactIntl.__addLocaleData({"locale":"kab","pluralRuleFunction":function (n,ord){if(ord)return"other";return n>=0&&n<2?"one":"other"},"fields":{"year":{"displayName":"Aseggas","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Aggur","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Ass","relative":{"0":"Ass-a","1":"Azekka","-1":"Iḍelli"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Tamert","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Tamrect","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Tasint","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"kab-DZ","parentLocale":"kab"});

ReactIntl.__addLocaleData({"locale":"kaj","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});

ReactIntl.__addLocaleData({"locale":"kam","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Mwaka","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Mwai","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Mũthenya","relative":{"0":"Ũmũnthĩ","1":"Ũnĩ","-1":"Ĩyoo"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Saa","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Ndatĩka","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"sekondi","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"kam-KE","parentLocale":"kam"});

ReactIntl.__addLocaleData({"locale":"kcg","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});

ReactIntl.__addLocaleData({"locale":"kde","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Mwaka","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Mwedi","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Lihiku","relative":{"0":"Nelo","1":"Nundu","-1":"Lido"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Saa","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Dakika","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Sekunde","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"kde-TZ","parentLocale":"kde"});

ReactIntl.__addLocaleData({"locale":"kea","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Anu","relative":{"0":"es anu li","1":"prósimu anu","-1":"anu pasadu"},"relativeTime":{"future":{"other":"di li {0} anu"},"past":{"other":"a ten {0} anu"}}},"month":{"displayName":"Mes","relative":{"0":"es mes li","1":"prósimu mes","-1":"mes pasadu"},"relativeTime":{"future":{"other":"di li {0} mes"},"past":{"other":"a ten {0} mes"}}},"day":{"displayName":"Dia","relative":{"0":"oji","1":"manha","-1":"onti"},"relativeTime":{"future":{"other":"di li {0} dia"},"past":{"other":"a ten {0} dia"}}},"hour":{"displayName":"Ora","relativeTime":{"future":{"other":"di li {0} ora"},"past":{"other":"a ten {0} ora"}}},"minute":{"displayName":"Minutu","relativeTime":{"future":{"other":"di li {0} minutu"},"past":{"other":"a ten {0} minutu"}}},"second":{"displayName":"Sigundu","relative":{"0":"now"},"relativeTime":{"future":{"other":"di li {0} sigundu"},"past":{"other":"a ten {0} sigundu"}}}}});
ReactIntl.__addLocaleData({"locale":"kea-CV","parentLocale":"kea"});

ReactIntl.__addLocaleData({"locale":"khq","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Jiiri","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Handu","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Jaari","relative":{"0":"Hõo","1":"Suba","-1":"Bi"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Guuru","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Miniti","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Miti","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"khq-ML","parentLocale":"khq"});

ReactIntl.__addLocaleData({"locale":"ki","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Mwaka","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Mweri","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Mũthenya","relative":{"0":"Ũmũthĩ","1":"Rũciũ","-1":"Ira"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Ithaa","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Ndagĩka","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Sekunde","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"ki-KE","parentLocale":"ki"});

ReactIntl.__addLocaleData({"locale":"kk","pluralRuleFunction":function (n,ord){var s=String(n).split("."),t0=Number(s[0])==n,n10=t0&&s[0].slice(-1);if(ord)return n10==6||n10==9||t0&&n10==0&&n!=0?"many":"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Жыл","relative":{"0":"биылғы жыл","1":"келесі жыл","-1":"былтырғы жыл"},"relativeTime":{"future":{"one":"{0} жылдан кейін","other":"{0} жылдан кейін"},"past":{"one":"{0} жыл бұрын","other":"{0} жыл бұрын"}}},"month":{"displayName":"Ай","relative":{"0":"осы ай","1":"келесі ай","-1":"өткен ай"},"relativeTime":{"future":{"one":"{0} айдан кейін","other":"{0} айдан кейін"},"past":{"one":"{0} ай бұрын","other":"{0} ай бұрын"}}},"day":{"displayName":"күн","relative":{"0":"бүгін","1":"ертең","2":"арғы күні","-1":"кеше","-2":"алдыңғы күні"},"relativeTime":{"future":{"one":"{0} күннен кейін","other":"{0} күннен кейін"},"past":{"one":"{0} күн бұрын","other":"{0} күн бұрын"}}},"hour":{"displayName":"Сағат","relativeTime":{"future":{"one":"{0} сағаттан кейін","other":"{0} сағаттан кейін"},"past":{"one":"{0} сағат бұрын","other":"{0} сағат бұрын"}}},"minute":{"displayName":"Минут","relativeTime":{"future":{"one":"{0} минуттан кейін","other":"{0} минуттан кейін"},"past":{"one":"{0} минут бұрын","other":"{0} минут бұрын"}}},"second":{"displayName":"Секунд","relative":{"0":"қазір"},"relativeTime":{"future":{"one":"{0} секундтан кейін","other":"{0} секундтан кейін"},"past":{"one":"{0} секунд бұрын","other":"{0} секунд бұрын"}}}}});
ReactIntl.__addLocaleData({"locale":"kk-Cyrl","parentLocale":"kk"});
ReactIntl.__addLocaleData({"locale":"kk-Cyrl-KZ","parentLocale":"kk-Cyrl"});

ReactIntl.__addLocaleData({"locale":"kkj","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"muka","1":"nɛmɛnɔ","-1":"kwey"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"kkj-CM","parentLocale":"kkj"});

ReactIntl.__addLocaleData({"locale":"kl","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"ukioq","relative":{"0":"manna ukioq","1":"tulleq ukioq","-1":"kingulleq ukioq"},"relativeTime":{"future":{"one":"om {0} ukioq","other":"om {0} ukioq"},"past":{"one":"for {0} ukioq siden","other":"for {0} ukioq siden"}}},"month":{"displayName":"qaammat","relative":{"0":"manna qaammat","1":"tulleq qaammat","-1":"kingulleq qaammat"},"relativeTime":{"future":{"one":"om {0} qaammat","other":"om {0} qaammat"},"past":{"one":"for {0} qaammat siden","other":"for {0} qaammat siden"}}},"day":{"displayName":"ulloq","relative":{"0":"ullumi","1":"aqagu","2":"aqaguagu","-1":"ippassaq","-2":"ippassaani"},"relativeTime":{"future":{"one":"om {0} ulloq unnuarlu","other":"om {0} ulloq unnuarlu"},"past":{"one":"for {0} ulloq unnuarlu siden","other":"for {0} ulloq unnuarlu siden"}}},"hour":{"displayName":"nalunaaquttap-akunnera","relativeTime":{"future":{"one":"om {0} nalunaaquttap-akunnera","other":"om {0} nalunaaquttap-akunnera"},"past":{"one":"for {0} nalunaaquttap-akunnera siden","other":"for {0} nalunaaquttap-akunnera siden"}}},"minute":{"displayName":"minutsi","relativeTime":{"future":{"one":"om {0} minutsi","other":"om {0} minutsi"},"past":{"one":"for {0} minutsi siden","other":"for {0} minutsi siden"}}},"second":{"displayName":"sekundi","relative":{"0":"now"},"relativeTime":{"future":{"one":"om {0} sekundi","other":"om {0} sekundi"},"past":{"one":"for {0} sekundi siden","other":"for {0} sekundi siden"}}}}});
ReactIntl.__addLocaleData({"locale":"kl-GL","parentLocale":"kl"});

ReactIntl.__addLocaleData({"locale":"kln","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Kenyit","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Arawet","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Betut","relative":{"0":"Raini","1":"Mutai","-1":"Amut"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Sait","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minitit","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Sekondit","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"kln-KE","parentLocale":"kln"});

ReactIntl.__addLocaleData({"locale":"km","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"ឆ្នាំ","relative":{"0":"ឆ្នាំ​នេះ","1":"ឆ្នាំ​ក្រោយ","-1":"ឆ្នាំ​មុន"},"relativeTime":{"future":{"other":"ក្នុង​រយៈ​ពេល {0} ឆ្នាំ"},"past":{"other":"{0} ឆ្នាំ​មុន"}}},"month":{"displayName":"ខែ","relative":{"0":"ខែ​នេះ","1":"ខែ​ក្រោយ","-1":"ខែ​មុន"},"relativeTime":{"future":{"other":"ក្នុង​រយៈ​ពេល {0} ខែ"},"past":{"other":"{0} ខែមុន"}}},"day":{"displayName":"ថ្ងៃ","relative":{"0":"ថ្ងៃ​នេះ","1":"ថ្ងៃ​ស្អែក","2":"​ខាន​ស្អែក","-1":"ម្សិលមិញ","-2":"ម្សិល​ម៉្ងៃ"},"relativeTime":{"future":{"other":"ក្នុង​រយៈ​ពេល {0} ថ្ងៃ"},"past":{"other":"{0} ថ្ងៃ​មុន"}}},"hour":{"displayName":"ម៉ោង","relativeTime":{"future":{"other":"ក្នុង​រយៈ​ពេល {0} ម៉ោង"},"past":{"other":"{0} ម៉ោង​មុន"}}},"minute":{"displayName":"នាទី","relativeTime":{"future":{"other":"ក្នុង​រយៈពេល {0} នាទី"},"past":{"other":"{0} នាទី​មុន"}}},"second":{"displayName":"វិនាទី","relative":{"0":"ឥឡូវ"},"relativeTime":{"future":{"other":"ក្នុង​រយៈពេល {0} វិនាទី"},"past":{"other":"{0} វិនាទី​មុន"}}}}});
ReactIntl.__addLocaleData({"locale":"km-KH","parentLocale":"km"});

ReactIntl.__addLocaleData({"locale":"kn","pluralRuleFunction":function (n,ord){if(ord)return"other";return n>=0&&n<=1?"one":"other"},"fields":{"year":{"displayName":"ವರ್ಷ","relative":{"0":"ಈ ವರ್ಷ","1":"ಮುಂದಿನ ವರ್ಷ","-1":"ಕಳೆದ ವರ್ಷ"},"relativeTime":{"future":{"one":"{0} ವರ್ಷದಲ್ಲಿ","other":"{0} ವರ್ಷಗಳಲ್ಲಿ"},"past":{"one":"{0} ವರ್ಷದ ಹಿಂದೆ","other":"{0} ವರ್ಷಗಳ ಹಿಂದೆ"}}},"month":{"displayName":"ತಿಂಗಳು","relative":{"0":"ಈ ತಿಂಗಳು","1":"ಮುಂದಿನ ತಿಂಗಳು","-1":"ಕಳೆದ ತಿಂಗಳು"},"relativeTime":{"future":{"one":"{0} ತಿಂಗಳಲ್ಲಿ","other":"{0} ತಿಂಗಳುಗಳಲ್ಲಿ"},"past":{"one":"{0} ತಿಂಗಳುಗಳ ಹಿಂದೆ","other":"{0} ತಿಂಗಳುಗಳ ಹಿಂದೆ"}}},"day":{"displayName":"ದಿನ","relative":{"0":"ಇಂದು","1":"ನಾಳೆ","2":"ನಾಡಿದ್ದು","-1":"ನಿನ್ನೆ","-2":"ಮೊನ್ನೆ"},"relativeTime":{"future":{"one":"{0} ದಿನದಲ್ಲಿ","other":"{0} ದಿನಗಳಲ್ಲಿ"},"past":{"one":"{0} ದಿನದ ಹಿಂದೆ","other":"{0} ದಿನಗಳ ಹಿಂದೆ"}}},"hour":{"displayName":"ಗಂಟೆ","relativeTime":{"future":{"one":"{0} ಗಂಟೆಯಲ್ಲಿ","other":"{0} ಗಂಟೆಗಳಲ್ಲಿ"},"past":{"one":"{0} ಗಂಟೆ ಹಿಂದೆ","other":"{0} ಗಂಟೆಗಳ ಹಿಂದೆ"}}},"minute":{"displayName":"ನಿಮಿಷ","relativeTime":{"future":{"one":"{0} ನಿಮಿಷದಲ್ಲಿ","other":"{0} ನಿಮಿಷಗಳಲ್ಲಿ"},"past":{"one":"{0} ನಿಮಿಷಗಳ ಹಿಂದೆ","other":"{0} ನಿಮಿಷಗಳ ಹಿಂದೆ"}}},"second":{"displayName":"ಸೆಕೆಂಡ್","relative":{"0":"ಇದೀಗ"},"relativeTime":{"future":{"one":"{0} ಸೆಕೆಂಡ್‌ನಲ್ಲಿ","other":"{0} ಸೆಕೆಂಡ್‌ಗಳಲ್ಲಿ"},"past":{"one":"{0} ಸೆಕೆಂಡ್ ಹಿಂದೆ","other":"{0} ಸೆಕೆಂಡುಗಳ ಹಿಂದೆ"}}}}});
ReactIntl.__addLocaleData({"locale":"kn-IN","parentLocale":"kn"});

ReactIntl.__addLocaleData({"locale":"ko","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"년","relative":{"0":"올해","1":"내년","-1":"작년"},"relativeTime":{"future":{"other":"{0}년 후"},"past":{"other":"{0}년 전"}}},"month":{"displayName":"월","relative":{"0":"이번 달","1":"다음 달","-1":"지난달"},"relativeTime":{"future":{"other":"{0}개월 후"},"past":{"other":"{0}개월 전"}}},"day":{"displayName":"일","relative":{"0":"오늘","1":"내일","2":"모레","-1":"어제","-2":"그저께"},"relativeTime":{"future":{"other":"{0}일 후"},"past":{"other":"{0}일 전"}}},"hour":{"displayName":"시","relativeTime":{"future":{"other":"{0}시간 후"},"past":{"other":"{0}시간 전"}}},"minute":{"displayName":"분","relativeTime":{"future":{"other":"{0}분 후"},"past":{"other":"{0}분 전"}}},"second":{"displayName":"초","relative":{"0":"지금"},"relativeTime":{"future":{"other":"{0}초 후"},"past":{"other":"{0}초 전"}}}}});
ReactIntl.__addLocaleData({"locale":"ko-KP","parentLocale":"ko"});
ReactIntl.__addLocaleData({"locale":"ko-KR","parentLocale":"ko"});

ReactIntl.__addLocaleData({"locale":"kok","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"kok-IN","parentLocale":"kok"});

ReactIntl.__addLocaleData({"locale":"ks","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"ؤری","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"رٮ۪تھ","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"دۄہ","relative":{"0":"اَز","1":"پگاہ","-1":"راتھ"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"گٲنٛٹہٕ","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"مِنَٹ","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"سٮ۪کَنڑ","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"ks-Arab","parentLocale":"ks"});
ReactIntl.__addLocaleData({"locale":"ks-Arab-IN","parentLocale":"ks-Arab"});

ReactIntl.__addLocaleData({"locale":"ksb","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Ng’waka","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Ng’ezi","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Siku","relative":{"0":"Evi eo","1":"Keloi","-1":"Ghuo"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Saa","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Dakika","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Sekunde","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"ksb-TZ","parentLocale":"ksb"});

ReactIntl.__addLocaleData({"locale":"ksf","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Bǝk","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Ŋwíí","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Ŋwós","relative":{"0":"Gɛ́ɛnǝ","1":"Ridúrǝ́","-1":"Rinkɔɔ́"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Cámɛɛn","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Mǝnít","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Háu","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"ksf-CM","parentLocale":"ksf"});

ReactIntl.__addLocaleData({"locale":"ksh","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==0?"zero":n==1?"one":"other"},"fields":{"year":{"displayName":"Johr","relative":{"0":"diese Johr","1":"nächste Johr","-1":"läz Johr"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Mohnd","relative":{"0":"diese Mohnd","1":"nächste Mohnd","-1":"lätzde Mohnd"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Daach","relative":{"0":"hück","1":"morje","2":"övvermorje","-1":"jestere","-2":"vörjestere"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Schtund","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Menutt","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Sekond","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"ksh-DE","parentLocale":"ksh"});

ReactIntl.__addLocaleData({"locale":"ku","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});

ReactIntl.__addLocaleData({"locale":"kw","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":n==2?"two":"other"},"fields":{"year":{"displayName":"Bledhen","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Mis","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Dedh","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Eur","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"kw-GB","parentLocale":"kw"});

ReactIntl.__addLocaleData({"locale":"ky","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"жыл","relative":{"0":"быйыл","1":"эмдиги жылы","-1":"былтыр"},"relativeTime":{"future":{"one":"{0} жылдан кийин","other":"{0} жылдан кийин"},"past":{"one":"{0} жыл мурун","other":"{0} жыл мурун"}}},"month":{"displayName":"ай","relative":{"0":"бул айда","1":"эмдиги айда","-1":"өткөн айда"},"relativeTime":{"future":{"one":"{0} айдан кийин","other":"{0} айдан кийин"},"past":{"one":"{0} ай мурун","other":"{0} ай мурун"}}},"day":{"displayName":"күн","relative":{"0":"бүгүн","1":"эртеӊ","2":"бүрсүгүнү","-1":"кечээ","-2":"мурдагы күнү"},"relativeTime":{"future":{"one":"{0} күндөн кийин","other":"{0} күндөн кийин"},"past":{"one":"{0} күн мурун","other":"{0} күн мурун"}}},"hour":{"displayName":"саат","relativeTime":{"future":{"one":"{0} сааттан кийин","other":"{0} сааттан кийин"},"past":{"one":"{0} саат мурун","other":"{0} саат мурун"}}},"minute":{"displayName":"мүнөт","relativeTime":{"future":{"one":"{0} мүнөттөн кийин","other":"{0} мүнөттөн кийин"},"past":{"one":"{0} мүнөт мурун","other":"{0} мүнөт мурун"}}},"second":{"displayName":"секунд","relative":{"0":"азыр"},"relativeTime":{"future":{"one":"{0} секунддан кийин","other":"{0} секунддан кийин"},"past":{"one":"{0} секунд мурун","other":"{0} секунд мурун"}}}}});
ReactIntl.__addLocaleData({"locale":"ky-Cyrl","parentLocale":"ky"});
ReactIntl.__addLocaleData({"locale":"ky-Cyrl-KG","parentLocale":"ky-Cyrl"});

ReactIntl.__addLocaleData({"locale":"lag","pluralRuleFunction":function (n,ord){var s=String(n).split("."),i=s[0];if(ord)return"other";return n==0?"zero":(i==0||i==1)&&n!=0?"one":"other"},"fields":{"year":{"displayName":"Mwaáka","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Mweéri","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Sikʉ","relative":{"0":"Isikʉ","1":"Lamʉtoondo","-1":"Niijo"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Sáa","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Dakíka","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Sekúunde","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"lag-TZ","parentLocale":"lag"});

ReactIntl.__addLocaleData({"locale":"lb","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Joer","relative":{"0":"dëst Joer","1":"nächst Joer","-1":"lescht Joer"},"relativeTime":{"future":{"one":"an {0} Joer","other":"a(n) {0} Joer"},"past":{"one":"virun {0} Joer","other":"viru(n) {0} Joer"}}},"month":{"displayName":"Mount","relative":{"0":"dëse Mount","1":"nächste Mount","-1":"leschte Mount"},"relativeTime":{"future":{"one":"an {0} Mount","other":"a(n) {0} Méint"},"past":{"one":"virun {0} Mount","other":"viru(n) {0} Méint"}}},"day":{"displayName":"Dag","relative":{"0":"haut","1":"muer","-1":"gëschter"},"relativeTime":{"future":{"one":"an {0} Dag","other":"a(n) {0} Deeg"},"past":{"one":"virun {0} Dag","other":"viru(n) {0} Deeg"}}},"hour":{"displayName":"Stonn","relativeTime":{"future":{"one":"an {0} Stonn","other":"a(n) {0} Stonnen"},"past":{"one":"virun {0} Stonn","other":"viru(n) {0} Stonnen"}}},"minute":{"displayName":"Minutt","relativeTime":{"future":{"one":"an {0} Minutt","other":"a(n) {0} Minutten"},"past":{"one":"virun {0} Minutt","other":"viru(n) {0} Minutten"}}},"second":{"displayName":"Sekonn","relative":{"0":"now"},"relativeTime":{"future":{"one":"an {0} Sekonn","other":"a(n) {0} Sekonnen"},"past":{"one":"virun {0} Sekonn","other":"viru(n) {0} Sekonnen"}}}}});
ReactIntl.__addLocaleData({"locale":"lb-LU","parentLocale":"lb"});

ReactIntl.__addLocaleData({"locale":"lg","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Mwaka","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Mwezi","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Lunaku","relative":{"0":"Lwaleero","1":"Nkya","-1":"Ggulo"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Saawa","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Dakiika","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Kasikonda","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"lg-UG","parentLocale":"lg"});

ReactIntl.__addLocaleData({"locale":"lkt","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Ómakȟa","relative":{"0":"Lé ómakȟa kiŋ","1":"Tȟokáta ómakȟa kiŋháŋ","-1":"Ómakȟa kʼuŋ héhaŋ"},"relativeTime":{"future":{"other":"Letáŋhaŋ ómakȟa {0} kiŋháŋ"},"past":{"other":"Hékta ómakȟa {0} kʼuŋ héhaŋ"}}},"month":{"displayName":"Wí","relative":{"0":"Lé wí kiŋ","1":"Wí kiŋháŋ","-1":"Wí kʼuŋ héhaŋ"},"relativeTime":{"future":{"other":"Letáŋhaŋ wíyawapi {0} kiŋháŋ"},"past":{"other":"Hékta wíyawapi {0} kʼuŋ héhaŋ"}}},"day":{"displayName":"Aŋpétu","relative":{"0":"Lé aŋpétu kiŋ","1":"Híŋhaŋni kiŋháŋ","-1":"Lé aŋpétu kiŋ"},"relativeTime":{"future":{"other":"Letáŋhaŋ {0}-čháŋ kiŋháŋ"},"past":{"other":"Hékta {0}-čháŋ k’uŋ héhaŋ"}}},"hour":{"displayName":"Owápȟe","relativeTime":{"future":{"other":"Letáŋhaŋ owápȟe {0} kiŋháŋ"},"past":{"other":"Hékta owápȟe {0} kʼuŋ héhaŋ"}}},"minute":{"displayName":"Owápȟe oȟʼáŋkȟo","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Okpí","relative":{"0":"now"},"relativeTime":{"future":{"other":"Letáŋhaŋ okpí {0} kiŋháŋ"},"past":{"other":"Hékta okpí {0} k’uŋ héhaŋ"}}}}});
ReactIntl.__addLocaleData({"locale":"lkt-US","parentLocale":"lkt"});

ReactIntl.__addLocaleData({"locale":"ln","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==0||n==1?"one":"other"},"fields":{"year":{"displayName":"Mobú","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Sánzá","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Mokɔlɔ","relative":{"0":"Lɛlɔ́","1":"Lóbi ekoyâ","-1":"Lóbi elékí"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Ngonga","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Monúti","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Sɛkɔ́ndɛ","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"ln-AO","parentLocale":"ln"});
ReactIntl.__addLocaleData({"locale":"ln-CD","parentLocale":"ln"});
ReactIntl.__addLocaleData({"locale":"ln-CF","parentLocale":"ln"});
ReactIntl.__addLocaleData({"locale":"ln-CG","parentLocale":"ln"});

ReactIntl.__addLocaleData({"locale":"lo","pluralRuleFunction":function (n,ord){if(ord)return n==1?"one":"other";return"other"},"fields":{"year":{"displayName":"ປີ","relative":{"0":"ປີນີ້","1":"ປີໜ້າ","-1":"ປີກາຍ"},"relativeTime":{"future":{"other":"ໃນອີກ {0} ປີ"},"past":{"other":"{0} ປີກ່ອນ"}}},"month":{"displayName":"ເດືອນ","relative":{"0":"ເດືອນນີ້","1":"ເດືອນໜ້າ","-1":"ເດືອນແລ້ວ"},"relativeTime":{"future":{"other":"ໃນອີກ {0} ເດືອນ"},"past":{"other":"{0} ເດືອນກ່ອນ"}}},"day":{"displayName":"ມື້","relative":{"0":"ມື້ນີ້","1":"ມື້ອື່ນ","2":"ມື້ຮື","-1":"ມື້ວານ","-2":"ມື້ກ່ອນ"},"relativeTime":{"future":{"other":"ໃນອີກ {0} ມື້"},"past":{"other":"{0} ມື້ກ່ອນ"}}},"hour":{"displayName":"ຊົ່ວໂມງ","relativeTime":{"future":{"other":"ໃນອີກ {0} ຊົ່ວໂມງ"},"past":{"other":"{0} ຊົ່ວໂມງກ່ອນ"}}},"minute":{"displayName":"ນາທີ","relativeTime":{"future":{"other":"{0} ໃນອີກ 0 ນາທີ"},"past":{"other":"{0} ນາທີກ່ອນ"}}},"second":{"displayName":"ວິນາທີ","relative":{"0":"ຕອນນີ້"},"relativeTime":{"future":{"other":"ໃນອີກ {0} ວິນາທີ"},"past":{"other":"{0} ວິນາທີກ່ອນ"}}}}});
ReactIntl.__addLocaleData({"locale":"lo-LA","parentLocale":"lo"});

ReactIntl.__addLocaleData({"locale":"lt","pluralRuleFunction":function (n,ord){var s=String(n).split("."),f=s[1]||"",t0=Number(s[0])==n,n10=t0&&s[0].slice(-1),n100=t0&&s[0].slice(-2);if(ord)return"other";return n10==1&&(n100<11||n100>19)?"one":n10>=2&&n10<=9&&(n100<11||n100>19)?"few":f!=0?"many":"other"},"fields":{"year":{"displayName":"Metai","relative":{"0":"šiais metais","1":"kitais metais","-1":"praėjusiais metais"},"relativeTime":{"future":{"one":"po {0} metų","few":"po {0} metų","many":"po {0} metų","other":"po {0} metų"},"past":{"one":"prieš {0} metus","few":"prieš {0} metus","many":"prieš {0} metų","other":"prieš {0} metų"}}},"month":{"displayName":"Mėnuo","relative":{"0":"šį mėnesį","1":"kitą mėnesį","-1":"praėjusį mėnesį"},"relativeTime":{"future":{"one":"po {0} mėnesio","few":"po {0} mėnesių","many":"po {0} mėnesio","other":"po {0} mėnesių"},"past":{"one":"prieš {0} mėnesį","few":"prieš {0} mėnesius","many":"prieš {0} mėnesio","other":"prieš {0} mėnesių"}}},"day":{"displayName":"Diena","relative":{"0":"šiandien","1":"rytoj","2":"poryt","-1":"vakar","-2":"užvakar"},"relativeTime":{"future":{"one":"po {0} dienos","few":"po {0} dienų","many":"po {0} dienos","other":"po {0} dienų"},"past":{"one":"prieš {0} dieną","few":"prieš {0} dienas","many":"prieš {0} dienos","other":"prieš {0} dienų"}}},"hour":{"displayName":"Valanda","relativeTime":{"future":{"one":"po {0} valandos","few":"po {0} valandų","many":"po {0} valandos","other":"po {0} valandų"},"past":{"one":"prieš {0} valandą","few":"prieš {0} valandas","many":"prieš {0} valandos","other":"prieš {0} valandų"}}},"minute":{"displayName":"Minutė","relativeTime":{"future":{"one":"po {0} minutės","few":"po {0} minučių","many":"po {0} minutės","other":"po {0} minučių"},"past":{"one":"prieš {0} minutę","few":"prieš {0} minutes","many":"prieš {0} minutės","other":"prieš {0} minučių"}}},"second":{"displayName":"Sekundė","relative":{"0":"dabar"},"relativeTime":{"future":{"one":"po {0} sekundės","few":"po {0} sekundžių","many":"po {0} sekundės","other":"po {0} sekundžių"},"past":{"one":"prieš {0} sekundę","few":"prieš {0} sekundes","many":"prieš {0} sekundės","other":"prieš {0} sekundžių"}}}}});
ReactIntl.__addLocaleData({"locale":"lt-LT","parentLocale":"lt"});

ReactIntl.__addLocaleData({"locale":"lu","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Tshidimu","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Ngondo","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Dituku","relative":{"0":"Lelu","1":"Malaba","-1":"Makelela"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Diba","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Kasunsu","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Kasunsukusu","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"lu-CD","parentLocale":"lu"});

ReactIntl.__addLocaleData({"locale":"luo","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"higa","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"dwe","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"chieng’","relative":{"0":"kawuono","1":"kiny","-1":"nyoro"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"saa","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"dakika","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"nyiriri mar saa","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"luo-KE","parentLocale":"luo"});

ReactIntl.__addLocaleData({"locale":"luy","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Muhiga","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Mweri","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Ridiku","relative":{"0":"Lero","1":"Mgamba","-1":"Mgorova"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Isaa","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Idagika","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Sekunde","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"luy-KE","parentLocale":"luy"});

ReactIntl.__addLocaleData({"locale":"lv","pluralRuleFunction":function (n,ord){var s=String(n).split("."),f=s[1]||"",v=f.length,t0=Number(s[0])==n,n10=t0&&s[0].slice(-1),n100=t0&&s[0].slice(-2),f100=f.slice(-2),f10=f.slice(-1);if(ord)return"other";return t0&&n10==0||n100>=11&&n100<=19||v==2&&(f100>=11&&f100<=19)?"zero":n10==1&&n100!=11||v==2&&f10==1&&f100!=11||v!=2&&f10==1?"one":"other"},"fields":{"year":{"displayName":"Gads","relative":{"0":"šajā gadā","1":"nākamajā gadā","-1":"pagājušajā gadā"},"relativeTime":{"future":{"zero":"pēc {0} gadiem","one":"pēc {0} gada","other":"pēc {0} gadiem"},"past":{"zero":"pirms {0} gadiem","one":"pirms {0} gada","other":"pirms {0} gadiem"}}},"month":{"displayName":"Mēnesis","relative":{"0":"šajā mēnesī","1":"nākamajā mēnesī","-1":"pagājušajā mēnesī"},"relativeTime":{"future":{"zero":"pēc {0} mēnešiem","one":"pēc {0} mēneša","other":"pēc {0} mēnešiem"},"past":{"zero":"pirms {0} mēnešiem","one":"pirms {0} mēneša","other":"pirms {0} mēnešiem"}}},"day":{"displayName":"diena","relative":{"0":"šodien","1":"rīt","2":"parīt","-1":"vakar","-2":"aizvakar"},"relativeTime":{"future":{"zero":"pēc {0} dienām","one":"pēc {0} dienas","other":"pēc {0} dienām"},"past":{"zero":"pirms {0} dienām","one":"pirms {0} dienas","other":"pirms {0} dienām"}}},"hour":{"displayName":"Stundas","relativeTime":{"future":{"zero":"pēc {0} stundām","one":"pēc {0} stundas","other":"pēc {0} stundām"},"past":{"zero":"pirms {0} stundām","one":"pirms {0} stundas","other":"pirms {0} stundām"}}},"minute":{"displayName":"Minūtes","relativeTime":{"future":{"zero":"pēc {0} minūtēm","one":"pēc {0} minūtes","other":"pēc {0} minūtēm"},"past":{"zero":"pirms {0} minūtēm","one":"pirms {0} minūtes","other":"pirms {0} minūtēm"}}},"second":{"displayName":"Sekundes","relative":{"0":"tagad"},"relativeTime":{"future":{"zero":"pēc {0} sekundēm","one":"pēc {0} sekundes","other":"pēc {0} sekundēm"},"past":{"zero":"pirms {0} sekundēm","one":"pirms {0} sekundes","other":"pirms {0} sekundēm"}}}}});
ReactIntl.__addLocaleData({"locale":"lv-LV","parentLocale":"lv"});

ReactIntl.__addLocaleData({"locale":"mas","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Ɔlárì","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Ɔlápà","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Ɛnkɔlɔ́ŋ","relative":{"0":"Táatá","1":"Tááisérè","-1":"Ŋolé"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Ɛ́sáâ","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Oldákikaè","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Sekunde","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"mas-KE","parentLocale":"mas"});
ReactIntl.__addLocaleData({"locale":"mas-TZ","parentLocale":"mas"});

ReactIntl.__addLocaleData({"locale":"mer","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Mwaka","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Mweri","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Ntukũ","relative":{"0":"Narua","1":"Rũjũ","-1":"Ĩgoro"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Ĩthaa","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Ndagika","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Sekondi","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"mer-KE","parentLocale":"mer"});

ReactIntl.__addLocaleData({"locale":"mfe","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Lane","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Mwa","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Zour","relative":{"0":"Zordi","1":"Demin","-1":"Yer"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Ler","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minit","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Segonn","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"mfe-MU","parentLocale":"mfe"});

ReactIntl.__addLocaleData({"locale":"mg","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==0||n==1?"one":"other"},"fields":{"year":{"displayName":"Taona","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Volana","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Andro","relative":{"0":"Anio","1":"Rahampitso","-1":"Omaly"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Ora","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minitra","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Segondra","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"mg-MG","parentLocale":"mg"});

ReactIntl.__addLocaleData({"locale":"mgh","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"yaka","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"mweri","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"nihuku","relative":{"0":"lel’lo","1":"me’llo","-1":"n’chana"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"isaa","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"idakika","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"isekunde","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"mgh-MZ","parentLocale":"mgh"});

ReactIntl.__addLocaleData({"locale":"mgo","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"fituʼ","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"iməg","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"one":"+{0} m","other":"+{0} m"},"past":{"one":"-{0} m","other":"-{0} m"}}},"day":{"displayName":"anəg","relative":{"0":"tèchɔ̀ŋ","1":"isu","2":"isu ywi","-1":"ikwiri"},"relativeTime":{"future":{"one":"+{0} d","other":"+{0} d"},"past":{"one":"-{0} d","other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"one":"+{0} h","other":"+{0} h"},"past":{"one":"-{0} h","other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"one":"+{0} min","other":"+{0} min"},"past":{"one":"-{0} min","other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"one":"+{0} s","other":"+{0} s"},"past":{"one":"-{0} s","other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"mgo-CM","parentLocale":"mgo"});

ReactIntl.__addLocaleData({"locale":"mk","pluralRuleFunction":function (n,ord){var s=String(n).split("."),i=s[0],f=s[1]||"",v0=!s[1],i10=i.slice(-1),i100=i.slice(-2),f10=f.slice(-1);if(ord)return i10==1&&i100!=11?"one":i10==2&&i100!=12?"two":(i10==7||i10==8)&&i100!=17&&i100!=18?"many":"other";return v0&&i10==1||f10==1?"one":"other"},"fields":{"year":{"displayName":"година","relative":{"0":"оваа година","1":"следната година","-1":"минатата година"},"relativeTime":{"future":{"one":"за {0} година","other":"за {0} години"},"past":{"one":"пред {0} година","other":"пред {0} години"}}},"month":{"displayName":"Месец","relative":{"0":"овој месец","1":"следниот месец","-1":"минатиот месец"},"relativeTime":{"future":{"one":"за {0} месец","other":"за {0} месеци"},"past":{"one":"пред {0} месец","other":"пред {0} месеци"}}},"day":{"displayName":"ден","relative":{"0":"денес","1":"утре","2":"задутре","-1":"вчера","-2":"завчера"},"relativeTime":{"future":{"one":"за {0} ден","other":"за {0} дена"},"past":{"one":"пред {0} ден","other":"пред {0} дена"}}},"hour":{"displayName":"Час","relativeTime":{"future":{"one":"за {0} час","other":"за {0} часа"},"past":{"one":"пред {0} час","other":"пред {0} часа"}}},"minute":{"displayName":"Минута","relativeTime":{"future":{"one":"за {0} минута","other":"за {0} минути"},"past":{"one":"пред {0} минута","other":"пред {0} минути"}}},"second":{"displayName":"Секунда","relative":{"0":"сега"},"relativeTime":{"future":{"one":"за {0} секунда","other":"за {0} секунди"},"past":{"one":"пред {0} секунда","other":"пред {0} секунди"}}}}});
ReactIntl.__addLocaleData({"locale":"mk-MK","parentLocale":"mk"});

ReactIntl.__addLocaleData({"locale":"ml","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"വർഷം","relative":{"0":"ഈ വർ‌ഷം","1":"അടുത്തവർഷം","-1":"കഴിഞ്ഞ വർഷം"},"relativeTime":{"future":{"one":"{0} വർഷത്തിൽ","other":"{0} വർഷത്തിൽ"},"past":{"one":"{0} വർഷം മുമ്പ്","other":"{0} വർഷം മുമ്പ്"}}},"month":{"displayName":"മാസം","relative":{"0":"ഈ മാസം","1":"അടുത്ത മാസം","-1":"കഴിഞ്ഞ മാസം"},"relativeTime":{"future":{"one":"{0} മാസത്തിൽ","other":"{0} മാസത്തിൽ"},"past":{"one":"{0} മാസം മുമ്പ്","other":"{0} മാസം മുമ്പ്"}}},"day":{"displayName":"ദിവസം","relative":{"0":"ഇന്ന്","1":"നാളെ","2":"മറ്റന്നാൾ","-1":"ഇന്നലെ","-2":"മിനിഞ്ഞാന്ന്"},"relativeTime":{"future":{"one":"{0} ദിവസത്തിൽ","other":"{0} ദിവസത്തിൽ"},"past":{"one":"{0} ദിവസം മുമ്പ്","other":"{0} ദിവസം മുമ്പ്"}}},"hour":{"displayName":"മണിക്കൂർ","relativeTime":{"future":{"one":"{0} മണിക്കൂറിൽ","other":"{0} മണിക്കൂറിൽ"},"past":{"one":"{0} മണിക്കൂർ മുമ്പ്","other":"{0} മണിക്കൂർ മുമ്പ്"}}},"minute":{"displayName":"മിനിട്ട്","relativeTime":{"future":{"one":"{0} മിനിറ്റിൽ","other":"{0} മിനിറ്റിൽ"},"past":{"one":"{0} മിനിറ്റ് മുമ്പ്","other":"{0} മിനിറ്റ് മുമ്പ്"}}},"second":{"displayName":"സെക്കൻറ്","relative":{"0":"ഇപ്പോൾ"},"relativeTime":{"future":{"one":"{0} സെക്കൻഡിൽ","other":"{0} സെക്കൻഡിൽ"},"past":{"one":"{0} സെക്കൻഡ് മുമ്പ്","other":"{0} സെക്കൻഡ് മുമ്പ്"}}}}});
ReactIntl.__addLocaleData({"locale":"ml-IN","parentLocale":"ml"});

ReactIntl.__addLocaleData({"locale":"mn","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Жил","relative":{"0":"энэ жил","1":"ирэх жил","-1":"өнгөрсөн жил"},"relativeTime":{"future":{"one":"{0} жилийн дараа","other":"{0} жилийн дараа"},"past":{"one":"{0} жилийн өмнө","other":"{0} жилийн өмнө"}}},"month":{"displayName":"Сар","relative":{"0":"энэ сар","1":"ирэх сар","-1":"өнгөрсөн сар"},"relativeTime":{"future":{"one":"{0} сарын дараа","other":"{0} сарын дараа"},"past":{"one":"{0} сарын өмнө","other":"{0} сарын өмнө"}}},"day":{"displayName":"Өдөр","relative":{"0":"өнөөдөр","1":"маргааш","2":"нөгөөдөр","-1":"өчигдөр","-2":"уржигдар"},"relativeTime":{"future":{"one":"{0} өдрийн дараа","other":"{0} өдрийн дараа"},"past":{"one":"{0} өдрийн өмнө","other":"{0} өдрийн өмнө"}}},"hour":{"displayName":"Цаг","relativeTime":{"future":{"one":"{0} цагийн дараа","other":"{0} цагийн дараа"},"past":{"one":"{0} цагийн өмнө","other":"{0} цагийн өмнө"}}},"minute":{"displayName":"Минут","relativeTime":{"future":{"one":"{0} минутын дараа","other":"{0} минутын дараа"},"past":{"one":"{0} минутын өмнө","other":"{0} минутын өмнө"}}},"second":{"displayName":"Секунд","relative":{"0":"Одоо"},"relativeTime":{"future":{"one":"{0} секундын дараа","other":"{0} секундын дараа"},"past":{"one":"{0} секундын өмнө","other":"{0} секундын өмнө"}}}}});
ReactIntl.__addLocaleData({"locale":"mn-Cyrl","parentLocale":"mn"});
ReactIntl.__addLocaleData({"locale":"mn-Cyrl-MN","parentLocale":"mn-Cyrl"});
ReactIntl.__addLocaleData({"locale":"mn-Mong","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});

ReactIntl.__addLocaleData({"locale":"mo","pluralRuleFunction":function (n,ord){var s=String(n).split("."),v0=!s[1],t0=Number(s[0])==n,n100=t0&&s[0].slice(-2);if(ord)return n==1?"one":"other";return n==1&&v0?"one":!v0||n==0||n!=1&&(n100>=1&&n100<=19)?"few":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});

ReactIntl.__addLocaleData({"locale":"mr","pluralRuleFunction":function (n,ord){if(ord)return n==1?"one":n==2||n==3?"two":n==4?"few":"other";return n>=0&&n<=1?"one":"other"},"fields":{"year":{"displayName":"वर्ष","relative":{"0":"हे वर्ष","1":"पुढील वर्ष","-1":"मागील वर्ष"},"relativeTime":{"future":{"one":"{0} वर्षामध्ये","other":"{0} वर्षांमध्ये"},"past":{"one":"{0} वर्षापूर्वी","other":"{0} वर्षांपूर्वी"}}},"month":{"displayName":"महिना","relative":{"0":"हा महिना","1":"पुढील महिना","-1":"मागील महिना"},"relativeTime":{"future":{"one":"{0} महिन्यामध्ये","other":"{0} महिन्यांमध्ये"},"past":{"one":"{0} महिन्यापूर्वी","other":"{0} महिन्यांपूर्वी"}}},"day":{"displayName":"दिवस","relative":{"0":"आज","1":"उद्या","-1":"काल"},"relativeTime":{"future":{"one":"{0} दिवसामध्ये","other":"{0} दिवसांमध्ये"},"past":{"one":"{0} दिवसापूर्वी","other":"{0} दिवसांपूर्वी"}}},"hour":{"displayName":"तास","relativeTime":{"future":{"one":"{0} तासामध्ये","other":"{0} तासांमध्ये"},"past":{"one":"{0} तासापूर्वी","other":"{0} तासांपूर्वी"}}},"minute":{"displayName":"मिनिट","relativeTime":{"future":{"one":"{0} मिनिटामध्ये","other":"{0} मिनिटांमध्ये"},"past":{"one":"{0} मिनिटापूर्वी","other":"{0} मिनिटांपूर्वी"}}},"second":{"displayName":"सेकंद","relative":{"0":"आत्ता"},"relativeTime":{"future":{"one":"{0} सेकंदामध्ये","other":"{0} सेकंदांमध्ये"},"past":{"one":"{0} सेकंदापूर्वी","other":"{0} सेकंदांपूर्वी"}}}}});
ReactIntl.__addLocaleData({"locale":"mr-IN","parentLocale":"mr"});

ReactIntl.__addLocaleData({"locale":"ms","pluralRuleFunction":function (n,ord){if(ord)return n==1?"one":"other";return"other"},"fields":{"year":{"displayName":"Tahun","relative":{"0":"tahun ini","1":"tahun depan","-1":"tahun lepas"},"relativeTime":{"future":{"other":"dalam {0} saat"},"past":{"other":"{0} tahun lalu"}}},"month":{"displayName":"Bulan","relative":{"0":"bulan ini","1":"bulan depan","-1":"bulan lalu"},"relativeTime":{"future":{"other":"dalam {0} bulan"},"past":{"other":"{0} bulan lalu"}}},"day":{"displayName":"Hari","relative":{"0":"hari ini","1":"esok","2":"lusa","-1":"semalam","-2":"kelmarin"},"relativeTime":{"future":{"other":"dalam {0} hari"},"past":{"other":"{0} hari lalu"}}},"hour":{"displayName":"Jam","relativeTime":{"future":{"other":"dalam {0} jam"},"past":{"other":"{0} jam yang lalu"}}},"minute":{"displayName":"Minit","relativeTime":{"future":{"other":"dalam {0} minit"},"past":{"other":"{0} minit yang lalu"}}},"second":{"displayName":"Saat","relative":{"0":"sekarang"},"relativeTime":{"future":{"other":"dalam {0} saat"},"past":{"other":"{0} saat lalu"}}}}});
ReactIntl.__addLocaleData({"locale":"ms-Arab","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"ms-Latn","parentLocale":"ms"});
ReactIntl.__addLocaleData({"locale":"ms-Latn-BN","parentLocale":"ms-Latn"});
ReactIntl.__addLocaleData({"locale":"ms-Latn-MY","parentLocale":"ms-Latn"});
ReactIntl.__addLocaleData({"locale":"ms-Latn-SG","parentLocale":"ms-Latn"});

ReactIntl.__addLocaleData({"locale":"mt","pluralRuleFunction":function (n,ord){var s=String(n).split("."),t0=Number(s[0])==n,n100=t0&&s[0].slice(-2);if(ord)return"other";return n==1?"one":n==0||n100>=2&&n100<=10?"few":n100>=11&&n100<=19?"many":"other"},"fields":{"year":{"displayName":"Sena","relative":{"0":"Din is-sena","1":"Is-sena d-dieħla","-1":"Is-sena li għaddiet"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"one":"{0} sena ilu","few":"{0} snin ilu","many":"{0} snin ilu","other":"{0} snin ilu"}}},"month":{"displayName":"Xahar","relative":{"0":"Dan ix-xahar","1":"Ix-xahar id-dieħel","-1":"Ix-xahar li għadda"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Jum","relative":{"0":"Illum","1":"Għada","-1":"Ilbieraħ"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Siegħa","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minuta","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Sekonda","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"mt-MT","parentLocale":"mt"});

ReactIntl.__addLocaleData({"locale":"mua","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Syii","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Fĩi","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Zah’nane\u002F Comme","relative":{"0":"Tǝ’nahko","1":"Tǝ’nane","-1":"Tǝsoo"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Cok comme","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Cok comme ma laŋne","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Cok comme ma laŋ tǝ biŋ","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"mua-CM","parentLocale":"mua"});

ReactIntl.__addLocaleData({"locale":"my","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"နှစ်","relative":{"0":"ယခုနှစ်","1":"နောက်နှစ်","-1":"ယမန်နှစ်"},"relativeTime":{"future":{"other":"{0}နှစ်အတွင်း"},"past":{"other":"လွန်ခဲ့သော{0}နှစ်"}}},"month":{"displayName":"လ","relative":{"0":"ယခုလ","1":"နောက်လ","-1":"ယမန်လ"},"relativeTime":{"future":{"other":"{0}လအတွင်း"},"past":{"other":"လွန်ခဲ့သော{0}လ"}}},"day":{"displayName":"ရက်","relative":{"0":"ယနေ့","1":"မနက်ဖြန်","2":"သဘက်ခါ","-1":"မနေ့က","-2":"တနေ့က"},"relativeTime":{"future":{"other":"{0}ရက်အတွင်း"},"past":{"other":"လွန်ခဲ့သော{0}ရက်"}}},"hour":{"displayName":"နာရီ","relativeTime":{"future":{"other":"{0}နာရီအတွင်း"},"past":{"other":"လွန်ခဲ့သော{0}နာရီ"}}},"minute":{"displayName":"မိနစ်","relativeTime":{"future":{"other":"{0}မိနစ်အတွင်း"},"past":{"other":"လွန်ခဲ့သော{0}မိနစ်"}}},"second":{"displayName":"စက္ကန့်","relative":{"0":"ယခု"},"relativeTime":{"future":{"other":"{0}စက္ကန့်အတွင်း"},"past":{"other":"လွန်ခဲ့သော{0}စက္ကန့်"}}}}});
ReactIntl.__addLocaleData({"locale":"my-MM","parentLocale":"my"});

ReactIntl.__addLocaleData({"locale":"nah","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});

ReactIntl.__addLocaleData({"locale":"naq","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":n==2?"two":"other"},"fields":{"year":{"displayName":"Kurib","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"ǁKhâb","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Tsees","relative":{"0":"Neetsee","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Iiri","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Haib","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"ǀGâub","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"naq-NA","parentLocale":"naq"});

ReactIntl.__addLocaleData({"locale":"nb","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"År","relative":{"0":"i år","1":"neste år","-1":"i fjor"},"relativeTime":{"future":{"one":"om {0} år","other":"om {0} år"},"past":{"one":"for {0} år siden","other":"for {0} år siden"}}},"month":{"displayName":"Måned","relative":{"0":"denne måneden","1":"neste måned","-1":"forrige måned"},"relativeTime":{"future":{"one":"om {0} måned","other":"om {0} måneder"},"past":{"one":"for {0} måned siden","other":"for {0} måneder siden"}}},"day":{"displayName":"Dag","relative":{"0":"i dag","1":"i morgen","2":"i overmorgen","-1":"i går","-2":"i forgårs"},"relativeTime":{"future":{"one":"om {0} døgn","other":"om {0} døgn"},"past":{"one":"for {0} døgn siden","other":"for {0} døgn siden"}}},"hour":{"displayName":"Time","relativeTime":{"future":{"one":"om {0} time","other":"om {0} timer"},"past":{"one":"for {0} time siden","other":"for {0} timer siden"}}},"minute":{"displayName":"Minutt","relativeTime":{"future":{"one":"om {0} minutt","other":"om {0} minutter"},"past":{"one":"for {0} minutt siden","other":"for {0} minutter siden"}}},"second":{"displayName":"Sekund","relative":{"0":"nå"},"relativeTime":{"future":{"one":"om {0} sekund","other":"om {0} sekunder"},"past":{"one":"for {0} sekund siden","other":"for {0} sekunder siden"}}}}});
ReactIntl.__addLocaleData({"locale":"nb-NO","parentLocale":"nb"});
ReactIntl.__addLocaleData({"locale":"nb-SJ","parentLocale":"nb"});

ReactIntl.__addLocaleData({"locale":"nd","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Umnyaka","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Inyangacale","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Ilanga","relative":{"0":"Lamuhla","1":"Kusasa","-1":"Izolo"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Ihola","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Umuzuzu","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Isekendi","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"nd-ZW","parentLocale":"nd"});

ReactIntl.__addLocaleData({"locale":"ne","pluralRuleFunction":function (n,ord){var s=String(n).split("."),t0=Number(s[0])==n;if(ord)return t0&&n>=1&&n<=4?"one":"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"बर्ष","relative":{"0":"यो वर्ष","1":"अर्को वर्ष","-1":"पहिलो वर्ष"},"relativeTime":{"future":{"one":"{0} वर्षमा","other":"{0} वर्षमा"},"past":{"one":"{0} वर्ष अघि","other":"{0} वर्ष अघि"}}},"month":{"displayName":"महिना","relative":{"0":"यो महिना","1":"अर्को महिना","-1":"गएको महिना"},"relativeTime":{"future":{"one":"{0} महिनामा","other":"{0} महिनामा"},"past":{"one":"{0} महिना पहिले","other":"{0} महिना पहिले"}}},"day":{"displayName":"बार","relative":{"0":"आज","1":"भोली","-1":"हिजो","-2":"अस्ति"},"relativeTime":{"future":{"one":"{0} दिनमा","other":"{0} दिनमा"},"past":{"one":"{0} दिन पहिले","other":"{0} दिन पहिले"}}},"hour":{"displayName":"घण्टा","relativeTime":{"future":{"one":"{0} घण्टामा","other":"{0} घण्टामा"},"past":{"one":"{0} घण्टा पहिले","other":"{0} घण्टा पहिले"}}},"minute":{"displayName":"मिनेट","relativeTime":{"future":{"one":"{0} मिनेटमा","other":"{0} मिनेटमा"},"past":{"one":"{0} मिनेट पहिले","other":"{0} मिनेट पहिले"}}},"second":{"displayName":"दोस्रो","relative":{"0":"अब"},"relativeTime":{"future":{"one":"{0} सेकेण्डमा","other":"{0} सेकेण्डमा"},"past":{"one":"{0} सेकेण्ड पहिले","other":"{0} सेकेण्ड पहिले"}}}}});
ReactIntl.__addLocaleData({"locale":"ne-IN","parentLocale":"ne","fields":{"year":{"displayName":"वर्ष","relative":{"0":"यो वर्ष","1":"अर्को वर्ष","-1":"पहिलो वर्ष"},"relativeTime":{"future":{"one":"{0} वर्षमा","other":"{0} वर्षमा"},"past":{"one":"{0} वर्ष अघि","other":"{0} वर्ष अघि"}}},"month":{"displayName":"महिना","relative":{"0":"यो महिना","1":"अर्को महिना","-1":"गएको महिना"},"relativeTime":{"future":{"one":"{0} महिनामा","other":"{0} महिनामा"},"past":{"one":"{0} महिना पहिले","other":"{0} महिना पहिले"}}},"day":{"displayName":"वार","relative":{"0":"आज","1":"भोली","2":"पर्सि","-1":"हिजो","-2":"अस्ति"},"relativeTime":{"future":{"one":"{0} दिनमा","other":"{0} दिनमा"},"past":{"one":"{0} दिन पहिले","other":"{0} दिन पहिले"}}},"hour":{"displayName":"घण्टा","relativeTime":{"future":{"one":"{0} घण्टामा","other":"{0} घण्टामा"},"past":{"one":"{0} घण्टा पहिले","other":"{0} घण्टा पहिले"}}},"minute":{"displayName":"मिनेट","relativeTime":{"future":{"one":"{0} मिनेटमा","other":"{0} मिनेटमा"},"past":{"one":"{0} मिनेट पहिले","other":"{0} मिनेट पहिले"}}},"second":{"displayName":"सेकेन्ड","relative":{"0":"अब"},"relativeTime":{"future":{"one":"{0} सेकेण्डमा","other":"{0} सेकेण्डमा"},"past":{"one":"{0} सेकेण्ड पहिले","other":"{0} सेकेण्ड पहिले"}}}}});
ReactIntl.__addLocaleData({"locale":"ne-NP","parentLocale":"ne"});

ReactIntl.__addLocaleData({"locale":"nl","pluralRuleFunction":function (n,ord){var s=String(n).split("."),v0=!s[1];if(ord)return"other";return n==1&&v0?"one":"other"},"fields":{"year":{"displayName":"Jaar","relative":{"0":"dit jaar","1":"volgend jaar","-1":"vorig jaar"},"relativeTime":{"future":{"one":"over {0} jaar","other":"over {0} jaar"},"past":{"one":"{0} jaar geleden","other":"{0} jaar geleden"}}},"month":{"displayName":"Maand","relative":{"0":"deze maand","1":"volgende maand","-1":"vorige maand"},"relativeTime":{"future":{"one":"over {0} maand","other":"over {0} maanden"},"past":{"one":"{0} maand geleden","other":"{0} maanden geleden"}}},"day":{"displayName":"Dag","relative":{"0":"vandaag","1":"morgen","2":"overmorgen","-1":"gisteren","-2":"eergisteren"},"relativeTime":{"future":{"one":"over {0} dag","other":"over {0} dagen"},"past":{"one":"{0} dag geleden","other":"{0} dagen geleden"}}},"hour":{"displayName":"Uur","relativeTime":{"future":{"one":"over {0} uur","other":"over {0} uur"},"past":{"one":"{0} uur geleden","other":"{0} uur geleden"}}},"minute":{"displayName":"Minuut","relativeTime":{"future":{"one":"over {0} minuut","other":"over {0} minuten"},"past":{"one":"{0} minuut geleden","other":"{0} minuten geleden"}}},"second":{"displayName":"Seconde","relative":{"0":"nu"},"relativeTime":{"future":{"one":"over {0} seconde","other":"over {0} seconden"},"past":{"one":"{0} seconde geleden","other":"{0} seconden geleden"}}}}});
ReactIntl.__addLocaleData({"locale":"nl-AW","parentLocale":"nl"});
ReactIntl.__addLocaleData({"locale":"nl-BE","parentLocale":"nl"});
ReactIntl.__addLocaleData({"locale":"nl-BQ","parentLocale":"nl"});
ReactIntl.__addLocaleData({"locale":"nl-CW","parentLocale":"nl"});
ReactIntl.__addLocaleData({"locale":"nl-NL","parentLocale":"nl"});
ReactIntl.__addLocaleData({"locale":"nl-SR","parentLocale":"nl"});
ReactIntl.__addLocaleData({"locale":"nl-SX","parentLocale":"nl"});

ReactIntl.__addLocaleData({"locale":"nmg","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Mbvu","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Ngwɛn","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Duö","relative":{"0":"Dɔl","1":"Namáná","-1":"Nakugú"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Wulā","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Mpálâ","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Nyiɛl","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"nmg-CM","parentLocale":"nmg"});

ReactIntl.__addLocaleData({"locale":"nn","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"år","relative":{"0":"dette år","1":"neste år","-1":"i fjor"},"relativeTime":{"future":{"one":"om {0} år","other":"om {0} år"},"past":{"one":"for {0} år siden","other":"for {0} år siden"}}},"month":{"displayName":"månad","relative":{"0":"denne månad","1":"neste månad","-1":"forrige månad"},"relativeTime":{"future":{"one":"om {0} måned","other":"om {0} måneder"},"past":{"one":"for {0} måned siden","other":"for {0} måneder siden"}}},"day":{"displayName":"dag","relative":{"0":"i dag","1":"i morgon","2":"i overmorgon","-1":"i går","-2":"i forgårs"},"relativeTime":{"future":{"one":"om {0} døgn","other":"om {0} døgn"},"past":{"one":"for {0} døgn siden","other":"for {0} døgn siden"}}},"hour":{"displayName":"time","relativeTime":{"future":{"one":"om {0} time","other":"om {0} timer"},"past":{"one":"for {0} time siden","other":"for {0} timer siden"}}},"minute":{"displayName":"minutt","relativeTime":{"future":{"one":"om {0} minutt","other":"om {0} minutter"},"past":{"one":"for {0} minutt siden","other":"for {0} minutter siden"}}},"second":{"displayName":"sekund","relative":{"0":"now"},"relativeTime":{"future":{"one":"om {0} sekund","other":"om {0} sekunder"},"past":{"one":"for {0} sekund siden","other":"for {0} sekunder siden"}}}}});
ReactIntl.__addLocaleData({"locale":"nn-NO","parentLocale":"nn"});

ReactIntl.__addLocaleData({"locale":"nnh","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"ngùʼ","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"lyɛ̌ʼ","relative":{"0":"lyɛ̌ʼɔɔn","1":"jǔɔ gẅie à ne ntóo","-1":"jǔɔ gẅie à ka tɔ̌g"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"fʉ̀ʼ nèm","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"nnh-CM","parentLocale":"nnh"});

ReactIntl.__addLocaleData({"locale":"no","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});

ReactIntl.__addLocaleData({"locale":"nqo","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});

ReactIntl.__addLocaleData({"locale":"nr","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"nr-ZA","parentLocale":"nr"});

ReactIntl.__addLocaleData({"locale":"nso","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==0||n==1?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"nso-ZA","parentLocale":"nso"});

ReactIntl.__addLocaleData({"locale":"nus","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Ruɔ̱n","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Pay","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Cäŋ","relative":{"0":"Walɛ","1":"Ruun","-1":"Pan"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Thaak","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minit","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Thɛkɛni","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"nus-SD","parentLocale":"nus"});

ReactIntl.__addLocaleData({"locale":"ny","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});

ReactIntl.__addLocaleData({"locale":"nyn","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Omwaka","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Omwezi","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Eizooba","relative":{"0":"Erizooba","1":"Nyenkyakare","-1":"Nyomwabazyo"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Shaaha","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Edakiika","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Obucweka\u002FEsekendi","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"nyn-UG","parentLocale":"nyn"});

ReactIntl.__addLocaleData({"locale":"om","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"om-ET","parentLocale":"om"});
ReactIntl.__addLocaleData({"locale":"om-KE","parentLocale":"om"});

ReactIntl.__addLocaleData({"locale":"or","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"or-IN","parentLocale":"or"});

ReactIntl.__addLocaleData({"locale":"os","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Аз","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Мӕй","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Бон","relative":{"0":"Абон","1":"Сом","2":"Иннӕбон","-1":"Знон","-2":"Ӕндӕрӕбон"},"relativeTime":{"future":{"one":"{0} боны фӕстӕ","other":"{0} боны фӕстӕ"},"past":{"one":"{0} бон раздӕр","other":"{0} боны размӕ"}}},"hour":{"displayName":"Сахат","relativeTime":{"future":{"one":"{0} сахаты фӕстӕ","other":"{0} сахаты фӕстӕ"},"past":{"one":"{0} сахаты размӕ","other":"{0} сахаты размӕ"}}},"minute":{"displayName":"Минут","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Секунд","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"os-GE","parentLocale":"os"});
ReactIntl.__addLocaleData({"locale":"os-RU","parentLocale":"os"});

ReactIntl.__addLocaleData({"locale":"pa","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==0||n==1?"one":"other"},"fields":{"year":{"displayName":"ਸਾਲ","relative":{"0":"ਇਹ ਸਾਲ","1":"ਅਗਲਾ ਸਾਲ","-1":"ਪਿਛਲਾ ਸਾਲ"},"relativeTime":{"future":{"one":"{0} ਸਾਲ ਵਿੱਚ","other":"{0} ਸਾਲਾਂ ਵਿੱਚ"},"past":{"one":"{0} ਸਾਲ ਪਹਿਲਾਂ","other":"{0} ਸਾਲ ਪਹਿਲਾਂ"}}},"month":{"displayName":"ਮਹੀਨਾ","relative":{"0":"ਇਹ ਮਹੀਨਾ","1":"ਅਗਲਾ ਮਹੀਨਾ","-1":"ਪਿਛਲਾ ਮਹੀਨਾ"},"relativeTime":{"future":{"one":"{0} ਮਹੀਨੇ ਵਿੱਚ","other":"{0} ਮਹੀਨਿਆਂ ਵਿੱਚ"},"past":{"one":"{0} ਮਹੀਨੇ ਪਹਿਲਾਂ","other":"{0} ਮਹੀਨੇ ਪਹਿਲਾਂ"}}},"day":{"displayName":"ਦਿਨ","relative":{"0":"ਅੱਜ","1":"ਭਲਕੇ","-1":"ਬੀਤਿਆ ਕੱਲ੍ਹ"},"relativeTime":{"future":{"one":"{0} ਦਿਨ ਵਿੱਚ","other":"{0} ਦਿਨਾਂ ਵਿੱਚ"},"past":{"one":"{0} ਦਿਨ ਪਹਿਲਾਂ","other":"{0} ਦਿਨ ਪਹਿਲਾਂ"}}},"hour":{"displayName":"ਘੰਟਾ","relativeTime":{"future":{"one":"{0} ਘੰਟੇ ਵਿੱਚ","other":"{0} ਘੰਟਿਆਂ ਵਿੱਚ"},"past":{"one":"{0} ਘੰਟਾ ਪਹਿਲਾਂ","other":"{0} ਘੰਟੇ ਪਹਿਲਾਂ"}}},"minute":{"displayName":"ਮਿੰਟ","relativeTime":{"future":{"one":"{0} ਮਿੰਟ ਵਿੱਚ","other":"{0} ਮਿੰਟਾਂ ਵਿੱਚ"},"past":{"one":"{0} ਮਿੰਟ ਪਹਿਲਾਂ","other":"{0} ਮਿੰਟ ਪਹਿਲਾਂ"}}},"second":{"displayName":"ਸਕਿੰਟ","relative":{"0":"ਹੁਣ"},"relativeTime":{"future":{"one":"{0} ਸਕਿੰਟ ਵਿੱਚ","other":"{0} ਸਕਿੰਟਾਂ ਵਿੱਚ"},"past":{"one":"{0} ਸਕਿੰਟ ਪਹਿਲਾਂ","other":"{0} ਸਕਿੰਟ ਪਹਿਲਾਂ"}}}}});
ReactIntl.__addLocaleData({"locale":"pa-Arab","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"ورھا","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"مہينا","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"دئن","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"گھنٹا","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"منٹ","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"pa-Arab-PK","parentLocale":"pa-Arab"});
ReactIntl.__addLocaleData({"locale":"pa-Guru","parentLocale":"pa"});
ReactIntl.__addLocaleData({"locale":"pa-Guru-IN","parentLocale":"pa-Guru"});

ReactIntl.__addLocaleData({"locale":"pap","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});

ReactIntl.__addLocaleData({"locale":"pl","pluralRuleFunction":function (n,ord){var s=String(n).split("."),i=s[0],v0=!s[1],i10=i.slice(-1),i100=i.slice(-2);if(ord)return"other";return n==1&&v0?"one":v0&&(i10>=2&&i10<=4)&&(i100<12||i100>14)?"few":v0&&i!=1&&(i10==0||i10==1)||v0&&(i10>=5&&i10<=9)||v0&&(i100>=12&&i100<=14)?"many":"other"},"fields":{"year":{"displayName":"rok","relative":{"0":"w tym roku","1":"w przyszłym roku","-1":"w zeszłym roku"},"relativeTime":{"future":{"one":"za {0} rok","few":"za {0} lata","many":"za {0} lat","other":"za {0} roku"},"past":{"one":"{0} rok temu","few":"{0} lata temu","many":"{0} lat temu","other":"{0} roku temu"}}},"month":{"displayName":"miesiąc","relative":{"0":"w tym miesiącu","1":"w przyszłym miesiącu","-1":"w zeszłym miesiącu"},"relativeTime":{"future":{"one":"za {0} miesiąc","few":"za {0} miesiące","many":"za {0} miesięcy","other":"za {0} miesiąca"},"past":{"one":"{0} miesiąc temu","few":"{0} miesiące temu","many":"{0} miesięcy temu","other":"{0} miesiąca temu"}}},"day":{"displayName":"dzień","relative":{"0":"dzisiaj","1":"jutro","2":"pojutrze","-1":"wczoraj","-2":"przedwczoraj"},"relativeTime":{"future":{"one":"za {0} dzień","few":"za {0} dni","many":"za {0} dni","other":"za {0} dnia"},"past":{"one":"{0} dzień temu","few":"{0} dni temu","many":"{0} dni temu","other":"{0} dnia temu"}}},"hour":{"displayName":"godzina","relativeTime":{"future":{"one":"za {0} godzinę","few":"za {0} godziny","many":"za {0} godzin","other":"za {0} godziny"},"past":{"one":"{0} godzinę temu","few":"{0} godziny temu","many":"{0} godzin temu","other":"{0} godziny temu"}}},"minute":{"displayName":"minuta","relativeTime":{"future":{"one":"za {0} minutę","few":"za {0} minuty","many":"za {0} minut","other":"za {0} minuty"},"past":{"one":"{0} minutę temu","few":"{0} minuty temu","many":"{0} minut temu","other":"{0} minuty temu"}}},"second":{"displayName":"sekunda","relative":{"0":"teraz"},"relativeTime":{"future":{"one":"za {0} sekundę","few":"za {0} sekundy","many":"za {0} sekund","other":"za {0} sekundy"},"past":{"one":"{0} sekundę temu","few":"{0} sekundy temu","many":"{0} sekund temu","other":"{0} sekundy temu"}}}}});
ReactIntl.__addLocaleData({"locale":"pl-PL","parentLocale":"pl"});

ReactIntl.__addLocaleData({"locale":"prg","pluralRuleFunction":function (n,ord){var s=String(n).split("."),f=s[1]||"",v=f.length,t0=Number(s[0])==n,n10=t0&&s[0].slice(-1),n100=t0&&s[0].slice(-2),f100=f.slice(-2),f10=f.slice(-1);if(ord)return"other";return t0&&n10==0||n100>=11&&n100<=19||v==2&&(f100>=11&&f100<=19)?"zero":n10==1&&n100!=11||v==2&&f10==1&&f100!=11||v!=2&&f10==1?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});

ReactIntl.__addLocaleData({"locale":"ps","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"ps-AF","parentLocale":"ps"});

ReactIntl.__addLocaleData({"locale":"pt","pluralRuleFunction":function (n,ord){var s=String(n).split("."),t0=Number(s[0])==n;if(ord)return"other";return t0&&n>=0&&n<=2&&n!=2?"one":"other"},"fields":{"year":{"displayName":"Ano","relative":{"0":"este ano","1":"próximo ano","-1":"ano passado"},"relativeTime":{"future":{"one":"Dentro de {0} ano","other":"Dentro de {0} anos"},"past":{"one":"Há {0} ano","other":"Há {0} anos"}}},"month":{"displayName":"Mês","relative":{"0":"este mês","1":"próximo mês","-1":"mês passado"},"relativeTime":{"future":{"one":"Dentro de {0} mês","other":"Dentro de {0} meses"},"past":{"one":"Há {0} mês","other":"Há {0} meses"}}},"day":{"displayName":"Dia","relative":{"0":"hoje","1":"amanhã","2":"depois de amanhã","-1":"ontem","-2":"anteontem"},"relativeTime":{"future":{"one":"Dentro de {0} dia","other":"Dentro de {0} dias"},"past":{"one":"Há {0} dia","other":"Há {0} dias"}}},"hour":{"displayName":"Hora","relativeTime":{"future":{"one":"Dentro de {0} hora","other":"Dentro de {0} horas"},"past":{"one":"Há {0} hora","other":"Há {0} horas"}}},"minute":{"displayName":"Minuto","relativeTime":{"future":{"one":"Dentro de {0} minuto","other":"Dentro de {0} minutos"},"past":{"one":"Há {0} minuto","other":"Há {0} minutos"}}},"second":{"displayName":"Segundo","relative":{"0":"agora"},"relativeTime":{"future":{"one":"Dentro de {0} segundo","other":"Dentro de {0} segundos"},"past":{"one":"Há {0} segundo","other":"Há {0} segundos"}}}}});
ReactIntl.__addLocaleData({"locale":"pt-AO","parentLocale":"pt-PT"});
ReactIntl.__addLocaleData({"locale":"pt-PT","parentLocale":"pt","pluralRuleFunction":function (n,ord){var s=String(n).split("."),v0=!s[1];if(ord)return"other";return n==1&&v0?"one":"other"},"fields":{"year":{"displayName":"Ano","relative":{"0":"este ano","1":"próximo ano","-1":"ano passado"},"relativeTime":{"future":{"one":"dentro de {0} ano","other":"dentro de {0} anos"},"past":{"one":"há {0} ano","other":"há {0} anos"}}},"month":{"displayName":"Mês","relative":{"0":"este mês","1":"próximo mês","-1":"mês passado"},"relativeTime":{"future":{"one":"dentro de {0} mês","other":"dentro de {0} meses"},"past":{"one":"há {0} mês","other":"há {0} meses"}}},"day":{"displayName":"Dia","relative":{"0":"hoje","1":"amanhã","2":"depois de amanhã","-1":"ontem","-2":"anteontem"},"relativeTime":{"future":{"one":"dentro de {0} dia","other":"dentro de {0} dias"},"past":{"one":"há {0} dia","other":"há {0} dias"}}},"hour":{"displayName":"Hora","relativeTime":{"future":{"one":"dentro de {0} hora","other":"dentro de {0} horas"},"past":{"one":"há {0} hora","other":"há {0} horas"}}},"minute":{"displayName":"Minuto","relativeTime":{"future":{"one":"dentro de {0} minuto","other":"dentro de {0} minutos"},"past":{"one":"há {0} minuto","other":"há {0} minutos"}}},"second":{"displayName":"Segundo","relative":{"0":"agora"},"relativeTime":{"future":{"one":"dentro de {0} segundo","other":"dentro de {0} segundos"},"past":{"one":"há {0} segundo","other":"há {0} segundos"}}}}});
ReactIntl.__addLocaleData({"locale":"pt-BR","parentLocale":"pt"});
ReactIntl.__addLocaleData({"locale":"pt-CV","parentLocale":"pt-PT"});
ReactIntl.__addLocaleData({"locale":"pt-GW","parentLocale":"pt-PT"});
ReactIntl.__addLocaleData({"locale":"pt-MO","parentLocale":"pt-PT"});
ReactIntl.__addLocaleData({"locale":"pt-MZ","parentLocale":"pt-PT"});
ReactIntl.__addLocaleData({"locale":"pt-ST","parentLocale":"pt-PT"});
ReactIntl.__addLocaleData({"locale":"pt-TL","parentLocale":"pt-PT"});

ReactIntl.__addLocaleData({"locale":"qu","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"qu-BO","parentLocale":"qu"});
ReactIntl.__addLocaleData({"locale":"qu-EC","parentLocale":"qu"});
ReactIntl.__addLocaleData({"locale":"qu-PE","parentLocale":"qu"});

ReactIntl.__addLocaleData({"locale":"rm","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"onn","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"mais","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Tag","relative":{"0":"oz","1":"damaun","2":"puschmaun","-1":"ier","-2":"stersas"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"ura","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"minuta","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"secunda","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"rm-CH","parentLocale":"rm"});

ReactIntl.__addLocaleData({"locale":"rn","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Umwaka","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Ukwezi","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Umusi","relative":{"0":"Uyu musi","1":"Ejo (hazoza)","-1":"Ejo (haheze)"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Isaha","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Umunota","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Isegonda","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"rn-BI","parentLocale":"rn"});

ReactIntl.__addLocaleData({"locale":"ro","pluralRuleFunction":function (n,ord){var s=String(n).split("."),v0=!s[1],t0=Number(s[0])==n,n100=t0&&s[0].slice(-2);if(ord)return n==1?"one":"other";return n==1&&v0?"one":!v0||n==0||n!=1&&(n100>=1&&n100<=19)?"few":"other"},"fields":{"year":{"displayName":"An","relative":{"0":"anul acesta","1":"anul viitor","-1":"anul trecut"},"relativeTime":{"future":{"one":"peste {0} an","few":"peste {0} ani","other":"peste {0} de ani"},"past":{"one":"acum {0} an","few":"acum {0} ani","other":"acum {0} de ani"}}},"month":{"displayName":"Lună","relative":{"0":"luna aceasta","1":"luna viitoare","-1":"luna trecută"},"relativeTime":{"future":{"one":"peste {0} lună","few":"peste {0} luni","other":"peste {0} de luni"},"past":{"one":"acum {0} lună","few":"acum {0} luni","other":"acum {0} de luni"}}},"day":{"displayName":"Zi","relative":{"0":"azi","1":"mâine","2":"poimâine","-1":"ieri","-2":"alaltăieri"},"relativeTime":{"future":{"one":"peste {0} zi","few":"peste {0} zile","other":"peste {0} de zile"},"past":{"one":"acum {0} zi","few":"acum {0} zile","other":"acum {0} de zile"}}},"hour":{"displayName":"Oră","relativeTime":{"future":{"one":"peste {0} oră","few":"peste {0} ore","other":"peste {0} de ore"},"past":{"one":"acum {0} oră","few":"acum {0} ore","other":"acum {0} de ore"}}},"minute":{"displayName":"Minut","relativeTime":{"future":{"one":"peste {0} minut","few":"peste {0} minute","other":"peste {0} de minute"},"past":{"one":"acum {0} minut","few":"acum {0} minute","other":"acum {0} de minute"}}},"second":{"displayName":"Secundă","relative":{"0":"acum"},"relativeTime":{"future":{"one":"peste {0} secundă","few":"peste {0} secunde","other":"peste {0} de secunde"},"past":{"one":"acum {0} secundă","few":"acum {0} secunde","other":"acum {0} de secunde"}}}}});
ReactIntl.__addLocaleData({"locale":"ro-MD","parentLocale":"ro"});
ReactIntl.__addLocaleData({"locale":"ro-RO","parentLocale":"ro"});

ReactIntl.__addLocaleData({"locale":"rof","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Muaka","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Mweri","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Mfiri","relative":{"0":"Linu","1":"Ng’ama","-1":"Hiyo"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Isaa","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Dakika","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Sekunde","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"rof-TZ","parentLocale":"rof"});

ReactIntl.__addLocaleData({"locale":"ru","pluralRuleFunction":function (n,ord){var s=String(n).split("."),i=s[0],v0=!s[1],i10=i.slice(-1),i100=i.slice(-2);if(ord)return"other";return v0&&i10==1&&i100!=11?"one":v0&&(i10>=2&&i10<=4)&&(i100<12||i100>14)?"few":v0&&i10==0||v0&&(i10>=5&&i10<=9)||v0&&(i100>=11&&i100<=14)?"many":"other"},"fields":{"year":{"displayName":"Год","relative":{"0":"в этому году","1":"в следующем году","-1":"в прошлом году"},"relativeTime":{"future":{"one":"через {0} год","few":"через {0} года","many":"через {0} лет","other":"через {0} года"},"past":{"one":"{0} год назад","few":"{0} года назад","many":"{0} лет назад","other":"{0} года назад"}}},"month":{"displayName":"Месяц","relative":{"0":"в этом месяце","1":"в следующем месяце","-1":"в прошлом месяце"},"relativeTime":{"future":{"one":"через {0} месяц","few":"через {0} месяца","many":"через {0} месяцев","other":"через {0} месяца"},"past":{"one":"{0} месяц назад","few":"{0} месяца назад","many":"{0} месяцев назад","other":"{0} месяца назад"}}},"day":{"displayName":"День","relative":{"0":"сегодня","1":"завтра","2":"послезавтра","-1":"вчера","-2":"позавчера"},"relativeTime":{"future":{"one":"через {0} день","few":"через {0} дня","many":"через {0} дней","other":"через {0} дней"},"past":{"one":"{0} день назад","few":"{0} дня назад","many":"{0} дней назад","other":"{0} дня назад"}}},"hour":{"displayName":"Час","relativeTime":{"future":{"one":"через {0} час","few":"через {0} часа","many":"через {0} часов","other":"через {0} часа"},"past":{"one":"{0} час назад","few":"{0} часа назад","many":"{0} часов назад","other":"{0} часа назад"}}},"minute":{"displayName":"Минута","relativeTime":{"future":{"one":"через {0} минуту","few":"через {0} минуты","many":"через {0} минут","other":"через {0} минуты"},"past":{"one":"{0} минуту назад","few":"{0} минуты назад","many":"{0} минут назад","other":"{0} минуты назад"}}},"second":{"displayName":"Секунда","relative":{"0":"сейчас"},"relativeTime":{"future":{"one":"через {0} секунду","few":"через {0} секунды","many":"через {0} секунд","other":"через {0} секунды"},"past":{"one":"{0} секунду назад","few":"{0} секунды назад","many":"{0} секунд назад","other":"{0} секунды назад"}}}}});
ReactIntl.__addLocaleData({"locale":"ru-BY","parentLocale":"ru"});
ReactIntl.__addLocaleData({"locale":"ru-KG","parentLocale":"ru"});
ReactIntl.__addLocaleData({"locale":"ru-KZ","parentLocale":"ru"});
ReactIntl.__addLocaleData({"locale":"ru-MD","parentLocale":"ru"});
ReactIntl.__addLocaleData({"locale":"ru-RU","parentLocale":"ru"});
ReactIntl.__addLocaleData({"locale":"ru-UA","parentLocale":"ru"});

ReactIntl.__addLocaleData({"locale":"rw","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"rw-RW","parentLocale":"rw"});

ReactIntl.__addLocaleData({"locale":"rwk","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Maka","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Mori","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Mfiri","relative":{"0":"Inu","1":"Ngama","-1":"Ukou"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Saa","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Dakyika","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Sekunde","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"rwk-TZ","parentLocale":"rwk"});

ReactIntl.__addLocaleData({"locale":"sah","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Сыл","relative":{"0":"бу сыл","1":"кэлэр сыл","-1":"ааспыт сыл"},"relativeTime":{"future":{"other":"{0} сылынан"},"past":{"other":"{0} сыл ынараа өттүгэр"}}},"month":{"displayName":"Ый","relative":{"0":"бу ый","1":"аныгыскы ый","-1":"ааспыт ый"},"relativeTime":{"future":{"other":"{0} ыйынан"},"past":{"other":"{0} ый ынараа өттүгэр"}}},"day":{"displayName":"Күн","relative":{"0":"Бүгүн","1":"Сарсын","2":"Өйүүн","-1":"Бэҕэһээ","-2":"Иллэрээ күн"},"relativeTime":{"future":{"other":"{0} күнүнэн"},"past":{"other":"{0} күн ынараа өттүгэр"}}},"hour":{"displayName":"Чаас","relativeTime":{"future":{"other":"{0} чааһынан"},"past":{"other":"{0} чаас ынараа өттүгэр"}}},"minute":{"displayName":"Мүнүүтэ","relativeTime":{"future":{"other":"{0} мүнүүтэннэн"},"past":{"other":"{0} мүнүүтэ ынараа өттүгэр"}}},"second":{"displayName":"Сөкүүндэ","relative":{"0":"now"},"relativeTime":{"future":{"other":"{0} сөкүүндэннэн"},"past":{"other":"{0} сөкүүндэ ынараа өттүгэр"}}}}});
ReactIntl.__addLocaleData({"locale":"sah-RU","parentLocale":"sah"});

ReactIntl.__addLocaleData({"locale":"saq","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Lari","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Lapa","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Mpari","relative":{"0":"Duo","1":"Taisere","-1":"Ng’ole"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Saai","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Idakika","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Isekondi","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"saq-KE","parentLocale":"saq"});

ReactIntl.__addLocaleData({"locale":"sbp","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Mwakha","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Mwesi","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Lusiku","relative":{"0":"Ineng’uni","1":"Pamulaawu","-1":"Imehe"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Ilisala","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Idakika","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Isekunde","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"sbp-TZ","parentLocale":"sbp"});

ReactIntl.__addLocaleData({"locale":"se","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":n==2?"two":"other"},"fields":{"year":{"displayName":"jáhki","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"one":"{0} jahki maŋŋilit","two":"{0} jahkki maŋŋilit","other":"{0} jahkki maŋŋilit"},"past":{"one":"{0} jahki árat","two":"{0} jahkki árat","other":"{0} jahkki árat"}}},"month":{"displayName":"mánnu","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"one":"{0} mánotbadji maŋŋilit","two":"{0} mánotbadji maŋŋilit","other":"{0} mánotbadji maŋŋilit"},"past":{"one":"{0} mánotbadji árat","two":"{0} mánotbadji árat","other":"{0} mánotbadji árat"}}},"day":{"displayName":"beaivi","relative":{"0":"odne","1":"ihttin","2":"paijeelittáá","-1":"ikte","-2":"oovdebpeivvi"},"relativeTime":{"future":{"one":"{0} jándor maŋŋilit","two":"{0} jándor amaŋŋilit","other":"{0} jándora maŋŋilit"},"past":{"one":"{0} jándor árat","two":"{0} jándora árat","other":"{0} jándora árat"}}},"hour":{"displayName":"diibmu","relativeTime":{"future":{"one":"{0} diibmu maŋŋilit","two":"{0} diibmur maŋŋilit","other":"{0} diibmur maŋŋilit"},"past":{"one":"{0} diibmu árat","two":"{0} diibmur árat","other":"{0} diibmur árat"}}},"minute":{"displayName":"minuhtta","relativeTime":{"future":{"one":"{0} minuhta maŋŋilit","two":"{0} minuhtta maŋŋilit","other":"{0} minuhtta maŋŋilit"},"past":{"one":"{0} minuhta árat","two":"{0} minuhtta árat","other":"{0} minuhtta árat"}}},"second":{"displayName":"sekunda","relative":{"0":"now"},"relativeTime":{"future":{"one":"{0} sekunda maŋŋilit","two":"{0} sekundda maŋŋilit","other":"{0} sekundda maŋŋilit"},"past":{"one":"{0} sekunda árat","two":"{0} sekundda árat","other":"{0} sekundda árat"}}}}});
ReactIntl.__addLocaleData({"locale":"se-FI","parentLocale":"se","fields":{"year":{"displayName":"jahki","relative":{"0":"dán jagi","1":"boahtte jagi","-1":"mannan jagi"},"relativeTime":{"future":{"one":"{0} jagi siste","two":"{0} jagi siste","other":"{0} jagi siste"},"past":{"one":"{0} jagi árat","two":"{0} jagi árat","other":"{0} jagi árat"}}},"month":{"displayName":"mánnu","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"one":"{0} mánotbadji maŋŋilit","two":"{0} mánotbadji maŋŋilit","other":"{0} mánotbadji maŋŋilit"},"past":{"one":"{0} mánotbadji árat","two":"{0} mánotbadji árat","other":"{0} mánotbadji árat"}}},"day":{"displayName":"beaivi","relative":{"0":"odne","1":"ihttin","2":"paijeelittáá","-1":"ikte","-2":"oovdebpeivvi"},"relativeTime":{"future":{"one":"{0} jándor maŋŋilit","two":"{0} jándor amaŋŋilit","other":"{0} jándora maŋŋilit"},"past":{"one":"{0} jándor árat","two":"{0} jándora árat","other":"{0} jándora árat"}}},"hour":{"displayName":"diibmu","relativeTime":{"future":{"one":"{0} diibmu maŋŋilit","two":"{0} diibmur maŋŋilit","other":"{0} diibmur maŋŋilit"},"past":{"one":"{0} diibmu árat","two":"{0} diibmur árat","other":"{0} diibmur árat"}}},"minute":{"displayName":"minuhtta","relativeTime":{"future":{"one":"{0} minuhta maŋŋilit","two":"{0} minuhtta maŋŋilit","other":"{0} minuhtta maŋŋilit"},"past":{"one":"{0} minuhta árat","two":"{0} minuhtta árat","other":"{0} minuhtta árat"}}},"second":{"displayName":"sekunda","relative":{"0":"now"},"relativeTime":{"future":{"one":"{0} sekunda maŋŋilit","two":"{0} sekundda maŋŋilit","other":"{0} sekundda maŋŋilit"},"past":{"one":"{0} sekunda árat","two":"{0} sekundda árat","other":"{0} sekundda árat"}}}}});
ReactIntl.__addLocaleData({"locale":"se-NO","parentLocale":"se"});
ReactIntl.__addLocaleData({"locale":"se-SE","parentLocale":"se"});

ReactIntl.__addLocaleData({"locale":"seh","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Chaka","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Mwezi","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Ntsiku","relative":{"0":"Lero","1":"Manguana","-1":"Zuro"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hora","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minuto","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Segundo","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"seh-MZ","parentLocale":"seh"});

ReactIntl.__addLocaleData({"locale":"ses","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Jiiri","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Handu","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Zaari","relative":{"0":"Hõo","1":"Suba","-1":"Bi"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Guuru","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Miniti","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Miti","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"ses-ML","parentLocale":"ses"});

ReactIntl.__addLocaleData({"locale":"sg","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Ngû","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Nze","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Lâ","relative":{"0":"Lâsô","1":"Kêkerêke","-1":"Bîrï"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Ngbonga","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Ndurü ngbonga","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Nzîna ngbonga","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"sg-CF","parentLocale":"sg"});

ReactIntl.__addLocaleData({"locale":"sh","pluralRuleFunction":function (n,ord){var s=String(n).split("."),i=s[0],f=s[1]||"",v0=!s[1],i10=i.slice(-1),i100=i.slice(-2),f10=f.slice(-1),f100=f.slice(-2);if(ord)return"other";return v0&&i10==1&&i100!=11||f10==1&&f100!=11?"one":v0&&(i10>=2&&i10<=4)&&(i100<12||i100>14)||f10>=2&&f10<=4&&(f100<12||f100>14)?"few":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});

ReactIntl.__addLocaleData({"locale":"shi","pluralRuleFunction":function (n,ord){var s=String(n).split("."),t0=Number(s[0])==n;if(ord)return"other";return n>=0&&n<=1?"one":t0&&n>=2&&n<=10?"few":"other"},"fields":{"year":{"displayName":"ⴰⵙⴳⴳⵯⴰⵙ","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"ⴰⵢⵢⵓⵔ","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"ⴰⵙⵙ","relative":{"0":"ⴰⵙⵙⴰ","1":"ⴰⵙⴽⴽⴰ","-1":"ⵉⴹⵍⵍⵉ"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"ⵜⴰⵙⵔⴰⴳⵜ","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"ⵜⵓⵙⴷⵉⴷⵜ","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"ⵜⴰⵙⵉⵏⵜ","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"shi-Latn","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"asggʷas","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"ayyur","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"ass","relative":{"0":"assa","1":"askka","-1":"iḍlli"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"tasragt","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"tusdidt","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"tasint","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"shi-Latn-MA","parentLocale":"shi-Latn"});
ReactIntl.__addLocaleData({"locale":"shi-Tfng","parentLocale":"shi"});
ReactIntl.__addLocaleData({"locale":"shi-Tfng-MA","parentLocale":"shi-Tfng"});

ReactIntl.__addLocaleData({"locale":"si","pluralRuleFunction":function (n,ord){var s=String(n).split("."),i=s[0],f=s[1]||"";if(ord)return"other";return n==0||n==1||i==0&&f==1?"one":"other"},"fields":{"year":{"displayName":"වර්ෂය","relative":{"0":"මෙම වසර","1":"ඊළඟ වසර","-1":"පසුගිය වසර"},"relativeTime":{"future":{"one":"වසර {0} කින්","other":"වසර {0} කින්"},"past":{"one":"වසර {0}ට පෙර","other":"වසර {0}ට පෙර"}}},"month":{"displayName":"මාසය","relative":{"0":"මෙම මාසය","1":"ඊළඟ මාසය","-1":"පසුගිය මාසය"},"relativeTime":{"future":{"one":"මාස {0}කින්","other":"මාස {0}කින්"},"past":{"one":"මාස {0}කට පෙර","other":"මාස {0}කට පෙර"}}},"day":{"displayName":"දිනය","relative":{"0":"අද","1":"හෙට","2":"අනිද්දා","-1":"ඊයේ","-2":"පෙරේදා"},"relativeTime":{"future":{"one":"දින {0}න්","other":"දින {0}න්"},"past":{"one":"දින {0} ට පෙර","other":"දින {0} ට පෙර"}}},"hour":{"displayName":"පැය","relativeTime":{"future":{"one":"පැය {0} කින්","other":"පැය {0} කින්"},"past":{"one":"පැය {0}ට පෙර","other":"පැය {0}ට පෙර"}}},"minute":{"displayName":"මිනිත්තුව","relativeTime":{"future":{"one":"මිනිත්තු {0} කින්","other":"මිනිත්තු {0} කින්"},"past":{"one":"මිනිත්තු {0}ට පෙර","other":"මිනිත්තු {0}ට පෙර"}}},"second":{"displayName":"තත්පරය","relative":{"0":"දැන්"},"relativeTime":{"future":{"one":"තත්පර {0} කින්","other":"තත්පර {0} කින්"},"past":{"one":"තත්පර {0}කට පෙර","other":"තත්පර {0}කට පෙර"}}}}});
ReactIntl.__addLocaleData({"locale":"si-LK","parentLocale":"si"});

ReactIntl.__addLocaleData({"locale":"sk","pluralRuleFunction":function (n,ord){var s=String(n).split("."),i=s[0],v0=!s[1];if(ord)return"other";return n==1&&v0?"one":i>=2&&i<=4&&v0?"few":!v0?"many":"other"},"fields":{"year":{"displayName":"rok","relative":{"0":"tento rok","1":"budúci rok","-1":"minulý rok"},"relativeTime":{"future":{"one":"o {0} rok","few":"o {0} roky","many":"o {0} roka","other":"o {0} rokov"},"past":{"one":"pred {0} rokom","few":"pred {0} rokmi","many":"pred {0} rokom","other":"pred {0} rokmi"}}},"month":{"displayName":"mesiac","relative":{"0":"tento mesiac","1":"budúci mesiac","-1":"minulý mesiac"},"relativeTime":{"future":{"one":"o {0} mesiac","few":"o {0} mesiace","many":"o {0} mesiaca","other":"o {0} mesiacov"},"past":{"one":"pred {0} mesiacom","few":"pred {0} mesiacmi","many":"pred {0} mesiacom","other":"pred {0} mesiacmi"}}},"day":{"displayName":"deň","relative":{"0":"dnes","1":"zajtra","2":"pozajtra","-1":"včera","-2":"predvčerom"},"relativeTime":{"future":{"one":"o {0} deň","few":"o {0} dni","many":"o {0} dňa","other":"o {0} dní"},"past":{"one":"pred {0} dňom","few":"pred {0} dňami","many":"pred {0} dňom","other":"pred {0} dňami"}}},"hour":{"displayName":"hodina","relativeTime":{"future":{"one":"o {0} hodinu","few":"o {0} hodiny","many":"o {0} hodiny","other":"o {0} hodín"},"past":{"one":"pred {0} hodinou","few":"pred {0} hodinami","many":"pred {0} hodinou","other":"pred {0} hodinami"}}},"minute":{"displayName":"minúta","relativeTime":{"future":{"one":"o {0} minútu","few":"o {0} minúty","many":"o {0} minúty","other":"o {0} minút"},"past":{"one":"pred {0} minútou","few":"pred {0} minútami","many":"pred {0} minútou","other":"pred {0} minútami"}}},"second":{"displayName":"sekunda","relative":{"0":"teraz"},"relativeTime":{"future":{"one":"o {0} sekundu","few":"o {0} sekundy","many":"o {0} sekundy","other":"o {0} sekúnd"},"past":{"one":"pred {0} sekundou","few":"pred {0} sekundami","many":"Pred {0} sekundami","other":"pred {0} sekundami"}}}}});
ReactIntl.__addLocaleData({"locale":"sk-SK","parentLocale":"sk"});

ReactIntl.__addLocaleData({"locale":"sl","pluralRuleFunction":function (n,ord){var s=String(n).split("."),i=s[0],v0=!s[1],i100=i.slice(-2);if(ord)return"other";return v0&&i100==1?"one":v0&&i100==2?"two":v0&&(i100==3||i100==4)||!v0?"few":"other"},"fields":{"year":{"displayName":"Leto","relative":{"0":"letos","1":"naslednje leto","-1":"lani"},"relativeTime":{"future":{"one":"čez {0} leto","two":"čez {0} leti","few":"čez {0} leta","other":"čez {0} let"},"past":{"one":"pred {0} letom","two":"pred {0} letoma","few":"pred {0} leti","other":"pred {0} leti"}}},"month":{"displayName":"Mesec","relative":{"0":"ta mesec","1":"naslednji mesec","-1":"prejšnji mesec"},"relativeTime":{"future":{"one":"čez {0} mesec","two":"čez {0} meseca","few":"čez {0} mesece","other":"čez {0} mesecev"},"past":{"one":"pred {0} mesecem","two":"pred {0} mesecema","few":"pred {0} meseci","other":"pred {0} meseci"}}},"day":{"displayName":"Dan","relative":{"0":"danes","1":"jutri","2":"pojutrišnjem","-1":"včeraj","-2":"predvčerajšnjim"},"relativeTime":{"future":{"one":"čez {0} dan","two":"čez {0} dneva","few":"čez {0} dni","other":"čez {0} dni"},"past":{"one":"pred {0} dnevom","two":"pred {0} dnevoma","few":"pred {0} dnevi","other":"pred {0} dnevi"}}},"hour":{"displayName":"Ura","relativeTime":{"future":{"one":"čez {0} h","two":"čez {0} h","few":"čez {0} h","other":"čez {0} h"},"past":{"one":"pred {0} h","two":"pred {0} h","few":"pred {0} h","other":"pred {0} h"}}},"minute":{"displayName":"Minuta","relativeTime":{"future":{"one":"čez {0} min.","two":"čez {0} min.","few":"čez {0} min.","other":"čez {0} min."},"past":{"one":"pred {0} min.","two":"pred {0} min.","few":"pred {0} min.","other":"pred {0} min."}}},"second":{"displayName":"Sekunda","relative":{"0":"zdaj"},"relativeTime":{"future":{"one":"čez {0} sekundo","two":"čez {0} sekundi","few":"čez {0} sekunde","other":"čez {0} sekund"},"past":{"one":"pred {0} sekundo","two":"pred {0} sekundama","few":"pred {0} sekundami","other":"pred {0} sekundami"}}}}});
ReactIntl.__addLocaleData({"locale":"sl-SI","parentLocale":"sl"});

ReactIntl.__addLocaleData({"locale":"sma","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":n==2?"two":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});

ReactIntl.__addLocaleData({"locale":"smi","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":n==2?"two":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});

ReactIntl.__addLocaleData({"locale":"smj","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":n==2?"two":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});

ReactIntl.__addLocaleData({"locale":"smn","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":n==2?"two":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"smn-FI","parentLocale":"smn"});

ReactIntl.__addLocaleData({"locale":"sms","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":n==2?"two":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});

ReactIntl.__addLocaleData({"locale":"sn","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Gore","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Mwedzi","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Zuva","relative":{"0":"Nhasi","1":"Mangwana","-1":"Nezuro"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Awa","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Mineti","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Sekondi","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"sn-ZW","parentLocale":"sn"});

ReactIntl.__addLocaleData({"locale":"so","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Sanad","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Bil","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Maalin","relative":{"0":"Maanta","1":"Berri","-1":"Shalay"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Saacad","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Daqiiqad","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Il biriqsi","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"so-DJ","parentLocale":"so"});
ReactIntl.__addLocaleData({"locale":"so-ET","parentLocale":"so"});
ReactIntl.__addLocaleData({"locale":"so-KE","parentLocale":"so"});
ReactIntl.__addLocaleData({"locale":"so-SO","parentLocale":"so"});

ReactIntl.__addLocaleData({"locale":"sq","pluralRuleFunction":function (n,ord){var s=String(n).split("."),t0=Number(s[0])==n,n10=t0&&s[0].slice(-1),n100=t0&&s[0].slice(-2);if(ord)return n==1?"one":n10==4&&n100!=14?"many":"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"vit","relative":{"0":"këtë vit","1":"vitin e ardhshëm","-1":"vitin e kaluar"},"relativeTime":{"future":{"one":"pas {0} viti","other":"pas {0} vjetësh"},"past":{"one":"para {0} viti","other":"para {0} vjetësh"}}},"month":{"displayName":"muaj","relative":{"0":"këtë muaj","1":"muajin e ardhshëm","-1":"muajin e kaluar"},"relativeTime":{"future":{"one":"pas {0} muaji","other":"pas {0} muajsh"},"past":{"one":"para {0} muaji","other":"para {0} muajsh"}}},"day":{"displayName":"ditë","relative":{"0":"sot","1":"nesër","-1":"dje"},"relativeTime":{"future":{"one":"pas {0} dite","other":"pas {0} ditësh"},"past":{"one":"para {0} dite","other":"para {0} ditësh"}}},"hour":{"displayName":"orë","relativeTime":{"future":{"one":"pas {0} ore","other":"pas {0} orësh"},"past":{"one":"para {0} ore","other":"para {0} orësh"}}},"minute":{"displayName":"minutë","relativeTime":{"future":{"one":"pas {0} minute","other":"pas {0} minutash"},"past":{"one":"para {0} minute","other":"para {0} minutash"}}},"second":{"displayName":"sekondë","relative":{"0":"tani"},"relativeTime":{"future":{"one":"pas {0} sekonde","other":"pas {0} sekondash"},"past":{"one":"para {0} sekonde","other":"para {0} sekondash"}}}}});
ReactIntl.__addLocaleData({"locale":"sq-AL","parentLocale":"sq"});
ReactIntl.__addLocaleData({"locale":"sq-MK","parentLocale":"sq"});
ReactIntl.__addLocaleData({"locale":"sq-XK","parentLocale":"sq"});

ReactIntl.__addLocaleData({"locale":"sr","pluralRuleFunction":function (n,ord){var s=String(n).split("."),i=s[0],f=s[1]||"",v0=!s[1],i10=i.slice(-1),i100=i.slice(-2),f10=f.slice(-1),f100=f.slice(-2);if(ord)return"other";return v0&&i10==1&&i100!=11||f10==1&&f100!=11?"one":v0&&(i10>=2&&i10<=4)&&(i100<12||i100>14)||f10>=2&&f10<=4&&(f100<12||f100>14)?"few":"other"},"fields":{"year":{"displayName":"година","relative":{"0":"ове године","1":"следеће године","-1":"прошле године"},"relativeTime":{"future":{"one":"за {0} годину","few":"за {0} године","other":"за {0} година"},"past":{"one":"пре {0} године","few":"пре {0} године","other":"пре {0} година"}}},"month":{"displayName":"месец","relative":{"0":"овог месеца","1":"следећег месеца","-1":"прошлог месеца"},"relativeTime":{"future":{"one":"за {0} месец","few":"за {0} месеца","other":"за {0} месеци"},"past":{"one":"пре {0} месеца","few":"пре {0} месеца","other":"пре {0} месеци"}}},"day":{"displayName":"дан","relative":{"0":"данас","1":"сутра","2":"прекосутра","-1":"јуче","-2":"прекјуче"},"relativeTime":{"future":{"one":"за {0} дан","few":"за {0} дана","other":"за {0} дана"},"past":{"one":"пре {0} дана","few":"пре {0} дана","other":"пре {0} дана"}}},"hour":{"displayName":"сат","relativeTime":{"future":{"one":"за {0} сат","few":"за {0} сата","other":"за {0} сати"},"past":{"one":"пре {0} сата","few":"пре {0} сата","other":"пре {0} сати"}}},"minute":{"displayName":"минут","relativeTime":{"future":{"one":"за {0} минут","few":"за {0} минута","other":"за {0} минута"},"past":{"one":"пре {0} минута","few":"пре {0} минута","other":"пре {0} минута"}}},"second":{"displayName":"секунд","relative":{"0":"сада"},"relativeTime":{"future":{"one":"за {0} секунду","few":"за {0} секунде","other":"за {0} секунди"},"past":{"one":"пре {0} секунде","few":"пре {0} секунде","other":"пре {0} секунди"}}}}});
ReactIntl.__addLocaleData({"locale":"sr-Cyrl","parentLocale":"sr"});
ReactIntl.__addLocaleData({"locale":"sr-Cyrl-BA","parentLocale":"sr-Cyrl"});
ReactIntl.__addLocaleData({"locale":"sr-Cyrl-ME","parentLocale":"sr-Cyrl"});
ReactIntl.__addLocaleData({"locale":"sr-Cyrl-RS","parentLocale":"sr-Cyrl"});
ReactIntl.__addLocaleData({"locale":"sr-Cyrl-XK","parentLocale":"sr-Cyrl"});
ReactIntl.__addLocaleData({"locale":"sr-Latn","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"godina","relative":{"0":"ove godine","1":"sledeće godine","-1":"prošle godine"},"relativeTime":{"future":{"one":"za {0} godinu","few":"za {0} godine","other":"za {0} godina"},"past":{"one":"pre {0} godine","few":"pre {0} godine","other":"pre {0} godina"}}},"month":{"displayName":"mesec","relative":{"0":"ovog meseca","1":"sledećeg meseca","-1":"prošlog meseca"},"relativeTime":{"future":{"one":"za {0} mesec","few":"za {0} meseca","other":"za {0} meseci"},"past":{"one":"pre {0} meseca","few":"pre {0} meseca","other":"pre {0} meseci"}}},"day":{"displayName":"dan","relative":{"0":"danas","1":"sutra","2":"prekosutra","-1":"juče","-2":"prekjuče"},"relativeTime":{"future":{"one":"za {0} dan","few":"za {0} dana","other":"za {0} dana"},"past":{"one":"pre {0} dana","few":"pre {0} dana","other":"pre {0} dana"}}},"hour":{"displayName":"sat","relativeTime":{"future":{"one":"za {0} sat","few":"za {0} sata","other":"za {0} sati"},"past":{"one":"pre {0} sata","few":"pre {0} sata","other":"pre {0} sati"}}},"minute":{"displayName":"minut","relativeTime":{"future":{"one":"za {0} minut","few":"za {0} minuta","other":"za {0} minuta"},"past":{"one":"pre {0} minuta","few":"pre {0} minuta","other":"pre {0} minuta"}}},"second":{"displayName":"sekund","relative":{"0":"sada"},"relativeTime":{"future":{"one":"za {0} sekundu","few":"za {0} sekunde","other":"za {0} sekundi"},"past":{"one":"pre {0} sekunde","few":"pre {0} sekunde","other":"pre {0} sekundi"}}}}});
ReactIntl.__addLocaleData({"locale":"sr-Latn-BA","parentLocale":"sr-Latn"});
ReactIntl.__addLocaleData({"locale":"sr-Latn-ME","parentLocale":"sr-Latn"});
ReactIntl.__addLocaleData({"locale":"sr-Latn-RS","parentLocale":"sr-Latn"});
ReactIntl.__addLocaleData({"locale":"sr-Latn-XK","parentLocale":"sr-Latn"});

ReactIntl.__addLocaleData({"locale":"ss","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"ss-SZ","parentLocale":"ss"});
ReactIntl.__addLocaleData({"locale":"ss-ZA","parentLocale":"ss"});

ReactIntl.__addLocaleData({"locale":"ssy","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"ssy-ER","parentLocale":"ssy"});

ReactIntl.__addLocaleData({"locale":"st","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});

ReactIntl.__addLocaleData({"locale":"sv","pluralRuleFunction":function (n,ord){var s=String(n).split("."),v0=!s[1],t0=Number(s[0])==n,n10=t0&&s[0].slice(-1),n100=t0&&s[0].slice(-2);if(ord)return(n10==1||n10==2)&&n100!=11&&n100!=12?"one":"other";return n==1&&v0?"one":"other"},"fields":{"year":{"displayName":"År","relative":{"0":"i år","1":"nästa år","-1":"i fjol"},"relativeTime":{"future":{"one":"om {0} år","other":"om {0} år"},"past":{"one":"för {0} år sedan","other":"för {0} år sedan"}}},"month":{"displayName":"Månad","relative":{"0":"denna månad","1":"nästa månad","-1":"förra månaden"},"relativeTime":{"future":{"one":"om {0} månad","other":"om {0} månader"},"past":{"one":"för {0} månad sedan","other":"för {0} månader sedan"}}},"day":{"displayName":"Dag","relative":{"0":"i dag","1":"i morgon","2":"i övermorgon","-1":"i går","-2":"i förrgår"},"relativeTime":{"future":{"one":"om {0} dag","other":"om {0} dagar"},"past":{"one":"för {0} dag sedan","other":"för {0} dagar sedan"}}},"hour":{"displayName":"Timme","relativeTime":{"future":{"one":"om {0} timme","other":"om {0} timmar"},"past":{"one":"för {0} timme sedan","other":"för {0} timmar sedan"}}},"minute":{"displayName":"Minut","relativeTime":{"future":{"one":"om {0} minut","other":"om {0} minuter"},"past":{"one":"för {0} minut sedan","other":"för {0} minuter sedan"}}},"second":{"displayName":"Sekund","relative":{"0":"nu"},"relativeTime":{"future":{"one":"om {0} sekund","other":"om {0} sekunder"},"past":{"one":"för {0} sekund sedan","other":"för {0} sekunder sedan"}}}}});
ReactIntl.__addLocaleData({"locale":"sv-AX","parentLocale":"sv"});
ReactIntl.__addLocaleData({"locale":"sv-FI","parentLocale":"sv","fields":{"year":{"displayName":"år","relative":{"0":"i år","1":"nästa år","-1":"i fjol"},"relativeTime":{"future":{"one":"om {0} år","other":"om {0} år"},"past":{"one":"för {0} år sedan","other":"för {0} år sedan"}}},"month":{"displayName":"månad","relative":{"0":"denna månad","1":"nästa månad","-1":"förra månaden"},"relativeTime":{"future":{"one":"om {0} månad","other":"om {0} månader"},"past":{"one":"för {0} månad sedan","other":"för {0} månader sedan"}}},"day":{"displayName":"dag","relative":{"0":"i dag","1":"i morgon","2":"i övermorgon","-1":"i går","-2":"i förrgår"},"relativeTime":{"future":{"one":"om {0} dag","other":"om {0} dagar"},"past":{"one":"för {0} dag sedan","other":"för {0} dagar sedan"}}},"hour":{"displayName":"Timme","relativeTime":{"future":{"one":"om {0} timme","other":"om {0} timmar"},"past":{"one":"för {0} timme sedan","other":"för {0} timmar sedan"}}},"minute":{"displayName":"minut","relativeTime":{"future":{"one":"om {0} minut","other":"om {0} minuter"},"past":{"one":"för {0} minut sedan","other":"för {0} minuter sedan"}}},"second":{"displayName":"sekund","relative":{"0":"nu"},"relativeTime":{"future":{"one":"om {0} sekund","other":"om {0} sekunder"},"past":{"one":"för {0} sekund sedan","other":"för {0} sekunder sedan"}}}}});
ReactIntl.__addLocaleData({"locale":"sv-SE","parentLocale":"sv"});

ReactIntl.__addLocaleData({"locale":"sw","pluralRuleFunction":function (n,ord){var s=String(n).split("."),v0=!s[1];if(ord)return"other";return n==1&&v0?"one":"other"},"fields":{"year":{"displayName":"Mwaka","relative":{"0":"mwaka huu","1":"mwaka ujao","-1":"mwaka uliopita"},"relativeTime":{"future":{"one":"baada ya mwaka {0}","other":"baada ya miaka {0}"},"past":{"one":"mwaka {0} uliopita","other":"miaka {0} iliyopita"}}},"month":{"displayName":"Mwezi","relative":{"0":"mwezi huu","1":"mwezi ujao","-1":"mwezi uliopita"},"relativeTime":{"future":{"one":"baada ya mwezi {0}","other":"baada ya miezi {0}"},"past":{"one":"mwezi {0} uliopita","other":"miezi {0} iliyopita"}}},"day":{"displayName":"Siku","relative":{"0":"leo","1":"kesho","2":"kesho kutwa","-1":"jana","-2":"juzi"},"relativeTime":{"future":{"one":"baada ya siku {0}","other":"baada ya siku {0}"},"past":{"one":"siku {0} iliyopita","other":"siku {0} zilizopita"}}},"hour":{"displayName":"Saa","relativeTime":{"future":{"one":"baada ya saa {0}","other":"baada ya saa {0}"},"past":{"one":"saa {0} iliyopita","other":"saa {0} zilizopita"}}},"minute":{"displayName":"Dakika","relativeTime":{"future":{"one":"baada ya dakika {0}","other":"baada ya dakika {0}"},"past":{"one":"dakika {0} iliyopita","other":"dakika {0} zilizopita"}}},"second":{"displayName":"Sekunde","relative":{"0":"sasa"},"relativeTime":{"future":{"one":"baada ya sekunde {0}","other":"baada ya sekunde {0}"},"past":{"one":"Sekunde {0} iliyopita","other":"Sekunde {0} zilizopita"}}}}});
ReactIntl.__addLocaleData({"locale":"sw-KE","parentLocale":"sw"});
ReactIntl.__addLocaleData({"locale":"sw-TZ","parentLocale":"sw"});
ReactIntl.__addLocaleData({"locale":"sw-UG","parentLocale":"sw"});

ReactIntl.__addLocaleData({"locale":"swc","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Mwaka","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Mwezi","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Siku","relative":{"0":"Leo","1":"Kesho","-1":"Jana"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Saa","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Dakika","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Sekunde","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"swc-CD","parentLocale":"swc"});

ReactIntl.__addLocaleData({"locale":"syr","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});

ReactIntl.__addLocaleData({"locale":"ta","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"ஆண்டு","relative":{"0":"இந்த ஆண்டு","1":"அடுத்த ஆண்டு","-1":"கடந்த ஆண்டு"},"relativeTime":{"future":{"one":"{0} ஆண்டில்","other":"{0} ஆண்டுகளில்"},"past":{"one":"{0} ஆண்டிற்கு முன்","other":"{0} ஆண்டுகளுக்கு முன்"}}},"month":{"displayName":"மாதம்","relative":{"0":"இந்த மாதம்","1":"அடுத்த மாதம்","-1":"கடந்த மாதம்"},"relativeTime":{"future":{"one":"{0} மாதத்தில்","other":"{0} மாதங்களில்"},"past":{"one":"{0} மாதத்துக்கு முன்","other":"{0} மாதங்களுக்கு முன்"}}},"day":{"displayName":"நாள்","relative":{"0":"இன்று","1":"நாளை","2":"நாளை மறுநாள்","-1":"நேற்று","-2":"நேற்று முன் தினம்"},"relativeTime":{"future":{"one":"{0} நாளில்","other":"{0} நாட்களில்"},"past":{"one":"{0} நாளைக்கு முன்","other":"{0} நாட்களுக்கு முன்"}}},"hour":{"displayName":"மணி","relativeTime":{"future":{"one":"{0} மணிநேரத்தில்","other":"{0} மணிநேரத்தில்"},"past":{"one":"{0} மணிநேரம் முன்","other":"{0} மணிநேரம் முன்"}}},"minute":{"displayName":"நிமிடம்","relativeTime":{"future":{"one":"{0} நிமிடத்தில்","other":"{0} நிமிடங்களில்"},"past":{"one":"{0} நிமிடத்திற்கு முன்","other":"{0} நிமிடங்களுக்கு முன்"}}},"second":{"displayName":"விநாடி","relative":{"0":"இப்போது"},"relativeTime":{"future":{"one":"{0} விநாடியில்","other":"{0} விநாடிகளில்"},"past":{"one":"{0} விநாடிக்கு முன்","other":"{0} விநாடிகளுக்கு முன்"}}}}});
ReactIntl.__addLocaleData({"locale":"ta-IN","parentLocale":"ta"});
ReactIntl.__addLocaleData({"locale":"ta-LK","parentLocale":"ta"});
ReactIntl.__addLocaleData({"locale":"ta-MY","parentLocale":"ta"});
ReactIntl.__addLocaleData({"locale":"ta-SG","parentLocale":"ta"});

ReactIntl.__addLocaleData({"locale":"te","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"సంవత్సరం","relative":{"0":"ఈ సంవత్సరం","1":"తదుపరి సంవత్సరం","-1":"గత సంవత్సరం"},"relativeTime":{"future":{"one":"{0} సంవత్సరంలో","other":"{0} సంవత్సరాల్లో"},"past":{"one":"{0} సంవత్సరం క్రితం","other":"{0} సంవత్సరాల క్రితం"}}},"month":{"displayName":"నెల","relative":{"0":"ఈ నెల","1":"తదుపరి నెల","-1":"గత నెల"},"relativeTime":{"future":{"one":"{0} నెలలో","other":"{0} నెలల్లో"},"past":{"one":"{0} నెల క్రితం","other":"{0} నెలల క్రితం"}}},"day":{"displayName":"దినం","relative":{"0":"ఈ రోజు","1":"రేపు","2":"ఎల్లుండి","-1":"నిన్న","-2":"మొన్న"},"relativeTime":{"future":{"one":"{0} రోజులో","other":"{0} రోజుల్లో"},"past":{"one":"{0} రోజు క్రితం","other":"{0} రోజుల క్రితం"}}},"hour":{"displayName":"గంట","relativeTime":{"future":{"one":"{0} గంటలో","other":"{0} గంటల్లో"},"past":{"one":"{0} గంట క్రితం","other":"{0} గంటల క్రితం"}}},"minute":{"displayName":"నిమిషము","relativeTime":{"future":{"one":"{0} నిమిషంలో","other":"{0} నిమిషాల్లో"},"past":{"one":"{0} నిమిషం క్రితం","other":"{0} నిమిషాల క్రితం"}}},"second":{"displayName":"క్షణం","relative":{"0":"ప్రస్తుతం"},"relativeTime":{"future":{"one":"{0} సెకన్‌లో","other":"{0} సెకన్లలో"},"past":{"one":"{0} సెకను క్రితం","other":"{0} సెకన్ల క్రితం"}}}}});
ReactIntl.__addLocaleData({"locale":"te-IN","parentLocale":"te"});

ReactIntl.__addLocaleData({"locale":"teo","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Ekan","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Elap","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Aparan","relative":{"0":"Lolo","1":"Moi","-1":"Jaan"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Esaa","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Idakika","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Isekonde","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"teo-KE","parentLocale":"teo"});
ReactIntl.__addLocaleData({"locale":"teo-UG","parentLocale":"teo"});

ReactIntl.__addLocaleData({"locale":"th","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"ปี","relative":{"0":"ปีนี้","1":"ปีหน้า","-1":"ปีที่แล้ว"},"relativeTime":{"future":{"other":"ในอีก {0} ปี"},"past":{"other":"{0} ปีที่แล้ว"}}},"month":{"displayName":"เดือน","relative":{"0":"เดือนนี้","1":"เดือนหน้า","-1":"เดือนที่แล้ว"},"relativeTime":{"future":{"other":"ในอีก {0} เดือน"},"past":{"other":"{0} เดือนที่ผ่านมา"}}},"day":{"displayName":"วัน","relative":{"0":"วันนี้","1":"พรุ่งนี้","2":"มะรืนนี้","-1":"เมื่อวาน","-2":"เมื่อวานซืน"},"relativeTime":{"future":{"other":"ในอีก {0} วัน"},"past":{"other":"{0} วันที่ผ่านมา"}}},"hour":{"displayName":"ชั่วโมง","relativeTime":{"future":{"other":"ในอีก {0} ชั่วโมง"},"past":{"other":"{0} ชั่วโมงที่ผ่านมา"}}},"minute":{"displayName":"นาที","relativeTime":{"future":{"other":"ในอีก {0} นาที"},"past":{"other":"{0} นาทีที่ผ่านมา"}}},"second":{"displayName":"วินาที","relative":{"0":"ขณะนี้"},"relativeTime":{"future":{"other":"ในอีก {0} วินาที"},"past":{"other":"{0} วินาทีที่ผ่านมา"}}}}});
ReactIntl.__addLocaleData({"locale":"th-TH","parentLocale":"th"});

ReactIntl.__addLocaleData({"locale":"ti","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==0||n==1?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"ti-ER","parentLocale":"ti"});
ReactIntl.__addLocaleData({"locale":"ti-ET","parentLocale":"ti"});

ReactIntl.__addLocaleData({"locale":"tig","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});

ReactIntl.__addLocaleData({"locale":"tk","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});

ReactIntl.__addLocaleData({"locale":"tl","pluralRuleFunction":function (n,ord){var s=String(n).split("."),i=s[0],f=s[1]||"",v0=!s[1],i10=i.slice(-1),f10=f.slice(-1);if(ord)return n==1?"one":"other";return v0&&(i==1||i==2||i==3)||v0&&i10!=4&&i10!=6&&i10!=9||!v0&&f10!=4&&f10!=6&&f10!=9?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});

ReactIntl.__addLocaleData({"locale":"tn","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"tn-BW","parentLocale":"tn"});
ReactIntl.__addLocaleData({"locale":"tn-ZA","parentLocale":"tn"});

ReactIntl.__addLocaleData({"locale":"to","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"taʻu","relative":{"0":"taʻú ni","1":"taʻu kahaʻu","-1":"taʻu kuoʻosi"},"relativeTime":{"future":{"other":"ʻi he taʻu ʻe {0}"},"past":{"other":"taʻu ʻe {0} kuoʻosi"}}},"month":{"displayName":"māhina","relative":{"0":"māhiná ni","1":"māhina kahaʻu","-1":"māhina kuoʻosi"},"relativeTime":{"future":{"other":"ʻi he māhina ʻe {0}"},"past":{"other":"māhina ʻe {0} kuoʻosi"}}},"day":{"displayName":"ʻaho","relative":{"0":"ʻahó ni","1":"ʻapongipongi","2":"ʻahepongipongi","-1":"ʻaneafi","-2":"ʻaneheafi"},"relativeTime":{"future":{"other":"ʻi he ʻaho ʻe {0}"},"past":{"other":"ʻaho ʻe {0} kuoʻosi"}}},"hour":{"displayName":"houa","relativeTime":{"future":{"other":"ʻi he houa ʻe {0}"},"past":{"other":"houa ʻe {0} kuoʻosi"}}},"minute":{"displayName":"miniti","relativeTime":{"future":{"other":"ʻi he miniti ʻe {0}"},"past":{"other":"miniti ʻe {0} kuoʻosi"}}},"second":{"displayName":"sekoni","relative":{"0":"taimiʻni"},"relativeTime":{"future":{"other":"ʻi he sekoni ʻe {0}"},"past":{"other":"sekoni ʻe {0} kuoʻosi"}}}}});
ReactIntl.__addLocaleData({"locale":"to-TO","parentLocale":"to"});

ReactIntl.__addLocaleData({"locale":"tr","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Yıl","relative":{"0":"bu yıl","1":"gelecek yıl","-1":"geçen yıl"},"relativeTime":{"future":{"one":"{0} yıl sonra","other":"{0} yıl sonra"},"past":{"one":"{0} yıl önce","other":"{0} yıl önce"}}},"month":{"displayName":"Ay","relative":{"0":"bu ay","1":"gelecek ay","-1":"geçen ay"},"relativeTime":{"future":{"one":"{0} ay sonra","other":"{0} ay sonra"},"past":{"one":"{0} ay önce","other":"{0} ay önce"}}},"day":{"displayName":"Gün","relative":{"0":"bugün","1":"yarın","2":"öbür gün","-1":"dün","-2":"evvelsi gün"},"relativeTime":{"future":{"one":"{0} gün sonra","other":"{0} gün sonra"},"past":{"one":"{0} gün önce","other":"{0} gün önce"}}},"hour":{"displayName":"Saat","relativeTime":{"future":{"one":"{0} saat sonra","other":"{0} saat sonra"},"past":{"one":"{0} saat önce","other":"{0} saat önce"}}},"minute":{"displayName":"Dakika","relativeTime":{"future":{"one":"{0} dakika sonra","other":"{0} dakika sonra"},"past":{"one":"{0} dakika önce","other":"{0} dakika önce"}}},"second":{"displayName":"Saniye","relative":{"0":"şimdi"},"relativeTime":{"future":{"one":"{0} saniye sonra","other":"{0} saniye sonra"},"past":{"one":"{0} saniye önce","other":"{0} saniye önce"}}}}});
ReactIntl.__addLocaleData({"locale":"tr-CY","parentLocale":"tr"});
ReactIntl.__addLocaleData({"locale":"tr-TR","parentLocale":"tr"});

ReactIntl.__addLocaleData({"locale":"ts","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"ts-ZA","parentLocale":"ts"});

ReactIntl.__addLocaleData({"locale":"twq","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Jiiri","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Handu","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Zaari","relative":{"0":"Hõo","1":"Suba","-1":"Bi"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Guuru","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Miniti","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Miti","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"twq-NE","parentLocale":"twq"});

ReactIntl.__addLocaleData({"locale":"tzm","pluralRuleFunction":function (n,ord){var s=String(n).split("."),t0=Number(s[0])==n;if(ord)return"other";return n==0||n==1||t0&&n>=11&&n<=99?"one":"other"},"fields":{"year":{"displayName":"Asseggas","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Ayur","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Ass","relative":{"0":"Assa","1":"Asekka","-1":"Assenaṭ"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Tasragt","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Tusdat","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Tusnat","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"tzm-Latn","parentLocale":"tzm"});
ReactIntl.__addLocaleData({"locale":"tzm-Latn-MA","parentLocale":"tzm-Latn"});

ReactIntl.__addLocaleData({"locale":"ug","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"يىل","relative":{"0":"بۇ يىل","1":"كېلەر يىل","-1":"ئۆتكەن يىل"},"relativeTime":{"future":{"one":"{0} يىلدىن كېيىن","other":"{0} يىلدىن كېيىن"},"past":{"one":"{0} يىل ئىلگىرى","other":"{0} يىل ئىلگىرى"}}},"month":{"displayName":"ئاي","relative":{"0":"بۇ ئاي","1":"كېلەر ئاي","-1":"ئۆتكەن ئاي"},"relativeTime":{"future":{"one":"{0} ئايدىن كېيىن","other":"{0} ئايدىن كېيىن"},"past":{"one":"{0} ئاي ئىلگىرى","other":"{0} ئاي ئىلگىرى"}}},"day":{"displayName":"كۈن","relative":{"0":"بۈگۈن","1":"ئەتە","-1":"تۈنۈگۈن"},"relativeTime":{"future":{"one":"{0} كۈندىن كېيىن","other":"{0} كۈندىن كېيىن"},"past":{"one":"{0} كۈن ئىلگىرى","other":"{0} كۈن ئىلگىرى"}}},"hour":{"displayName":"سائەت","relativeTime":{"future":{"one":"{0} سائەتتىن كېيىن","other":"{0} سائەتتىن كېيىن"},"past":{"one":"{0} سائەت ئىلگىرى","other":"{0} سائەت ئىلگىرى"}}},"minute":{"displayName":"مىنۇت","relativeTime":{"future":{"one":"{0} مىنۇتتىن كېيىن","other":"{0} مىنۇتتىن كېيىن"},"past":{"one":"{0} مىنۇت ئىلگىرى","other":"{0} مىنۇت ئىلگىرى"}}},"second":{"displayName":"سېكۇنت","relative":{"0":"now"},"relativeTime":{"future":{"one":"{0} سېكۇنتتىن كېيىن","other":"{0} سېكۇنتتىن كېيىن"},"past":{"one":"{0} سېكۇنت ئىلگىرى","other":"{0} سېكۇنت ئىلگىرى"}}}}});
ReactIntl.__addLocaleData({"locale":"ug-Arab","parentLocale":"ug"});
ReactIntl.__addLocaleData({"locale":"ug-Arab-CN","parentLocale":"ug-Arab"});

ReactIntl.__addLocaleData({"locale":"uk","pluralRuleFunction":function (n,ord){var s=String(n).split("."),i=s[0],v0=!s[1],t0=Number(s[0])==n,n10=t0&&s[0].slice(-1),n100=t0&&s[0].slice(-2),i10=i.slice(-1),i100=i.slice(-2);if(ord)return n10==3&&n100!=13?"few":"other";return v0&&i10==1&&i100!=11?"one":v0&&(i10>=2&&i10<=4)&&(i100<12||i100>14)?"few":v0&&i10==0||v0&&(i10>=5&&i10<=9)||v0&&(i100>=11&&i100<=14)?"many":"other"},"fields":{"year":{"displayName":"Рік","relative":{"0":"цього року","1":"наступного року","-1":"торік"},"relativeTime":{"future":{"one":"через {0} рік","few":"через {0} роки","many":"через {0} років","other":"через {0} року"},"past":{"one":"{0} рік тому","few":"{0} роки тому","many":"{0} років тому","other":"{0} року тому"}}},"month":{"displayName":"Місяць","relative":{"0":"цього місяця","1":"наступного місяця","-1":"минулого місяця"},"relativeTime":{"future":{"one":"через {0} місяць","few":"через {0} місяці","many":"через {0} місяців","other":"через {0} місяця"},"past":{"one":"{0} місяць тому","few":"{0} місяці тому","many":"{0} місяців тому","other":"{0} місяця тому"}}},"day":{"displayName":"День","relative":{"0":"сьогодні","1":"завтра","2":"післязавтра","-1":"учора","-2":"позавчора"},"relativeTime":{"future":{"one":"через {0} день","few":"через {0} дні","many":"через {0} днів","other":"через {0} дня"},"past":{"one":"{0} день тому","few":"{0} дні тому","many":"{0} днів тому","other":"{0} дня тому"}}},"hour":{"displayName":"Година","relativeTime":{"future":{"one":"через {0} годину","few":"через {0} години","many":"через {0} годин","other":"через {0} години"},"past":{"one":"{0} годину тому","few":"{0} години тому","many":"{0} годин тому","other":"{0} години тому"}}},"minute":{"displayName":"Хвилина","relativeTime":{"future":{"one":"через {0} хвилину","few":"через {0} хвилини","many":"через {0} хвилин","other":"через {0} хвилини"},"past":{"one":"{0} хвилину тому","few":"{0} хвилини тому","many":"{0} хвилин тому","other":"{0} хвилини тому"}}},"second":{"displayName":"Секунда","relative":{"0":"зараз"},"relativeTime":{"future":{"one":"через {0} секунду","few":"через {0} секунди","many":"через {0} секунд","other":"через {0} секунди"},"past":{"one":"{0} секунду тому","few":"{0} секунди тому","many":"{0} секунд тому","other":"{0} секунди тому"}}}}});
ReactIntl.__addLocaleData({"locale":"uk-UA","parentLocale":"uk"});

ReactIntl.__addLocaleData({"locale":"ur","pluralRuleFunction":function (n,ord){var s=String(n).split("."),v0=!s[1];if(ord)return"other";return n==1&&v0?"one":"other"},"fields":{"year":{"displayName":"سال","relative":{"0":"اس سال","1":"اگلے سال","-1":"گزشتہ سال"},"relativeTime":{"future":{"one":"{0} سال میں","other":"{0} سال میں"},"past":{"one":"{0} سال پہلے","other":"{0} سال پہلے"}}},"month":{"displayName":"مہینہ","relative":{"0":"اس مہینہ","1":"اگلے مہینہ","-1":"پچھلے مہینہ"},"relativeTime":{"future":{"one":"{0} مہینہ میں","other":"{0} مہینے میں"},"past":{"one":"{0} مہینہ پہلے","other":"{0} مہینے پہلے"}}},"day":{"displayName":"دن","relative":{"0":"آج","1":"آئندہ کل","2":"آنے والا پرسوں","-1":"گزشتہ کل","-2":"گزشتہ پرسوں"},"relativeTime":{"future":{"one":"{0} دن میں","other":"{0} دنوں میں"},"past":{"one":"{0} دن پہلے","other":"{0} دنوں پہلے"}}},"hour":{"displayName":"گھنٹہ","relativeTime":{"future":{"one":"{0} گھنٹہ میں","other":"{0} گھنٹے میں"},"past":{"one":"{0} گھنٹہ پہلے","other":"{0} گھنٹے پہلے"}}},"minute":{"displayName":"منٹ","relativeTime":{"future":{"one":"{0} منٹ میں","other":"{0} منٹ میں"},"past":{"one":"{0} منٹ پہلے","other":"{0} منٹ پہلے"}}},"second":{"displayName":"سیکنڈ","relative":{"0":"اب"},"relativeTime":{"future":{"one":"{0} سیکنڈ میں","other":"{0} سیکنڈ میں"},"past":{"one":"{0} سیکنڈ پہلے","other":"{0} سیکنڈ پہلے"}}}}});
ReactIntl.__addLocaleData({"locale":"ur-IN","parentLocale":"ur","fields":{"year":{"displayName":"سال","relative":{"0":"اس سال","1":"اگلے سال","-1":"گزشتہ سال"},"relativeTime":{"future":{"one":"{0} سال میں","other":"{0} سالوں میں"},"past":{"one":"{0} سال پہلے","other":"{0} سالوں پہلے"}}},"month":{"displayName":"مہینہ","relative":{"0":"اس ماہ","1":"اگلے ماہ","-1":"گزشتہ ماہ"},"relativeTime":{"future":{"one":"{0} ماہ میں","other":"{0} ماہ میں"},"past":{"one":"{0} ماہ قبل","other":"{0} ماہ قبل"}}},"day":{"displayName":"دن","relative":{"0":"آج","1":"کل","2":"آنے والا پرسوں","-1":"کل","-2":"گزشتہ پرسوں"},"relativeTime":{"future":{"one":"{0} دن میں","other":"{0} دنوں میں"},"past":{"one":"{0} دن پہلے","other":"{0} دنوں پہلے"}}},"hour":{"displayName":"گھنٹہ","relativeTime":{"future":{"one":"{0} گھنٹہ میں","other":"{0} گھنٹے میں"},"past":{"one":"{0} گھنٹہ پہلے","other":"{0} گھنٹے پہلے"}}},"minute":{"displayName":"منٹ","relativeTime":{"future":{"one":"{0} منٹ میں","other":"{0} منٹ میں"},"past":{"one":"{0} منٹ قبل","other":"{0} منٹ قبل"}}},"second":{"displayName":"سیکنڈ","relative":{"0":"اب"},"relativeTime":{"future":{"one":"{0} سیکنڈ میں","other":"{0} سیکنڈ میں"},"past":{"one":"{0} سیکنڈ قبل","other":"{0} سیکنڈ قبل"}}}}});
ReactIntl.__addLocaleData({"locale":"ur-PK","parentLocale":"ur"});

ReactIntl.__addLocaleData({"locale":"uz","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Yil","relative":{"0":"bu yil","1":"keyingi yil","-1":"oʻtgan yil"},"relativeTime":{"future":{"one":"{0} yildan soʻng","other":"{0} yildan soʻng"},"past":{"one":"{0} yil avval","other":"{0} yil avval"}}},"month":{"displayName":"Oy","relative":{"0":"bu oy","1":"keyingi oy","-1":"oʻtgan oy"},"relativeTime":{"future":{"one":"{0} oydan soʻng","other":"{0} oydan soʻng"},"past":{"one":"{0} oy avval","other":"{0} oy avval"}}},"day":{"displayName":"Kun","relative":{"0":"bugun","1":"ertaga","-1":"kecha"},"relativeTime":{"future":{"one":"{0} kundan soʻng","other":"{0} kundan soʻng"},"past":{"one":"{0} kun oldin","other":"{0} kun oldin"}}},"hour":{"displayName":"Soat","relativeTime":{"future":{"one":"{0} soatdan soʻng","other":"{0} soatdan soʻng"},"past":{"one":"{0} soat oldin","other":"{0} soat oldin"}}},"minute":{"displayName":"Daqiqa","relativeTime":{"future":{"one":"{0} daqiqadan soʻng","other":"{0} daqiqadan soʻng"},"past":{"one":"{0} daqiqa oldin","other":"{0} daqiqa oldin"}}},"second":{"displayName":"Soniya","relative":{"0":"hozir"},"relativeTime":{"future":{"one":"{0} soniyadan soʻng","other":"{0} soniyadan soʻng"},"past":{"one":"{0} soniya oldin","other":"{0} soniya oldin"}}}}});
ReactIntl.__addLocaleData({"locale":"uz-Arab","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"uz-Arab-AF","parentLocale":"uz-Arab"});
ReactIntl.__addLocaleData({"locale":"uz-Cyrl","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Йил","relative":{"0":"бу йил","1":"кейинги йил","-1":"ўтган йил"},"relativeTime":{"future":{"one":"{0} йилдан сўнг","other":"{0} йилдан сўнг"},"past":{"one":"{0} йил аввал","other":"{0} йил аввал"}}},"month":{"displayName":"Ой","relative":{"0":"бу ой","1":"кейинги ой","-1":"ўтган ой"},"relativeTime":{"future":{"one":"{0} ойдан сўнг","other":"{0} ойдан сўнг"},"past":{"one":"{0} ой аввал","other":"{0} ой аввал"}}},"day":{"displayName":"Кун","relative":{"0":"бугун","1":"эртага","-1":"кеча"},"relativeTime":{"future":{"one":"{0} кундан сўнг","other":"{0} кундан сўнг"},"past":{"one":"{0} кун олдин","other":"{0} кун олдин"}}},"hour":{"displayName":"Соат","relativeTime":{"future":{"one":"{0} соатдан сўнг","other":"{0} соатдан сўнг"},"past":{"one":"{0} соат олдин","other":"{0} соат олдин"}}},"minute":{"displayName":"Дақиқа","relativeTime":{"future":{"one":"{0} дақиқадан сўнг","other":"{0} дақиқадан сўнг"},"past":{"one":"{0} дақиқа олдин","other":"{0} дақиқа олдин"}}},"second":{"displayName":"Сония","relative":{"0":"ҳозир"},"relativeTime":{"future":{"one":"{0} сониядан сўнг","other":"{0} сониядан сўнг"},"past":{"one":"{0} сония олдин","other":"{0} сония олдин"}}}}});
ReactIntl.__addLocaleData({"locale":"uz-Cyrl-UZ","parentLocale":"uz-Cyrl"});
ReactIntl.__addLocaleData({"locale":"uz-Latn","parentLocale":"uz"});
ReactIntl.__addLocaleData({"locale":"uz-Latn-UZ","parentLocale":"uz-Latn"});

ReactIntl.__addLocaleData({"locale":"vai","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"ꕢꘋ","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"ꕪꖃ","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"ꔎꔒ","relative":{"0":"ꗦꗷ","1":"ꔻꕯ","-1":"ꖴꖸ"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"ꕌꕎ","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"ꕆꕇ","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"ꕧꕃꕧꕪ","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"vai-Latn","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"saŋ","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"kalo","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"tele","relative":{"0":"wɛlɛ","1":"sina","-1":"kunu"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"hawa","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"mini","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"jaki-jaka","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"vai-Latn-LR","parentLocale":"vai-Latn"});
ReactIntl.__addLocaleData({"locale":"vai-Vaii","parentLocale":"vai"});
ReactIntl.__addLocaleData({"locale":"vai-Vaii-LR","parentLocale":"vai-Vaii"});

ReactIntl.__addLocaleData({"locale":"ve","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"ve-ZA","parentLocale":"ve"});

ReactIntl.__addLocaleData({"locale":"vi","pluralRuleFunction":function (n,ord){if(ord)return n==1?"one":"other";return"other"},"fields":{"year":{"displayName":"Năm","relative":{"0":"năm nay","1":"năm sau","-1":"năm ngoái"},"relativeTime":{"future":{"other":"trong {0} năm nữa"},"past":{"other":"{0} năm trước"}}},"month":{"displayName":"Tháng","relative":{"0":"tháng này","1":"tháng sau","-1":"tháng trước"},"relativeTime":{"future":{"other":"trong {0} tháng nữa"},"past":{"other":"{0} tháng trước"}}},"day":{"displayName":"Ngày","relative":{"0":"hôm nay","1":"ngày mai","2":"ngày kia","-1":"hôm qua","-2":"hôm kia"},"relativeTime":{"future":{"other":"trong {0} ngày nữa"},"past":{"other":"{0} ngày trước"}}},"hour":{"displayName":"Giờ","relativeTime":{"future":{"other":"trong {0} giờ nữa"},"past":{"other":"{0} giờ trước"}}},"minute":{"displayName":"Phút","relativeTime":{"future":{"other":"trong {0} phút nữa"},"past":{"other":"{0} phút trước"}}},"second":{"displayName":"Giây","relative":{"0":"bây giờ"},"relativeTime":{"future":{"other":"trong {0} giây nữa"},"past":{"other":"{0} giây trước"}}}}});
ReactIntl.__addLocaleData({"locale":"vi-VN","parentLocale":"vi"});

ReactIntl.__addLocaleData({"locale":"vo","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"yel","relative":{"0":"ayelo","1":"oyelo","-1":"äyelo"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"mul","relative":{"0":"amulo","1":"omulo","-1":"ämulo"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Tag","relative":{"0":"adelo","1":"odelo","2":"udelo","-1":"ädelo","-2":"edelo"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"düp","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"minut","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"sekun","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"vo-001","parentLocale":"vo"});

ReactIntl.__addLocaleData({"locale":"vun","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Maka","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Mori","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Mfiri","relative":{"0":"Inu","1":"Ngama","-1":"Ukou"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Saa","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Dakyika","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Sekunde","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"vun-TZ","parentLocale":"vun"});

ReactIntl.__addLocaleData({"locale":"wa","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==0||n==1?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});

ReactIntl.__addLocaleData({"locale":"wae","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Jár","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"one":"I {0} jár","other":"I {0} jár"},"past":{"one":"vor {0} jár","other":"cor {0} jár"}}},"month":{"displayName":"Mánet","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"one":"I {0} mánet","other":"I {0} mánet"},"past":{"one":"vor {0} mánet","other":"vor {0} mánet"}}},"day":{"displayName":"Tag","relative":{"0":"Hitte","1":"Móre","2":"Ubermóre","-1":"Gešter","-2":"Vorgešter"},"relativeTime":{"future":{"one":"i {0} tag","other":"i {0} täg"},"past":{"one":"vor {0} tag","other":"vor {0} täg"}}},"hour":{"displayName":"Schtund","relativeTime":{"future":{"one":"i {0} stund","other":"i {0} stunde"},"past":{"one":"vor {0} stund","other":"vor {0} stunde"}}},"minute":{"displayName":"Mínütta","relativeTime":{"future":{"one":"i {0} minüta","other":"i {0} minüte"},"past":{"one":"vor {0} minüta","other":"vor {0} minüte"}}},"second":{"displayName":"Sekunda","relative":{"0":"now"},"relativeTime":{"future":{"one":"i {0} sekund","other":"i {0} sekunde"},"past":{"one":"vor {0} sekund","other":"vor {0} sekunde"}}}}});
ReactIntl.__addLocaleData({"locale":"wae-CH","parentLocale":"wae"});

ReactIntl.__addLocaleData({"locale":"wo","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});

ReactIntl.__addLocaleData({"locale":"xh","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Year","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Month","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Day","relative":{"0":"today","1":"tomorrow","-1":"yesterday"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Hour","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Minute","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Second","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});

ReactIntl.__addLocaleData({"locale":"xog","pluralRuleFunction":function (n,ord){if(ord)return"other";return n==1?"one":"other"},"fields":{"year":{"displayName":"Omwaka","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Omwezi","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Olunaku","relative":{"0":"Olwaleelo (leelo)","1":"Enkyo","-1":"Edho"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"Essawa","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Edakiika","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Obutikitiki","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"xog-UG","parentLocale":"xog"});

ReactIntl.__addLocaleData({"locale":"yav","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"yɔɔŋ","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"oóli","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"puɔ́sɛ́","relative":{"0":"ínaan","1":"nakinyám","-1":"púyoó"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"kisikɛl,","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"minít","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"síkɛn","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"yav-CM","parentLocale":"yav"});

ReactIntl.__addLocaleData({"locale":"yi","pluralRuleFunction":function (n,ord){var s=String(n).split("."),v0=!s[1];if(ord)return"other";return n==1&&v0?"one":"other"},"fields":{"year":{"displayName":"יאָהר","relative":{"0":"הײַ יאָר","1":"איבער א יאָר","-1":"פֿאַראַיאָר"},"relativeTime":{"future":{"one":"איבער {0} יאָר","other":"איבער {0} יאָר"},"past":{"one":"פֿאַר {0} יאָר","other":"פֿאַר {0} יאָר"}}},"month":{"displayName":"מאנאַט","relative":{"0":"דעם חודש","1":"קומענדיקן חודש","-1":"פֿאַרגאנגענעם חודש"},"relativeTime":{"future":{"one":"איבער {0} חודש","other":"איבער {0} חדשים"},"past":{"one":"פֿאַר {0} חודש","other":"פֿאַר {0} חדשים"}}},"day":{"displayName":"טאג","relative":{"0":"היינט","1":"מארגן","-1":"נעכטן"},"relativeTime":{"future":{"one":"אין {0} טאָג אַרום","other":"אין {0} טעג אַרום"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"שעה","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"מינוט","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"סעקונדע","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"yi-001","parentLocale":"yi"});

ReactIntl.__addLocaleData({"locale":"yo","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"Ọdún","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Osù","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Ọjọ́","relative":{"0":"Òní","1":"Ọ̀la","2":"òtúùnla","-1":"Àná","-2":"íjẹta"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"wákàtí","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Ìsẹ́jú","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Ìsẹ́jú Ààyá","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"yo-BJ","parentLocale":"yo","fields":{"year":{"displayName":"Ɔdún","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"Osù","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"Ɔjɔ́","relative":{"0":"Òní","1":"Ɔ̀la","2":"òtúùnla","-1":"Àná","-2":"íjɛta"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"wákàtí","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"Ìsɛ́jú","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"Ìsɛ́jú Ààyá","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"yo-NG","parentLocale":"yo"});

ReactIntl.__addLocaleData({"locale":"zgh","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"ⴰⵙⴳⴳⵯⴰⵙ","relative":{"0":"this year","1":"next year","-1":"last year"},"relativeTime":{"future":{"other":"+{0} y"},"past":{"other":"-{0} y"}}},"month":{"displayName":"ⴰⵢⵢⵓⵔ","relative":{"0":"this month","1":"next month","-1":"last month"},"relativeTime":{"future":{"other":"+{0} m"},"past":{"other":"-{0} m"}}},"day":{"displayName":"ⴰⵙⵙ","relative":{"0":"ⴰⵙⵙⴰ","1":"ⴰⵙⴽⴽⴰ","-1":"ⵉⴹⵍⵍⵉ"},"relativeTime":{"future":{"other":"+{0} d"},"past":{"other":"-{0} d"}}},"hour":{"displayName":"ⵜⴰⵙⵔⴰⴳⵜ","relativeTime":{"future":{"other":"+{0} h"},"past":{"other":"-{0} h"}}},"minute":{"displayName":"ⵜⵓⵙⴷⵉⴷⵜ","relativeTime":{"future":{"other":"+{0} min"},"past":{"other":"-{0} min"}}},"second":{"displayName":"ⵜⴰⵙⵉⵏⵜ","relative":{"0":"now"},"relativeTime":{"future":{"other":"+{0} s"},"past":{"other":"-{0} s"}}}}});
ReactIntl.__addLocaleData({"locale":"zgh-MA","parentLocale":"zgh"});

ReactIntl.__addLocaleData({"locale":"zh","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"年","relative":{"0":"今年","1":"明年","-1":"去年"},"relativeTime":{"future":{"other":"{0}年后"},"past":{"other":"{0}年前"}}},"month":{"displayName":"月","relative":{"0":"本月","1":"下个月","-1":"上个月"},"relativeTime":{"future":{"other":"{0}个月后"},"past":{"other":"{0}个月前"}}},"day":{"displayName":"日","relative":{"0":"今天","1":"明天","2":"后天","-1":"昨天","-2":"前天"},"relativeTime":{"future":{"other":"{0}天后"},"past":{"other":"{0}天前"}}},"hour":{"displayName":"小时","relativeTime":{"future":{"other":"{0}小时后"},"past":{"other":"{0}小时前"}}},"minute":{"displayName":"分钟","relativeTime":{"future":{"other":"{0}分钟后"},"past":{"other":"{0}分钟前"}}},"second":{"displayName":"秒钟","relative":{"0":"现在"},"relativeTime":{"future":{"other":"{0}秒钟后"},"past":{"other":"{0}秒钟前"}}}}});
ReactIntl.__addLocaleData({"locale":"zh-Hans","parentLocale":"zh"});
ReactIntl.__addLocaleData({"locale":"zh-Hans-CN","parentLocale":"zh-Hans"});
ReactIntl.__addLocaleData({"locale":"zh-Hans-HK","parentLocale":"zh-Hans","fields":{"year":{"displayName":"年","relative":{"0":"今年","1":"明年","-1":"去年"},"relativeTime":{"future":{"other":"{0}年后"},"past":{"other":"{0}年前"}}},"month":{"displayName":"月","relative":{"0":"本月","1":"下个月","-1":"上个月"},"relativeTime":{"future":{"other":"{0}个月后"},"past":{"other":"{0}个月前"}}},"day":{"displayName":"日","relative":{"0":"今天","1":"明天","2":"后天","-1":"昨天","-2":"前天"},"relativeTime":{"future":{"other":"{0}天后"},"past":{"other":"{0}天前"}}},"hour":{"displayName":"小时","relativeTime":{"future":{"other":"{0}小时后"},"past":{"other":"{0}小时前"}}},"minute":{"displayName":"分钟","relativeTime":{"future":{"other":"{0}分钟后"},"past":{"other":"{0}分钟前"}}},"second":{"displayName":"秒钟","relative":{"0":"现在"},"relativeTime":{"future":{"other":"{0}秒后"},"past":{"other":"{0}秒前"}}}}});
ReactIntl.__addLocaleData({"locale":"zh-Hans-MO","parentLocale":"zh-Hans","fields":{"year":{"displayName":"年","relative":{"0":"今年","1":"明年","-1":"去年"},"relativeTime":{"future":{"other":"{0}年后"},"past":{"other":"{0}年前"}}},"month":{"displayName":"月","relative":{"0":"本月","1":"下个月","-1":"上个月"},"relativeTime":{"future":{"other":"{0}个月后"},"past":{"other":"{0}个月前"}}},"day":{"displayName":"天","relative":{"0":"今天","1":"明天","2":"后天","-1":"昨天","-2":"前天"},"relativeTime":{"future":{"other":"{0}天后"},"past":{"other":"{0}天前"}}},"hour":{"displayName":"小时","relativeTime":{"future":{"other":"{0}小时后"},"past":{"other":"{0}小时前"}}},"minute":{"displayName":"分钟","relativeTime":{"future":{"other":"{0}分钟后"},"past":{"other":"{0}分钟前"}}},"second":{"displayName":"秒钟","relative":{"0":"现在"},"relativeTime":{"future":{"other":"{0}秒后"},"past":{"other":"{0}秒前"}}}}});
ReactIntl.__addLocaleData({"locale":"zh-Hans-SG","parentLocale":"zh-Hans","fields":{"year":{"displayName":"年","relative":{"0":"今年","1":"明年","-1":"去年"},"relativeTime":{"future":{"other":"{0}年后"},"past":{"other":"{0}年前"}}},"month":{"displayName":"月","relative":{"0":"本月","1":"下个月","-1":"上个月"},"relativeTime":{"future":{"other":"{0}个月后"},"past":{"other":"{0}个月前"}}},"day":{"displayName":"日","relative":{"0":"今天","1":"明天","2":"后天","-1":"昨天","-2":"前天"},"relativeTime":{"future":{"other":"{0}天后"},"past":{"other":"{0}天前"}}},"hour":{"displayName":"小时","relativeTime":{"future":{"other":"{0}小时后"},"past":{"other":"{0}小时前"}}},"minute":{"displayName":"分钟","relativeTime":{"future":{"other":"{0}分钟后"},"past":{"other":"{0}分钟前"}}},"second":{"displayName":"秒钟","relative":{"0":"现在"},"relativeTime":{"future":{"other":"{0}秒后"},"past":{"other":"{0}秒前"}}}}});
ReactIntl.__addLocaleData({"locale":"zh-Hant","pluralRuleFunction":function (n,ord){if(ord)return"other";return"other"},"fields":{"year":{"displayName":"年","relative":{"0":"今年","1":"明年","-1":"去年"},"relativeTime":{"future":{"other":"{0} 年後"},"past":{"other":"{0} 年前"}}},"month":{"displayName":"月","relative":{"0":"本月","1":"下個月","-1":"上個月"},"relativeTime":{"future":{"other":"{0} 個月後"},"past":{"other":"{0} 個月前"}}},"day":{"displayName":"日","relative":{"0":"今天","1":"明天","2":"後天","-1":"昨天","-2":"前天"},"relativeTime":{"future":{"other":"{0} 天後"},"past":{"other":"{0} 天前"}}},"hour":{"displayName":"小時","relativeTime":{"future":{"other":"{0} 小時後"},"past":{"other":"{0} 小時前"}}},"minute":{"displayName":"分鐘","relativeTime":{"future":{"other":"{0} 分鐘後"},"past":{"other":"{0} 分鐘前"}}},"second":{"displayName":"秒","relative":{"0":"現在"},"relativeTime":{"future":{"other":"{0} 秒後"},"past":{"other":"{0} 秒前"}}}}});
ReactIntl.__addLocaleData({"locale":"zh-Hant-HK","parentLocale":"zh-Hant","fields":{"year":{"displayName":"年","relative":{"0":"今年","1":"明年","-1":"去年"},"relativeTime":{"future":{"other":"{0} 年後"},"past":{"other":"{0} 年前"}}},"month":{"displayName":"月","relative":{"0":"本月","1":"下個月","-1":"上個月"},"relativeTime":{"future":{"other":"{0} 個月後"},"past":{"other":"{0} 個月前"}}},"day":{"displayName":"日","relative":{"0":"今日","1":"明日","2":"後日","-1":"昨日","-2":"前日"},"relativeTime":{"future":{"other":"{0} 日後"},"past":{"other":"{0} 日前"}}},"hour":{"displayName":"小時","relativeTime":{"future":{"other":"{0} 小時後"},"past":{"other":"{0} 小時前"}}},"minute":{"displayName":"分鐘","relativeTime":{"future":{"other":"{0} 分鐘後"},"past":{"other":"{0} 分鐘前"}}},"second":{"displayName":"秒","relative":{"0":"現在"},"relativeTime":{"future":{"other":"{0} 秒後"},"past":{"other":"{0} 秒前"}}}}});
ReactIntl.__addLocaleData({"locale":"zh-Hant-MO","parentLocale":"zh-Hant-HK"});
ReactIntl.__addLocaleData({"locale":"zh-Hant-TW","parentLocale":"zh-Hant"});

ReactIntl.__addLocaleData({"locale":"zu","pluralRuleFunction":function (n,ord){if(ord)return"other";return n>=0&&n<=1?"one":"other"},"fields":{"year":{"displayName":"Unyaka","relative":{"0":"kulo nyaka","1":"unyaka ozayo","-1":"onyakeni odlule"},"relativeTime":{"future":{"one":"onyakeni ongu-{0}","other":"Eminyakeni engu-{0}"},"past":{"one":"{0} unyaka odlule","other":"{0} iminyaka edlule"}}},"month":{"displayName":"Inyanga","relative":{"0":"le nyanga","1":"inyanga ezayo","-1":"inyanga edlule"},"relativeTime":{"future":{"one":"Enyangeni engu-{0}","other":"Ezinyangeni ezingu-{0}"},"past":{"one":"{0} inyanga edlule","other":"{0} izinyanga ezedlule"}}},"day":{"displayName":"usuku","relative":{"0":"namhlanje","1":"kusasa","2":"Usuku olulandela olakusasa","-1":"izolo","-2":"Usuku olwandulela olwayizolo"},"relativeTime":{"future":{"one":"Osukwini olungu-{0}","other":"Ezinsukwini ezingu-{0}"},"past":{"one":"osukwini olungu-{0} olwedlule","other":"ezinsukwini ezingu-{0} ezedlule."}}},"hour":{"displayName":"Ihora","relativeTime":{"future":{"one":"Ehoreni elingu-{0}","other":"Emahoreni angu-{0}"},"past":{"one":"ehoreni eligu-{0} eledluli","other":"emahoreni angu-{0} edlule"}}},"minute":{"displayName":"Iminithi","relativeTime":{"future":{"one":"Kumunithi engu-{0}","other":"Emaminithini angu-{0}"},"past":{"one":"eminithini elingu-{0} eledlule","other":"amaminithi angu-{0} adlule"}}},"second":{"displayName":"Isekhondi","relative":{"0":"manje"},"relativeTime":{"future":{"one":"Kusekhondi elingu-{0}","other":"Kumasekhondi angu-{0}"},"past":{"one":"isekhondi elingu-{0} eledlule","other":"amasekhondi angu-{0} adlule"}}}}});
ReactIntl.__addLocaleData({"locale":"zu-ZA","parentLocale":"zu"});

//# sourceMappingURL=react-intl-with-locales.js.map
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["Redux"] = factory();
	else
		root["Redux"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.compose = exports.applyMiddleware = exports.bindActionCreators = exports.combineReducers = exports.createStore = undefined;

	var _createStore = __webpack_require__(2);

	var _createStore2 = _interopRequireDefault(_createStore);

	var _combineReducers = __webpack_require__(7);

	var _combineReducers2 = _interopRequireDefault(_combineReducers);

	var _bindActionCreators = __webpack_require__(6);

	var _bindActionCreators2 = _interopRequireDefault(_bindActionCreators);

	var _applyMiddleware = __webpack_require__(5);

	var _applyMiddleware2 = _interopRequireDefault(_applyMiddleware);

	var _compose = __webpack_require__(1);

	var _compose2 = _interopRequireDefault(_compose);

	var _warning = __webpack_require__(3);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

	/*
	* This is a dummy function to check if the function name has been altered by minification.
	* If the function has been minified and NODE_ENV !== 'production', warn the user.
	*/
	function isCrushed() {}

	if (("development") !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {
	  (0, _warning2["default"])('You are currently using minified code outside of NODE_ENV === \'production\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');
	}

	exports.createStore = _createStore2["default"];
	exports.combineReducers = _combineReducers2["default"];
	exports.bindActionCreators = _bindActionCreators2["default"];
	exports.applyMiddleware = _applyMiddleware2["default"];
	exports.compose = _compose2["default"];

/***/ },
/* 1 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;
	exports["default"] = compose;
	/**
	 * Composes single-argument functions from right to left.
	 *
	 * @param {...Function} funcs The functions to compose.
	 * @returns {Function} A function obtained by composing functions from right to
	 * left. For example, compose(f, g, h) is identical to arg => f(g(h(arg))).
	 */
	function compose() {
	  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
	    funcs[_key] = arguments[_key];
	  }

	  return function () {
	    if (funcs.length === 0) {
	      return arguments.length <= 0 ? undefined : arguments[0];
	    }

	    var last = funcs[funcs.length - 1];
	    var rest = funcs.slice(0, -1);

	    return rest.reduceRight(function (composed, f) {
	      return f(composed);
	    }, last.apply(undefined, arguments));
	  };
	}

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.ActionTypes = undefined;
	exports["default"] = createStore;

	var _isPlainObject = __webpack_require__(4);

	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

	/**
	 * These are private action types reserved by Redux.
	 * For any unknown actions, you must return the current state.
	 * If the current state is undefined, you must return the initial state.
	 * Do not reference these action types directly in your code.
	 */
	var ActionTypes = exports.ActionTypes = {
	  INIT: '@@redux/INIT'
	};

	/**
	 * Creates a Redux store that holds the state tree.
	 * The only way to change the data in the store is to call `dispatch()` on it.
	 *
	 * There should only be a single store in your app. To specify how different
	 * parts of the state tree respond to actions, you may combine several reducers
	 * into a single reducer function by using `combineReducers`.
	 *
	 * @param {Function} reducer A function that returns the next state tree, given
	 * the current state tree and the action to handle.
	 *
	 * @param {any} [initialState] The initial state. You may optionally specify it
	 * to hydrate the state from the server in universal apps, or to restore a
	 * previously serialized user session.
	 * If you use `combineReducers` to produce the root reducer function, this must be
	 * an object with the same shape as `combineReducers` keys.
	 *
	 * @param {Function} enhancer The store enhancer. You may optionally specify it
	 * to enhance the store with third-party capabilities such as middleware,
	 * time travel, persistence, etc. The only store enhancer that ships with Redux
	 * is `applyMiddleware()`.
	 *
	 * @returns {Store} A Redux store that lets you read the state, dispatch actions
	 * and subscribe to changes.
	 */
	function createStore(reducer, initialState, enhancer) {
	  if (typeof initialState === 'function' && typeof enhancer === 'undefined') {
	    enhancer = initialState;
	    initialState = undefined;
	  }

	  if (typeof enhancer !== 'undefined') {
	    if (typeof enhancer !== 'function') {
	      throw new Error('Expected the enhancer to be a function.');
	    }

	    return enhancer(createStore)(reducer, initialState);
	  }

	  if (typeof reducer !== 'function') {
	    throw new Error('Expected the reducer to be a function.');
	  }

	  var currentReducer = reducer;
	  var currentState = initialState;
	  var currentListeners = [];
	  var nextListeners = currentListeners;
	  var isDispatching = false;

	  function ensureCanMutateNextListeners() {
	    if (nextListeners === currentListeners) {
	      nextListeners = currentListeners.slice();
	    }
	  }

	  /**
	   * Reads the state tree managed by the store.
	   *
	   * @returns {any} The current state tree of your application.
	   */
	  function getState() {
	    return currentState;
	  }

	  /**
	   * Adds a change listener. It will be called any time an action is dispatched,
	   * and some part of the state tree may potentially have changed. You may then
	   * call `getState()` to read the current state tree inside the callback.
	   *
	   * You may call `dispatch()` from a change listener, with the following
	   * caveats:
	   *
	   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
	   * If you subscribe or unsubscribe while the listeners are being invoked, this
	   * will not have any effect on the `dispatch()` that is currently in progress.
	   * However, the next `dispatch()` call, whether nested or not, will use a more
	   * recent snapshot of the subscription list.
	   *
	   * 2. The listener should not expect to see all states changes, as the state
	   * might have been updated multiple times during a nested `dispatch()` before
	   * the listener is called. It is, however, guaranteed that all subscribers
	   * registered before the `dispatch()` started will be called with the latest
	   * state by the time it exits.
	   *
	   * @param {Function} listener A callback to be invoked on every dispatch.
	   * @returns {Function} A function to remove this change listener.
	   */
	  function subscribe(listener) {
	    if (typeof listener !== 'function') {
	      throw new Error('Expected listener to be a function.');
	    }

	    var isSubscribed = true;

	    ensureCanMutateNextListeners();
	    nextListeners.push(listener);

	    return function unsubscribe() {
	      if (!isSubscribed) {
	        return;
	      }

	      isSubscribed = false;

	      ensureCanMutateNextListeners();
	      var index = nextListeners.indexOf(listener);
	      nextListeners.splice(index, 1);
	    };
	  }

	  /**
	   * Dispatches an action. It is the only way to trigger a state change.
	   *
	   * The `reducer` function, used to create the store, will be called with the
	   * current state tree and the given `action`. Its return value will
	   * be considered the **next** state of the tree, and the change listeners
	   * will be notified.
	   *
	   * The base implementation only supports plain object actions. If you want to
	   * dispatch a Promise, an Observable, a thunk, or something else, you need to
	   * wrap your store creating function into the corresponding middleware. For
	   * example, see the documentation for the `redux-thunk` package. Even the
	   * middleware will eventually dispatch plain object actions using this method.
	   *
	   * @param {Object} action A plain object representing “what changed”. It is
	   * a good idea to keep actions serializable so you can record and replay user
	   * sessions, or use the time travelling `redux-devtools`. An action must have
	   * a `type` property which may not be `undefined`. It is a good idea to use
	   * string constants for action types.
	   *
	   * @returns {Object} For convenience, the same action object you dispatched.
	   *
	   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
	   * return something else (for example, a Promise you can await).
	   */
	  function dispatch(action) {
	    if (!(0, _isPlainObject2["default"])(action)) {
	      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');
	    }

	    if (typeof action.type === 'undefined') {
	      throw new Error('Actions may not have an undefined "type" property. ' + 'Have you misspelled a constant?');
	    }

	    if (isDispatching) {
	      throw new Error('Reducers may not dispatch actions.');
	    }

	    try {
	      isDispatching = true;
	      currentState = currentReducer(currentState, action);
	    } finally {
	      isDispatching = false;
	    }

	    var listeners = currentListeners = nextListeners;
	    for (var i = 0; i < listeners.length; i++) {
	      listeners[i]();
	    }

	    return action;
	  }

	  /**
	   * Replaces the reducer currently used by the store to calculate the state.
	   *
	   * You might need this if your app implements code splitting and you want to
	   * load some of the reducers dynamically. You might also need this if you
	   * implement a hot reloading mechanism for Redux.
	   *
	   * @param {Function} nextReducer The reducer for the store to use instead.
	   * @returns {void}
	   */
	  function replaceReducer(nextReducer) {
	    if (typeof nextReducer !== 'function') {
	      throw new Error('Expected the nextReducer to be a function.');
	    }

	    currentReducer = nextReducer;
	    dispatch({ type: ActionTypes.INIT });
	  }

	  // When a store is created, an "INIT" action is dispatched so that every
	  // reducer returns their initial state. This effectively populates
	  // the initial state tree.
	  dispatch({ type: ActionTypes.INIT });

	  return {
	    dispatch: dispatch,
	    subscribe: subscribe,
	    getState: getState,
	    replaceReducer: replaceReducer
	  };
	}

/***/ },
/* 3 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports["default"] = warning;
	/**
	 * Prints a warning in the console if it exists.
	 *
	 * @param {String} message The warning message.
	 * @returns {void}
	 */
	function warning(message) {
	  /* eslint-disable no-console */
	  if (typeof console !== 'undefined' && typeof console.error === 'function') {
	    console.error(message);
	  }
	  /* eslint-enable no-console */
	  try {
	    // This error was thrown as a convenience so that you can use this stack
	    // to find the callsite that caused this warning to fire.
	    throw new Error(message);
	    /* eslint-disable no-empty */
	  } catch (e) {}
	  /* eslint-enable no-empty */
	}

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	var isHostObject = __webpack_require__(8),
	    isObjectLike = __webpack_require__(9);

	/** `Object#toString` result references. */
	var objectTag = '[object Object]';

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to resolve the decompiled source of functions. */
	var funcToString = Function.prototype.toString;

	/** Used to infer the `Object` constructor. */
	var objectCtorString = funcToString.call(Object);

	/**
	 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;

	/** Built-in value references. */
	var getPrototypeOf = Object.getPrototypeOf;

	/**
	 * Checks if `value` is a plain object, that is, an object created by the
	 * `Object` constructor or one with a `[[Prototype]]` of `null`.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 * }
	 *
	 * _.isPlainObject(new Foo);
	 * // => false
	 *
	 * _.isPlainObject([1, 2, 3]);
	 * // => false
	 *
	 * _.isPlainObject({ 'x': 0, 'y': 0 });
	 * // => true
	 *
	 * _.isPlainObject(Object.create(null));
	 * // => true
	 */
	function isPlainObject(value) {
	  if (!isObjectLike(value) || objectToString.call(value) != objectTag || isHostObject(value)) {
	    return false;
	  }
	  var proto = objectProto;
	  if (typeof value.constructor == 'function') {
	    proto = getPrototypeOf(value);
	  }
	  if (proto === null) {
	    return true;
	  }
	  var Ctor = proto.constructor;
	  return (typeof Ctor == 'function' &&
	    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);
	}

	module.exports = isPlainObject;


/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.__esModule = true;
	exports["default"] = applyMiddleware;

	var _compose = __webpack_require__(1);

	var _compose2 = _interopRequireDefault(_compose);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

	/**
	 * Creates a store enhancer that applies middleware to the dispatch method
	 * of the Redux store. This is handy for a variety of tasks, such as expressing
	 * asynchronous actions in a concise manner, or logging every action payload.
	 *
	 * See `redux-thunk` package as an example of the Redux middleware.
	 *
	 * Because middleware is potentially asynchronous, this should be the first
	 * store enhancer in the composition chain.
	 *
	 * Note that each middleware will be given the `dispatch` and `getState` functions
	 * as named arguments.
	 *
	 * @param {...Function} middlewares The middleware chain to be applied.
	 * @returns {Function} A store enhancer applying the middleware.
	 */
	function applyMiddleware() {
	  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {
	    middlewares[_key] = arguments[_key];
	  }

	  return function (createStore) {
	    return function (reducer, initialState, enhancer) {
	      var store = createStore(reducer, initialState, enhancer);
	      var _dispatch = store.dispatch;
	      var chain = [];

	      var middlewareAPI = {
	        getState: store.getState,
	        dispatch: function dispatch(action) {
	          return _dispatch(action);
	        }
	      };
	      chain = middlewares.map(function (middleware) {
	        return middleware(middlewareAPI);
	      });
	      _dispatch = _compose2["default"].apply(undefined, chain)(store.dispatch);

	      return _extends({}, store, {
	        dispatch: _dispatch
	      });
	    };
	  };
	}

/***/ },
/* 6 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports["default"] = bindActionCreators;
	function bindActionCreator(actionCreator, dispatch) {
	  return function () {
	    return dispatch(actionCreator.apply(undefined, arguments));
	  };
	}

	/**
	 * Turns an object whose values are action creators, into an object with the
	 * same keys, but with every function wrapped into a `dispatch` call so they
	 * may be invoked directly. This is just a convenience method, as you can call
	 * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
	 *
	 * For convenience, you can also pass a single function as the first argument,
	 * and get a function in return.
	 *
	 * @param {Function|Object} actionCreators An object whose values are action
	 * creator functions. One handy way to obtain it is to use ES6 `import * as`
	 * syntax. You may also pass a single function.
	 *
	 * @param {Function} dispatch The `dispatch` function available on your Redux
	 * store.
	 *
	 * @returns {Function|Object} The object mimicking the original object, but with
	 * every action creator wrapped into the `dispatch` call. If you passed a
	 * function as `actionCreators`, the return value will also be a single
	 * function.
	 */
	function bindActionCreators(actionCreators, dispatch) {
	  if (typeof actionCreators === 'function') {
	    return bindActionCreator(actionCreators, dispatch);
	  }

	  if (typeof actionCreators !== 'object' || actionCreators === null) {
	    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');
	  }

	  var keys = Object.keys(actionCreators);
	  var boundActionCreators = {};
	  for (var i = 0; i < keys.length; i++) {
	    var key = keys[i];
	    var actionCreator = actionCreators[key];
	    if (typeof actionCreator === 'function') {
	      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
	    }
	  }
	  return boundActionCreators;
	}

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports["default"] = combineReducers;

	var _createStore = __webpack_require__(2);

	var _isPlainObject = __webpack_require__(4);

	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

	var _warning = __webpack_require__(3);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

	function getUndefinedStateErrorMessage(key, action) {
	  var actionType = action && action.type;
	  var actionName = actionType && '"' + actionType.toString() + '"' || 'an action';

	  return 'Reducer "' + key + '" returned undefined handling ' + actionName + '. ' + 'To ignore an action, you must explicitly return the previous state.';
	}

	function getUnexpectedStateShapeWarningMessage(inputState, reducers, action) {
	  var reducerKeys = Object.keys(reducers);
	  var argumentName = action && action.type === _createStore.ActionTypes.INIT ? 'initialState argument passed to createStore' : 'previous state received by the reducer';

	  if (reducerKeys.length === 0) {
	    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
	  }

	  if (!(0, _isPlainObject2["default"])(inputState)) {
	    return 'The ' + argumentName + ' has unexpected type of "' + {}.toString.call(inputState).match(/\s([a-z|A-Z]+)/)[1] + '". Expected argument to be an object with the following ' + ('keys: "' + reducerKeys.join('", "') + '"');
	  }

	  var unexpectedKeys = Object.keys(inputState).filter(function (key) {
	    return !reducers.hasOwnProperty(key);
	  });

	  if (unexpectedKeys.length > 0) {
	    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('"' + unexpectedKeys.join('", "') + '" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('"' + reducerKeys.join('", "') + '". Unexpected keys will be ignored.');
	  }
	}

	function assertReducerSanity(reducers) {
	  Object.keys(reducers).forEach(function (key) {
	    var reducer = reducers[key];
	    var initialState = reducer(undefined, { type: _createStore.ActionTypes.INIT });

	    if (typeof initialState === 'undefined') {
	      throw new Error('Reducer "' + key + '" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined.');
	    }

	    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');
	    if (typeof reducer(undefined, { type: type }) === 'undefined') {
	      throw new Error('Reducer "' + key + '" returned undefined when probed with a random type. ' + ('Don\'t try to handle ' + _createStore.ActionTypes.INIT + ' or other actions in "redux/*" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined.');
	    }
	  });
	}

	/**
	 * Turns an object whose values are different reducer functions, into a single
	 * reducer function. It will call every child reducer, and gather their results
	 * into a single state object, whose keys correspond to the keys of the passed
	 * reducer functions.
	 *
	 * @param {Object} reducers An object whose values correspond to different
	 * reducer functions that need to be combined into one. One handy way to obtain
	 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
	 * undefined for any action. Instead, they should return their initial state
	 * if the state passed to them was undefined, and the current state for any
	 * unrecognized action.
	 *
	 * @returns {Function} A reducer function that invokes every reducer inside the
	 * passed object, and builds a state object with the same shape.
	 */
	function combineReducers(reducers) {
	  var reducerKeys = Object.keys(reducers);
	  var finalReducers = {};
	  for (var i = 0; i < reducerKeys.length; i++) {
	    var key = reducerKeys[i];
	    if (typeof reducers[key] === 'function') {
	      finalReducers[key] = reducers[key];
	    }
	  }
	  var finalReducerKeys = Object.keys(finalReducers);

	  var sanityError;
	  try {
	    assertReducerSanity(finalReducers);
	  } catch (e) {
	    sanityError = e;
	  }

	  return function combination() {
	    var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    var action = arguments[1];

	    if (sanityError) {
	      throw sanityError;
	    }

	    if (true) {
	      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action);
	      if (warningMessage) {
	        (0, _warning2["default"])(warningMessage);
	      }
	    }

	    var hasChanged = false;
	    var nextState = {};
	    for (var i = 0; i < finalReducerKeys.length; i++) {
	      var key = finalReducerKeys[i];
	      var reducer = finalReducers[key];
	      var previousStateForKey = state[key];
	      var nextStateForKey = reducer(previousStateForKey, action);
	      if (typeof nextStateForKey === 'undefined') {
	        var errorMessage = getUndefinedStateErrorMessage(key, action);
	        throw new Error(errorMessage);
	      }
	      nextState[key] = nextStateForKey;
	      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
	    }
	    return hasChanged ? nextState : state;
	  };
	}

/***/ },
/* 8 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is a host object in IE < 9.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
	 */
	function isHostObject(value) {
	  // Many host objects are `Object` objects that can coerce to strings
	  // despite having improperly defined `toString` methods.
	  var result = false;
	  if (value != null && typeof value.toString != 'function') {
	    try {
	      result = !!(value + '');
	    } catch (e) {}
	  }
	  return result;
	}

	module.exports = isHostObject;


/***/ },
/* 9 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}

	module.exports = isObjectLike;


/***/ }
/******/ ])
});
;
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"), require("redux"));
	else if(typeof define === 'function' && define.amd)
		define(["react", "redux"], factory);
	else if(typeof exports === 'object')
		exports["ReduxForm"] = factory(require("react"), require("redux"));
	else
		root["ReduxForm"] = factory(root["React"], root["Redux"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_22__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.untouchWithKey = exports.untouch = exports.touchWithKey = exports.touch = exports.swapArrayValues = exports.stopSubmit = exports.stopAsyncValidation = exports.startSubmit = exports.startAsyncValidation = exports.reset = exports.propTypes = exports.initializeWithKey = exports.initialize = exports.getValues = exports.removeArrayValue = exports.reduxForm = exports.reducer = exports.focus = exports.destroy = exports.changeWithKey = exports.change = exports.blur = exports.addArrayValue = exports.actionTypes = undefined;

	var _react = __webpack_require__(3);

	var _react2 = _interopRequireDefault(_react);

	var _reactRedux = __webpack_require__(54);

	var _createAll2 = __webpack_require__(24);

	var _createAll3 = _interopRequireDefault(_createAll2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var isNative = typeof window !== 'undefined' && window.navigator && window.navigator.product && window.navigator.product === 'ReactNative';

	var _createAll = (0, _createAll3.default)(isNative, _react2.default, _reactRedux.connect);

	var actionTypes = _createAll.actionTypes;
	var addArrayValue = _createAll.addArrayValue;
	var blur = _createAll.blur;
	var change = _createAll.change;
	var changeWithKey = _createAll.changeWithKey;
	var destroy = _createAll.destroy;
	var focus = _createAll.focus;
	var reducer = _createAll.reducer;
	var reduxForm = _createAll.reduxForm;
	var removeArrayValue = _createAll.removeArrayValue;
	var getValues = _createAll.getValues;
	var initialize = _createAll.initialize;
	var initializeWithKey = _createAll.initializeWithKey;
	var propTypes = _createAll.propTypes;
	var reset = _createAll.reset;
	var startAsyncValidation = _createAll.startAsyncValidation;
	var startSubmit = _createAll.startSubmit;
	var stopAsyncValidation = _createAll.stopAsyncValidation;
	var stopSubmit = _createAll.stopSubmit;
	var swapArrayValues = _createAll.swapArrayValues;
	var touch = _createAll.touch;
	var touchWithKey = _createAll.touchWithKey;
	var untouch = _createAll.untouch;
	var untouchWithKey = _createAll.untouchWithKey;
	exports.actionTypes = actionTypes;
	exports.addArrayValue = addArrayValue;
	exports.blur = blur;
	exports.change = change;
	exports.changeWithKey = changeWithKey;
	exports.destroy = destroy;
	exports.focus = focus;
	exports.reducer = reducer;
	exports.reduxForm = reduxForm;
	exports.removeArrayValue = removeArrayValue;
	exports.getValues = getValues;
	exports.initialize = initialize;
	exports.initializeWithKey = initializeWithKey;
	exports.propTypes = propTypes;
	exports.reset = reset;
	exports.startAsyncValidation = startAsyncValidation;
	exports.startSubmit = startSubmit;
	exports.stopAsyncValidation = stopAsyncValidation;
	exports.stopSubmit = stopSubmit;
	exports.swapArrayValues = swapArrayValues;
	exports.touch = touch;
	exports.touchWithKey = touchWithKey;
	exports.untouch = untouch;
	exports.untouchWithKey = untouchWithKey;

/***/ },
/* 1 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports.makeFieldValue = makeFieldValue;
	exports.isFieldValue = isFieldValue;
	var flag = '_isFieldValue';
	var isObject = function isObject(object) {
	  return typeof object === 'object';
	};

	function makeFieldValue(object) {
	  if (object && isObject(object)) {
	    Object.defineProperty(object, flag, { value: true });
	  }
	  return object;
	}

	function isFieldValue(object) {
	  return !!(object && isObject(object) && object[flag]);
	}

/***/ },
/* 2 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports.default = isValid;
	function isValid(error) {
	  if (Array.isArray(error)) {
	    return error.reduce(function (valid, errorValue) {
	      return valid && isValid(errorValue);
	    }, true);
	  }
	  if (error && typeof error === 'object') {
	    return Object.keys(error).reduce(function (valid, key) {
	      return valid && isValid(error[key]);
	    }, true);
	  }
	  return !error;
	}

/***/ },
/* 3 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_3__;

/***/ },
/* 4 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	var ADD_ARRAY_VALUE = exports.ADD_ARRAY_VALUE = 'redux-form/ADD_ARRAY_VALUE';
	var BLUR = exports.BLUR = 'redux-form/BLUR';
	var CHANGE = exports.CHANGE = 'redux-form/CHANGE';
	var DESTROY = exports.DESTROY = 'redux-form/DESTROY';
	var FOCUS = exports.FOCUS = 'redux-form/FOCUS';
	var INITIALIZE = exports.INITIALIZE = 'redux-form/INITIALIZE';
	var REMOVE_ARRAY_VALUE = exports.REMOVE_ARRAY_VALUE = 'redux-form/REMOVE_ARRAY_VALUE';
	var RESET = exports.RESET = 'redux-form/RESET';
	var START_ASYNC_VALIDATION = exports.START_ASYNC_VALIDATION = 'redux-form/START_ASYNC_VALIDATION';
	var START_SUBMIT = exports.START_SUBMIT = 'redux-form/START_SUBMIT';
	var STOP_ASYNC_VALIDATION = exports.STOP_ASYNC_VALIDATION = 'redux-form/STOP_ASYNC_VALIDATION';
	var STOP_SUBMIT = exports.STOP_SUBMIT = 'redux-form/STOP_SUBMIT';
	var SUBMIT_FAILED = exports.SUBMIT_FAILED = 'redux-form/SUBMIT_FAILED';
	var SWAP_ARRAY_VALUES = exports.SWAP_ARRAY_VALUES = 'redux-form/SWAP_ARRAY_VALUES';
	var TOUCH = exports.TOUCH = 'redux-form/TOUCH';
	var UNTOUCH = exports.UNTOUCH = 'redux-form/UNTOUCH';

/***/ },
/* 5 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.default = mapValues;
	/**
	 * Maps all the values in the given object through the given function and saves them, by key, to a result object
	 */
	function mapValues(obj, fn) {
	  return obj ? Object.keys(obj).reduce(function (accumulator, key) {
	    var _extends2;

	    return _extends({}, accumulator, (_extends2 = {}, _extends2[key] = fn(obj[key], key), _extends2));
	  }, {}) : obj;
	}

/***/ },
/* 6 */
/***/ function(module, exports) {

	module.exports = isPromise;

	function isPromise(obj) {
	  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';
	}


/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.untouch = exports.touch = exports.swapArrayValues = exports.submitFailed = exports.stopSubmit = exports.stopAsyncValidation = exports.startSubmit = exports.startAsyncValidation = exports.reset = exports.removeArrayValue = exports.initialize = exports.focus = exports.destroy = exports.change = exports.blur = exports.addArrayValue = undefined;

	var _actionTypes = __webpack_require__(4);

	var addArrayValue = exports.addArrayValue = function addArrayValue(path, value, index, fields) {
	  return { type: _actionTypes.ADD_ARRAY_VALUE, path: path, value: value, index: index, fields: fields };
	};

	var blur = exports.blur = function blur(field, value) {
	  return { type: _actionTypes.BLUR, field: field, value: value };
	};

	var change = exports.change = function change(field, value) {
	  return { type: _actionTypes.CHANGE, field: field, value: value };
	};

	var destroy = exports.destroy = function destroy() {
	  return { type: _actionTypes.DESTROY };
	};

	var focus = exports.focus = function focus(field) {
	  return { type: _actionTypes.FOCUS, field: field };
	};

	var initialize = exports.initialize = function initialize(data, fields) {
	  if (!Array.isArray(fields)) {
	    throw new Error('must provide fields array to initialize() action creator');
	  }
	  return { type: _actionTypes.INITIALIZE, data: data, fields: fields };
	};

	var removeArrayValue = exports.removeArrayValue = function removeArrayValue(path, index) {
	  return { type: _actionTypes.REMOVE_ARRAY_VALUE, path: path, index: index };
	};

	var reset = exports.reset = function reset() {
	  return { type: _actionTypes.RESET };
	};

	var startAsyncValidation = exports.startAsyncValidation = function startAsyncValidation(field) {
	  return { type: _actionTypes.START_ASYNC_VALIDATION, field: field };
	};

	var startSubmit = exports.startSubmit = function startSubmit() {
	  return { type: _actionTypes.START_SUBMIT };
	};

	var stopAsyncValidation = exports.stopAsyncValidation = function stopAsyncValidation(errors) {
	  return { type: _actionTypes.STOP_ASYNC_VALIDATION, errors: errors };
	};

	var stopSubmit = exports.stopSubmit = function stopSubmit(errors) {
	  return { type: _actionTypes.STOP_SUBMIT, errors: errors };
	};

	var submitFailed = exports.submitFailed = function submitFailed() {
	  return { type: _actionTypes.SUBMIT_FAILED };
	};

	var swapArrayValues = exports.swapArrayValues = function swapArrayValues(path, indexA, indexB) {
	  return { type: _actionTypes.SWAP_ARRAY_VALUES, path: path, indexA: indexA, indexB: indexB };
	};

	var touch = exports.touch = function touch() {
	  for (var _len = arguments.length, fields = Array(_len), _key = 0; _key < _len; _key++) {
	    fields[_key] = arguments[_key];
	  }

	  return { type: _actionTypes.TOUCH, fields: fields };
	};

	var untouch = exports.untouch = function untouch() {
	  for (var _len2 = arguments.length, fields = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	    fields[_key2] = arguments[_key2];
	  }

	  return { type: _actionTypes.UNTOUCH, fields: fields };
	};

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.default = bindActionData;

	var _mapValues = __webpack_require__(5);

	var _mapValues2 = _interopRequireDefault(_mapValues);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Adds additional properties to the results of the function or map of functions passed
	 */
	function bindActionData(action, data) {
	  if (typeof action === 'function') {
	    return function () {
	      return _extends({}, action.apply(undefined, arguments), data);
	    };
	  }
	  if (typeof action === 'object') {
	    return (0, _mapValues2.default)(action, function (value) {
	      return bindActionData(value, data);
	    });
	  }
	  return action;
	}

/***/ },
/* 9 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	var dataKey = exports.dataKey = 'value';
	var createOnDragStart = function createOnDragStart(name, getValue) {
	  return function (event) {
	    event.dataTransfer.setData(dataKey, getValue());
	  };
	};

	exports.default = createOnDragStart;

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _isEvent = __webpack_require__(11);

	var _isEvent2 = _interopRequireDefault(_isEvent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var getSelectedValues = function getSelectedValues(options) {
	  var result = [];
	  if (options) {
	    for (var index = 0; index < options.length; index++) {
	      var option = options[index];
	      if (option.selected) {
	        result.push(option.value);
	      }
	    }
	  }
	  return result;
	};

	var getValue = function getValue(event, isReactNative) {
	  if ((0, _isEvent2.default)(event)) {
	    if (!isReactNative && event.nativeEvent && event.nativeEvent.text !== undefined) {
	      return event.nativeEvent.text;
	    }
	    if (isReactNative && event.nativeEvent !== undefined) {
	      return event.nativeEvent.text;
	    }
	    var _event$target = event.target;
	    var type = _event$target.type;
	    var value = _event$target.value;
	    var checked = _event$target.checked;
	    var files = _event$target.files;
	    var dataTransfer = event.dataTransfer;

	    if (type === 'checkbox') {
	      return checked;
	    }
	    if (type === 'file') {
	      return files || dataTransfer && dataTransfer.files;
	    }
	    if (type === 'select-multiple') {
	      return getSelectedValues(event.target.options);
	    }
	    return value;
	  }
	  // not an event, so must be either our value or an object containing our value in the 'value' key
	  return event && typeof event === 'object' && event.value !== undefined ? event.value : // extract value from { value: value } structure. https://github.com/nikgraf/belle/issues/58
	  event;
	};

	exports.default = getValue;

/***/ },
/* 11 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;
	var isEvent = function isEvent(candidate) {
	  return !!(candidate && candidate.stopPropagation && candidate.preventDefault);
	};

	exports.default = isEvent;

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _isEvent = __webpack_require__(11);

	var _isEvent2 = _interopRequireDefault(_isEvent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var silenceEvent = function silenceEvent(event) {
	  var is = (0, _isEvent2.default)(event);
	  if (is) {
	    event.preventDefault();
	  }
	  return is;
	};

	exports.default = silenceEvent;

/***/ },
/* 13 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports.default = getDisplayName;
	function getDisplayName(Comp) {
	  return Comp.displayName || Comp.name || 'Component';
	}

/***/ },
/* 14 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	var getValue = function getValue(field, state, dest) {
	  var dotIndex = field.indexOf('.');
	  var openIndex = field.indexOf('[');
	  var closeIndex = field.indexOf(']');
	  if (openIndex > 0 && closeIndex !== openIndex + 1) {
	    throw new Error('found [ not followed by ]');
	  }
	  if (openIndex > 0 && (dotIndex < 0 || openIndex < dotIndex)) {
	    (function () {
	      // array field
	      var key = field.substring(0, openIndex);
	      var rest = field.substring(closeIndex + 1);
	      if (rest[0] === '.') {
	        rest = rest.substring(1);
	      }
	      var array = state && state[key] || [];
	      if (rest) {
	        if (!dest[key]) {
	          dest[key] = [];
	        }
	        array.forEach(function (item, index) {
	          if (!dest[key][index]) {
	            dest[key][index] = {};
	          }
	          getValue(rest, item, dest[key][index]);
	        });
	      } else {
	        dest[key] = array.map(function (item) {
	          return item && item.value;
	        });
	      }
	    })();
	  } else if (dotIndex > 0) {
	    // subobject field
	    var key = field.substring(0, dotIndex);
	    var rest = field.substring(dotIndex + 1);
	    if (!dest[key]) {
	      dest[key] = {};
	    }
	    getValue(rest, state && state[key] || {}, dest[key]);
	  } else {
	    dest[field] = state[field] && state[field].value;
	  }
	};

	var getValues = function getValues(fields, state) {
	  return fields.reduce(function (accumulator, field) {
	    getValue(field, state, accumulator);
	    return accumulator;
	  }, {});
	};

	exports.default = getValues;

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _fieldValue = __webpack_require__(1);

	/**
	 * A different version of getValues() that does not need the fields array
	 */
	var getValuesFromState = function getValuesFromState(state) {
	  if (!state) {
	    return state;
	  }
	  var keys = Object.keys(state);
	  if (!keys.length) {
	    return undefined;
	  }
	  return keys.reduce(function (accumulator, key) {
	    var field = state[key];
	    if (field) {
	      if (field.hasOwnProperty && field.hasOwnProperty('value')) {
	        if (field.value !== undefined) {
	          accumulator[key] = field.value;
	        }
	      } else if (Array.isArray(field)) {
	        accumulator[key] = field.map(function (arrayField) {
	          return (0, _fieldValue.isFieldValue)(arrayField) ? arrayField.value : getValuesFromState(arrayField);
	        });
	      } else if (typeof field === 'object') {
	        var result = getValuesFromState(field);

	        if (result && Object.keys(result).length > 0) {
	          accumulator[key] = result;
	        }
	      }
	    }
	    return accumulator;
	  }, {});
	};

	exports.default = getValuesFromState;

/***/ },
/* 16 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	/**
	 * Reads any potentially deep value from an object using dot and array syntax
	 */
	var read = function read(path, object) {
	  if (!path || !object) {
	    return object;
	  }
	  var dotIndex = path.indexOf('.');
	  if (dotIndex === 0) {
	    return read(path.substring(1), object);
	  }
	  var openIndex = path.indexOf('[');
	  var closeIndex = path.indexOf(']');
	  if (dotIndex >= 0 && (openIndex < 0 || dotIndex < openIndex)) {
	    // iterate down object tree
	    return read(path.substring(dotIndex + 1), object[path.substring(0, dotIndex)]);
	  }
	  if (openIndex >= 0 && (dotIndex < 0 || openIndex < dotIndex)) {
	    if (closeIndex < 0) {
	      throw new Error('found [ but no ]');
	    }
	    var key = path.substring(0, openIndex);
	    var index = path.substring(openIndex + 1, closeIndex);
	    if (!index.length) {
	      return object[key];
	    }
	    if (openIndex === 0) {
	      return read(path.substring(closeIndex + 1), object[index]);
	    }
	    if (!object[key]) {
	      return undefined;
	    }
	    return read(path.substring(closeIndex + 1), object[key][index]);
	  }
	  return object[path];
	};

	exports.default = read;

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.initialState = exports.globalErrorKey = undefined;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _initialState, _behaviors;

	var _actionTypes = __webpack_require__(4);

	var _mapValues = __webpack_require__(5);

	var _mapValues2 = _interopRequireDefault(_mapValues);

	var _read = __webpack_require__(16);

	var _read2 = _interopRequireDefault(_read);

	var _write = __webpack_require__(18);

	var _write2 = _interopRequireDefault(_write);

	var _getValuesFromState = __webpack_require__(15);

	var _getValuesFromState2 = _interopRequireDefault(_getValuesFromState);

	var _initializeState = __webpack_require__(35);

	var _initializeState2 = _interopRequireDefault(_initializeState);

	var _resetState = __webpack_require__(41);

	var _resetState2 = _interopRequireDefault(_resetState);

	var _setErrors = __webpack_require__(42);

	var _setErrors2 = _interopRequireDefault(_setErrors);

	var _fieldValue = __webpack_require__(1);

	var _normalizeFields = __webpack_require__(37);

	var _normalizeFields2 = _interopRequireDefault(_normalizeFields);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	var globalErrorKey = exports.globalErrorKey = '_error';

	var initialState = exports.initialState = (_initialState = {
	  _active: undefined,
	  _asyncValidating: false
	}, _initialState[globalErrorKey] = undefined, _initialState._initialized = false, _initialState._submitting = false, _initialState._submitFailed = false, _initialState);

	var behaviors = (_behaviors = {}, _behaviors[_actionTypes.ADD_ARRAY_VALUE] = function (state, _ref) {
	  var path = _ref.path;
	  var index = _ref.index;
	  var value = _ref.value;
	  var fields = _ref.fields;

	  var array = (0, _read2.default)(path, state);
	  var stateCopy = _extends({}, state);
	  var arrayCopy = array ? [].concat(array) : [];
	  var newValue = value !== null && typeof value === 'object' ? (0, _initializeState2.default)(value, fields || Object.keys(value)) : (0, _fieldValue.makeFieldValue)({ value: value });
	  if (index === undefined) {
	    arrayCopy.push(newValue);
	  } else {
	    arrayCopy.splice(index, 0, newValue);
	  }
	  return (0, _write2.default)(path, arrayCopy, stateCopy);
	}, _behaviors[_actionTypes.BLUR] = function (state, _ref2) {
	  var field = _ref2.field;
	  var value = _ref2.value;
	  var touch = _ref2.touch;

	  // remove _active from state
	  var _active = state._active;

	  var stateCopy = _objectWithoutProperties(state, ['_active']); // eslint-disable-line prefer-const


	  return (0, _write2.default)(field, function (previous) {
	    var result = _extends({}, previous);
	    if (value !== undefined) {
	      result.value = value;
	    }
	    if (touch) {
	      result.touched = true;
	    }
	    return (0, _fieldValue.makeFieldValue)(result);
	  }, stateCopy);
	}, _behaviors[_actionTypes.CHANGE] = function (state, _ref3) {
	  var field = _ref3.field;
	  var value = _ref3.value;
	  var touch = _ref3.touch;

	  return (0, _write2.default)(field, function (previous) {
	    var _previous$value = _extends({}, previous, { value: value });

	    var asyncError = _previous$value.asyncError;
	    var submitError = _previous$value.submitError;

	    var result = _objectWithoutProperties(_previous$value, ['asyncError', 'submitError']);

	    if (touch) {
	      result.touched = true;
	    }
	    return (0, _fieldValue.makeFieldValue)(result);
	  }, state);
	}, _behaviors[_actionTypes.DESTROY] = function () {
	  return undefined;
	}, _behaviors[_actionTypes.FOCUS] = function (state, _ref4) {
	  var field = _ref4.field;

	  var stateCopy = (0, _write2.default)(field, function (previous) {
	    return (0, _fieldValue.makeFieldValue)(_extends({}, previous, { visited: true }));
	  }, state);
	  stateCopy._active = field;
	  return stateCopy;
	}, _behaviors[_actionTypes.INITIALIZE] = function (state, _ref5) {
	  var _extends2;

	  var data = _ref5.data;
	  var fields = _ref5.fields;

	  return _extends({}, (0, _initializeState2.default)(data, fields, state), (_extends2 = {
	    _asyncValidating: false,
	    _active: undefined
	  }, _extends2[globalErrorKey] = undefined, _extends2._initialized = true, _extends2._submitting = false, _extends2._submitFailed = false, _extends2));
	}, _behaviors[_actionTypes.REMOVE_ARRAY_VALUE] = function (state, _ref6) {
	  var path = _ref6.path;
	  var index = _ref6.index;

	  var array = (0, _read2.default)(path, state);
	  var stateCopy = _extends({}, state);
	  var arrayCopy = array ? [].concat(array) : [];
	  if (index === undefined) {
	    arrayCopy.pop();
	  } else if (isNaN(index)) {
	    delete arrayCopy[index];
	  } else {
	    arrayCopy.splice(index, 1);
	  }
	  return (0, _write2.default)(path, arrayCopy, stateCopy);
	}, _behaviors[_actionTypes.RESET] = function (state) {
	  var _extends3;

	  return _extends({}, (0, _resetState2.default)(state), (_extends3 = {
	    _active: undefined,
	    _asyncValidating: false
	  }, _extends3[globalErrorKey] = undefined, _extends3._initialized = state._initialized, _extends3._submitting = false, _extends3._submitFailed = false, _extends3));
	}, _behaviors[_actionTypes.START_ASYNC_VALIDATION] = function (state, _ref7) {
	  var field = _ref7.field;

	  return _extends({}, state, {
	    _asyncValidating: field || true
	  });
	}, _behaviors[_actionTypes.START_SUBMIT] = function (state) {
	  return _extends({}, state, {
	    _submitting: true
	  });
	}, _behaviors[_actionTypes.STOP_ASYNC_VALIDATION] = function (state, _ref8) {
	  var _extends4;

	  var errors = _ref8.errors;

	  return _extends({}, (0, _setErrors2.default)(state, errors, 'asyncError'), (_extends4 = {
	    _asyncValidating: false
	  }, _extends4[globalErrorKey] = errors && errors[globalErrorKey], _extends4));
	}, _behaviors[_actionTypes.STOP_SUBMIT] = function (state, _ref9) {
	  var _extends5;

	  var errors = _ref9.errors;

	  return _extends({}, (0, _setErrors2.default)(state, errors, 'submitError'), (_extends5 = {}, _extends5[globalErrorKey] = errors && errors[globalErrorKey], _extends5._submitting = false, _extends5._submitFailed = !!(errors && Object.keys(errors).length), _extends5));
	}, _behaviors[_actionTypes.SUBMIT_FAILED] = function (state) {
	  return _extends({}, state, {
	    _submitFailed: true
	  });
	}, _behaviors[_actionTypes.SWAP_ARRAY_VALUES] = function (state, _ref10) {
	  var path = _ref10.path;
	  var indexA = _ref10.indexA;
	  var indexB = _ref10.indexB;

	  var array = (0, _read2.default)(path, state);
	  var arrayLength = array.length;
	  if (indexA === indexB || isNaN(indexA) || isNaN(indexB) || indexA >= arrayLength || indexB >= arrayLength) {
	    return state; // do nothing
	  }
	  var stateCopy = _extends({}, state);
	  var arrayCopy = [].concat(array);
	  arrayCopy[indexA] = array[indexB];
	  arrayCopy[indexB] = array[indexA];
	  return (0, _write2.default)(path, arrayCopy, stateCopy);
	}, _behaviors[_actionTypes.TOUCH] = function (state, _ref11) {
	  var fields = _ref11.fields;

	  return _extends({}, state, fields.reduce(function (accumulator, field) {
	    return (0, _write2.default)(field, function (value) {
	      return (0, _fieldValue.makeFieldValue)(_extends({}, value, { touched: true }));
	    }, accumulator);
	  }, state));
	}, _behaviors[_actionTypes.UNTOUCH] = function (state, _ref12) {
	  var fields = _ref12.fields;

	  return _extends({}, state, fields.reduce(function (accumulator, field) {
	    return (0, _write2.default)(field, function (value) {
	      if (value) {
	        var touched = value.touched;

	        var rest = _objectWithoutProperties(value, ['touched']);

	        return (0, _fieldValue.makeFieldValue)(rest);
	      }
	      return (0, _fieldValue.makeFieldValue)(value);
	    }, accumulator);
	  }, state));
	}, _behaviors);

	var reducer = function reducer() {
	  var state = arguments.length <= 0 || arguments[0] === undefined ? initialState : arguments[0];
	  var action = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	  var behavior = behaviors[action.type];
	  return behavior ? behavior(state, action) : state;
	};

	function formReducer() {
	  var _extends11;

	  var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	  var action = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
	  var form = action.form;
	  var key = action.key;

	  var rest = _objectWithoutProperties(action, ['form', 'key']); // eslint-disable-line no-redeclare


	  if (!form) {
	    return state;
	  }
	  if (key) {
	    var _extends8, _extends9;

	    if (action.type === _actionTypes.DESTROY) {
	      var _extends7;

	      return _extends({}, state, (_extends7 = {}, _extends7[form] = state[form] && Object.keys(state[form]).reduce(function (accumulator, stateKey) {
	        var _extends6;

	        return stateKey === key ? accumulator : _extends({}, accumulator, (_extends6 = {}, _extends6[stateKey] = state[form][stateKey], _extends6));
	      }, {}), _extends7));
	    }
	    return _extends({}, state, (_extends9 = {}, _extends9[form] = _extends({}, state[form], (_extends8 = {}, _extends8[key] = reducer((state[form] || {})[key], rest), _extends8)), _extends9));
	  }
	  if (action.type === _actionTypes.DESTROY) {
	    return Object.keys(state).reduce(function (accumulator, formName) {
	      var _extends10;

	      return formName === form ? accumulator : _extends({}, accumulator, (_extends10 = {}, _extends10[formName] = state[formName], _extends10));
	    }, {});
	  }
	  return _extends({}, state, (_extends11 = {}, _extends11[form] = reducer(state[form], rest), _extends11));
	}

	/**
	 * Adds additional functionality to the reducer
	 */
	function decorate(target) {
	  target.plugin = function plugin(reducers) {
	    var _this = this;

	    // use 'function' keyword to enable 'this'
	    return decorate(function () {
	      var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	      var action = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	      var result = _this(state, action);
	      return _extends({}, result, (0, _mapValues2.default)(reducers, function (pluginReducer, key) {
	        return pluginReducer(result[key] || initialState, action);
	      }));
	    });
	  };

	  target.normalize = function normalize(normalizers) {
	    var _this2 = this;

	    // use 'function' keyword to enable 'this'
	    return decorate(function () {
	      var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	      var action = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	      var result = _this2(state, action);
	      return _extends({}, result, (0, _mapValues2.default)(normalizers, function (formNormalizers, form) {
	        var runNormalize = function runNormalize(previous, currentResult) {
	          var previousValues = (0, _getValuesFromState2.default)(_extends({}, initialState, previous));
	          var formResult = _extends({}, initialState, currentResult);
	          var values = (0, _getValuesFromState2.default)(formResult);
	          return (0, _normalizeFields2.default)(formNormalizers, formResult, previous, values, previousValues);
	        };
	        if (action.key) {
	          var _extends12;

	          return _extends({}, result[form], (_extends12 = {}, _extends12[action.key] = runNormalize(state[form][action.key], result[form][action.key]), _extends12));
	        }
	        return runNormalize(state[form], result[form]);
	      }));
	    });
	  };

	  return target;
	}

	exports.default = decorate(formReducer);

/***/ },
/* 18 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	/**
	 * Writes any potentially deep value from an object using dot and array syntax,
	 * and returns a new copy of the object.
	 */
	var write = function write(path, value, object) {
	  var _extends7;

	  var dotIndex = path.indexOf('.');
	  if (dotIndex === 0) {
	    return write(path.substring(1), value, object);
	  }
	  var openIndex = path.indexOf('[');
	  var closeIndex = path.indexOf(']');
	  if (dotIndex >= 0 && (openIndex < 0 || dotIndex < openIndex)) {
	    var _extends2;

	    // is dot notation
	    var key = path.substring(0, dotIndex);
	    return _extends({}, object, (_extends2 = {}, _extends2[key] = write(path.substring(dotIndex + 1), value, object[key] || {}), _extends2));
	  }
	  if (openIndex >= 0 && (dotIndex < 0 || openIndex < dotIndex)) {
	    var _ret = function () {
	      var _extends6;

	      // is array notation
	      if (closeIndex < 0) {
	        throw new Error('found [ but no ]');
	      }
	      var key = path.substring(0, openIndex);
	      var index = path.substring(openIndex + 1, closeIndex);
	      var array = object[key] || [];
	      var rest = path.substring(closeIndex + 1);
	      if (index) {
	        var _extends4;

	        // indexed array
	        if (rest.length) {
	          var _extends3;

	          // need to keep recursing
	          var dest = array[index] || {};
	          var arrayCopy = [].concat(array);
	          arrayCopy[index] = write(rest, value, dest);
	          return {
	            v: _extends({}, object || {}, (_extends3 = {}, _extends3[key] = arrayCopy, _extends3))
	          };
	        }
	        var copy = [].concat(array);
	        copy[index] = typeof value === 'function' ? value(copy[index]) : value;
	        return {
	          v: _extends({}, object || {}, (_extends4 = {}, _extends4[key] = copy, _extends4))
	        };
	      }
	      // indexless array
	      if (rest.length) {
	        var _extends5;

	        // need to keep recursing
	        if ((!array || !array.length) && typeof value === 'function') {
	          return {
	            v: object
	          }; // don't even set a value under [key]
	        }
	        var arrayCopy = array.map(function (dest) {
	          return write(rest, value, dest);
	        });
	        return {
	          v: _extends({}, object || {}, (_extends5 = {}, _extends5[key] = arrayCopy, _extends5))
	        };
	      }
	      var result = undefined;
	      if (Array.isArray(value)) {
	        result = value;
	      } else if (object[key]) {
	        result = array.map(function (dest) {
	          return typeof value === 'function' ? value(dest) : value;
	        });
	      } else if (typeof value === 'function') {
	        return {
	          v: object
	        }; // don't even set a value under [key]
	      } else {
	          result = value;
	        }
	      return {
	        v: _extends({}, object || {}, (_extends6 = {}, _extends6[key] = result, _extends6))
	      };
	    }();

	    if (typeof _ret === "object") return _ret.v;
	  }
	  return _extends({}, object, (_extends7 = {}, _extends7[path] = typeof value === 'function' ? value(object[path]) : value, _extends7));
	};

	exports.default = write;

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	var pSlice = Array.prototype.slice;
	var objectKeys = __webpack_require__(48);
	var isArguments = __webpack_require__(47);

	var deepEqual = module.exports = function (actual, expected, opts) {
	  if (!opts) opts = {};
	  // 7.1. All identical values are equivalent, as determined by ===.
	  if (actual === expected) {
	    return true;

	  } else if (actual instanceof Date && expected instanceof Date) {
	    return actual.getTime() === expected.getTime();

	  // 7.3. Other pairs that do not both pass typeof value == 'object',
	  // equivalence is determined by ==.
	  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {
	    return opts.strict ? actual === expected : actual == expected;

	  // 7.4. For all other Object pairs, including Array objects, equivalence is
	  // determined by having the same number of owned properties (as verified
	  // with Object.prototype.hasOwnProperty.call), the same set of keys
	  // (although not necessarily the same order), equivalent values for every
	  // corresponding key, and an identical 'prototype' property. Note: this
	  // accounts for both named and indexed properties on Arrays.
	  } else {
	    return objEquiv(actual, expected, opts);
	  }
	}

	function isUndefinedOrNull(value) {
	  return value === null || value === undefined;
	}

	function isBuffer (x) {
	  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;
	  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
	    return false;
	  }
	  if (x.length > 0 && typeof x[0] !== 'number') return false;
	  return true;
	}

	function objEquiv(a, b, opts) {
	  var i, key;
	  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))
	    return false;
	  // an identical 'prototype' property.
	  if (a.prototype !== b.prototype) return false;
	  //~~~I've managed to break Object.keys through screwy arguments passing.
	  //   Converting to array solves the problem.
	  if (isArguments(a)) {
	    if (!isArguments(b)) {
	      return false;
	    }
	    a = pSlice.call(a);
	    b = pSlice.call(b);
	    return deepEqual(a, b, opts);
	  }
	  if (isBuffer(a)) {
	    if (!isBuffer(b)) {
	      return false;
	    }
	    if (a.length !== b.length) return false;
	    for (i = 0; i < a.length; i++) {
	      if (a[i] !== b[i]) return false;
	    }
	    return true;
	  }
	  try {
	    var ka = objectKeys(a),
	        kb = objectKeys(b);
	  } catch (e) {//happens when one is a string literal and the other isn't
	    return false;
	  }
	  // having the same number of owned properties (keys incorporates
	  // hasOwnProperty)
	  if (ka.length != kb.length)
	    return false;
	  //the same set of keys (although not necessarily the same order),
	  ka.sort();
	  kb.sort();
	  //~~~cheap key test
	  for (i = ka.length - 1; i >= 0; i--) {
	    if (ka[i] != kb[i])
	      return false;
	  }
	  //equivalent values for every corresponding key, and
	  //~~~possibly expensive deep test
	  for (i = ka.length - 1; i >= 0; i--) {
	    key = ka[i];
	    if (!deepEqual(a[key], b[key], opts)) return false;
	  }
	  return typeof a === typeof b;
	}


/***/ },
/* 20 */
/***/ function(module, exports) {

	/**
	 * Copyright 2015, Yahoo! Inc.
	 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
	 */
	'use strict';

	var REACT_STATICS = {
	    childContextTypes: true,
	    contextTypes: true,
	    defaultProps: true,
	    displayName: true,
	    getDefaultProps: true,
	    mixins: true,
	    propTypes: true,
	    type: true
	};

	var KNOWN_STATICS = {
	    name: true,
	    length: true,
	    prototype: true,
	    caller: true,
	    arguments: true,
	    arity: true
	};

	module.exports = function hoistNonReactStatics(targetComponent, sourceComponent) {
	    var keys = Object.getOwnPropertyNames(sourceComponent);
	    for (var i=0; i<keys.length; ++i) {
	        if (!REACT_STATICS[keys[i]] && !KNOWN_STATICS[keys[i]]) {
	            try {
	                targetComponent[keys[i]] = sourceComponent[keys[i]];
	            } catch (error) {

	            }
	        }
	    }

	    return targetComponent;
	};


/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(3);

	exports["default"] = _react.PropTypes.shape({
	  subscribe: _react.PropTypes.func.isRequired,
	  dispatch: _react.PropTypes.func.isRequired,
	  getState: _react.PropTypes.func.isRequired
	});

/***/ },
/* 22 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_22__;

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _isPromise = __webpack_require__(6);

	var _isPromise2 = _interopRequireDefault(_isPromise);

	var _isValid = __webpack_require__(2);

	var _isValid2 = _interopRequireDefault(_isValid);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var asyncValidation = function asyncValidation(fn, start, stop, field) {
	  start(field);
	  var promise = fn();
	  if (!(0, _isPromise2.default)(promise)) {
	    throw new Error('asyncValidate function passed to reduxForm must return a promise');
	  }
	  var handleErrors = function handleErrors(rejected) {
	    return function (errors) {
	      if (!(0, _isValid2.default)(errors)) {
	        stop(errors);
	        return Promise.reject();
	      } else if (rejected) {
	        stop();
	        throw new Error('Asynchronous validation promise was rejected without errors.');
	      }
	      stop();
	      return Promise.resolve();
	    };
	  };
	  return promise.then(handleErrors(false), handleErrors(true));
	};

	exports.default = asyncValidation;

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.default = createAll;

	var _reducer = __webpack_require__(17);

	var _reducer2 = _interopRequireDefault(_reducer);

	var _createReduxForm = __webpack_require__(27);

	var _createReduxForm2 = _interopRequireDefault(_createReduxForm);

	var _mapValues = __webpack_require__(5);

	var _mapValues2 = _interopRequireDefault(_mapValues);

	var _bindActionData = __webpack_require__(8);

	var _bindActionData2 = _interopRequireDefault(_bindActionData);

	var _actions = __webpack_require__(7);

	var actions = _interopRequireWildcard(_actions);

	var _actionTypes = __webpack_require__(4);

	var actionTypes = _interopRequireWildcard(_actionTypes);

	var _createPropTypes = __webpack_require__(26);

	var _createPropTypes2 = _interopRequireDefault(_createPropTypes);

	var _getValuesFromState = __webpack_require__(15);

	var _getValuesFromState2 = _interopRequireDefault(_getValuesFromState);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	// bind form as first parameter of action creators
	var boundActions = _extends({}, (0, _mapValues2.default)(_extends({}, actions, {
	  changeWithKey: function changeWithKey(key) {
	    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }

	    return (0, _bindActionData2.default)(actions.change, { key: key }).apply(undefined, args);
	  },
	  initializeWithKey: function initializeWithKey(key) {
	    for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
	      args[_key2 - 1] = arguments[_key2];
	    }

	    return (0, _bindActionData2.default)(actions.initialize, { key: key }).apply(undefined, args);
	  },
	  reset: function reset(key) {
	    return (0, _bindActionData2.default)(actions.reset, { key: key })();
	  },
	  touchWithKey: function touchWithKey(key) {
	    for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
	      args[_key3 - 1] = arguments[_key3];
	    }

	    return (0, _bindActionData2.default)(actions.touch, { key: key }).apply(undefined, args);
	  },
	  untouchWithKey: function untouchWithKey(key) {
	    for (var _len4 = arguments.length, args = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
	      args[_key4 - 1] = arguments[_key4];
	    }

	    return (0, _bindActionData2.default)(actions.untouch, { key: key }).apply(undefined, args);
	  },
	  destroy: function destroy(key) {
	    return (0, _bindActionData2.default)(actions.destroy, { key: key })();
	  }
	}), function (action) {
	  return function (form) {
	    for (var _len5 = arguments.length, args = Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {
	      args[_key5 - 1] = arguments[_key5];
	    }

	    return (0, _bindActionData2.default)(action, { form: form }).apply(undefined, args);
	  };
	}));

	var addArrayValue = boundActions.addArrayValue;
	var blur = boundActions.blur;
	var change = boundActions.change;
	var changeWithKey = boundActions.changeWithKey;
	var destroy = boundActions.destroy;
	var focus = boundActions.focus;
	var initialize = boundActions.initialize;
	var initializeWithKey = boundActions.initializeWithKey;
	var removeArrayValue = boundActions.removeArrayValue;
	var reset = boundActions.reset;
	var startAsyncValidation = boundActions.startAsyncValidation;
	var startSubmit = boundActions.startSubmit;
	var stopAsyncValidation = boundActions.stopAsyncValidation;
	var stopSubmit = boundActions.stopSubmit;
	var submitFailed = boundActions.submitFailed;
	var swapArrayValues = boundActions.swapArrayValues;
	var touch = boundActions.touch;
	var touchWithKey = boundActions.touchWithKey;
	var untouch = boundActions.untouch;
	var untouchWithKey = boundActions.untouchWithKey;

	function createAll(isReactNative, React, connect) {
	  return {
	    actionTypes: actionTypes,
	    addArrayValue: addArrayValue,
	    blur: blur,
	    change: change,
	    changeWithKey: changeWithKey,
	    destroy: destroy,
	    focus: focus,
	    getValues: _getValuesFromState2.default,
	    initialize: initialize,
	    initializeWithKey: initializeWithKey,
	    propTypes: (0, _createPropTypes2.default)(React),
	    reduxForm: (0, _createReduxForm2.default)(isReactNative, React, connect),
	    reducer: _reducer2.default,
	    removeArrayValue: removeArrayValue,
	    reset: reset,
	    startAsyncValidation: startAsyncValidation,
	    startSubmit: startSubmit,
	    stopAsyncValidation: stopAsyncValidation,
	    stopSubmit: stopSubmit,
	    submitFailed: submitFailed,
	    swapArrayValues: swapArrayValues,
	    touch: touch,
	    touchWithKey: touchWithKey,
	    untouch: untouch,
	    untouchWithKey: untouchWithKey
	  };
	}

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _actions = __webpack_require__(7);

	var importedActions = _interopRequireWildcard(_actions);

	var _getDisplayName = __webpack_require__(13);

	var _getDisplayName2 = _interopRequireDefault(_getDisplayName);

	var _reducer = __webpack_require__(17);

	var _deepEqual = __webpack_require__(19);

	var _deepEqual2 = _interopRequireDefault(_deepEqual);

	var _bindActionData = __webpack_require__(8);

	var _bindActionData2 = _interopRequireDefault(_bindActionData);

	var _getValues = __webpack_require__(14);

	var _getValues2 = _interopRequireDefault(_getValues);

	var _isValid = __webpack_require__(2);

	var _isValid2 = _interopRequireDefault(_isValid);

	var _readFields = __webpack_require__(39);

	var _readFields2 = _interopRequireDefault(_readFields);

	var _handleSubmit2 = __webpack_require__(34);

	var _handleSubmit3 = _interopRequireDefault(_handleSubmit2);

	var _asyncValidation = __webpack_require__(23);

	var _asyncValidation2 = _interopRequireDefault(_asyncValidation);

	var _silenceEvents = __webpack_require__(33);

	var _silenceEvents2 = _interopRequireDefault(_silenceEvents);

	var _silenceEvent = __webpack_require__(12);

	var _silenceEvent2 = _interopRequireDefault(_silenceEvent);

	var _wrapMapDispatchToProps = __webpack_require__(45);

	var _wrapMapDispatchToProps2 = _interopRequireDefault(_wrapMapDispatchToProps);

	var _wrapMapStateToProps = __webpack_require__(46);

	var _wrapMapStateToProps2 = _interopRequireDefault(_wrapMapStateToProps);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * Creates a HOC that knows how to create redux-connected sub-components.
	 */
	var createHigherOrderComponent = function createHigherOrderComponent(config, isReactNative, React, connect, WrappedComponent, mapStateToProps, mapDispatchToProps, mergeProps, options) {
	  var Component = React.Component;
	  var PropTypes = React.PropTypes;

	  return function (reduxMountPoint, formName, formKey, getFormState) {
	    var ReduxForm = function (_Component) {
	      _inherits(ReduxForm, _Component);

	      function ReduxForm(props) {
	        _classCallCheck(this, ReduxForm);

	        // bind functions

	        var _this = _possibleConstructorReturn(this, _Component.call(this, props));

	        _this.asyncValidate = _this.asyncValidate.bind(_this);
	        _this.handleSubmit = _this.handleSubmit.bind(_this);
	        _this.fields = (0, _readFields2.default)(props, {}, {}, _this.asyncValidate, isReactNative);
	        var submitPassback = _this.props.submitPassback;

	        submitPassback(function () {
	          return _this.handleSubmit();
	        }); // wrapped in function to disallow params
	        return _this;
	      }

	      ReduxForm.prototype.componentWillMount = function componentWillMount() {
	        var _props = this.props;
	        var fields = _props.fields;
	        var form = _props.form;
	        var initialize = _props.initialize;
	        var initialValues = _props.initialValues;

	        if (initialValues && !form._initialized) {
	          initialize(initialValues, fields);
	        }
	      };

	      ReduxForm.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	        if (!(0, _deepEqual2.default)(this.props.fields, nextProps.fields) || !(0, _deepEqual2.default)(this.props.form, nextProps.form, { strict: true })) {
	          this.fields = (0, _readFields2.default)(nextProps, this.props, this.fields, this.asyncValidate, isReactNative);
	        }
	        if (!(0, _deepEqual2.default)(this.props.initialValues, nextProps.initialValues)) {
	          this.props.initialize(nextProps.initialValues, nextProps.fields);
	        }
	      };

	      ReduxForm.prototype.componentWillUnmount = function componentWillUnmount() {
	        if (config.destroyOnUnmount) {
	          this.props.destroy();
	        }
	      };

	      ReduxForm.prototype.asyncValidate = function asyncValidate(name, value) {
	        var _this2 = this;

	        var _props2 = this.props;
	        var asyncValidate = _props2.asyncValidate;
	        var dispatch = _props2.dispatch;
	        var fields = _props2.fields;
	        var form = _props2.form;
	        var startAsyncValidation = _props2.startAsyncValidation;
	        var stopAsyncValidation = _props2.stopAsyncValidation;
	        var validate = _props2.validate;

	        var isSubmitting = !name;
	        if (asyncValidate) {
	          var _ret = function () {
	            var values = (0, _getValues2.default)(fields, form);
	            if (name) {
	              values[name] = value;
	            }
	            var syncErrors = validate(values, _this2.props);
	            var allPristine = _this2.fields._meta.allPristine;

	            var initialized = form._initialized;

	            // if blur validating, only run async validate if sync validation passes
	            // and submitting (not blur validation) or form is dirty or form was never initialized
	            var syncValidationPasses = isSubmitting || (0, _isValid2.default)(syncErrors[name]);
	            if (syncValidationPasses && (isSubmitting || !allPristine || !initialized)) {
	              return {
	                v: (0, _asyncValidation2.default)(function () {
	                  return asyncValidate(values, dispatch, _this2.props);
	                }, startAsyncValidation, stopAsyncValidation, name)
	              };
	            }
	          }();

	          if (typeof _ret === "object") return _ret.v;
	        }
	      };

	      ReduxForm.prototype.handleSubmit = function handleSubmit(submitOrEvent) {
	        var _this3 = this;

	        var _props3 = this.props;
	        var onSubmit = _props3.onSubmit;
	        var fields = _props3.fields;
	        var form = _props3.form;

	        var check = function check(submit) {
	          if (!submit || typeof submit !== 'function') {
	            throw new Error('You must either pass handleSubmit() an onSubmit function or pass onSubmit as a prop');
	          }
	          return submit;
	        };
	        return !submitOrEvent || (0, _silenceEvent2.default)(submitOrEvent) ?
	        // submitOrEvent is an event: fire submit
	        (0, _handleSubmit3.default)(check(onSubmit), (0, _getValues2.default)(fields, form), this.props, this.asyncValidate) :
	        // submitOrEvent is the submit function: return deferred submit thunk
	        (0, _silenceEvents2.default)(function () {
	          return (0, _handleSubmit3.default)(check(submitOrEvent), (0, _getValues2.default)(fields, form), _this3.props, _this3.asyncValidate);
	        });
	      };

	      ReduxForm.prototype.render = function render() {
	        var _this4 = this,
	            _ref;

	        var allFields = this.fields;
	        var _props4 = this.props;
	        var addArrayValue = _props4.addArrayValue;
	        var asyncBlurFields = _props4.asyncBlurFields;
	        var blur = _props4.blur;
	        var change = _props4.change;
	        var destroy = _props4.destroy;
	        var focus = _props4.focus;
	        var fields = _props4.fields;
	        var form = _props4.form;
	        var initialValues = _props4.initialValues;
	        var initialize = _props4.initialize;
	        var onSubmit = _props4.onSubmit;
	        var propNamespace = _props4.propNamespace;
	        var reset = _props4.reset;
	        var removeArrayValue = _props4.removeArrayValue;
	        var returnRejectedSubmitPromise = _props4.returnRejectedSubmitPromise;
	        var startAsyncValidation = _props4.startAsyncValidation;
	        var startSubmit = _props4.startSubmit;
	        var stopAsyncValidation = _props4.stopAsyncValidation;
	        var stopSubmit = _props4.stopSubmit;
	        var submitFailed = _props4.submitFailed;
	        var swapArrayValues = _props4.swapArrayValues;
	        var touch = _props4.touch;
	        var untouch = _props4.untouch;
	        var validate = _props4.validate;

	        var passableProps = _objectWithoutProperties(_props4, ['addArrayValue', 'asyncBlurFields', 'blur', 'change', 'destroy', 'focus', 'fields', 'form', 'initialValues', 'initialize', 'onSubmit', 'propNamespace', 'reset', 'removeArrayValue', 'returnRejectedSubmitPromise', 'startAsyncValidation', 'startSubmit', 'stopAsyncValidation', 'stopSubmit', 'submitFailed', 'swapArrayValues', 'touch', 'untouch', 'validate']); // eslint-disable-line no-redeclare


	        var _allFields$_meta = allFields._meta;
	        var allPristine = _allFields$_meta.allPristine;
	        var allValid = _allFields$_meta.allValid;
	        var errors = _allFields$_meta.errors;
	        var formError = _allFields$_meta.formError;
	        var values = _allFields$_meta.values;


	        var props = {
	          // State:
	          active: form._active,
	          asyncValidating: form._asyncValidating,
	          dirty: !allPristine,
	          error: formError,
	          errors: errors,
	          fields: allFields,
	          formKey: formKey,
	          invalid: !allValid,
	          pristine: allPristine,
	          submitting: form._submitting,
	          submitFailed: form._submitFailed,
	          valid: allValid,
	          values: values,

	          // Actions:
	          asyncValidate: (0, _silenceEvents2.default)(function () {
	            return _this4.asyncValidate();
	          }),
	          // ^ doesn't just pass this.asyncValidate to disallow values passing
	          destroyForm: (0, _silenceEvents2.default)(destroy),
	          handleSubmit: this.handleSubmit,
	          initializeForm: (0, _silenceEvents2.default)(function (initValues) {
	            return initialize(initValues, fields);
	          }),
	          resetForm: (0, _silenceEvents2.default)(reset),
	          touch: (0, _silenceEvents2.default)(function () {
	            return touch.apply(undefined, arguments);
	          }),
	          touchAll: (0, _silenceEvents2.default)(function () {
	            return touch.apply(undefined, fields);
	          }),
	          untouch: (0, _silenceEvents2.default)(function () {
	            return untouch.apply(undefined, arguments);
	          }),
	          untouchAll: (0, _silenceEvents2.default)(function () {
	            return untouch.apply(undefined, fields);
	          })
	        };
	        var passedProps = propNamespace ? (_ref = {}, _ref[propNamespace] = props, _ref) : props;
	        return React.createElement(WrappedComponent, _extends({}, passableProps, passedProps));
	      };

	      return ReduxForm;
	    }(Component);

	    ReduxForm.displayName = 'ReduxForm(' + (0, _getDisplayName2.default)(WrappedComponent) + ')';
	    ReduxForm.WrappedComponent = WrappedComponent;
	    ReduxForm.propTypes = {
	      // props:
	      asyncBlurFields: PropTypes.arrayOf(PropTypes.string),
	      asyncValidate: PropTypes.func,
	      dispatch: PropTypes.func.isRequired,
	      fields: PropTypes.arrayOf(PropTypes.string).isRequired,
	      form: PropTypes.object,
	      initialValues: PropTypes.any,
	      onSubmit: PropTypes.func,
	      propNamespace: PropTypes.string,
	      readonly: PropTypes.bool,
	      returnRejectedSubmitPromise: PropTypes.bool,
	      submitPassback: PropTypes.func.isRequired,
	      validate: PropTypes.func,

	      // actions:
	      addArrayValue: PropTypes.func.isRequired,
	      blur: PropTypes.func.isRequired,
	      change: PropTypes.func.isRequired,
	      destroy: PropTypes.func.isRequired,
	      focus: PropTypes.func.isRequired,
	      initialize: PropTypes.func.isRequired,
	      removeArrayValue: PropTypes.func.isRequired,
	      reset: PropTypes.func.isRequired,
	      startAsyncValidation: PropTypes.func.isRequired,
	      startSubmit: PropTypes.func.isRequired,
	      stopAsyncValidation: PropTypes.func.isRequired,
	      stopSubmit: PropTypes.func.isRequired,
	      submitFailed: PropTypes.func.isRequired,
	      swapArrayValues: PropTypes.func.isRequired,
	      touch: PropTypes.func.isRequired,
	      untouch: PropTypes.func.isRequired
	    };
	    ReduxForm.defaultProps = {
	      asyncBlurFields: [],
	      form: _reducer.initialState,
	      readonly: false,
	      returnRejectedSubmitPromise: false,
	      validate: function validate() {
	        return {};
	      }
	    };

	    // bind touch flags to blur and change
	    var unboundActions = _extends({}, importedActions, {
	      blur: (0, _bindActionData2.default)(importedActions.blur, {
	        touch: !!config.touchOnBlur
	      }),
	      change: (0, _bindActionData2.default)(importedActions.change, {
	        touch: !!config.touchOnChange
	      })
	    });

	    // make redux connector with or without form key
	    var decorate = formKey !== undefined && formKey !== null ? connect((0, _wrapMapStateToProps2.default)(mapStateToProps, function (state) {
	      var formState = getFormState(state, reduxMountPoint);
	      if (!formState) {
	        throw new Error('You need to mount the redux-form reducer at "' + reduxMountPoint + '"');
	      }
	      return formState && formState[formName] && formState[formName][formKey];
	    }), (0, _wrapMapDispatchToProps2.default)(mapDispatchToProps, (0, _bindActionData2.default)(unboundActions, {
	      form: formName,
	      key: formKey
	    })), mergeProps, options) : connect((0, _wrapMapStateToProps2.default)(mapStateToProps, function (state) {
	      var formState = getFormState(state, reduxMountPoint);
	      if (!formState) {
	        throw new Error('You need to mount the redux-form reducer at "' + reduxMountPoint + '"');
	      }
	      return formState && formState[formName];
	    }), (0, _wrapMapDispatchToProps2.default)(mapDispatchToProps, (0, _bindActionData2.default)(unboundActions, { form: formName })), mergeProps, options);

	    return decorate(ReduxForm);
	  };
	};

	exports.default = createHigherOrderComponent;

/***/ },
/* 26 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;
	var createPropTypes = function createPropTypes(_ref) {
	  var _ref$PropTypes = _ref.PropTypes;
	  var any = _ref$PropTypes.any;
	  var bool = _ref$PropTypes.bool;
	  var string = _ref$PropTypes.string;
	  var func = _ref$PropTypes.func;
	  var object = _ref$PropTypes.object;
	  return {
	    // State:
	    active: string, // currently active field
	    asyncValidating: bool.isRequired, // true if async validation is running
	    dirty: bool.isRequired, // true if any values are different from initialValues
	    error: any, // form-wide error from '_error' key in validation result
	    errors: object, // a map of errors corresponding to structure of form data (result of validation)
	    fields: object.isRequired, // the map of fields
	    formKey: any, // the form key if one was provided (used when doing multirecord forms)
	    invalid: bool.isRequired, // true if there are any validation errors
	    pristine: bool.isRequired, // true if the values are the same as initialValues
	    submitting: bool.isRequired, // true if the form is in the process of being submitted
	    submitFailed: bool.isRequired, // true if the form was submitted and failed for any reason
	    valid: bool.isRequired, // true if there are no validation errors
	    values: object.isRequired, // the values of the form as they will be submitted

	    // Actions:
	    asyncValidate: func.isRequired, // function to trigger async validation
	    destroyForm: func.isRequired, // action to destroy the form's data in Redux
	    handleSubmit: func.isRequired, // function to submit the form
	    initializeForm: func.isRequired, // action to initialize form data
	    resetForm: func.isRequired, // action to reset the form data to previously initialized values
	    touch: func.isRequired, // action to mark fields as touched
	    touchAll: func.isRequired, // action to mark ALL fields as touched
	    untouch: func.isRequired, // action to mark fields as untouched
	    untouchAll: func.isRequired // action to mark ALL fields as untouched
	  };
	};

	exports.default = createPropTypes;

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createReduxFormConnector = __webpack_require__(28);

	var _createReduxFormConnector2 = _interopRequireDefault(_createReduxFormConnector);

	var _hoistNonReactStatics = __webpack_require__(20);

	var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * The decorator that is the main API to redux-form
	 */
	var createReduxForm = function createReduxForm(isReactNative, React, connect) {
	  var Component = React.Component;

	  var reduxFormConnector = (0, _createReduxFormConnector2.default)(isReactNative, React, connect);
	  return function (config, mapStateToProps, mapDispatchToProps, mergeProps, options) {
	    return function (WrappedComponent) {
	      var ReduxFormConnector = reduxFormConnector(WrappedComponent, mapStateToProps, mapDispatchToProps, mergeProps, options);
	      var configWithDefaults = _extends({
	        touchOnBlur: true,
	        touchOnChange: false,
	        destroyOnUnmount: true
	      }, config);

	      var ConnectedForm = function (_Component) {
	        _inherits(ConnectedForm, _Component);

	        function ConnectedForm() {
	          _classCallCheck(this, ConnectedForm);

	          return _possibleConstructorReturn(this, _Component.apply(this, arguments));
	        }

	        ConnectedForm.prototype.render = function render() {
	          var _this2 = this;

	          return React.createElement(ReduxFormConnector, _extends({}, configWithDefaults, this.props, {
	            submitPassback: function submitPassback(submit) {
	              return _this2.submit = submit;
	            } }));
	        };

	        return ConnectedForm;
	      }(Component);

	      return (0, _hoistNonReactStatics2.default)(ConnectedForm, WrappedComponent);
	    };
	  };
	};

	exports.default = createReduxForm;

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _noGetters = __webpack_require__(51);

	var _noGetters2 = _interopRequireDefault(_noGetters);

	var _getDisplayName = __webpack_require__(13);

	var _getDisplayName2 = _interopRequireDefault(_getDisplayName);

	var _createHigherOrderComponent = __webpack_require__(25);

	var _createHigherOrderComponent2 = _interopRequireDefault(_createHigherOrderComponent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * This component tracks props that affect how the form is mounted to the store. Normally these should not change,
	 * but if they do, the connected components below it need to be redefined.
	 */
	var createReduxFormConnector = function createReduxFormConnector(isReactNative, React, connect) {
	  return function (WrappedComponent, mapStateToProps, mapDispatchToProps, mergeProps, options) {
	    var Component = React.Component;
	    var PropTypes = React.PropTypes;

	    var ReduxFormConnector = function (_Component) {
	      _inherits(ReduxFormConnector, _Component);

	      function ReduxFormConnector(props) {
	        _classCallCheck(this, ReduxFormConnector);

	        var _this = _possibleConstructorReturn(this, _Component.call(this, props));

	        _this.cache = new _noGetters2.default(_this, {
	          ReduxForm: {
	            params: [
	            // props that effect how redux-form connects to the redux store
	            'reduxMountPoint', 'form', 'formKey', 'getFormState'],
	            fn: (0, _createHigherOrderComponent2.default)(props, isReactNative, React, connect, WrappedComponent, mapStateToProps, mapDispatchToProps, mergeProps, options)
	          }
	        });
	        return _this;
	      }

	      ReduxFormConnector.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	        this.cache.componentWillReceiveProps(nextProps);
	      };

	      ReduxFormConnector.prototype.render = function render() {
	        var ReduxForm = this.cache.get('ReduxForm');
	        // remove some redux-form config-only props
	        var _props = this.props;
	        var reduxMountPoint = _props.reduxMountPoint;
	        var destroyOnUnmount = _props.destroyOnUnmount;
	        var form = _props.form;
	        var getFormState = _props.getFormState;
	        var touchOnBlur = _props.touchOnBlur;
	        var touchOnChange = _props.touchOnChange;

	        var passableProps = _objectWithoutProperties(_props, ['reduxMountPoint', 'destroyOnUnmount', 'form', 'getFormState', 'touchOnBlur', 'touchOnChange']); // eslint-disable-line no-redeclare


	        return React.createElement(ReduxForm, passableProps);
	      };

	      return ReduxFormConnector;
	    }(Component);

	    ReduxFormConnector.displayName = 'ReduxFormConnector(' + (0, _getDisplayName2.default)(WrappedComponent) + ')';
	    ReduxFormConnector.WrappedComponent = WrappedComponent;
	    ReduxFormConnector.propTypes = {
	      destroyOnUnmount: PropTypes.bool,
	      reduxMountPoint: PropTypes.string,
	      form: PropTypes.string.isRequired,
	      formKey: PropTypes.string,
	      getFormState: PropTypes.func,
	      touchOnBlur: PropTypes.bool,
	      touchOnChange: PropTypes.bool
	    };
	    ReduxFormConnector.defaultProps = {
	      reduxMountPoint: 'form',
	      getFormState: function getFormState(state, reduxMountPoint) {
	        return state[reduxMountPoint];
	      }
	    };
	    return ReduxFormConnector;
	  };
	};

	exports.default = createReduxFormConnector;

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _getValue = __webpack_require__(10);

	var _getValue2 = _interopRequireDefault(_getValue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var createOnBlur = function createOnBlur(name, blur, isReactNative, afterBlur) {
	  return function (event) {
	    var value = (0, _getValue2.default)(event, isReactNative);
	    blur(name, value);
	    if (afterBlur) {
	      afterBlur(name, value);
	    }
	  };
	};
	exports.default = createOnBlur;

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _getValue = __webpack_require__(10);

	var _getValue2 = _interopRequireDefault(_getValue);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var createOnChange = function createOnChange(name, change, isReactNative) {
	  return function (event) {
	    return change(name, (0, _getValue2.default)(event, isReactNative));
	  };
	};
	exports.default = createOnChange;

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _createOnDragStart = __webpack_require__(9);

	var createOnDrop = function createOnDrop(name, change) {
	  return function (event) {
	    change(name, event.dataTransfer.getData(_createOnDragStart.dataKey));
	  };
	};
	exports.default = createOnDrop;

/***/ },
/* 32 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;
	var createOnFocus = function createOnFocus(name, focus) {
	  return function () {
	    return focus(name);
	  };
	};
	exports.default = createOnFocus;

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _silenceEvent = __webpack_require__(12);

	var _silenceEvent2 = _interopRequireDefault(_silenceEvent);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var silenceEvents = function silenceEvents(fn) {
	  return function (event) {
	    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	      args[_key - 1] = arguments[_key];
	    }

	    return (0, _silenceEvent2.default)(event) ? fn.apply(undefined, args) : fn.apply(undefined, [event].concat(args));
	  };
	};

	exports.default = silenceEvents;

/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _isPromise = __webpack_require__(6);

	var _isPromise2 = _interopRequireDefault(_isPromise);

	var _isValid = __webpack_require__(2);

	var _isValid2 = _interopRequireDefault(_isValid);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var handleSubmit = function handleSubmit(submit, values, props, asyncValidate) {
	  var dispatch = props.dispatch;
	  var fields = props.fields;
	  var startSubmit = props.startSubmit;
	  var stopSubmit = props.stopSubmit;
	  var submitFailed = props.submitFailed;
	  var returnRejectedSubmitPromise = props.returnRejectedSubmitPromise;
	  var touch = props.touch;
	  var validate = props.validate;

	  var syncErrors = validate(values, props);
	  touch.apply(undefined, fields); // touch all fields
	  if ((0, _isValid2.default)(syncErrors)) {
	    var doSubmit = function doSubmit() {
	      var result = submit(values, dispatch);
	      if ((0, _isPromise2.default)(result)) {
	        startSubmit();
	        return result.then(function (submitResult) {
	          stopSubmit();
	          return submitResult;
	        }, function (submitError) {
	          stopSubmit(submitError);
	          if (returnRejectedSubmitPromise) {
	            return Promise.reject(submitError);
	          }
	        });
	      }
	      return result;
	    };
	    var asyncValidateResult = asyncValidate();
	    return (0, _isPromise2.default)(asyncValidateResult) ?
	    // asyncValidateResult will be rejected if async validation failed
	    asyncValidateResult.then(doSubmit, function () {
	      submitFailed();
	      return returnRejectedSubmitPromise ? Promise.reject() : Promise.resolve();
	    }) : doSubmit(); // no async validation, so submit
	  }
	  submitFailed();

	  if (returnRejectedSubmitPromise) {
	    return Promise.reject(syncErrors);
	  }
	};

	exports.default = handleSubmit;

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _fieldValue = __webpack_require__(1);

	var makeEntry = function makeEntry(value) {
	  return (0, _fieldValue.makeFieldValue)(value === undefined ? {} : { initial: value, value: value });
	};

	/**
	 * Sets the initial values into the state and returns a new copy of the state
	 */
	var initializeState = function initializeState(values, fields) {
	  var state = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

	  if (!fields) {
	    throw new Error('fields must be passed when initializing state');
	  }
	  if (!values || !fields.length) {
	    return state;
	  }
	  var initializeField = function initializeField(path, src, dest) {
	    var dotIndex = path.indexOf('.');
	    if (dotIndex === 0) {
	      return initializeField(path.substring(1), src, dest);
	    }
	    var openIndex = path.indexOf('[');
	    var closeIndex = path.indexOf(']');
	    var result = _extends({}, dest) || {};
	    if (dotIndex >= 0 && (openIndex < 0 || dotIndex < openIndex)) {
	      // is dot notation
	      var key = path.substring(0, dotIndex);
	      result[key] = src[key] && initializeField(path.substring(dotIndex + 1), src[key], result[key] || {});
	    } else if (openIndex >= 0 && (dotIndex < 0 || openIndex < dotIndex)) {
	      (function () {
	        // is array notation
	        if (closeIndex < 0) {
	          throw new Error('found \'[\' but no \']\': \'' + path + '\'');
	        }
	        var key = path.substring(0, openIndex);
	        var srcArray = src[key];
	        var destArray = result[key];
	        var rest = path.substring(closeIndex + 1);
	        if (Array.isArray(srcArray)) {
	          if (rest.length) {
	            // need to keep recursing
	            result[key] = srcArray.map(function (srcValue, srcIndex) {
	              return initializeField(rest, srcValue, destArray && destArray[srcIndex]);
	            });
	          } else {
	            result[key] = srcArray.map(function (srcValue) {
	              return makeEntry(srcValue);
	            });
	          }
	        } else {
	          result[key] = [];
	        }
	      })();
	    } else {
	      result[path] = makeEntry(src && src[path]);
	    }
	    return result;
	  };
	  return fields.reduce(function (accumulator, field) {
	    return initializeField(field, values, accumulator);
	  }, _extends({}, state));
	};

	exports.default = initializeState;

/***/ },
/* 36 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports.default = isPristine;
	function isPristine(initial, data) {
	  if (initial === data) {
	    return true;
	  }
	  if (typeof initial === 'boolean' || typeof data === 'boolean') {
	    return initial === data;
	  } else if (initial instanceof Date && data instanceof Date) {
	    return initial.getTime() === data.getTime();
	  } else if (initial && typeof initial === 'object') {
	    if (!data || typeof data !== 'object') {
	      return false;
	    }
	    var initialKeys = Object.keys(initial);
	    var dataKeys = Object.keys(data);
	    if (initialKeys.length !== dataKeys.length) {
	      return false;
	    }
	    for (var index = 0; index < dataKeys.length; index++) {
	      var key = dataKeys[index];
	      if (!isPristine(initial[key], data[key])) {
	        return false;
	      }
	    }
	  } else if (initial || data) {
	    // allow '' to equate to undefined or null
	    return initial === data;
	  }
	  return true;
	}

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.default = normalizeFields;

	var _fieldValue = __webpack_require__(1);

	function extractKey(field) {
	  var dotIndex = field.indexOf('.');
	  var openIndex = field.indexOf('[');
	  var closeIndex = field.indexOf(']');

	  if (openIndex > 0 && closeIndex !== openIndex + 1) {
	    throw new Error('found [ not followed by ]');
	  }

	  var isArray = openIndex > 0 && (dotIndex < 0 || openIndex < dotIndex);
	  var key = undefined;
	  var nestedPath = undefined;

	  if (isArray) {
	    key = field.substring(0, openIndex);
	    nestedPath = field.substring(closeIndex + 1);

	    if (nestedPath[0] === '.') {
	      nestedPath = nestedPath.substring(1);
	    }
	  } else if (dotIndex > 0) {
	    key = field.substring(0, dotIndex);
	    nestedPath = field.substring(dotIndex + 1);
	  } else {
	    key = field;
	  }

	  return { isArray: isArray, key: key, nestedPath: nestedPath };
	}

	function normalizeField(field, fullFieldPath, state, previousState, values, previousValues, normalizers) {
	  if (field.isArray) {
	    if (field.nestedPath) {
	      var _ret = function () {
	        var array = state && state[field.key] || [];
	        var previousArray = previousState && previousState[field.key] || [];
	        var nestedField = extractKey(field.nestedPath);

	        return {
	          v: array.map(function (nestedState, i) {
	            nestedState[nestedField.key] = normalizeField(nestedField, fullFieldPath, nestedState, previousArray[i], values, previousValues, normalizers);

	            return nestedState;
	          })
	        };
	      }();

	      if (typeof _ret === "object") return _ret.v;
	    }

	    var _normalizer = normalizers[fullFieldPath];

	    var result = _normalizer(state && state[field.key], previousState && previousState[field.key], values, previousValues);
	    return field.isArray ? result && result.map(_fieldValue.makeFieldValue) : result;
	  } else if (field.nestedPath) {
	    var nestedState = state && state[field.key] || {};
	    var nestedField = extractKey(field.nestedPath);

	    nestedState[nestedField.key] = normalizeField(nestedField, fullFieldPath, nestedState, previousState && previousState[field.key], values, previousValues, normalizers);

	    return nestedState;
	  }

	  var finalField = state && state[field.key] || {};
	  var normalizer = normalizers[fullFieldPath];

	  finalField.value = normalizer(finalField.value, previousState && previousState[field.key] && previousState[field.key].value, values, previousValues);

	  return (0, _fieldValue.makeFieldValue)(finalField);
	}

	function normalizeFields(normalizers, state, previousState, values, previousValues) {
	  var newState = Object.keys(normalizers).reduce(function (accumulator, field) {
	    var extracted = extractKey(field);

	    accumulator[extracted.key] = normalizeField(extracted, field, state, previousState, values, previousValues, normalizers);

	    return accumulator;
	  }, {});

	  return _extends({}, state, newState);
	}

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createOnBlur = __webpack_require__(29);

	var _createOnBlur2 = _interopRequireDefault(_createOnBlur);

	var _createOnChange = __webpack_require__(30);

	var _createOnChange2 = _interopRequireDefault(_createOnChange);

	var _createOnDragStart = __webpack_require__(9);

	var _createOnDragStart2 = _interopRequireDefault(_createOnDragStart);

	var _createOnDrop = __webpack_require__(31);

	var _createOnDrop2 = _interopRequireDefault(_createOnDrop);

	var _createOnFocus = __webpack_require__(32);

	var _createOnFocus2 = _interopRequireDefault(_createOnFocus);

	var _silencePromise = __webpack_require__(43);

	var _silencePromise2 = _interopRequireDefault(_silencePromise);

	var _read = __webpack_require__(16);

	var _read2 = _interopRequireDefault(_read);

	var _updateField = __webpack_require__(44);

	var _updateField2 = _interopRequireDefault(_updateField);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getSuffix(input, closeIndex) {
	  var suffix = input.substring(closeIndex + 1);
	  if (suffix[0] === '.') {
	    suffix = suffix.substring(1);
	  }
	  return suffix;
	}

	var getNextKey = function getNextKey(path) {
	  var dotIndex = path.indexOf('.');
	  var openIndex = path.indexOf('[');
	  if (openIndex > 0 && (dotIndex < 0 || openIndex < dotIndex)) {
	    return path.substring(0, openIndex);
	  }
	  return dotIndex > 0 ? path.substring(0, dotIndex) : path;
	};

	var readField = function readField(state, fieldName) {
	  var pathToHere = arguments.length <= 2 || arguments[2] === undefined ? '' : arguments[2];
	  var fields = arguments[3];
	  var syncErrors = arguments[4];
	  var asyncValidate = arguments[5];
	  var isReactNative = arguments[6];
	  var props = arguments[7];
	  var callback = arguments.length <= 8 || arguments[8] === undefined ? function () {
	    return null;
	  } : arguments[8];
	  var prefix = arguments.length <= 9 || arguments[9] === undefined ? '' : arguments[9];
	  var asyncBlurFields = props.asyncBlurFields;
	  var blur = props.blur;
	  var change = props.change;
	  var focus = props.focus;
	  var form = props.form;
	  var initialValues = props.initialValues;
	  var readonly = props.readonly;
	  var addArrayValue = props.addArrayValue;
	  var removeArrayValue = props.removeArrayValue;
	  var swapArrayValues = props.swapArrayValues;

	  var dotIndex = fieldName.indexOf('.');
	  var openIndex = fieldName.indexOf('[');
	  var closeIndex = fieldName.indexOf(']');
	  if (openIndex > 0 && closeIndex !== openIndex + 1) {
	    throw new Error('found [ not followed by ]');
	  }

	  if (openIndex > 0 && (dotIndex < 0 || openIndex < dotIndex)) {
	    var _ret = function () {
	      // array field
	      var key = fieldName.substring(0, openIndex);
	      var rest = getSuffix(fieldName, closeIndex);
	      var stateArray = state && state[key] || [];
	      var fullPrefix = prefix + fieldName.substring(0, closeIndex + 1);
	      var subfields = props.fields.reduce(function (accumulator, field) {
	        if (field.indexOf(fullPrefix) === 0) {
	          accumulator.push(field);
	        }
	        return accumulator;
	      }, []).map(function (field) {
	        return getSuffix(field, prefix.length + closeIndex);
	      });
	      var addMethods = function addMethods(dest) {
	        Object.defineProperty(dest, 'addField', {
	          value: function value(_value, index) {
	            return addArrayValue(pathToHere + key, _value, index, subfields);
	          }
	        });
	        Object.defineProperty(dest, 'removeField', {
	          value: function value(index) {
	            return removeArrayValue(pathToHere + key, index);
	          }
	        });
	        Object.defineProperty(dest, 'swapFields', {
	          value: function value(indexA, indexB) {
	            return swapArrayValues(pathToHere + key, indexA, indexB);
	          }
	        });
	        return dest;
	      };
	      if (!fields[key] || fields[key].length !== stateArray.length) {
	        fields[key] = fields[key] ? [].concat(fields[key]) : [];
	        addMethods(fields[key]);
	      }
	      var fieldArray = fields[key];
	      var changed = false;
	      stateArray.forEach(function (fieldState, index) {
	        if (rest && !fieldArray[index]) {
	          fieldArray[index] = {};
	          changed = true;
	        }
	        var dest = rest ? fieldArray[index] : {};
	        var nextPath = '' + pathToHere + key + '[' + index + ']' + (rest ? '.' : '');
	        var nextPrefix = '' + prefix + key + '[]' + (rest ? '.' : '');

	        var result = readField(fieldState, rest, nextPath, dest, syncErrors, asyncValidate, isReactNative, props, callback, nextPrefix);
	        if (!rest && fieldArray[index] !== result) {
	          // if nothing after [] in field name, assign directly to array
	          fieldArray[index] = result;
	          changed = true;
	        }
	      });
	      if (fieldArray.length > stateArray.length) {
	        // remove extra items that aren't in state array
	        fieldArray.splice(stateArray.length, fieldArray.length - stateArray.length);
	      }
	      return {
	        v: changed ? addMethods([].concat(fieldArray)) : fieldArray
	      };
	    }();

	    if (typeof _ret === "object") return _ret.v;
	  }
	  if (dotIndex > 0) {
	    // subobject field
	    var key = fieldName.substring(0, dotIndex);
	    var rest = fieldName.substring(dotIndex + 1);
	    var subobject = fields[key] || {};
	    var nextPath = pathToHere + key + '.';
	    var nextKey = getNextKey(rest);
	    var previous = subobject[nextKey];
	    var result = readField(state[key] || {}, rest, nextPath, subobject, syncErrors, asyncValidate, isReactNative, props, callback, nextPath);
	    if (result !== previous) {
	      var _extends2;

	      subobject = _extends({}, subobject, (_extends2 = {}, _extends2[nextKey] = result, _extends2));
	    }
	    fields[key] = subobject;
	    return subobject;
	  }
	  var name = pathToHere + fieldName;
	  var field = fields[fieldName] || {};
	  if (field.name !== name) {
	    var onChange = (0, _createOnChange2.default)(name, change, isReactNative);
	    var initialFormValue = (0, _read2.default)(name + '.initial', form);
	    var initialValue = initialFormValue || (0, _read2.default)(name, initialValues);
	    field.name = name;
	    field.defaultChecked = initialValue === true;
	    field.defaultValue = initialValue;
	    field.initialValue = initialValue;
	    if (!readonly) {
	      field.onBlur = (0, _createOnBlur2.default)(name, blur, isReactNative, ~asyncBlurFields.indexOf(name) && function (blurName, blurValue) {
	        return (0, _silencePromise2.default)(asyncValidate(blurName, blurValue));
	      });
	      field.onChange = onChange;
	      field.onDragStart = (0, _createOnDragStart2.default)(name, function () {
	        return field.value;
	      });
	      field.onDrop = (0, _createOnDrop2.default)(name, change);
	      field.onFocus = (0, _createOnFocus2.default)(name, focus);
	      field.onUpdate = onChange; // alias to support belle. https://github.com/nikgraf/belle/issues/58
	    }
	    field.valid = true;
	    field.invalid = false;
	    Object.defineProperty(field, '_isField', { value: true });
	  }

	  var fieldState = (fieldName ? state[fieldName] : state) || {};
	  var syncError = (0, _read2.default)(name, syncErrors);
	  var updated = (0, _updateField2.default)(field, fieldState, name === form._active, syncError);
	  if (fieldName || fields[fieldName] !== updated) {
	    fields[fieldName] = updated;
	  }
	  callback(updated);
	  return updated;
	};

	exports.default = readField;

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _readField = __webpack_require__(38);

	var _readField2 = _interopRequireDefault(_readField);

	var _write = __webpack_require__(18);

	var _write2 = _interopRequireDefault(_write);

	var _getValues = __webpack_require__(14);

	var _getValues2 = _interopRequireDefault(_getValues);

	var _removeField = __webpack_require__(40);

	var _removeField2 = _interopRequireDefault(_removeField);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Reads props and generates (or updates) field structure
	 */
	var readFields = function readFields(props, previousProps, myFields, asyncValidate, isReactNative) {
	  var fields = props.fields;
	  var form = props.form;
	  var validate = props.validate;

	  var previousFields = previousProps.fields;
	  var values = (0, _getValues2.default)(fields, form);
	  var syncErrors = validate(values, props);
	  var errors = {};
	  var formError = syncErrors._error || form._error;
	  var allValid = !formError;
	  var allPristine = true;
	  var tally = function tally(field) {
	    if (field.error) {
	      errors = (0, _write2.default)(field.name, field.error, errors);
	      allValid = false;
	    }
	    if (field.dirty) {
	      allPristine = false;
	    }
	  };
	  var fieldObjects = previousFields ? previousFields.reduce(function (accumulator, previousField) {
	    return ~fields.indexOf(previousField) ? accumulator : (0, _removeField2.default)(accumulator, previousField);
	  }, _extends({}, myFields)) : _extends({}, myFields);
	  fields.forEach(function (name) {
	    (0, _readField2.default)(form, name, undefined, fieldObjects, syncErrors, asyncValidate, isReactNative, props, tally);
	  });
	  Object.defineProperty(fieldObjects, '_meta', {
	    value: {
	      allPristine: allPristine,
	      allValid: allValid,
	      values: values,
	      errors: errors,
	      formError: formError
	    }
	  });
	  return fieldObjects;
	};
	exports.default = readFields;

/***/ },
/* 40 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var without = function without(object, key) {
	  var copy = _extends({}, object);
	  delete copy[key];
	  return copy;
	};

	var removeField = function removeField(fields, path) {
	  var dotIndex = path.indexOf('.');
	  var openIndex = path.indexOf('[');
	  var closeIndex = path.indexOf(']');
	  if (openIndex > 0 && closeIndex !== openIndex + 1) {
	    throw new Error('found [ not followed by ]');
	  }
	  if (openIndex > 0 && (dotIndex < 0 || openIndex < dotIndex)) {
	    var _ret = function () {
	      // array field
	      var key = path.substring(0, openIndex);
	      if (!Array.isArray(fields[key])) {
	        return {
	          v: without(fields, key)
	        };
	      }
	      var rest = path.substring(closeIndex + 1);
	      if (rest[0] === '.') {
	        rest = rest.substring(1);
	      }
	      if (rest) {
	        var _ret2 = function () {
	          var _extends2;

	          var copy = [];
	          fields[key].forEach(function (item, index) {
	            var result = removeField(item, rest);
	            if (Object.keys(result).length) {
	              copy[index] = result;
	            }
	          });
	          return {
	            v: {
	              v: copy.length ? _extends({}, fields, (_extends2 = {}, _extends2[key] = copy, _extends2)) : without(fields, key)
	            }
	          };
	        }();

	        if (typeof _ret2 === "object") return _ret2.v;
	      }
	      return {
	        v: without(fields, key)
	      };
	    }();

	    if (typeof _ret === "object") return _ret.v;
	  }
	  if (dotIndex > 0) {
	    var _extends3;

	    // subobject field
	    var key = path.substring(0, dotIndex);
	    var rest = path.substring(dotIndex + 1);
	    if (!fields[key]) {
	      return fields;
	    }
	    var result = removeField(fields[key], rest);
	    return Object.keys(result).length ? _extends({}, fields, (_extends3 = {}, _extends3[key] = removeField(fields[key], rest), _extends3)) : without(fields, key);
	  }
	  return without(fields, path);
	};

	exports.default = removeField;

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _fieldValue = __webpack_require__(1);

	var reset = function reset(value) {
	  return (0, _fieldValue.makeFieldValue)(value === undefined || value && value.initial === undefined ? {} : { initial: value.initial, value: value.initial });
	};

	/**
	 * Sets the initial values into the state and returns a new copy of the state
	 */
	var resetState = function resetState(values) {
	  return values ? Object.keys(values).reduce(function (accumulator, key) {
	    var value = values[key];
	    if (Array.isArray(value)) {
	      accumulator[key] = value.map(function (item) {
	        return (0, _fieldValue.isFieldValue)(item) ? reset(item) : resetState(item);
	      });
	    } else if (value) {
	      if ((0, _fieldValue.isFieldValue)(value)) {
	        accumulator[key] = reset(value);
	      } else if (typeof value === 'object' && value !== null) {
	        accumulator[key] = resetState(value);
	      } else {
	        accumulator[key] = value;
	      }
	    }
	    return accumulator;
	  }, {}) : values;
	};

	exports.default = resetState;

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _fieldValue = __webpack_require__(1);

	var isMetaKey = function isMetaKey(key) {
	  return key[0] === '_';
	};

	/**
	 * Sets an error on a field deep in the tree, returning a new copy of the state
	 */
	var setErrors = function setErrors(state, errors, destKey) {
	  var clear = function clear() {
	    if (Array.isArray(state)) {
	      return state.map(function (stateItem, index) {
	        return setErrors(stateItem, errors && errors[index], destKey);
	      });
	    }
	    if (state && typeof state === 'object') {
	      var result = Object.keys(state).reduce(function (accumulator, key) {
	        var _extends2;

	        return isMetaKey(key) ? accumulator : _extends({}, accumulator, (_extends2 = {}, _extends2[key] = setErrors(state[key], errors && errors[key], destKey), _extends2));
	      }, state);
	      if ((0, _fieldValue.isFieldValue)(state)) {
	        (0, _fieldValue.makeFieldValue)(result);
	      }
	      return result;
	    }
	    return (0, _fieldValue.makeFieldValue)(state);
	  };
	  if (!errors) {
	    if (!state) {
	      return state;
	    }
	    if (state[destKey]) {
	      var copy = _extends({}, state);
	      delete copy[destKey];
	      return (0, _fieldValue.makeFieldValue)(copy);
	    }
	    return clear();
	  }
	  if (typeof errors === 'string') {
	    var _extends3;

	    return (0, _fieldValue.makeFieldValue)(_extends({}, state, (_extends3 = {}, _extends3[destKey] = errors, _extends3)));
	  }
	  if (Array.isArray(errors)) {
	    if (!state || Array.isArray(state)) {
	      var _ret = function () {
	        var copy = (state || []).map(function (stateItem, index) {
	          return setErrors(stateItem, errors[index], destKey);
	        });
	        errors.forEach(function (errorItem, index) {
	          return copy[index] = setErrors(copy[index], errorItem, destKey);
	        });
	        return {
	          v: copy
	        };
	      }();

	      if (typeof _ret === "object") return _ret.v;
	    }
	    return setErrors(state, errors[0], destKey); // use first error
	  }
	  if ((0, _fieldValue.isFieldValue)(state)) {
	    var _extends4;

	    return (0, _fieldValue.makeFieldValue)(_extends({}, state, (_extends4 = {}, _extends4[destKey] = errors, _extends4)));
	  }
	  var errorKeys = Object.keys(errors);
	  if (!errorKeys.length && !state) {
	    return state;
	  }
	  return errorKeys.reduce(function (accumulator, key) {
	    var _extends5;

	    return isMetaKey(key) ? accumulator : _extends({}, accumulator, (_extends5 = {}, _extends5[key] = setErrors(state && state[key], errors[key], destKey), _extends5));
	  }, clear() || {});
	};

	exports.default = setErrors;

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _isPromise = __webpack_require__(6);

	var _isPromise2 = _interopRequireDefault(_isPromise);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var noop = function noop() {
	  return undefined;
	};

	var silencePromise = function silencePromise(promise) {
	  return (0, _isPromise2.default)(promise) ? promise.then(noop, noop) : promise;
	};

	exports.default = silencePromise;

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _isPristine = __webpack_require__(36);

	var _isPristine2 = _interopRequireDefault(_isPristine);

	var _isValid = __webpack_require__(2);

	var _isValid2 = _interopRequireDefault(_isValid);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * Updates a field object from the store values
	 */
	var updateField = function updateField(field, formField, active, syncError) {
	  var diff = {};

	  // update field value
	  if (field.value !== formField.value) {
	    diff.value = formField.value;
	    diff.checked = typeof formField.value === 'boolean' ? formField.value : undefined;
	  }

	  // update dirty/pristine
	  var pristine = (0, _isPristine2.default)(formField.value, formField.initial);
	  if (field.pristine !== pristine) {
	    diff.dirty = !pristine;
	    diff.pristine = pristine;
	  }

	  // update field error
	  var error = syncError || formField.submitError || formField.asyncError;
	  if (error !== field.error) {
	    diff.error = error;
	  }
	  var valid = (0, _isValid2.default)(error);
	  if (field.valid !== valid) {
	    diff.invalid = !valid;
	    diff.valid = valid;
	  }

	  if (active !== field.active) {
	    diff.active = active;
	  }
	  var touched = !!formField.touched;
	  if (touched !== field.touched) {
	    diff.touched = touched;
	  }
	  var visited = !!formField.visited;
	  if (visited !== field.visited) {
	    diff.visited = visited;
	  }

	  if ('initial' in formField && formField.initial !== field.initialValue) {
	    field.defaultChecked = formField.initial === true;
	    field.defaultValue = formField.initial;
	    field.initialValue = formField.initial;
	  }

	  return Object.keys(diff).length ? _extends({}, field, diff) : field;
	};
	exports.default = updateField;

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _redux = __webpack_require__(22);

	var wrapMapDispatchToProps = function wrapMapDispatchToProps(mapDispatchToProps, actionCreators) {
	  if (mapDispatchToProps) {
	    if (typeof mapDispatchToProps === 'function') {
	      if (mapDispatchToProps.length > 1) {
	        return function (dispatch, ownProps) {
	          return _extends({
	            dispatch: dispatch
	          }, mapDispatchToProps(dispatch, ownProps), (0, _redux.bindActionCreators)(actionCreators, dispatch));
	        };
	      }
	      return function (dispatch) {
	        return _extends({
	          dispatch: dispatch
	        }, mapDispatchToProps(dispatch), (0, _redux.bindActionCreators)(actionCreators, dispatch));
	      };
	    }
	    return function (dispatch) {
	      return _extends({
	        dispatch: dispatch
	      }, (0, _redux.bindActionCreators)(mapDispatchToProps, dispatch), (0, _redux.bindActionCreators)(actionCreators, dispatch));
	    };
	  }
	  return function (dispatch) {
	    return _extends({
	      dispatch: dispatch
	    }, (0, _redux.bindActionCreators)(actionCreators, dispatch));
	  };
	};

	exports.default = wrapMapDispatchToProps;

/***/ },
/* 46 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var wrapMapStateToProps = function wrapMapStateToProps(mapStateToProps, getForm) {
	  if (mapStateToProps) {
	    if (typeof mapStateToProps !== 'function') {
	      throw new Error('mapStateToProps must be a function');
	    }
	    if (mapStateToProps.length > 1) {
	      return function (state, ownProps) {
	        return _extends({}, mapStateToProps(state, ownProps), {
	          form: getForm(state)
	        });
	      };
	    }
	    return function (state) {
	      return _extends({}, mapStateToProps(state), {
	        form: getForm(state)
	      });
	    };
	  }
	  return function (state) {
	    return {
	      form: getForm(state)
	    };
	  };
	};

	exports.default = wrapMapStateToProps;

/***/ },
/* 47 */
/***/ function(module, exports) {

	var supportsArgumentsClass = (function(){
	  return Object.prototype.toString.call(arguments)
	})() == '[object Arguments]';

	exports = module.exports = supportsArgumentsClass ? supported : unsupported;

	exports.supported = supported;
	function supported(object) {
	  return Object.prototype.toString.call(object) == '[object Arguments]';
	};

	exports.unsupported = unsupported;
	function unsupported(object){
	  return object &&
	    typeof object == 'object' &&
	    typeof object.length == 'number' &&
	    Object.prototype.hasOwnProperty.call(object, 'callee') &&
	    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||
	    false;
	};


/***/ },
/* 48 */
/***/ function(module, exports) {

	exports = module.exports = typeof Object.keys === 'function'
	  ? Object.keys : shim;

	exports.shim = shim;
	function shim (obj) {
	  var keys = [];
	  for (var key in obj) keys.push(key);
	  return keys;
	}


/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var invariant = function(condition, format, a, b, c, d, e, f) {
	  if (true) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error(
	        'Minified exception occurred; use the non-minified dev environment ' +
	        'for the full error message and additional helpful warnings.'
	      );
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(
	        format.replace(/%s/g, function() { return args[argIndex++]; })
	      );
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	};

	module.exports = invariant;


/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	var _deepEqual = __webpack_require__(19);

	var _deepEqual2 = _interopRequireDefault(_deepEqual);

	function intersects(array1, array2) {
	  return !!(array1 && array2 && array1.some(function (item) {
	    return ~array2.indexOf(item);
	  }));
	}

	var LazyCache = (function () {
	  function LazyCache(component, calculators) {
	    var _this = this;

	    _classCallCheck(this, LazyCache);

	    this.component = component;
	    this.allProps = [];
	    this.cache = Object.keys(calculators).reduce(function (accumulator, key) {
	      var _extends2;

	      var calculator = calculators[key];
	      var fn = calculator.fn;
	      var paramNames = calculator.params;
	      paramNames.forEach(function (param) {
	        if (! ~_this.allProps.indexOf(param)) {
	          _this.allProps.push(param);
	        }
	      });
	      return _extends({}, accumulator, (_extends2 = {}, _extends2[key] = {
	        value: undefined,
	        props: paramNames,
	        fn: fn
	      }, _extends2));
	    }, {});
	  }

	  LazyCache.prototype.get = function get(key) {
	    var component = this.component;
	    var _cache$key = this.cache[key];
	    var value = _cache$key.value;
	    var fn = _cache$key.fn;
	    var props = _cache$key.props;

	    if (value !== undefined) {
	      return value;
	    }
	    var params = props.map(function (prop) {
	      return component.props[prop];
	    });
	    var result = fn.apply(undefined, params);
	    this.cache[key].value = result;
	    return result;
	  };

	  LazyCache.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    var _this2 = this;

	    var component = this.component;

	    var diffProps = [];
	    this.allProps.forEach(function (prop) {
	      if (!_deepEqual2['default'](component.props[prop], nextProps[prop])) {
	        diffProps.push(prop);
	      }
	    });
	    if (diffProps.length) {
	      Object.keys(this.cache).forEach(function (key) {
	        if (intersects(diffProps, _this2.cache[key].props)) {
	          delete _this2.cache[key].value; // uncache value
	        }
	      });
	    }
	  };

	  return LazyCache;
	})();

	exports['default'] = LazyCache;
	module.exports = exports['default'];

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(50);


/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports["default"] = undefined;

	var _react = __webpack_require__(3);

	var _storeShape = __webpack_require__(21);

	var _storeShape2 = _interopRequireDefault(_storeShape);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var didWarnAboutReceivingStore = false;
	function warnAboutReceivingStore() {
	  if (didWarnAboutReceivingStore) {
	    return;
	  }
	  didWarnAboutReceivingStore = true;

	  /* eslint-disable no-console */
	  if (typeof console !== 'undefined' && typeof console.error === 'function') {
	    console.error('<Provider> does not support changing `store` on the fly. ' + 'It is most likely that you see this error because you updated to ' + 'Redux 2.x and React Redux 2.x which no longer hot reload reducers ' + 'automatically. See https://github.com/rackt/react-redux/releases/' + 'tag/v2.0.0 for the migration instructions.');
	  }
	  /* eslint-disable no-console */
	}

	var Provider = function (_Component) {
	  _inherits(Provider, _Component);

	  Provider.prototype.getChildContext = function getChildContext() {
	    return { store: this.store };
	  };

	  function Provider(props, context) {
	    _classCallCheck(this, Provider);

	    var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));

	    _this.store = props.store;
	    return _this;
	  }

	  Provider.prototype.render = function render() {
	    var children = this.props.children;

	    return _react.Children.only(children);
	  };

	  return Provider;
	}(_react.Component);

	exports["default"] = Provider;

	if (true) {
	  Provider.prototype.componentWillReceiveProps = function (nextProps) {
	    var store = this.store;
	    var nextStore = nextProps.store;

	    if (store !== nextStore) {
	      warnAboutReceivingStore();
	    }
	  };
	}

	Provider.propTypes = {
	  store: _storeShape2["default"].isRequired,
	  children: _react.PropTypes.element.isRequired
	};
	Provider.childContextTypes = {
	  store: _storeShape2["default"].isRequired
	};

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.__esModule = true;
	exports["default"] = connect;

	var _react = __webpack_require__(3);

	var _storeShape = __webpack_require__(21);

	var _storeShape2 = _interopRequireDefault(_storeShape);

	var _shallowEqual = __webpack_require__(55);

	var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

	var _wrapActionCreators = __webpack_require__(56);

	var _wrapActionCreators2 = _interopRequireDefault(_wrapActionCreators);

	var _isPlainObject = __webpack_require__(59);

	var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

	var _hoistNonReactStatics = __webpack_require__(20);

	var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

	var _invariant = __webpack_require__(49);

	var _invariant2 = _interopRequireDefault(_invariant);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var defaultMapStateToProps = function defaultMapStateToProps(state) {
	  return {};
	}; // eslint-disable-line no-unused-vars
	var defaultMapDispatchToProps = function defaultMapDispatchToProps(dispatch) {
	  return { dispatch: dispatch };
	};
	var defaultMergeProps = function defaultMergeProps(stateProps, dispatchProps, parentProps) {
	  return _extends({}, parentProps, stateProps, dispatchProps);
	};

	function getDisplayName(WrappedComponent) {
	  return WrappedComponent.displayName || WrappedComponent.name || 'Component';
	}

	function checkStateShape(stateProps, dispatch) {
	  (0, _invariant2["default"])((0, _isPlainObject2["default"])(stateProps), '`%sToProps` must return an object. Instead received %s.', dispatch ? 'mapDispatch' : 'mapState', stateProps);
	  return stateProps;
	}

	// Helps track hot reloading.
	var nextVersion = 0;

	function connect(mapStateToProps, mapDispatchToProps, mergeProps) {
	  var options = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];

	  var shouldSubscribe = Boolean(mapStateToProps);
	  var mapState = mapStateToProps || defaultMapStateToProps;
	  var mapDispatch = (0, _isPlainObject2["default"])(mapDispatchToProps) ? (0, _wrapActionCreators2["default"])(mapDispatchToProps) : mapDispatchToProps || defaultMapDispatchToProps;

	  var finalMergeProps = mergeProps || defaultMergeProps;
	  var checkMergedEquals = finalMergeProps !== defaultMergeProps;
	  var _options$pure = options.pure;
	  var pure = _options$pure === undefined ? true : _options$pure;
	  var _options$withRef = options.withRef;
	  var withRef = _options$withRef === undefined ? false : _options$withRef;

	  // Helps track hot reloading.

	  var version = nextVersion++;

	  function computeMergedProps(stateProps, dispatchProps, parentProps) {
	    var mergedProps = finalMergeProps(stateProps, dispatchProps, parentProps);
	    (0, _invariant2["default"])((0, _isPlainObject2["default"])(mergedProps), '`mergeProps` must return an object. Instead received %s.', mergedProps);
	    return mergedProps;
	  }

	  return function wrapWithConnect(WrappedComponent) {
	    var Connect = function (_Component) {
	      _inherits(Connect, _Component);

	      Connect.prototype.shouldComponentUpdate = function shouldComponentUpdate() {
	        return !pure || this.haveOwnPropsChanged || this.hasStoreStateChanged;
	      };

	      function Connect(props, context) {
	        _classCallCheck(this, Connect);

	        var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));

	        _this.version = version;
	        _this.store = props.store || context.store;

	        (0, _invariant2["default"])(_this.store, 'Could not find "store" in either the context or ' + ('props of "' + _this.constructor.displayName + '". ') + 'Either wrap the root component in a <Provider>, ' + ('or explicitly pass "store" as a prop to "' + _this.constructor.displayName + '".'));

	        var storeState = _this.store.getState();
	        _this.state = { storeState: storeState };
	        _this.clearCache();
	        return _this;
	      }

	      Connect.prototype.computeStateProps = function computeStateProps(store, props) {
	        if (!this.finalMapStateToProps) {
	          return this.configureFinalMapState(store, props);
	        }

	        var state = store.getState();
	        var stateProps = this.doStatePropsDependOnOwnProps ? this.finalMapStateToProps(state, props) : this.finalMapStateToProps(state);

	        return checkStateShape(stateProps);
	      };

	      Connect.prototype.configureFinalMapState = function configureFinalMapState(store, props) {
	        var mappedState = mapState(store.getState(), props);
	        var isFactory = typeof mappedState === 'function';

	        this.finalMapStateToProps = isFactory ? mappedState : mapState;
	        this.doStatePropsDependOnOwnProps = this.finalMapStateToProps.length !== 1;

	        return isFactory ? this.computeStateProps(store, props) : checkStateShape(mappedState);
	      };

	      Connect.prototype.computeDispatchProps = function computeDispatchProps(store, props) {
	        if (!this.finalMapDispatchToProps) {
	          return this.configureFinalMapDispatch(store, props);
	        }

	        var dispatch = store.dispatch;

	        var dispatchProps = this.doDispatchPropsDependOnOwnProps ? this.finalMapDispatchToProps(dispatch, props) : this.finalMapDispatchToProps(dispatch);

	        return checkStateShape(dispatchProps, true);
	      };

	      Connect.prototype.configureFinalMapDispatch = function configureFinalMapDispatch(store, props) {
	        var mappedDispatch = mapDispatch(store.dispatch, props);
	        var isFactory = typeof mappedDispatch === 'function';

	        this.finalMapDispatchToProps = isFactory ? mappedDispatch : mapDispatch;
	        this.doDispatchPropsDependOnOwnProps = this.finalMapDispatchToProps.length !== 1;

	        return isFactory ? this.computeDispatchProps(store, props) : checkStateShape(mappedDispatch, true);
	      };

	      Connect.prototype.updateStatePropsIfNeeded = function updateStatePropsIfNeeded() {
	        var nextStateProps = this.computeStateProps(this.store, this.props);
	        if (this.stateProps && (0, _shallowEqual2["default"])(nextStateProps, this.stateProps)) {
	          return false;
	        }

	        this.stateProps = nextStateProps;
	        return true;
	      };

	      Connect.prototype.updateDispatchPropsIfNeeded = function updateDispatchPropsIfNeeded() {
	        var nextDispatchProps = this.computeDispatchProps(this.store, this.props);
	        if (this.dispatchProps && (0, _shallowEqual2["default"])(nextDispatchProps, this.dispatchProps)) {
	          return false;
	        }

	        this.dispatchProps = nextDispatchProps;
	        return true;
	      };

	      Connect.prototype.updateMergedPropsIfNeeded = function updateMergedPropsIfNeeded() {
	        var nextMergedProps = computeMergedProps(this.stateProps, this.dispatchProps, this.props);
	        if (this.mergedProps && checkMergedEquals && (0, _shallowEqual2["default"])(nextMergedProps, this.mergedProps)) {
	          return false;
	        }

	        this.mergedProps = nextMergedProps;
	        return true;
	      };

	      Connect.prototype.isSubscribed = function isSubscribed() {
	        return typeof this.unsubscribe === 'function';
	      };

	      Connect.prototype.trySubscribe = function trySubscribe() {
	        if (shouldSubscribe && !this.unsubscribe) {
	          this.unsubscribe = this.store.subscribe(this.handleChange.bind(this));
	          this.handleChange();
	        }
	      };

	      Connect.prototype.tryUnsubscribe = function tryUnsubscribe() {
	        if (this.unsubscribe) {
	          this.unsubscribe();
	          this.unsubscribe = null;
	        }
	      };

	      Connect.prototype.componentDidMount = function componentDidMount() {
	        this.trySubscribe();
	      };

	      Connect.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	        if (!pure || !(0, _shallowEqual2["default"])(nextProps, this.props)) {
	          this.haveOwnPropsChanged = true;
	        }
	      };

	      Connect.prototype.componentWillUnmount = function componentWillUnmount() {
	        this.tryUnsubscribe();
	        this.clearCache();
	      };

	      Connect.prototype.clearCache = function clearCache() {
	        this.dispatchProps = null;
	        this.stateProps = null;
	        this.mergedProps = null;
	        this.haveOwnPropsChanged = true;
	        this.hasStoreStateChanged = true;
	        this.renderedElement = null;
	        this.finalMapDispatchToProps = null;
	        this.finalMapStateToProps = null;
	      };

	      Connect.prototype.handleChange = function handleChange() {
	        if (!this.unsubscribe) {
	          return;
	        }

	        var prevStoreState = this.state.storeState;
	        var storeState = this.store.getState();

	        if (!pure || prevStoreState !== storeState) {
	          this.hasStoreStateChanged = true;
	          this.setState({ storeState: storeState });
	        }
	      };

	      Connect.prototype.getWrappedInstance = function getWrappedInstance() {
	        (0, _invariant2["default"])(withRef, 'To access the wrapped instance, you need to specify ' + '{ withRef: true } as the fourth argument of the connect() call.');

	        return this.refs.wrappedInstance;
	      };

	      Connect.prototype.render = function render() {
	        var haveOwnPropsChanged = this.haveOwnPropsChanged;
	        var hasStoreStateChanged = this.hasStoreStateChanged;
	        var renderedElement = this.renderedElement;

	        this.haveOwnPropsChanged = false;
	        this.hasStoreStateChanged = false;

	        var shouldUpdateStateProps = true;
	        var shouldUpdateDispatchProps = true;
	        if (pure && renderedElement) {
	          shouldUpdateStateProps = hasStoreStateChanged || haveOwnPropsChanged && this.doStatePropsDependOnOwnProps;
	          shouldUpdateDispatchProps = haveOwnPropsChanged && this.doDispatchPropsDependOnOwnProps;
	        }

	        var haveStatePropsChanged = false;
	        var haveDispatchPropsChanged = false;
	        if (shouldUpdateStateProps) {
	          haveStatePropsChanged = this.updateStatePropsIfNeeded();
	        }
	        if (shouldUpdateDispatchProps) {
	          haveDispatchPropsChanged = this.updateDispatchPropsIfNeeded();
	        }

	        var haveMergedPropsChanged = true;
	        if (haveStatePropsChanged || haveDispatchPropsChanged || haveOwnPropsChanged) {
	          haveMergedPropsChanged = this.updateMergedPropsIfNeeded();
	        } else {
	          haveMergedPropsChanged = false;
	        }

	        if (!haveMergedPropsChanged && renderedElement) {
	          return renderedElement;
	        }

	        if (withRef) {
	          this.renderedElement = (0, _react.createElement)(WrappedComponent, _extends({}, this.mergedProps, {
	            ref: 'wrappedInstance'
	          }));
	        } else {
	          this.renderedElement = (0, _react.createElement)(WrappedComponent, this.mergedProps);
	        }

	        return this.renderedElement;
	      };

	      return Connect;
	    }(_react.Component);

	    Connect.displayName = 'Connect(' + getDisplayName(WrappedComponent) + ')';
	    Connect.WrappedComponent = WrappedComponent;
	    Connect.contextTypes = {
	      store: _storeShape2["default"]
	    };
	    Connect.propTypes = {
	      store: _storeShape2["default"]
	    };

	    if (true) {
	      Connect.prototype.componentWillUpdate = function componentWillUpdate() {
	        if (this.version === version) {
	          return;
	        }

	        // We are hot reloading!
	        this.version = version;
	        this.trySubscribe();
	        this.clearCache();
	      };
	    }

	    return (0, _hoistNonReactStatics2["default"])(Connect, WrappedComponent);
	  };
	}

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.connect = exports.Provider = undefined;

	var _Provider = __webpack_require__(52);

	var _Provider2 = _interopRequireDefault(_Provider);

	var _connect = __webpack_require__(53);

	var _connect2 = _interopRequireDefault(_connect);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

	exports.Provider = _Provider2["default"];
	exports.connect = _connect2["default"];

/***/ },
/* 55 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;
	exports["default"] = shallowEqual;
	function shallowEqual(objA, objB) {
	  if (objA === objB) {
	    return true;
	  }

	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);

	  if (keysA.length !== keysB.length) {
	    return false;
	  }

	  // Test for A's keys different from B.
	  var hasOwn = Object.prototype.hasOwnProperty;
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwn.call(objB, keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {
	      return false;
	    }
	  }

	  return true;
	}

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports["default"] = wrapActionCreators;

	var _redux = __webpack_require__(22);

	function wrapActionCreators(actionCreators) {
	  return function (dispatch) {
	    return (0, _redux.bindActionCreators)(actionCreators, dispatch);
	  };
	}

/***/ },
/* 57 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is a host object in IE < 9.
	 *
	 * @private
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
	 */
	function isHostObject(value) {
	  // Many host objects are `Object` objects that can coerce to strings
	  // despite having improperly defined `toString` methods.
	  var result = false;
	  if (value != null && typeof value.toString != 'function') {
	    try {
	      result = !!(value + '');
	    } catch (e) {}
	  }
	  return result;
	}

	module.exports = isHostObject;


/***/ },
/* 58 */
/***/ function(module, exports) {

	/**
	 * Checks if `value` is object-like. A value is object-like if it's not `null`
	 * and has a `typeof` result of "object".
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
	 * @example
	 *
	 * _.isObjectLike({});
	 * // => true
	 *
	 * _.isObjectLike([1, 2, 3]);
	 * // => true
	 *
	 * _.isObjectLike(_.noop);
	 * // => false
	 *
	 * _.isObjectLike(null);
	 * // => false
	 */
	function isObjectLike(value) {
	  return !!value && typeof value == 'object';
	}

	module.exports = isObjectLike;


/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	var isHostObject = __webpack_require__(57),
	    isObjectLike = __webpack_require__(58);

	/** `Object#toString` result references. */
	var objectTag = '[object Object]';

	/** Used for built-in method references. */
	var objectProto = Object.prototype;

	/** Used to resolve the decompiled source of functions. */
	var funcToString = Function.prototype.toString;

	/** Used to infer the `Object` constructor. */
	var objectCtorString = funcToString.call(Object);

	/**
	 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
	 * of values.
	 */
	var objectToString = objectProto.toString;

	/** Built-in value references. */
	var getPrototypeOf = Object.getPrototypeOf;

	/**
	 * Checks if `value` is a plain object, that is, an object created by the
	 * `Object` constructor or one with a `[[Prototype]]` of `null`.
	 *
	 * @static
	 * @memberOf _
	 * @category Lang
	 * @param {*} value The value to check.
	 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
	 * @example
	 *
	 * function Foo() {
	 *   this.a = 1;
	 * }
	 *
	 * _.isPlainObject(new Foo);
	 * // => false
	 *
	 * _.isPlainObject([1, 2, 3]);
	 * // => false
	 *
	 * _.isPlainObject({ 'x': 0, 'y': 0 });
	 * // => true
	 *
	 * _.isPlainObject(Object.create(null));
	 * // => true
	 */
	function isPlainObject(value) {
	  if (!isObjectLike(value) ||
	      objectToString.call(value) != objectTag || isHostObject(value)) {
	    return false;
	  }
	  var proto = objectProto;
	  if (typeof value.constructor == 'function') {
	    proto = getPrototypeOf(value);
	  }
	  if (proto === null) {
	    return true;
	  }
	  var Ctor = proto.constructor;
	  return (typeof Ctor == 'function' &&
	    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);
	}

	module.exports = isPlainObject;


/***/ }
/******/ ])
});
;
var ReduxMiddleware;
(function (ReduxMiddleware) {
    ReduxMiddleware.thunkMiddleware = function (_a) {
        var dispatch = _a.dispatch, getState = _a.getState;
        return function (next) { return function (action) {
            return typeof action === 'function' ?
                action(dispatch, getState) :
                next(action);
        }; };
    };
})(ReduxMiddleware || (ReduxMiddleware = {}));

(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["reduxLogger"] = factory();
	else
		root["reduxLogger"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(1);
	module.exports = __webpack_require__(1);


/***/ },
/* 1 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var repeat = function repeat(str, times) {
	  return new Array(times + 1).join(str);
	};
	var pad = function pad(num, maxLength) {
	  return repeat("0", maxLength - num.toString().length) + num;
	};
	var formatTime = function formatTime(time) {
	  return " @ " + pad(time.getHours(), 2) + ":" + pad(time.getMinutes(), 2) + ":" + pad(time.getSeconds(), 2) + "." + pad(time.getMilliseconds(), 3);
	};

	// Use the new performance api to get better precision if available
	var timer = typeof performance !== "undefined" && typeof performance.now === "function" ? performance : Date;

	/**
	 * Creates logger with followed options
	 *
	 * @namespace
	 * @property {object} options - options for logger
	 * @property {string} options.level - console[level]
	 * @property {boolean} options.duration - print duration of each action?
	 * @property {boolean} options.timestamp - print timestamp with each action?
	 * @property {object} options.colors - custom colors
	 * @property {object} options.logger - implementation of the `console` API
	 * @property {boolean} options.logErrors - should errors in action execution be caught, logged, and re-thrown?
	 * @property {boolean} options.collapsed - is group collapsed?
	 * @property {boolean} options.predicate - condition which resolves logger behavior
	 * @property {function} options.stateTransformer - transform state before print
	 * @property {function} options.actionTransformer - transform action before print
	 * @property {function} options.errorTransformer - transform error before print
	 */

	function createLogger() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	  return function (_ref) {
	    var getState = _ref.getState;
	    return function (next) {
	      return function (action) {
	        var _options$level = options.level;
	        var level = _options$level === undefined ? "log" : _options$level;
	        var _options$logger = options.logger;
	        var logger = _options$logger === undefined ? window.console : _options$logger;
	        var _options$logErrors = options.logErrors;
	        var logErrors = _options$logErrors === undefined ? true : _options$logErrors;
	        var collapsed = options.collapsed;
	        var predicate = options.predicate;
	        var _options$duration = options.duration;
	        var duration = _options$duration === undefined ? false : _options$duration;
	        var _options$timestamp = options.timestamp;
	        var timestamp = _options$timestamp === undefined ? true : _options$timestamp;
	        var transformer = options.transformer;
	        var _options$stateTransfo = options.stateTransformer;
	        var // deprecated
	        stateTransformer = _options$stateTransfo === undefined ? function (state) {
	          return state;
	        } : _options$stateTransfo;
	        var _options$actionTransf = options.actionTransformer;
	        var actionTransformer = _options$actionTransf === undefined ? function (actn) {
	          return actn;
	        } : _options$actionTransf;
	        var _options$errorTransfo = options.errorTransformer;
	        var errorTransformer = _options$errorTransfo === undefined ? function (error) {
	          return error;
	        } : _options$errorTransfo;
	        var _options$colors = options.colors;
	        var colors = _options$colors === undefined ? {
	          title: function title() {
	            return "#000000";
	          },
	          prevState: function prevState() {
	            return "#9E9E9E";
	          },
	          action: function action() {
	            return "#03A9F4";
	          },
	          nextState: function nextState() {
	            return "#4CAF50";
	          },
	          error: function error() {
	            return "#F20404";
	          }
	        } : _options$colors;

	        // exit if console undefined

	        if (typeof logger === "undefined") {
	          return next(action);
	        }

	        // exit early if predicate function returns false
	        if (typeof predicate === "function" && !predicate(getState, action)) {
	          return next(action);
	        }

	        if (transformer) {
	          console.error("Option 'transformer' is deprecated, use stateTransformer instead");
	        }

	        var started = timer.now();
	        var prevState = stateTransformer(getState());

	        var formattedAction = actionTransformer(action);
	        var returnedValue = undefined;
	        var error = undefined;
	        if (logErrors) {
	          try {
	            returnedValue = next(action);
	          } catch (e) {
	            error = errorTransformer(e);
	          }
	        } else {
	          returnedValue = next(action);
	        }

	        var took = timer.now() - started;
	        var nextState = stateTransformer(getState());

	        // message
	        var time = new Date();
	        var isCollapsed = typeof collapsed === "function" ? collapsed(getState, action) : collapsed;

	        var formattedTime = formatTime(time);
	        var titleCSS = colors.title ? "color: " + colors.title(formattedAction) + ";" : null;
	        var title = "action " + formattedAction.type + (timestamp ? formattedTime : "") + (duration ? " in " + took.toFixed(2) + " ms" : "");

	        // render
	        try {
	          if (isCollapsed) {
	            if (colors.title) logger.groupCollapsed("%c " + title, titleCSS);else logger.groupCollapsed(title);
	          } else {
	            if (colors.title) logger.group("%c " + title, titleCSS);else logger.group(title);
	          }
	        } catch (e) {
	          logger.log(title);
	        }

	        if (colors.prevState) logger[level]("%c prev state", "color: " + colors.prevState(prevState) + "; font-weight: bold", prevState);else logger[level]("prev state", prevState);

	        if (colors.action) logger[level]("%c action", "color: " + colors.action(formattedAction) + "; font-weight: bold", formattedAction);else logger[level]("action", formattedAction);

	        if (error) {
	          if (colors.error) logger[level]("%c error", "color: " + colors.error(error, prevState) + "; font-weight: bold", error);else logger[level]("error", error);
	        } else {
	          if (colors.nextState) logger[level]("%c next state", "color: " + colors.nextState(nextState) + "; font-weight: bold", nextState);else logger[level]("next state", nextState);
	        }

	        try {
	          logger.groupEnd();
	        } catch (e) {
	          logger.log("—— log end ——");
	        }

	        if (error) throw error;
	        return returnedValue;
	      };
	    };
	  };
	}

	exports.default = createLogger;
	module.exports = exports['default'];

/***/ }
/******/ ])
});
;
if (!Object.assign) {
	Object.defineProperty(Object, 'assign', {
		enumerable: false,
		configurable: true,
		writable: true,
		value: function (target) {
			'use strict';
			if (target === undefined || target === null) {
				throw new TypeError('Cannot convert first argument to object');
			}

			var to = Object(target);
			for (var i = 1; i < arguments.length; i++) {
				var nextSource = arguments[i];
				if (nextSource === undefined || nextSource === null) {
					continue;
				}
				nextSource = Object(nextSource);

				var keysArray = Object.keys(nextSource);
				for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {
					var nextKey = keysArray[nextIndex];
					var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);
					if (desc !== undefined && desc.enumerable) {
						to[nextKey] = nextSource[nextKey];
					}
				}
			}
			return to;
		}
	});
}

if (!Array.prototype.find) {
	Array.prototype.find = function (predicate) {
		if (this == null) {
			throw new TypeError('Array.prototype.find called on null or undefined');
		}
		if (typeof predicate !== 'function') {
			throw new TypeError('predicate must be a function');
		}
		var list = Object(this);
		var length = list.length >>> 0;
		var thisArg = arguments[1];
		var value;

		for (var i = 0; i < length; i++) {
			value = list[i];
			if (predicate.call(thisArg, value, i, list)) {
				return value;
			}
		}
		return undefined;
	};
}

if (!String.prototype.startsWith) {
	Object.defineProperty(String.prototype, 'startsWith', {
		enumerable: false,
		configurable: false,
		writable: false,
		value: function (searchString, position) {
			position = position || 0;
			return this.lastIndexOf(searchString, position) === position;
		}
	});
}
(function(global){

//
// Check for native Promise and it has correct interface
//

var NativePromise = global['Promise'];
var nativePromiseSupported =
  NativePromise &&
  // Some of these methods are missing from
  // Firefox/Chrome experimental implementations
  'resolve' in NativePromise &&
  'reject' in NativePromise &&
  'all' in NativePromise &&
  'race' in NativePromise &&
  // Older version of the spec had a resolver object
  // as the arg rather than a function
  (function(){
    var resolve;
    new NativePromise(function(r){ resolve = r; });
    return typeof resolve === 'function';
  })();


//
// export if necessary
//

if (typeof exports !== 'undefined' && exports)
{
  // node.js
  exports.Promise = nativePromiseSupported ? NativePromise : Promise;
}
else
{
  // AMD
  if (typeof define == 'function' && define.amd)
  {
    define(function(){
      return nativePromiseSupported ? NativePromise : Promise;
    });
  }
  else
  {
    // in browser add to global
    if (!nativePromiseSupported)
      global['Promise'] = Promise;
  }
}


//
// Polyfill
//

var PENDING = 'pending';
var SEALED = 'sealed';
var FULFILLED = 'fulfilled';
var REJECTED = 'rejected';
var NOOP = function(){};

// async calls
var asyncSetTimer = typeof setImmediate !== 'undefined' ? setImmediate : setTimeout;
var asyncQueue = [];
var asyncTimer;

function asyncFlush(){
  // run promise callbacks
  for (var i = 0; i < asyncQueue.length; i++)
    asyncQueue[i][0](asyncQueue[i][1]);

  // reset async asyncQueue
  asyncQueue = [];
  asyncTimer = false;
}

function asyncCall(callback, arg){
  asyncQueue.push([callback, arg]);

  if (!asyncTimer)
  {
    asyncTimer = true;
    asyncSetTimer(asyncFlush, 0);
  }
}


function invokeResolver(resolver, promise) {
  function resolvePromise(value) {
    resolve(promise, value);
  }

  function rejectPromise(reason) {
    reject(promise, reason);
  }

  try {
    resolver(resolvePromise, rejectPromise);
  } catch(e) {
    rejectPromise(e);
  }
}

function invokeCallback(subscriber){
  var owner = subscriber.owner;
  var settled = owner.state_;
  var value = owner.data_;  
  var callback = subscriber[settled];
  var promise = subscriber.then;

  if (typeof callback === 'function')
  {
    settled = FULFILLED;
    try {
      value = callback(value);
    } catch(e) {
      reject(promise, e);
    }
  }

  if (!handleThenable(promise, value))
  {
    if (settled === FULFILLED)
      resolve(promise, value);

    if (settled === REJECTED)
      reject(promise, value);
  }
}

function handleThenable(promise, value) {
  var resolved;

  try {
    if (promise === value)
      throw new TypeError('A promises callback cannot return that same promise.');

    if (value && (typeof value === 'function' || typeof value === 'object'))
    {
      var then = value.then;  // then should be retrived only once

      if (typeof then === 'function')
      {
        then.call(value, function(val){
          if (!resolved)
          {
            resolved = true;

            if (value !== val)
              resolve(promise, val);
            else
              fulfill(promise, val);
          }
        }, function(reason){
          if (!resolved)
          {
            resolved = true;

            reject(promise, reason);
          }
        });

        return true;
      }
    }
  } catch (e) {
    if (!resolved)
      reject(promise, e);

    return true;
  }

  return false;
}

function resolve(promise, value){
  if (promise === value || !handleThenable(promise, value))
    fulfill(promise, value);
}

function fulfill(promise, value){
  if (promise.state_ === PENDING)
  {
    promise.state_ = SEALED;
    promise.data_ = value;

    asyncCall(publishFulfillment, promise);
  }
}

function reject(promise, reason){
  if (promise.state_ === PENDING)
  {
    promise.state_ = SEALED;
    promise.data_ = reason;

    asyncCall(publishRejection, promise);
  }
}

function publish(promise) {
  promise.then_ = promise.then_.forEach(invokeCallback);
}

function publishFulfillment(promise){
  promise.state_ = FULFILLED;
  publish(promise);
}

function publishRejection(promise){
  promise.state_ = REJECTED;
  publish(promise);
}

/**
* @class
*/
function Promise(resolver){
  if (typeof resolver !== 'function')
    throw new TypeError('Promise constructor takes a function argument');

  if (this instanceof Promise === false)
    throw new TypeError('Failed to construct \'Promise\': Please use the \'new\' operator, this object constructor cannot be called as a function.');

  this.then_ = [];

  invokeResolver(resolver, this);
}

Promise.prototype = {
  constructor: Promise,

  state_: PENDING,
  then_: null,
  data_: undefined,

  then: function(onFulfillment, onRejection){
    var subscriber = {
      owner: this,
      then: new this.constructor(NOOP),
      fulfilled: onFulfillment,
      rejected: onRejection
    };

    if (this.state_ === FULFILLED || this.state_ === REJECTED)
    {
      // already resolved, call callback async
      asyncCall(invokeCallback, subscriber);
    }
    else
    {
      // subscribe
      this.then_.push(subscriber);
    }

    return subscriber.then;
  },

  'catch': function(onRejection) {
    return this.then(null, onRejection);
  }
};

Promise.all = function(promises){
  var Class = this;

  if (!Array.isArray(promises))
    throw new TypeError('You must pass an array to Promise.all().');

  return new Class(function(resolve, reject){
    var results = [];
    var remaining = 0;

    function resolver(index){
      remaining++;
      return function(value){
        results[index] = value;
        if (!--remaining)
          resolve(results);
      };
    }

    for (var i = 0, promise; i < promises.length; i++)
    {
      promise = promises[i];

      if (promise && typeof promise.then === 'function')
        promise.then(resolver(i), reject);
      else
        results[i] = promise;
    }

    if (!remaining)
      resolve(results);
  });
};

Promise.race = function(promises){
  var Class = this;

  if (!Array.isArray(promises))
    throw new TypeError('You must pass an array to Promise.race().');

  return new Class(function(resolve, reject) {
    for (var i = 0, promise; i < promises.length; i++)
    {
      promise = promises[i];

      if (promise && typeof promise.then === 'function')
        promise.then(resolve, reject);
      else
        resolve(promise);
    }
  });
};

Promise.resolve = function(value){
  var Class = this;

  if (value && typeof value === 'object' && value.constructor === Class)
    return value;

  return new Class(function(resolve){
    resolve(value);
  });
};

Promise.reject = function(reason){
  var Class = this;

  return new Class(function(resolve, reject){
    reject(reason);
  });
};

})(typeof window != 'undefined' ? window : typeof global != 'undefined' ? global : typeof self != 'undefined' ? self : this);

(function() {
  'use strict';

  if (self.fetch) {
    return
  }

  function normalizeName(name) {
    if (typeof name !== 'string') {
      name = String(name)
    }
    if (/[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(name)) {
      throw new TypeError('Invalid character in header field name')
    }
    return name.toLowerCase()
  }

  function normalizeValue(value) {
    if (typeof value !== 'string') {
      value = String(value)
    }
    return value
  }

  function Headers(headers) {
    this.map = {}

    if (headers instanceof Headers) {
      headers.forEach(function(value, name) {
        this.append(name, value)
      }, this)

    } else if (headers) {
      Object.getOwnPropertyNames(headers).forEach(function(name) {
        this.append(name, headers[name])
      }, this)
    }
  }

  Headers.prototype.append = function(name, value) {
    name = normalizeName(name)
    value = normalizeValue(value)
    var list = this.map[name]
    if (!list) {
      list = []
      this.map[name] = list
    }
    list.push(value)
  }

  Headers.prototype['delete'] = function(name) {
    delete this.map[normalizeName(name)]
  }

  Headers.prototype.get = function(name) {
    var values = this.map[normalizeName(name)]
    return values ? values[0] : null
  }

  Headers.prototype.getAll = function(name) {
    return this.map[normalizeName(name)] || []
  }

  Headers.prototype.has = function(name) {
    return this.map.hasOwnProperty(normalizeName(name))
  }

  Headers.prototype.set = function(name, value) {
    this.map[normalizeName(name)] = [normalizeValue(value)]
  }

  Headers.prototype.forEach = function(callback, thisArg) {
    Object.getOwnPropertyNames(this.map).forEach(function(name) {
      this.map[name].forEach(function(value) {
        callback.call(thisArg, value, name, this)
      }, this)
    }, this)
  }

  function consumed(body) {
    if (body.bodyUsed) {
      return Promise.reject(new TypeError('Already read'))
    }
    body.bodyUsed = true
  }

  function fileReaderReady(reader) {
    return new Promise(function(resolve, reject) {
      reader.onload = function() {
        resolve(reader.result)
      }
      reader.onerror = function() {
        reject(reader.error)
      }
    })
  }

  function readBlobAsArrayBuffer(blob) {
    var reader = new FileReader()
    reader.readAsArrayBuffer(blob)
    return fileReaderReady(reader)
  }

  function readBlobAsText(blob) {
    var reader = new FileReader()
    reader.readAsText(blob)
    return fileReaderReady(reader)
  }

  var support = {
    blob: 'FileReader' in self && 'Blob' in self && (function() {
      try {
        new Blob();
        return true
      } catch(e) {
        return false
      }
    })(),
    formData: 'FormData' in self,
    arrayBuffer: 'ArrayBuffer' in self
  }

  function Body() {
    this.bodyUsed = false


    this._initBody = function(body) {
      this._bodyInit = body
      if (typeof body === 'string') {
        this._bodyText = body
      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
        this._bodyBlob = body
      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
        this._bodyFormData = body
      } else if (!body) {
        this._bodyText = ''
      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {
        // Only support ArrayBuffers for POST method.
        // Receiving ArrayBuffers happens via Blobs, instead.
      } else {
        throw new Error('unsupported BodyInit type')
      }
    }

    if (support.blob) {
      this.blob = function() {
        var rejected = consumed(this)
        if (rejected) {
          return rejected
        }

        if (this._bodyBlob) {
          return Promise.resolve(this._bodyBlob)
        } else if (this._bodyFormData) {
          throw new Error('could not read FormData body as blob')
        } else {
          return Promise.resolve(new Blob([this._bodyText]))
        }
      }

      this.arrayBuffer = function() {
        return this.blob().then(readBlobAsArrayBuffer)
      }

      this.text = function() {
        var rejected = consumed(this)
        if (rejected) {
          return rejected
        }

        if (this._bodyBlob) {
          return readBlobAsText(this._bodyBlob)
        } else if (this._bodyFormData) {
          throw new Error('could not read FormData body as text')
        } else {
          return Promise.resolve(this._bodyText)
        }
      }
    } else {
      this.text = function() {
        var rejected = consumed(this)
        return rejected ? rejected : Promise.resolve(this._bodyText)
      }
    }

    if (support.formData) {
      this.formData = function() {
        return this.text().then(decode)
      }
    }

    this.json = function() {
      return this.text().then(JSON.parse)
    }

    return this
  }

  // HTTP methods whose capitalization should be normalized
  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']

  function normalizeMethod(method) {
    var upcased = method.toUpperCase()
    return (methods.indexOf(upcased) > -1) ? upcased : method
  }

  function Request(input, options) {
    options = options || {}
    var body = options.body
    if (Request.prototype.isPrototypeOf(input)) {
      if (input.bodyUsed) {
        throw new TypeError('Already read')
      }
      this.url = input.url
      this.credentials = input.credentials
      if (!options.headers) {
        this.headers = new Headers(input.headers)
      }
      this.method = input.method
      this.mode = input.mode
      if (!body) {
        body = input._bodyInit
        input.bodyUsed = true
      }
    } else {
      this.url = input
    }

    this.credentials = options.credentials || this.credentials || 'omit'
    if (options.headers || !this.headers) {
      this.headers = new Headers(options.headers)
    }
    this.method = normalizeMethod(options.method || this.method || 'GET')
    this.mode = options.mode || this.mode || null
    this.referrer = null

    if ((this.method === 'GET' || this.method === 'HEAD') && body) {
      throw new TypeError('Body not allowed for GET or HEAD requests')
    }
    this._initBody(body)
  }

  Request.prototype.clone = function() {
    return new Request(this)
  }

  function decode(body) {
    var form = new FormData()
    body.trim().split('&').forEach(function(bytes) {
      if (bytes) {
        var split = bytes.split('=')
        var name = split.shift().replace(/\+/g, ' ')
        var value = split.join('=').replace(/\+/g, ' ')
        form.append(decodeURIComponent(name), decodeURIComponent(value))
      }
    })
    return form
  }

  function headers(xhr) {
    var head = new Headers()
    var pairs = xhr.getAllResponseHeaders().trim().split('\n')
    pairs.forEach(function(header) {
      var split = header.trim().split(':')
      var key = split.shift().trim()
      var value = split.join(':').trim()
      head.append(key, value)
    })
    return head
  }

  Body.call(Request.prototype)

  function Response(bodyInit, options) {
    if (!options) {
      options = {}
    }

    this._initBody(bodyInit)
    this.type = 'default'
    this.status = options.status
    this.ok = this.status >= 200 && this.status < 300
    this.statusText = options.statusText
    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)
    this.url = options.url || ''
  }

  Body.call(Response.prototype)

  Response.prototype.clone = function() {
    return new Response(this._bodyInit, {
      status: this.status,
      statusText: this.statusText,
      headers: new Headers(this.headers),
      url: this.url
    })
  }

  Response.error = function() {
    var response = new Response(null, {status: 0, statusText: ''})
    response.type = 'error'
    return response
  }

  var redirectStatuses = [301, 302, 303, 307, 308]

  Response.redirect = function(url, status) {
    if (redirectStatuses.indexOf(status) === -1) {
      throw new RangeError('Invalid status code')
    }

    return new Response(null, {status: status, headers: {location: url}})
  }

  self.Headers = Headers;
  self.Request = Request;
  self.Response = Response;

  self.fetch = function(input, init) {
    return new Promise(function(resolve, reject) {
      var request
      if (Request.prototype.isPrototypeOf(input) && !init) {
        request = input
      } else {
        request = new Request(input, init)
      }

      var xhr = new XMLHttpRequest()

      function responseURL() {
        if ('responseURL' in xhr) {
          return xhr.responseURL
        }

        // Avoid security warnings on getResponseHeader when not allowed by CORS
        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {
          return xhr.getResponseHeader('X-Request-URL')
        }

        return;
      }

      xhr.onload = function() {
        var status = (xhr.status === 1223) ? 204 : xhr.status
        if (status < 100 || status > 599) {
          reject(new TypeError('Network request failed'))
          return
        }
        var options = {
          status: status,
          statusText: xhr.statusText,
          headers: headers(xhr),
          url: responseURL()
        }
        var body = 'response' in xhr ? xhr.response : xhr.responseText;
        resolve(new Response(body, options))
      }

      xhr.onerror = function() {
        reject(new TypeError('Network request failed'))
      }

      xhr.open(request.method, request.url, true)

      if (request.credentials === 'include') {
        xhr.withCredentials = true
      }

      if ('responseType' in xhr && support.blob) {
        xhr.responseType = 'blob'
      }

      request.headers.forEach(function(value, name) {
        xhr.setRequestHeader(name, value)
      })

      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)
    })
  }
  self.fetch.polyfill = true
})();

(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["History"] = factory();
	else
		root["History"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _deprecate = __webpack_require__(1);

	var _deprecate2 = _interopRequireDefault(_deprecate);

	var _createLocation2 = __webpack_require__(3);

	var _createLocation3 = _interopRequireDefault(_createLocation2);

	var _createBrowserHistory = __webpack_require__(6);

	var _createBrowserHistory2 = _interopRequireDefault(_createBrowserHistory);

	exports.createHistory = _createBrowserHistory2['default'];

	var _createHashHistory2 = __webpack_require__(18);

	var _createHashHistory3 = _interopRequireDefault(_createHashHistory2);

	exports.createHashHistory = _createHashHistory3['default'];

	var _createMemoryHistory2 = __webpack_require__(19);

	var _createMemoryHistory3 = _interopRequireDefault(_createMemoryHistory2);

	exports.createMemoryHistory = _createMemoryHistory3['default'];

	var _useBasename2 = __webpack_require__(20);

	var _useBasename3 = _interopRequireDefault(_useBasename2);

	exports.useBasename = _useBasename3['default'];

	var _useBeforeUnload2 = __webpack_require__(21);

	var _useBeforeUnload3 = _interopRequireDefault(_useBeforeUnload2);

	exports.useBeforeUnload = _useBeforeUnload3['default'];

	var _useQueries2 = __webpack_require__(22);

	var _useQueries3 = _interopRequireDefault(_useQueries2);

	exports.useQueries = _useQueries3['default'];

	var _Actions2 = __webpack_require__(4);

	var _Actions3 = _interopRequireDefault(_Actions2);

	exports.Actions = _Actions3['default'];

	// deprecated

	var _enableBeforeUnload2 = __webpack_require__(25);

	var _enableBeforeUnload3 = _interopRequireDefault(_enableBeforeUnload2);

	exports.enableBeforeUnload = _enableBeforeUnload3['default'];

	var _enableQueries2 = __webpack_require__(26);

	var _enableQueries3 = _interopRequireDefault(_enableQueries2);

	exports.enableQueries = _enableQueries3['default'];
	var createLocation = _deprecate2['default'](_createLocation3['default'], 'Using createLocation without a history instance is deprecated; please use history.createLocation instead');
	exports.createLocation = createLocation;

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _warning = __webpack_require__(2);

	var _warning2 = _interopRequireDefault(_warning);

	function deprecate(fn, message) {
	  return function () {
	     false ? _warning2['default'](false, '[history] ' + message) : undefined;
	    return fn.apply(this, arguments);
	  };
	}

	exports['default'] = deprecate;
	module.exports = exports['default'];

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = function() {};

	if (false) {
	  warning = function(condition, format, args) {
	    var len = arguments.length;
	    args = new Array(len > 2 ? len - 2 : 0);
	    for (var key = 2; key < len; key++) {
	      args[key - 2] = arguments[key];
	    }
	    if (format === undefined) {
	      throw new Error(
	        '`warning(condition, format, ...args)` requires a warning ' +
	        'message argument'
	      );
	    }

	    if (format.length < 10 || (/^[s\W]*$/).test(format)) {
	      throw new Error(
	        'The warning format should be able to uniquely identify this ' +
	        'warning. Please, use a more descriptive format than: ' + format
	      );
	    }

	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' +
	        format.replace(/%s/g, function() {
	          return args[argIndex++];
	        });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch(x) {}
	    }
	  };
	}

	module.exports = warning;


/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _warning = __webpack_require__(2);

	var _warning2 = _interopRequireDefault(_warning);

	var _Actions = __webpack_require__(4);

	var _PathUtils = __webpack_require__(5);

	function createLocation() {
	  var location = arguments.length <= 0 || arguments[0] === undefined ? '/' : arguments[0];
	  var action = arguments.length <= 1 || arguments[1] === undefined ? _Actions.POP : arguments[1];
	  var key = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];

	  var _fourthArg = arguments.length <= 3 || arguments[3] === undefined ? null : arguments[3];

	  if (typeof location === 'string') location = _PathUtils.parsePath(location);

	  if (typeof action === 'object') {
	     false ? _warning2['default'](false, 'The state (2nd) argument to createLocation is deprecated; use a ' + 'location descriptor instead') : undefined;

	    location = _extends({}, location, { state: action });

	    action = key || _Actions.POP;
	    key = _fourthArg;
	  }

	  var pathname = location.pathname || '/';
	  var search = location.search || '';
	  var hash = location.hash || '';
	  var state = location.state || null;

	  return {
	    pathname: pathname,
	    search: search,
	    hash: hash,
	    state: state,
	    action: action,
	    key: key
	  };
	}

	exports['default'] = createLocation;
	module.exports = exports['default'];

/***/ },
/* 4 */
/***/ function(module, exports) {

	/**
	 * Indicates that navigation was caused by a call to history.push.
	 */
	'use strict';

	exports.__esModule = true;
	var PUSH = 'PUSH';

	exports.PUSH = PUSH;
	/**
	 * Indicates that navigation was caused by a call to history.replace.
	 */
	var REPLACE = 'REPLACE';

	exports.REPLACE = REPLACE;
	/**
	 * Indicates that navigation was caused by some other action such
	 * as using a browser's back/forward buttons and/or manually manipulating
	 * the URL in a browser's location bar. This is the default.
	 *
	 * See https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onpopstate
	 * for more information.
	 */
	var POP = 'POP';

	exports.POP = POP;
	exports['default'] = {
	  PUSH: PUSH,
	  REPLACE: REPLACE,
	  POP: POP
	};

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.extractPath = extractPath;
	exports.parsePath = parsePath;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _warning = __webpack_require__(2);

	var _warning2 = _interopRequireDefault(_warning);

	function extractPath(string) {
	  var match = string.match(/^https?:\/\/[^\/]*/);

	  if (match == null) return string;

	  return string.substring(match[0].length);
	}

	function parsePath(path) {
	  var pathname = extractPath(path);
	  var search = '';
	  var hash = '';

	   false ? _warning2['default'](path === pathname, 'A path must be pathname + search + hash only, not a fully qualified URL like "%s"', path) : undefined;

	  var hashIndex = pathname.indexOf('#');
	  if (hashIndex !== -1) {
	    hash = pathname.substring(hashIndex);
	    pathname = pathname.substring(0, hashIndex);
	  }

	  var searchIndex = pathname.indexOf('?');
	  if (searchIndex !== -1) {
	    search = pathname.substring(searchIndex);
	    pathname = pathname.substring(0, searchIndex);
	  }

	  if (pathname === '') pathname = '/';

	  return {
	    pathname: pathname,
	    search: search,
	    hash: hash
	  };
	}

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _invariant = __webpack_require__(7);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _Actions = __webpack_require__(4);

	var _PathUtils = __webpack_require__(5);

	var _ExecutionEnvironment = __webpack_require__(8);

	var _DOMUtils = __webpack_require__(9);

	var _DOMStateStorage = __webpack_require__(10);

	var _createDOMHistory = __webpack_require__(11);

	var _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);

	/**
	 * Creates and returns a history object that uses HTML5's history API
	 * (pushState, replaceState, and the popstate event) to manage history.
	 * This is the recommended method of managing history in browsers because
	 * it provides the cleanest URLs.
	 *
	 * Note: In browsers that do not support the HTML5 history API full
	 * page reloads will be used to preserve URLs.
	 */
	function createBrowserHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	  !_ExecutionEnvironment.canUseDOM ?  false ? _invariant2['default'](false, 'Browser history needs a DOM') : _invariant2['default'](false) : undefined;

	  var forceRefresh = options.forceRefresh;

	  var isSupported = _DOMUtils.supportsHistory();
	  var useRefresh = !isSupported || forceRefresh;

	  function getCurrentLocation(historyState) {
	    historyState = historyState || window.history.state || {};

	    var path = _DOMUtils.getWindowPath();
	    var _historyState = historyState;
	    var key = _historyState.key;

	    var state = undefined;
	    if (key) {
	      state = _DOMStateStorage.readState(key);
	    } else {
	      state = null;
	      key = history.createKey();

	      if (isSupported) window.history.replaceState(_extends({}, historyState, { key: key }), null, path);
	    }

	    var location = _PathUtils.parsePath(path);

	    return history.createLocation(_extends({}, location, { state: state }), undefined, key);
	  }

	  function startPopStateListener(_ref) {
	    var transitionTo = _ref.transitionTo;

	    function popStateListener(event) {
	      if (event.state === undefined) return; // Ignore extraneous popstate events in WebKit.

	      transitionTo(getCurrentLocation(event.state));
	    }

	    _DOMUtils.addEventListener(window, 'popstate', popStateListener);

	    return function () {
	      _DOMUtils.removeEventListener(window, 'popstate', popStateListener);
	    };
	  }

	  function finishTransition(location) {
	    var basename = location.basename;
	    var pathname = location.pathname;
	    var search = location.search;
	    var hash = location.hash;
	    var state = location.state;
	    var action = location.action;
	    var key = location.key;

	    if (action === _Actions.POP) return; // Nothing to do.

	    _DOMStateStorage.saveState(key, state);

	    var path = (basename || '') + pathname + search + hash;
	    var historyState = {
	      key: key
	    };

	    if (action === _Actions.PUSH) {
	      if (useRefresh) {
	        window.location.href = path;
	        return false; // Prevent location update.
	      } else {
	          window.history.pushState(historyState, null, path);
	        }
	    } else {
	      // REPLACE
	      if (useRefresh) {
	        window.location.replace(path);
	        return false; // Prevent location update.
	      } else {
	          window.history.replaceState(historyState, null, path);
	        }
	    }
	  }

	  var history = _createDOMHistory2['default'](_extends({}, options, {
	    getCurrentLocation: getCurrentLocation,
	    finishTransition: finishTransition,
	    saveState: _DOMStateStorage.saveState
	  }));

	  var listenerCount = 0,
	      stopPopStateListener = undefined;

	  function listenBefore(listener) {
	    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);

	    var unlisten = history.listenBefore(listener);

	    return function () {
	      unlisten();

	      if (--listenerCount === 0) stopPopStateListener();
	    };
	  }

	  function listen(listener) {
	    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);

	    var unlisten = history.listen(listener);

	    return function () {
	      unlisten();

	      if (--listenerCount === 0) stopPopStateListener();
	    };
	  }

	  // deprecated
	  function registerTransitionHook(hook) {
	    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);

	    history.registerTransitionHook(hook);
	  }

	  // deprecated
	  function unregisterTransitionHook(hook) {
	    history.unregisterTransitionHook(hook);

	    if (--listenerCount === 0) stopPopStateListener();
	  }

	  return _extends({}, history, {
	    listenBefore: listenBefore,
	    listen: listen,
	    registerTransitionHook: registerTransitionHook,
	    unregisterTransitionHook: unregisterTransitionHook
	  });
	}

	exports['default'] = createBrowserHistory;
	module.exports = exports['default'];

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var invariant = function(condition, format, a, b, c, d, e, f) {
	  if (false) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error(
	        'Minified exception occurred; use the non-minified dev environment ' +
	        'for the full error message and additional helpful warnings.'
	      );
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(
	        format.replace(/%s/g, function() { return args[argIndex++]; })
	      );
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	};

	module.exports = invariant;


/***/ },
/* 8 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	exports.canUseDOM = canUseDOM;

/***/ },
/* 9 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports.addEventListener = addEventListener;
	exports.removeEventListener = removeEventListener;
	exports.getHashPath = getHashPath;
	exports.replaceHashPath = replaceHashPath;
	exports.getWindowPath = getWindowPath;
	exports.go = go;
	exports.getUserConfirmation = getUserConfirmation;
	exports.supportsHistory = supportsHistory;
	exports.supportsGoWithoutReloadUsingHash = supportsGoWithoutReloadUsingHash;

	function addEventListener(node, event, listener) {
	  if (node.addEventListener) {
	    node.addEventListener(event, listener, false);
	  } else {
	    node.attachEvent('on' + event, listener);
	  }
	}

	function removeEventListener(node, event, listener) {
	  if (node.removeEventListener) {
	    node.removeEventListener(event, listener, false);
	  } else {
	    node.detachEvent('on' + event, listener);
	  }
	}

	function getHashPath() {
	  // We can't use window.location.hash here because it's not
	  // consistent across browsers - Firefox will pre-decode it!
	  return window.location.href.split('#')[1] || '';
	}

	function replaceHashPath(path) {
	  window.location.replace(window.location.pathname + window.location.search + '#' + path);
	}

	function getWindowPath() {
	  return window.location.pathname + window.location.search + window.location.hash;
	}

	function go(n) {
	  if (n) window.history.go(n);
	}

	function getUserConfirmation(message, callback) {
	  callback(window.confirm(message));
	}

	/**
	 * Returns true if the HTML5 history API is supported. Taken from Modernizr.
	 *
	 * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
	 * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
	 * changed to avoid false negatives for Windows Phones: https://github.com/rackt/react-router/issues/586
	 */

	function supportsHistory() {
	  var ua = navigator.userAgent;
	  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) {
	    return false;
	  }
	  return window.history && 'pushState' in window.history;
	}

	/**
	 * Returns false if using go(n) with hash history causes a full page reload.
	 */

	function supportsGoWithoutReloadUsingHash() {
	  var ua = navigator.userAgent;
	  return ua.indexOf('Firefox') === -1;
	}

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	/*eslint-disable no-empty */
	'use strict';

	exports.__esModule = true;
	exports.saveState = saveState;
	exports.readState = readState;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _warning = __webpack_require__(2);

	var _warning2 = _interopRequireDefault(_warning);

	var KeyPrefix = '@@History/';
	var QuotaExceededErrors = ['QuotaExceededError', 'QUOTA_EXCEEDED_ERR'];

	var SecurityError = 'SecurityError';

	function createKey(key) {
	  return KeyPrefix + key;
	}

	function saveState(key, state) {
	  try {
	    if (state == null) {
	      window.sessionStorage.removeItem(createKey(key));
	    } else {
	      window.sessionStorage.setItem(createKey(key), JSON.stringify(state));
	    }
	  } catch (error) {
	    if (error.name === SecurityError) {
	      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any
	      // attempt to access window.sessionStorage.
	       false ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available due to security settings') : undefined;

	      return;
	    }

	    if (QuotaExceededErrors.indexOf(error.name) >= 0 && window.sessionStorage.length === 0) {
	      // Safari "private mode" throws QuotaExceededError.
	       false ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available in Safari private mode') : undefined;

	      return;
	    }

	    throw error;
	  }
	}

	function readState(key) {
	  var json = undefined;
	  try {
	    json = window.sessionStorage.getItem(createKey(key));
	  } catch (error) {
	    if (error.name === SecurityError) {
	      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any
	      // attempt to access window.sessionStorage.
	       false ? _warning2['default'](false, '[history] Unable to read state; sessionStorage is not available due to security settings') : undefined;

	      return null;
	    }
	  }

	  if (json) {
	    try {
	      return JSON.parse(json);
	    } catch (error) {
	      // Ignore invalid JSON.
	    }
	  }

	  return null;
	}

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _invariant = __webpack_require__(7);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _ExecutionEnvironment = __webpack_require__(8);

	var _DOMUtils = __webpack_require__(9);

	var _createHistory = __webpack_require__(12);

	var _createHistory2 = _interopRequireDefault(_createHistory);

	function createDOMHistory(options) {
	  var history = _createHistory2['default'](_extends({
	    getUserConfirmation: _DOMUtils.getUserConfirmation
	  }, options, {
	    go: _DOMUtils.go
	  }));

	  function listen(listener) {
	    !_ExecutionEnvironment.canUseDOM ?  false ? _invariant2['default'](false, 'DOM history needs a DOM') : _invariant2['default'](false) : undefined;

	    return history.listen(listener);
	  }

	  return _extends({}, history, {
	    listen: listen
	  });
	}

	exports['default'] = createDOMHistory;
	module.exports = exports['default'];

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _warning = __webpack_require__(2);

	var _warning2 = _interopRequireDefault(_warning);

	var _deepEqual = __webpack_require__(13);

	var _deepEqual2 = _interopRequireDefault(_deepEqual);

	var _PathUtils = __webpack_require__(5);

	var _AsyncUtils = __webpack_require__(16);

	var _Actions = __webpack_require__(4);

	var _createLocation2 = __webpack_require__(3);

	var _createLocation3 = _interopRequireDefault(_createLocation2);

	var _runTransitionHook = __webpack_require__(17);

	var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);

	var _deprecate = __webpack_require__(1);

	var _deprecate2 = _interopRequireDefault(_deprecate);

	function createRandomKey(length) {
	  return Math.random().toString(36).substr(2, length);
	}

	function locationsAreEqual(a, b) {
	  return a.pathname === b.pathname && a.search === b.search &&
	  //a.action === b.action && // Different action !== location change.
	  a.key === b.key && _deepEqual2['default'](a.state, b.state);
	}

	var DefaultKeyLength = 6;

	function createHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	  var getCurrentLocation = options.getCurrentLocation;
	  var finishTransition = options.finishTransition;
	  var saveState = options.saveState;
	  var go = options.go;
	  var getUserConfirmation = options.getUserConfirmation;
	  var keyLength = options.keyLength;

	  if (typeof keyLength !== 'number') keyLength = DefaultKeyLength;

	  var transitionHooks = [];

	  function listenBefore(hook) {
	    transitionHooks.push(hook);

	    return function () {
	      transitionHooks = transitionHooks.filter(function (item) {
	        return item !== hook;
	      });
	    };
	  }

	  var allKeys = [];
	  var changeListeners = [];
	  var location = undefined;

	  function getCurrent() {
	    if (pendingLocation && pendingLocation.action === _Actions.POP) {
	      return allKeys.indexOf(pendingLocation.key);
	    } else if (location) {
	      return allKeys.indexOf(location.key);
	    } else {
	      return -1;
	    }
	  }

	  function updateLocation(newLocation) {
	    var current = getCurrent();

	    location = newLocation;

	    if (location.action === _Actions.PUSH) {
	      allKeys = [].concat(allKeys.slice(0, current + 1), [location.key]);
	    } else if (location.action === _Actions.REPLACE) {
	      allKeys[current] = location.key;
	    }

	    changeListeners.forEach(function (listener) {
	      listener(location);
	    });
	  }

	  function listen(listener) {
	    changeListeners.push(listener);

	    if (location) {
	      listener(location);
	    } else {
	      var _location = getCurrentLocation();
	      allKeys = [_location.key];
	      updateLocation(_location);
	    }

	    return function () {
	      changeListeners = changeListeners.filter(function (item) {
	        return item !== listener;
	      });
	    };
	  }

	  function confirmTransitionTo(location, callback) {
	    _AsyncUtils.loopAsync(transitionHooks.length, function (index, next, done) {
	      _runTransitionHook2['default'](transitionHooks[index], location, function (result) {
	        if (result != null) {
	          done(result);
	        } else {
	          next();
	        }
	      });
	    }, function (message) {
	      if (getUserConfirmation && typeof message === 'string') {
	        getUserConfirmation(message, function (ok) {
	          callback(ok !== false);
	        });
	      } else {
	        callback(message !== false);
	      }
	    });
	  }

	  var pendingLocation = undefined;

	  function transitionTo(nextLocation) {
	    if (location && locationsAreEqual(location, nextLocation)) return; // Nothing to do.

	    pendingLocation = nextLocation;

	    confirmTransitionTo(nextLocation, function (ok) {
	      if (pendingLocation !== nextLocation) return; // Transition was interrupted.

	      if (ok) {
	        // treat PUSH to current path like REPLACE to be consistent with browsers
	        if (nextLocation.action === _Actions.PUSH) {
	          var prevPath = createPath(location);
	          var nextPath = createPath(nextLocation);

	          if (nextPath === prevPath && _deepEqual2['default'](location.state, nextLocation.state)) nextLocation.action = _Actions.REPLACE;
	        }

	        if (finishTransition(nextLocation) !== false) updateLocation(nextLocation);
	      } else if (location && nextLocation.action === _Actions.POP) {
	        var prevIndex = allKeys.indexOf(location.key);
	        var nextIndex = allKeys.indexOf(nextLocation.key);

	        if (prevIndex !== -1 && nextIndex !== -1) go(prevIndex - nextIndex); // Restore the URL.
	      }
	    });
	  }

	  function push(location) {
	    transitionTo(createLocation(location, _Actions.PUSH, createKey()));
	  }

	  function replace(location) {
	    transitionTo(createLocation(location, _Actions.REPLACE, createKey()));
	  }

	  function goBack() {
	    go(-1);
	  }

	  function goForward() {
	    go(1);
	  }

	  function createKey() {
	    return createRandomKey(keyLength);
	  }

	  function createPath(location) {
	    if (location == null || typeof location === 'string') return location;

	    var pathname = location.pathname;
	    var search = location.search;
	    var hash = location.hash;

	    var result = pathname;

	    if (search) result += search;

	    if (hash) result += hash;

	    return result;
	  }

	  function createHref(location) {
	    return createPath(location);
	  }

	  function createLocation(location, action) {
	    var key = arguments.length <= 2 || arguments[2] === undefined ? createKey() : arguments[2];

	    if (typeof action === 'object') {
	       false ? _warning2['default'](false, 'The state (2nd) argument to history.createLocation is deprecated; use a ' + 'location descriptor instead') : undefined;

	      if (typeof location === 'string') location = _PathUtils.parsePath(location);

	      location = _extends({}, location, { state: action });

	      action = key;
	      key = arguments[3] || createKey();
	    }

	    return _createLocation3['default'](location, action, key);
	  }

	  // deprecated
	  function setState(state) {
	    if (location) {
	      updateLocationState(location, state);
	      updateLocation(location);
	    } else {
	      updateLocationState(getCurrentLocation(), state);
	    }
	  }

	  function updateLocationState(location, state) {
	    location.state = _extends({}, location.state, state);
	    saveState(location.key, location.state);
	  }

	  // deprecated
	  function registerTransitionHook(hook) {
	    if (transitionHooks.indexOf(hook) === -1) transitionHooks.push(hook);
	  }

	  // deprecated
	  function unregisterTransitionHook(hook) {
	    transitionHooks = transitionHooks.filter(function (item) {
	      return item !== hook;
	    });
	  }

	  // deprecated
	  function pushState(state, path) {
	    if (typeof path === 'string') path = _PathUtils.parsePath(path);

	    push(_extends({ state: state }, path));
	  }

	  // deprecated
	  function replaceState(state, path) {
	    if (typeof path === 'string') path = _PathUtils.parsePath(path);

	    replace(_extends({ state: state }, path));
	  }

	  return {
	    listenBefore: listenBefore,
	    listen: listen,
	    transitionTo: transitionTo,
	    push: push,
	    replace: replace,
	    go: go,
	    goBack: goBack,
	    goForward: goForward,
	    createKey: createKey,
	    createPath: createPath,
	    createHref: createHref,
	    createLocation: createLocation,

	    setState: _deprecate2['default'](setState, 'setState is deprecated; use location.key to save state instead'),
	    registerTransitionHook: _deprecate2['default'](registerTransitionHook, 'registerTransitionHook is deprecated; use listenBefore instead'),
	    unregisterTransitionHook: _deprecate2['default'](unregisterTransitionHook, 'unregisterTransitionHook is deprecated; use the callback returned from listenBefore instead'),
	    pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),
	    replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')
	  };
	}

	exports['default'] = createHistory;
	module.exports = exports['default'];

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	var pSlice = Array.prototype.slice;
	var objectKeys = __webpack_require__(14);
	var isArguments = __webpack_require__(15);

	var deepEqual = module.exports = function (actual, expected, opts) {
	  if (!opts) opts = {};
	  // 7.1. All identical values are equivalent, as determined by ===.
	  if (actual === expected) {
	    return true;

	  } else if (actual instanceof Date && expected instanceof Date) {
	    return actual.getTime() === expected.getTime();

	  // 7.3. Other pairs that do not both pass typeof value == 'object',
	  // equivalence is determined by ==.
	  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {
	    return opts.strict ? actual === expected : actual == expected;

	  // 7.4. For all other Object pairs, including Array objects, equivalence is
	  // determined by having the same number of owned properties (as verified
	  // with Object.prototype.hasOwnProperty.call), the same set of keys
	  // (although not necessarily the same order), equivalent values for every
	  // corresponding key, and an identical 'prototype' property. Note: this
	  // accounts for both named and indexed properties on Arrays.
	  } else {
	    return objEquiv(actual, expected, opts);
	  }
	}

	function isUndefinedOrNull(value) {
	  return value === null || value === undefined;
	}

	function isBuffer (x) {
	  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;
	  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
	    return false;
	  }
	  if (x.length > 0 && typeof x[0] !== 'number') return false;
	  return true;
	}

	function objEquiv(a, b, opts) {
	  var i, key;
	  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))
	    return false;
	  // an identical 'prototype' property.
	  if (a.prototype !== b.prototype) return false;
	  //~~~I've managed to break Object.keys through screwy arguments passing.
	  //   Converting to array solves the problem.
	  if (isArguments(a)) {
	    if (!isArguments(b)) {
	      return false;
	    }
	    a = pSlice.call(a);
	    b = pSlice.call(b);
	    return deepEqual(a, b, opts);
	  }
	  if (isBuffer(a)) {
	    if (!isBuffer(b)) {
	      return false;
	    }
	    if (a.length !== b.length) return false;
	    for (i = 0; i < a.length; i++) {
	      if (a[i] !== b[i]) return false;
	    }
	    return true;
	  }
	  try {
	    var ka = objectKeys(a),
	        kb = objectKeys(b);
	  } catch (e) {//happens when one is a string literal and the other isn't
	    return false;
	  }
	  // having the same number of owned properties (keys incorporates
	  // hasOwnProperty)
	  if (ka.length != kb.length)
	    return false;
	  //the same set of keys (although not necessarily the same order),
	  ka.sort();
	  kb.sort();
	  //~~~cheap key test
	  for (i = ka.length - 1; i >= 0; i--) {
	    if (ka[i] != kb[i])
	      return false;
	  }
	  //equivalent values for every corresponding key, and
	  //~~~possibly expensive deep test
	  for (i = ka.length - 1; i >= 0; i--) {
	    key = ka[i];
	    if (!deepEqual(a[key], b[key], opts)) return false;
	  }
	  return typeof a === typeof b;
	}


/***/ },
/* 14 */
/***/ function(module, exports) {

	exports = module.exports = typeof Object.keys === 'function'
	  ? Object.keys : shim;

	exports.shim = shim;
	function shim (obj) {
	  var keys = [];
	  for (var key in obj) keys.push(key);
	  return keys;
	}


/***/ },
/* 15 */
/***/ function(module, exports) {

	var supportsArgumentsClass = (function(){
	  return Object.prototype.toString.call(arguments)
	})() == '[object Arguments]';

	exports = module.exports = supportsArgumentsClass ? supported : unsupported;

	exports.supported = supported;
	function supported(object) {
	  return Object.prototype.toString.call(object) == '[object Arguments]';
	};

	exports.unsupported = unsupported;
	function unsupported(object){
	  return object &&
	    typeof object == 'object' &&
	    typeof object.length == 'number' &&
	    Object.prototype.hasOwnProperty.call(object, 'callee') &&
	    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||
	    false;
	};


/***/ },
/* 16 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;
	var _slice = Array.prototype.slice;
	exports.loopAsync = loopAsync;

	function loopAsync(turns, work, callback) {
	  var currentTurn = 0,
	      isDone = false;
	  var sync = false,
	      hasNext = false,
	      doneArgs = undefined;

	  function done() {
	    isDone = true;
	    if (sync) {
	      // Iterate instead of recursing if possible.
	      doneArgs = [].concat(_slice.call(arguments));
	      return;
	    }

	    callback.apply(this, arguments);
	  }

	  function next() {
	    if (isDone) {
	      return;
	    }

	    hasNext = true;
	    if (sync) {
	      // Iterate instead of recursing if possible.
	      return;
	    }

	    sync = true;

	    while (!isDone && currentTurn < turns && hasNext) {
	      hasNext = false;
	      work.call(this, currentTurn++, next, done);
	    }

	    sync = false;

	    if (isDone) {
	      // This means the loop finished synchronously.
	      callback.apply(this, doneArgs);
	      return;
	    }

	    if (currentTurn >= turns && hasNext) {
	      isDone = true;
	      callback();
	    }
	  }

	  next();
	}

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _warning = __webpack_require__(2);

	var _warning2 = _interopRequireDefault(_warning);

	function runTransitionHook(hook, location, callback) {
	  var result = hook(location, callback);

	  if (hook.length < 2) {
	    // Assume the hook runs synchronously and automatically
	    // call the callback with the return value.
	    callback(result);
	  } else {
	     false ? _warning2['default'](result === undefined, 'You should not "return" in a transition hook with a callback argument; call the callback instead') : undefined;
	  }
	}

	exports['default'] = runTransitionHook;
	module.exports = exports['default'];

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _warning = __webpack_require__(2);

	var _warning2 = _interopRequireDefault(_warning);

	var _invariant = __webpack_require__(7);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _Actions = __webpack_require__(4);

	var _PathUtils = __webpack_require__(5);

	var _ExecutionEnvironment = __webpack_require__(8);

	var _DOMUtils = __webpack_require__(9);

	var _DOMStateStorage = __webpack_require__(10);

	var _createDOMHistory = __webpack_require__(11);

	var _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);

	function isAbsolutePath(path) {
	  return typeof path === 'string' && path.charAt(0) === '/';
	}

	function ensureSlash() {
	  var path = _DOMUtils.getHashPath();

	  if (isAbsolutePath(path)) return true;

	  _DOMUtils.replaceHashPath('/' + path);

	  return false;
	}

	function addQueryStringValueToPath(path, key, value) {
	  return path + (path.indexOf('?') === -1 ? '?' : '&') + (key + '=' + value);
	}

	function stripQueryStringValueFromPath(path, key) {
	  return path.replace(new RegExp('[?&]?' + key + '=[a-zA-Z0-9]+'), '');
	}

	function getQueryStringValueFromPath(path, key) {
	  var match = path.match(new RegExp('\\?.*?\\b' + key + '=(.+?)\\b'));
	  return match && match[1];
	}

	var DefaultQueryKey = '_k';

	function createHashHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	  !_ExecutionEnvironment.canUseDOM ?  false ? _invariant2['default'](false, 'Hash history needs a DOM') : _invariant2['default'](false) : undefined;

	  var queryKey = options.queryKey;

	  if (queryKey === undefined || !!queryKey) queryKey = typeof queryKey === 'string' ? queryKey : DefaultQueryKey;

	  function getCurrentLocation() {
	    var path = _DOMUtils.getHashPath();

	    var key = undefined,
	        state = undefined;
	    if (queryKey) {
	      key = getQueryStringValueFromPath(path, queryKey);
	      path = stripQueryStringValueFromPath(path, queryKey);

	      if (key) {
	        state = _DOMStateStorage.readState(key);
	      } else {
	        state = null;
	        key = history.createKey();
	        _DOMUtils.replaceHashPath(addQueryStringValueToPath(path, queryKey, key));
	      }
	    } else {
	      key = state = null;
	    }

	    var location = _PathUtils.parsePath(path);

	    return history.createLocation(_extends({}, location, { state: state }), undefined, key);
	  }

	  function startHashChangeListener(_ref) {
	    var transitionTo = _ref.transitionTo;

	    function hashChangeListener() {
	      if (!ensureSlash()) return; // Always make sure hashes are preceeded with a /.

	      transitionTo(getCurrentLocation());
	    }

	    ensureSlash();
	    _DOMUtils.addEventListener(window, 'hashchange', hashChangeListener);

	    return function () {
	      _DOMUtils.removeEventListener(window, 'hashchange', hashChangeListener);
	    };
	  }

	  function finishTransition(location) {
	    var basename = location.basename;
	    var pathname = location.pathname;
	    var search = location.search;
	    var state = location.state;
	    var action = location.action;
	    var key = location.key;

	    if (action === _Actions.POP) return; // Nothing to do.

	    var path = (basename || '') + pathname + search;

	    if (queryKey) {
	      path = addQueryStringValueToPath(path, queryKey, key);
	      _DOMStateStorage.saveState(key, state);
	    } else {
	      // Drop key and state.
	      location.key = location.state = null;
	    }

	    var currentHash = _DOMUtils.getHashPath();

	    if (action === _Actions.PUSH) {
	      if (currentHash !== path) {
	        window.location.hash = path;
	      } else {
	         false ? _warning2['default'](false, 'You cannot PUSH the same path using hash history') : undefined;
	      }
	    } else if (currentHash !== path) {
	      // REPLACE
	      _DOMUtils.replaceHashPath(path);
	    }
	  }

	  var history = _createDOMHistory2['default'](_extends({}, options, {
	    getCurrentLocation: getCurrentLocation,
	    finishTransition: finishTransition,
	    saveState: _DOMStateStorage.saveState
	  }));

	  var listenerCount = 0,
	      stopHashChangeListener = undefined;

	  function listenBefore(listener) {
	    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);

	    var unlisten = history.listenBefore(listener);

	    return function () {
	      unlisten();

	      if (--listenerCount === 0) stopHashChangeListener();
	    };
	  }

	  function listen(listener) {
	    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);

	    var unlisten = history.listen(listener);

	    return function () {
	      unlisten();

	      if (--listenerCount === 0) stopHashChangeListener();
	    };
	  }

	  function push(location) {
	     false ? _warning2['default'](queryKey || location.state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;

	    history.push(location);
	  }

	  function replace(location) {
	     false ? _warning2['default'](queryKey || location.state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;

	    history.replace(location);
	  }

	  var goIsSupportedWithoutReload = _DOMUtils.supportsGoWithoutReloadUsingHash();

	  function go(n) {
	     false ? _warning2['default'](goIsSupportedWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : undefined;

	    history.go(n);
	  }

	  function createHref(path) {
	    return '#' + history.createHref(path);
	  }

	  // deprecated
	  function registerTransitionHook(hook) {
	    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);

	    history.registerTransitionHook(hook);
	  }

	  // deprecated
	  function unregisterTransitionHook(hook) {
	    history.unregisterTransitionHook(hook);

	    if (--listenerCount === 0) stopHashChangeListener();
	  }

	  // deprecated
	  function pushState(state, path) {
	     false ? _warning2['default'](queryKey || state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;

	    history.pushState(state, path);
	  }

	  // deprecated
	  function replaceState(state, path) {
	     false ? _warning2['default'](queryKey || state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;

	    history.replaceState(state, path);
	  }

	  return _extends({}, history, {
	    listenBefore: listenBefore,
	    listen: listen,
	    push: push,
	    replace: replace,
	    go: go,
	    createHref: createHref,

	    registerTransitionHook: registerTransitionHook, // deprecated - warning is in createHistory
	    unregisterTransitionHook: unregisterTransitionHook, // deprecated - warning is in createHistory
	    pushState: pushState, // deprecated - warning is in createHistory
	    replaceState: replaceState // deprecated - warning is in createHistory
	  });
	}

	exports['default'] = createHashHistory;
	module.exports = exports['default'];

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _warning = __webpack_require__(2);

	var _warning2 = _interopRequireDefault(_warning);

	var _invariant = __webpack_require__(7);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _PathUtils = __webpack_require__(5);

	var _Actions = __webpack_require__(4);

	var _createHistory = __webpack_require__(12);

	var _createHistory2 = _interopRequireDefault(_createHistory);

	function createStateStorage(entries) {
	  return entries.filter(function (entry) {
	    return entry.state;
	  }).reduce(function (memo, entry) {
	    memo[entry.key] = entry.state;
	    return memo;
	  }, {});
	}

	function createMemoryHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	  if (Array.isArray(options)) {
	    options = { entries: options };
	  } else if (typeof options === 'string') {
	    options = { entries: [options] };
	  }

	  var history = _createHistory2['default'](_extends({}, options, {
	    getCurrentLocation: getCurrentLocation,
	    finishTransition: finishTransition,
	    saveState: saveState,
	    go: go
	  }));

	  var _options = options;
	  var entries = _options.entries;
	  var current = _options.current;

	  if (typeof entries === 'string') {
	    entries = [entries];
	  } else if (!Array.isArray(entries)) {
	    entries = ['/'];
	  }

	  entries = entries.map(function (entry) {
	    var key = history.createKey();

	    if (typeof entry === 'string') return { pathname: entry, key: key };

	    if (typeof entry === 'object' && entry) return _extends({}, entry, { key: key });

	     true ?  false ? _invariant2['default'](false, 'Unable to create history entry from %s', entry) : _invariant2['default'](false) : undefined;
	  });

	  if (current == null) {
	    current = entries.length - 1;
	  } else {
	    !(current >= 0 && current < entries.length) ?  false ? _invariant2['default'](false, 'Current index must be >= 0 and < %s, was %s', entries.length, current) : _invariant2['default'](false) : undefined;
	  }

	  var storage = createStateStorage(entries);

	  function saveState(key, state) {
	    storage[key] = state;
	  }

	  function readState(key) {
	    return storage[key];
	  }

	  function getCurrentLocation() {
	    var entry = entries[current];
	    var basename = entry.basename;
	    var pathname = entry.pathname;
	    var search = entry.search;

	    var path = (basename || '') + pathname + (search || '');

	    var key = undefined,
	        state = undefined;
	    if (entry.key) {
	      key = entry.key;
	      state = readState(key);
	    } else {
	      key = history.createKey();
	      state = null;
	      entry.key = key;
	    }

	    var location = _PathUtils.parsePath(path);

	    return history.createLocation(_extends({}, location, { state: state }), undefined, key);
	  }

	  function canGo(n) {
	    var index = current + n;
	    return index >= 0 && index < entries.length;
	  }

	  function go(n) {
	    if (n) {
	      if (!canGo(n)) {
	         false ? _warning2['default'](false, 'Cannot go(%s) there is not enough history', n) : undefined;
	        return;
	      }

	      current += n;

	      var currentLocation = getCurrentLocation();

	      // change action to POP
	      history.transitionTo(_extends({}, currentLocation, { action: _Actions.POP }));
	    }
	  }

	  function finishTransition(location) {
	    switch (location.action) {
	      case _Actions.PUSH:
	        current += 1;

	        // if we are not on the top of stack
	        // remove rest and push new
	        if (current < entries.length) entries.splice(current);

	        entries.push(location);
	        saveState(location.key, location.state);
	        break;
	      case _Actions.REPLACE:
	        entries[current] = location;
	        saveState(location.key, location.state);
	        break;
	    }
	  }

	  return history;
	}

	exports['default'] = createMemoryHistory;
	module.exports = exports['default'];

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _ExecutionEnvironment = __webpack_require__(8);

	var _PathUtils = __webpack_require__(5);

	var _runTransitionHook = __webpack_require__(17);

	var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);

	var _deprecate = __webpack_require__(1);

	var _deprecate2 = _interopRequireDefault(_deprecate);

	function useBasename(createHistory) {
	  return function () {
	    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	    var history = createHistory(options);

	    var basename = options.basename;

	    // Automatically use the value of <base href> in HTML
	    // documents as basename if it's not explicitly given.
	    if (basename == null && _ExecutionEnvironment.canUseDOM) {
	      var base = document.getElementsByTagName('base')[0];

	      if (base) basename = _PathUtils.extractPath(base.href);
	    }

	    function addBasename(location) {
	      if (basename && location.basename == null) {
	        if (location.pathname.indexOf(basename) === 0) {
	          location.pathname = location.pathname.substring(basename.length);
	          location.basename = basename;

	          if (location.pathname === '') location.pathname = '/';
	        } else {
	          location.basename = '';
	        }
	      }

	      return location;
	    }

	    function prependBasename(location) {
	      if (!basename) return location;

	      if (typeof location === 'string') location = _PathUtils.parsePath(location);

	      var pname = location.pathname;
	      var normalizedBasename = basename.slice(-1) === '/' ? basename : basename + '/';
	      var normalizedPathname = pname.charAt(0) === '/' ? pname.slice(1) : pname;
	      var pathname = normalizedBasename + normalizedPathname;

	      return _extends({}, location, {
	        pathname: pathname
	      });
	    }

	    // Override all read methods with basename-aware versions.
	    function listenBefore(hook) {
	      return history.listenBefore(function (location, callback) {
	        _runTransitionHook2['default'](hook, addBasename(location), callback);
	      });
	    }

	    function listen(listener) {
	      return history.listen(function (location) {
	        listener(addBasename(location));
	      });
	    }

	    // Override all write methods with basename-aware versions.
	    function push(location) {
	      history.push(prependBasename(location));
	    }

	    function replace(location) {
	      history.replace(prependBasename(location));
	    }

	    function createPath(location) {
	      return history.createPath(prependBasename(location));
	    }

	    function createHref(location) {
	      return history.createHref(prependBasename(location));
	    }

	    function createLocation(location) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      return addBasename(history.createLocation.apply(history, [prependBasename(location)].concat(args)));
	    }

	    // deprecated
	    function pushState(state, path) {
	      if (typeof path === 'string') path = _PathUtils.parsePath(path);

	      push(_extends({ state: state }, path));
	    }

	    // deprecated
	    function replaceState(state, path) {
	      if (typeof path === 'string') path = _PathUtils.parsePath(path);

	      replace(_extends({ state: state }, path));
	    }

	    return _extends({}, history, {
	      listenBefore: listenBefore,
	      listen: listen,
	      push: push,
	      replace: replace,
	      createPath: createPath,
	      createHref: createHref,
	      createLocation: createLocation,

	      pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),
	      replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')
	    });
	  };
	}

	exports['default'] = useBasename;
	module.exports = exports['default'];

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _warning = __webpack_require__(2);

	var _warning2 = _interopRequireDefault(_warning);

	var _ExecutionEnvironment = __webpack_require__(8);

	var _DOMUtils = __webpack_require__(9);

	var _deprecate = __webpack_require__(1);

	var _deprecate2 = _interopRequireDefault(_deprecate);

	function startBeforeUnloadListener(getBeforeUnloadPromptMessage) {
	  function listener(event) {
	    var message = getBeforeUnloadPromptMessage();

	    if (typeof message === 'string') {
	      (event || window.event).returnValue = message;
	      return message;
	    }
	  }

	  _DOMUtils.addEventListener(window, 'beforeunload', listener);

	  return function () {
	    _DOMUtils.removeEventListener(window, 'beforeunload', listener);
	  };
	}

	/**
	 * Returns a new createHistory function that can be used to create
	 * history objects that know how to use the beforeunload event in web
	 * browsers to cancel navigation.
	 */
	function useBeforeUnload(createHistory) {
	  return function (options) {
	    var history = createHistory(options);

	    var stopBeforeUnloadListener = undefined;
	    var beforeUnloadHooks = [];

	    function getBeforeUnloadPromptMessage() {
	      var message = undefined;

	      for (var i = 0, len = beforeUnloadHooks.length; message == null && i < len; ++i) {
	        message = beforeUnloadHooks[i].call();
	      }return message;
	    }

	    function listenBeforeUnload(hook) {
	      beforeUnloadHooks.push(hook);

	      if (beforeUnloadHooks.length === 1) {
	        if (_ExecutionEnvironment.canUseDOM) {
	          stopBeforeUnloadListener = startBeforeUnloadListener(getBeforeUnloadPromptMessage);
	        } else {
	           false ? _warning2['default'](false, 'listenBeforeUnload only works in DOM environments') : undefined;
	        }
	      }

	      return function () {
	        beforeUnloadHooks = beforeUnloadHooks.filter(function (item) {
	          return item !== hook;
	        });

	        if (beforeUnloadHooks.length === 0 && stopBeforeUnloadListener) {
	          stopBeforeUnloadListener();
	          stopBeforeUnloadListener = null;
	        }
	      };
	    }

	    // deprecated
	    function registerBeforeUnloadHook(hook) {
	      if (_ExecutionEnvironment.canUseDOM && beforeUnloadHooks.indexOf(hook) === -1) {
	        beforeUnloadHooks.push(hook);

	        if (beforeUnloadHooks.length === 1) stopBeforeUnloadListener = startBeforeUnloadListener(getBeforeUnloadPromptMessage);
	      }
	    }

	    // deprecated
	    function unregisterBeforeUnloadHook(hook) {
	      if (beforeUnloadHooks.length > 0) {
	        beforeUnloadHooks = beforeUnloadHooks.filter(function (item) {
	          return item !== hook;
	        });

	        if (beforeUnloadHooks.length === 0) stopBeforeUnloadListener();
	      }
	    }

	    return _extends({}, history, {
	      listenBeforeUnload: listenBeforeUnload,

	      registerBeforeUnloadHook: _deprecate2['default'](registerBeforeUnloadHook, 'registerBeforeUnloadHook is deprecated; use listenBeforeUnload instead'),
	      unregisterBeforeUnloadHook: _deprecate2['default'](unregisterBeforeUnloadHook, 'unregisterBeforeUnloadHook is deprecated; use the callback returned from listenBeforeUnload instead')
	    });
	  };
	}

	exports['default'] = useBeforeUnload;
	module.exports = exports['default'];

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _warning = __webpack_require__(2);

	var _warning2 = _interopRequireDefault(_warning);

	var _queryString = __webpack_require__(23);

	var _runTransitionHook = __webpack_require__(17);

	var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);

	var _PathUtils = __webpack_require__(5);

	var _deprecate = __webpack_require__(1);

	var _deprecate2 = _interopRequireDefault(_deprecate);

	var SEARCH_BASE_KEY = '$searchBase';

	function defaultStringifyQuery(query) {
	  return _queryString.stringify(query).replace(/%20/g, '+');
	}

	var defaultParseQueryString = _queryString.parse;

	function isNestedObject(object) {
	  for (var p in object) {
	    if (object.hasOwnProperty(p) && typeof object[p] === 'object' && !Array.isArray(object[p]) && object[p] !== null) return true;
	  }return false;
	}

	/**
	 * Returns a new createHistory function that may be used to create
	 * history objects that know how to handle URL queries.
	 */
	function useQueries(createHistory) {
	  return function () {
	    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	    var history = createHistory(options);

	    var stringifyQuery = options.stringifyQuery;
	    var parseQueryString = options.parseQueryString;

	    if (typeof stringifyQuery !== 'function') stringifyQuery = defaultStringifyQuery;

	    if (typeof parseQueryString !== 'function') parseQueryString = defaultParseQueryString;

	    function addQuery(location) {
	      if (location.query == null) {
	        var search = location.search;

	        location.query = parseQueryString(search.substring(1));
	        location[SEARCH_BASE_KEY] = { search: search, searchBase: '' };
	      }

	      // TODO: Instead of all the book-keeping here, this should just strip the
	      // stringified query from the search.

	      return location;
	    }

	    function appendQuery(location, query) {
	      var _extends2;

	      var searchBaseSpec = location[SEARCH_BASE_KEY];
	      var queryString = query ? stringifyQuery(query) : '';
	      if (!searchBaseSpec && !queryString) {
	        return location;
	      }

	       false ? _warning2['default'](stringifyQuery !== defaultStringifyQuery || !isNestedObject(query), 'useQueries does not stringify nested query objects by default; ' + 'use a custom stringifyQuery function') : undefined;

	      if (typeof location === 'string') location = _PathUtils.parsePath(location);

	      var searchBase = undefined;
	      if (searchBaseSpec && location.search === searchBaseSpec.search) {
	        searchBase = searchBaseSpec.searchBase;
	      } else {
	        searchBase = location.search || '';
	      }

	      var search = searchBase;
	      if (queryString) {
	        search += (search ? '&' : '?') + queryString;
	      }

	      return _extends({}, location, (_extends2 = {
	        search: search
	      }, _extends2[SEARCH_BASE_KEY] = { search: search, searchBase: searchBase }, _extends2));
	    }

	    // Override all read methods with query-aware versions.
	    function listenBefore(hook) {
	      return history.listenBefore(function (location, callback) {
	        _runTransitionHook2['default'](hook, addQuery(location), callback);
	      });
	    }

	    function listen(listener) {
	      return history.listen(function (location) {
	        listener(addQuery(location));
	      });
	    }

	    // Override all write methods with query-aware versions.
	    function push(location) {
	      history.push(appendQuery(location, location.query));
	    }

	    function replace(location) {
	      history.replace(appendQuery(location, location.query));
	    }

	    function createPath(location, query) {
	       false ? _warning2['default'](!query, 'the query argument to createPath is deprecated; use a location descriptor instead') : undefined;

	      return history.createPath(appendQuery(location, query || location.query));
	    }

	    function createHref(location, query) {
	       false ? _warning2['default'](!query, 'the query argument to createHref is deprecated; use a location descriptor instead') : undefined;

	      return history.createHref(appendQuery(location, query || location.query));
	    }

	    function createLocation(location) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      var fullLocation = history.createLocation.apply(history, [appendQuery(location, location.query)].concat(args));
	      if (location.query) {
	        fullLocation.query = location.query;
	      }
	      return addQuery(fullLocation);
	    }

	    // deprecated
	    function pushState(state, path, query) {
	      if (typeof path === 'string') path = _PathUtils.parsePath(path);

	      push(_extends({ state: state }, path, { query: query }));
	    }

	    // deprecated
	    function replaceState(state, path, query) {
	      if (typeof path === 'string') path = _PathUtils.parsePath(path);

	      replace(_extends({ state: state }, path, { query: query }));
	    }

	    return _extends({}, history, {
	      listenBefore: listenBefore,
	      listen: listen,
	      push: push,
	      replace: replace,
	      createPath: createPath,
	      createHref: createHref,
	      createLocation: createLocation,

	      pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),
	      replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')
	    });
	  };
	}

	exports['default'] = useQueries;
	module.exports = exports['default'];

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var strictUriEncode = __webpack_require__(24);

	exports.extract = function (str) {
		return str.split('?')[1] || '';
	};

	exports.parse = function (str) {
		if (typeof str !== 'string') {
			return {};
		}

		str = str.trim().replace(/^(\?|#|&)/, '');

		if (!str) {
			return {};
		}

		return str.split('&').reduce(function (ret, param) {
			var parts = param.replace(/\+/g, ' ').split('=');
			// Firefox (pre 40) decodes `%3D` to `=`
			// https://github.com/sindresorhus/query-string/pull/37
			var key = parts.shift();
			var val = parts.length > 0 ? parts.join('=') : undefined;

			key = decodeURIComponent(key);

			// missing `=` should be `null`:
			// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters
			val = val === undefined ? null : decodeURIComponent(val);

			if (!ret.hasOwnProperty(key)) {
				ret[key] = val;
			} else if (Array.isArray(ret[key])) {
				ret[key].push(val);
			} else {
				ret[key] = [ret[key], val];
			}

			return ret;
		}, {});
	};

	exports.stringify = function (obj) {
		return obj ? Object.keys(obj).sort().map(function (key) {
			var val = obj[key];

			if (val === undefined) {
				return '';
			}

			if (val === null) {
				return key;
			}

			if (Array.isArray(val)) {
				return val.sort().map(function (val2) {
					return strictUriEncode(key) + '=' + strictUriEncode(val2);
				}).join('&');
			}

			return strictUriEncode(key) + '=' + strictUriEncode(val);
		}).filter(function (x) {
			return x.length > 0;
		}).join('&') : '';
	};


/***/ },
/* 24 */
/***/ function(module, exports) {

	'use strict';
	module.exports = function (str) {
		return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {
			return '%' + c.charCodeAt(0).toString(16).toUpperCase();
		});
	};


/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _deprecate = __webpack_require__(1);

	var _deprecate2 = _interopRequireDefault(_deprecate);

	var _useBeforeUnload = __webpack_require__(21);

	var _useBeforeUnload2 = _interopRequireDefault(_useBeforeUnload);

	exports['default'] = _deprecate2['default'](_useBeforeUnload2['default'], 'enableBeforeUnload is deprecated, use useBeforeUnload instead');
	module.exports = exports['default'];

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _deprecate = __webpack_require__(1);

	var _deprecate2 = _interopRequireDefault(_deprecate);

	var _useQueries = __webpack_require__(22);

	var _useQueries2 = _interopRequireDefault(_useQueries);

	exports['default'] = _deprecate2['default'](_useQueries2['default'], 'enableQueries is deprecated, use useQueries instead');
	module.exports = exports['default'];

/***/ }
/******/ ])
});
;
/*!
 * Copyright (c) 2015 Chris O'Hara <cohara87@gmail.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

(function (name, definition) {
    if (typeof exports !== 'undefined' && typeof module !== 'undefined') {
        module.exports = definition();
    } else if (typeof define === 'function' && typeof define.amd === 'object') {
        define(definition);
    } else if (typeof define === 'function' && typeof define.petal === 'object') {
        define(name, [], definition);
    } else {
        this[name] = definition();
    }
})('validator', function (validator) {

    'use strict';

    validator = { version: '4.5.0' };

    var emailUserPart = /^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~]+$/i;
    var quotedEmailUser = /^([\s\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e]|(\\[\x01-\x09\x0b\x0c\x0d-\x7f]))*$/i;

    var emailUserUtf8Part = /^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+$/i;
    var quotedEmailUserUtf8 = /^([\s\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|(\\[\x01-\x09\x0b\x0c\x0d-\x7f\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))*$/i;

    var displayName = /^[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~\.\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+[a-z\d!#\$%&'\*\+\-\/=\?\^_`{\|}~\.\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF\s]*<(.+)>$/i;

    var creditCard = /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11})$/;

    var isin = /^[A-Z]{2}[0-9A-Z]{9}[0-9]$/;

    var isbn10Maybe = /^(?:[0-9]{9}X|[0-9]{10})$/
      , isbn13Maybe = /^(?:[0-9]{13})$/;

    var macAddress = /^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$/;

    var ipv4Maybe = /^(\d+)\.(\d+)\.(\d+)\.(\d+)$/
      , ipv6Block = /^[0-9A-F]{1,4}$/i;

    var uuid = {
        '3': /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i
      , '4': /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i
      , '5': /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i
      , all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i
    };

    var alpha = /^[A-Z]+$/i
      , alphanumeric = /^[0-9A-Z]+$/i
      , numeric = /^[-+]?[0-9]+$/
      , int = /^(?:[-+]?(?:0|[1-9][0-9]*))$/
      , float = /^(?:[-+]?(?:[0-9]+))?(?:\.[0-9]*)?(?:[eE][\+\-]?(?:[0-9]+))?$/
      , hexadecimal = /^[0-9A-F]+$/i
      , decimal = /^[-+]?([0-9]+|\.[0-9]+|[0-9]+\.[0-9]+)$/
      , hexcolor = /^#?([0-9A-F]{3}|[0-9A-F]{6})$/i;

    var ascii = /^[\x00-\x7F]+$/
      , multibyte = /[^\x00-\x7F]/
      , fullWidth = /[^\u0020-\u007E\uFF61-\uFF9F\uFFA0-\uFFDC\uFFE8-\uFFEE0-9a-zA-Z]/
      , halfWidth = /[\u0020-\u007E\uFF61-\uFF9F\uFFA0-\uFFDC\uFFE8-\uFFEE0-9a-zA-Z]/;

    var surrogatePair = /[\uD800-\uDBFF][\uDC00-\uDFFF]/;

    var base64 = /^(?:[A-Z0-9+\/]{4})*(?:[A-Z0-9+\/]{2}==|[A-Z0-9+\/]{3}=|[A-Z0-9+\/]{4})$/i;

    var phones = {
      'zh-CN': /^(\+?0?86\-?)?((13\d|14[57]|15[^4,\D]|17[678]|18\d)\d{8}|170[059]\d{7})$/,
      'zh-TW': /^(\+?886\-?|0)?9\d{8}$/,
      'en-ZA': /^(\+?27|0)\d{9}$/,
      'en-AU': /^(\+?61|0)4\d{8}$/,
      'en-HK': /^(\+?852\-?)?[569]\d{3}\-?\d{4}$/,
      'fr-FR': /^(\+?33|0)[67]\d{8}$/,
      'pt-PT': /^(\+351)?9[1236]\d{7}$/,
      'el-GR': /^(\+?30)?(69\d{8})$/,
      'en-GB': /^(\+?44|0)7\d{9}$/,
      'en-US': /^(\+?1)?[2-9]\d{2}[2-9](?!11)\d{6}$/,
      'en-ZM': /^(\+26)?09[567]\d{7}$/,
      'ru-RU': /^(\+?7|8)?9\d{9}$/,
      'nb-NO': /^(\+?47)?[49]\d{7}$/,
      'nn-NO': /^(\+?47)?[49]\d{7}$/,
      'vi-VN': /^(0|\+?84)?((1(2([0-9])|6([2-9])|88|99))|(9((?!5)[0-9])))([0-9]{7})$/,
      'en-NZ': /^(\+?64|0)2\d{7,9}$/,
      'en-IN': /^(\+?91|0)?[789]\d{9}$/
    };

    // from http://goo.gl/0ejHHW
    var iso8601 = /^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$/;

    validator.extend = function (name, fn) {
        validator[name] = function () {
            var args = Array.prototype.slice.call(arguments);
            args[0] = validator.toString(args[0]);
            return fn.apply(validator, args);
        };
    };

    //Right before exporting the validator object, pass each of the builtins
    //through extend() so that their first argument is coerced to a string
    validator.init = function () {
        for (var name in validator) {
            if (typeof validator[name] !== 'function' || name === 'toString' ||
                    name === 'toDate' || name === 'extend' || name === 'init') {
                continue;
            }
            validator.extend(name, validator[name]);
        }
    };

    validator.toString = function (input) {
        if (typeof input === 'object' && input !== null && input.toString) {
            input = input.toString();
        } else if (input === null || typeof input === 'undefined' || (isNaN(input) && !input.length)) {
            input = '';
        }
        return '' + input;
    };

    validator.toDate = function (date) {
        if (Object.prototype.toString.call(date) === '[object Date]') {
            return date;
        }
        date = Date.parse(date);
        return !isNaN(date) ? new Date(date) : null;
    };

    validator.toFloat = function (str) {
        return parseFloat(str);
    };

    validator.toInt = function (str, radix) {
        return parseInt(str, radix || 10);
    };

    validator.toBoolean = function (str, strict) {
        if (strict) {
            return str === '1' || str === 'true';
        }
        return str !== '0' && str !== 'false' && str !== '';
    };

    validator.equals = function (str, comparison) {
        return str === validator.toString(comparison);
    };

    validator.contains = function (str, elem) {
        return str.indexOf(validator.toString(elem)) >= 0;
    };

    validator.matches = function (str, pattern, modifiers) {
        if (Object.prototype.toString.call(pattern) !== '[object RegExp]') {
            pattern = new RegExp(pattern, modifiers);
        }
        return pattern.test(str);
    };

    var default_email_options = {
        allow_display_name: false,
        allow_utf8_local_part: true,
        require_tld: true
    };

    validator.isEmail = function (str, options) {
        options = merge(options, default_email_options);

        if (options.allow_display_name) {
            var display_email = str.match(displayName);
            if (display_email) {
                str = display_email[1];
            }
        }

        var parts = str.split('@')
          , domain = parts.pop()
          , user = parts.join('@');

        var lower_domain = domain.toLowerCase();
        if (lower_domain === 'gmail.com' || lower_domain === 'googlemail.com') {
            user = user.replace(/\./g, '').toLowerCase();
        }

        if (!validator.isByteLength(user, 0, 64) ||
                !validator.isByteLength(domain, 0, 256)) {
            return false;
        }

        if (!validator.isFQDN(domain, {require_tld: options.require_tld})) {
            return false;
        }

        if (user[0] === '"') {
            user = user.slice(1, user.length - 1);
            return options.allow_utf8_local_part ?
                quotedEmailUserUtf8.test(user) :
                quotedEmailUser.test(user);
        }

        var pattern = options.allow_utf8_local_part ?
            emailUserUtf8Part : emailUserPart;

        var user_parts = user.split('.');
        for (var i = 0; i < user_parts.length; i++) {
            if (!pattern.test(user_parts[i])) {
                return false;
            }
        }

        return true;
    };

    var default_url_options = {
        protocols: [ 'http', 'https', 'ftp' ]
      , require_tld: true
      , require_protocol: false
      , require_valid_protocol: true
      , allow_underscores: false
      , allow_trailing_dot: false
      , allow_protocol_relative_urls: false
    };

    validator.isURL = function (url, options) {
        if (!url || url.length >= 2083 || /\s/.test(url)) {
            return false;
        }
        if (url.indexOf('mailto:') === 0) {
            return false;
        }
        options = merge(options, default_url_options);
        var protocol, auth, host, hostname, port,
            port_str, split;
        split = url.split('://');
        if (split.length > 1) {
            protocol = split.shift();
            if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {
                return false;
            }
        } else if (options.require_protocol) {
            return false;
        }  else if (options.allow_protocol_relative_urls && url.substr(0, 2) === '//') {
            split[0] = url.substr(2);
        }
        url = split.join('://');
        split = url.split('#');
        url = split.shift();

        split = url.split('?');
        url = split.shift();

        split = url.split('/');
        url = split.shift();
        split = url.split('@');
        if (split.length > 1) {
            auth = split.shift();
            if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {
                return false;
            }
        }
        hostname = split.join('@');
        split = hostname.split(':');
        host = split.shift();
        if (split.length) {
            port_str = split.join(':');
            port = parseInt(port_str, 10);
            if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {
                return false;
            }
        }
        if (!validator.isIP(host) && !validator.isFQDN(host, options) &&
                host !== 'localhost') {
            return false;
        }
        if (options.host_whitelist &&
                options.host_whitelist.indexOf(host) === -1) {
            return false;
        }
        if (options.host_blacklist &&
                options.host_blacklist.indexOf(host) !== -1) {
            return false;
        }
        return true;
    };

    validator.isMACAddress = function (str) {
        return macAddress.test(str);
    };

    validator.isIP = function (str, version) {
        version = validator.toString(version);
        if (!version) {
            return validator.isIP(str, 4) || validator.isIP(str, 6);
        } else if (version === '4') {
            if (!ipv4Maybe.test(str)) {
                return false;
            }
            var parts = str.split('.').sort(function (a, b) {
                return a - b;
            });
            return parts[3] <= 255;
        } else if (version === '6') {
            var blocks = str.split(':');
            var foundOmissionBlock = false; // marker to indicate ::

            // At least some OS accept the last 32 bits of an IPv6 address
            // (i.e. 2 of the blocks) in IPv4 notation, and RFC 3493 says
            // that '::ffff:a.b.c.d' is valid for IPv4-mapped IPv6 addresses,
            // and '::a.b.c.d' is deprecated, but also valid.
            var foundIPv4TransitionBlock = validator.isIP(blocks[blocks.length - 1], 4);
            var expectedNumberOfBlocks = foundIPv4TransitionBlock ? 7 : 8;

            if (blocks.length > expectedNumberOfBlocks)
                return false;

            // initial or final ::
            if (str === '::') {
                return true;
            } else if (str.substr(0, 2) === '::') {
                blocks.shift();
                blocks.shift();
                foundOmissionBlock = true;
            } else if (str.substr(str.length - 2) === '::') {
                blocks.pop();
                blocks.pop();
                foundOmissionBlock = true;
            }

            for (var i = 0; i < blocks.length; ++i) {
                // test for a :: which can not be at the string start/end
                // since those cases have been handled above
                if (blocks[i] === '' && i > 0 && i < blocks.length -1) {
                    if (foundOmissionBlock)
                        return false; // multiple :: in address
                    foundOmissionBlock = true;
                } else if (foundIPv4TransitionBlock && i == blocks.length - 1) {
                    // it has been checked before that the last
                    // block is a valid IPv4 address
                } else if (!ipv6Block.test(blocks[i])) {
                    return false;
                }
            }

            if (foundOmissionBlock) {
                return blocks.length >= 1;
            } else {
                return blocks.length === expectedNumberOfBlocks;
            }
        }
        return false;
    };

    var default_fqdn_options = {
        require_tld: true
      , allow_underscores: false
      , allow_trailing_dot: false
    };

    validator.isFQDN = function (str, options) {
        options = merge(options, default_fqdn_options);

        /* Remove the optional trailing dot before checking validity */
        if (options.allow_trailing_dot && str[str.length - 1] === '.') {
            str = str.substring(0, str.length - 1);
        }
        var parts = str.split('.');
        if (options.require_tld) {
            var tld = parts.pop();
            if (!parts.length || !/^([a-z\u00a1-\uffff]{2,}|xn[a-z0-9-]{2,})$/i.test(tld)) {
                return false;
            }
        }
        for (var part, i = 0; i < parts.length; i++) {
            part = parts[i];
            if (options.allow_underscores) {
                if (part.indexOf('__') >= 0) {
                    return false;
                }
                part = part.replace(/_/g, '');
            }
            if (!/^[a-z\u00a1-\uffff0-9-]+$/i.test(part)) {
                return false;
            }
            if (/[\uff01-\uff5e]/.test(part)) {
                // disallow full-width chars
                return false;
            }
            if (part[0] === '-' || part[part.length - 1] === '-') {
                return false;
            }
            if (part.indexOf('---') >= 0 && part.slice(0, 4) !== 'xn--') {
                return false;
            }
        }
        return true;
    };

    validator.isBoolean = function(str) {
        return (['true', 'false', '1', '0'].indexOf(str) >= 0);
    };

    validator.isAlpha = function (str) {
        return alpha.test(str);
    };

    validator.isAlphanumeric = function (str) {
        return alphanumeric.test(str);
    };

    validator.isNumeric = function (str) {
        return numeric.test(str);
    };

    validator.isDecimal = function (str) {
        return str !== '' && decimal.test(str);
    };

    validator.isHexadecimal = function (str) {
        return hexadecimal.test(str);
    };

    validator.isHexColor = function (str) {
        return hexcolor.test(str);
    };

    validator.isLowercase = function (str) {
        return str === str.toLowerCase();
    };

    validator.isUppercase = function (str) {
        return str === str.toUpperCase();
    };

    validator.isInt = function (str, options) {
        options = options || {};
        return int.test(str) && (!options.hasOwnProperty('min') || str >= options.min) && (!options.hasOwnProperty('max') || str <= options.max);
    };

    validator.isFloat = function (str, options) {
        options = options || {};
        if (str === '' || str === '.') {
            return false;
        }
        return float.test(str) && (!options.hasOwnProperty('min') || str >= options.min) && (!options.hasOwnProperty('max') || str <= options.max);
    };

    validator.isDivisibleBy = function (str, num) {
        return validator.toFloat(str) % validator.toInt(num) === 0;
    };

    validator.isNull = function (str) {
        return str.length === 0;
    };

    validator.isLength = function (str, min, max) {
        var surrogatePairs = str.match(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g) || [];
        var len = str.length - surrogatePairs.length;
        return len >= min && (typeof max === 'undefined' || len <= max);
    };

    validator.isByteLength = function (str, min, max) {
        var len = encodeURI(str).split(/%..|./).length - 1;
        return len >= min && (typeof max === 'undefined' || len <= max);
    };

    validator.isUUID = function (str, version) {
        var pattern = uuid[version ? version : 'all'];
        return pattern && pattern.test(str);
    };

    function getTimezoneOffset(str) {
        var iso8601Parts = str.match(iso8601)
          , timezone, sign, hours, minutes;
        if (!iso8601Parts) {
            str = str.toLowerCase();
            timezone = str.match(/(?:\s|gmt\s*)(-|\+)(\d{1,4})(\s|$)/);
            if (!timezone) {
                return str.indexOf('gmt') !== -1 ? 0 : null;
            }
            sign = timezone[1];
            var offset = timezone[2];
            if (offset.length === 3) {
                offset = '0' + offset;
            }
            if (offset.length <= 2) {
                hours = 0;
                minutes = parseInt(offset);
            } else {
                hours = parseInt(offset.slice(0, 2));
                minutes = parseInt(offset.slice(2, 4));
            }
        } else {
            timezone = iso8601Parts[21];
            if (!timezone) {
                return null;
            }
            if (timezone === 'z' || timezone === 'Z') {
                return 0;
            }
            sign = iso8601Parts[22];
            if (timezone.indexOf(':') !== -1) {
                hours = parseInt(iso8601Parts[23]);
                minutes = parseInt(iso8601Parts[24]);
            } else {
                hours = 0;
                minutes = parseInt(iso8601Parts[23]);
            }
        }
        return (hours * 60 + minutes) * (sign === '-' ? 1 : -1);
    }

    validator.isDate = function (str) {
        var normalizedDate = new Date(Date.parse(str));
        if (isNaN(normalizedDate)) {
            return false;
        }

        // normalizedDate is in the user's timezone. Apply the input
        // timezone offset to the date so that the year and day match
        // the input
        var timezoneOffset = getTimezoneOffset(str);
        if (timezoneOffset !== null) {
            var timezoneDifference = normalizedDate.getTimezoneOffset() -
                timezoneOffset;
            normalizedDate = new Date(normalizedDate.getTime() +
                60000 * timezoneDifference);
        }

        var day = String(normalizedDate.getDate());
        var dayOrYear, dayOrYearMatches, year;
        //check for valid double digits that could be late days
        //check for all matches since a string like '12/23' is a valid date
        //ignore everything with nearby colons
        dayOrYearMatches = str.match(/(^|[^:\d])[23]\d([^:\d]|$)/g);
        if (!dayOrYearMatches) {
            return true;
        }
        dayOrYear = dayOrYearMatches.map(function(digitString) {
            return digitString.match(/\d+/g)[0];
        }).join('/');

        year = String(normalizedDate.getFullYear()).slice(-2);
        if (dayOrYear === day || dayOrYear === year) {
            return true;
        } else if ((dayOrYear === (day + '/' + year)) || (dayOrYear === (year + '/' + day))) {
            return true;
        }
        return false;
    };

    validator.isAfter = function (str, date) {
        var comparison = validator.toDate(date || new Date())
          , original = validator.toDate(str);
        return !!(original && comparison && original > comparison);
    };

    validator.isBefore = function (str, date) {
        var comparison = validator.toDate(date || new Date())
          , original = validator.toDate(str);
        return !!(original && comparison && original < comparison);
    };

    validator.isIn = function (str, options) {
        var i;
        if (Object.prototype.toString.call(options) === '[object Array]') {
            var array = [];
            for (i in options) {
                array[i] = validator.toString(options[i]);
            }
            return array.indexOf(str) >= 0;
        } else if (typeof options === 'object') {
            return options.hasOwnProperty(str);
        } else if (options && typeof options.indexOf === 'function') {
            return options.indexOf(str) >= 0;
        }
        return false;
    };

    validator.isWhitelisted = function (str, chars) {
        for (var i = str.length - 1; i >= 0; i--) {
            if (chars.indexOf(str[i]) === -1) {
                return false;
            }
        }

        return true;
    };

    validator.isCreditCard = function (str) {
        var sanitized = str.replace(/[^0-9]+/g, '');
        if (!creditCard.test(sanitized)) {
            return false;
        }
        var sum = 0, digit, tmpNum, shouldDouble;
        for (var i = sanitized.length - 1; i >= 0; i--) {
            digit = sanitized.substring(i, (i + 1));
            tmpNum = parseInt(digit, 10);
            if (shouldDouble) {
                tmpNum *= 2;
                if (tmpNum >= 10) {
                    sum += ((tmpNum % 10) + 1);
                } else {
                    sum += tmpNum;
                }
            } else {
                sum += tmpNum;
            }
            shouldDouble = !shouldDouble;
        }
        return !!((sum % 10) === 0 ? sanitized : false);
    };

    validator.isISIN = function (str) {
        if (!isin.test(str)) {
            return false;
        }

        var checksumStr = str.replace(/[A-Z]/g, function(character) {
            return parseInt(character, 36);
        });

        var sum = 0, digit, tmpNum, shouldDouble = true;
        for (var i = checksumStr.length - 2; i >= 0; i--) {
            digit = checksumStr.substring(i, (i + 1));
            tmpNum = parseInt(digit, 10);
            if (shouldDouble) {
                tmpNum *= 2;
                if (tmpNum >= 10) {
                    sum += tmpNum + 1;
                } else {
                    sum += tmpNum;
                }
            } else {
                sum += tmpNum;
            }
            shouldDouble = !shouldDouble;
        }

        return parseInt(str.substr(str.length - 1), 10) === (10000 - sum) % 10;
    };

    validator.isISBN = function (str, version) {
        version = validator.toString(version);
        if (!version) {
            return validator.isISBN(str, 10) || validator.isISBN(str, 13);
        }
        var sanitized = str.replace(/[\s-]+/g, '')
          , checksum = 0, i;
        if (version === '10') {
            if (!isbn10Maybe.test(sanitized)) {
                return false;
            }
            for (i = 0; i < 9; i++) {
                checksum += (i + 1) * sanitized.charAt(i);
            }
            if (sanitized.charAt(9) === 'X') {
                checksum += 10 * 10;
            } else {
                checksum += 10 * sanitized.charAt(9);
            }
            if ((checksum % 11) === 0) {
                return !!sanitized;
            }
        } else  if (version === '13') {
            if (!isbn13Maybe.test(sanitized)) {
                return false;
            }
            var factor = [ 1, 3 ];
            for (i = 0; i < 12; i++) {
                checksum += factor[i % 2] * sanitized.charAt(i);
            }
            if (sanitized.charAt(12) - ((10 - (checksum % 10)) % 10) === 0) {
                return !!sanitized;
            }
        }
        return false;
    };

    validator.isMobilePhone = function(str, locale) {
        if (locale in phones) {
            return phones[locale].test(str);
        }
        return false;
    };

    var default_currency_options = {
        symbol: '$'
      , require_symbol: false
      , allow_space_after_symbol: false
      , symbol_after_digits: false
      , allow_negatives: true
      , parens_for_negatives: false
      , negative_sign_before_digits: false
      , negative_sign_after_digits: false
      , allow_negative_sign_placeholder: false
      , thousands_separator: ','
      , decimal_separator: '.'
      , allow_space_after_digits: false
    };

    validator.isCurrency = function (str, options) {
        options = merge(options, default_currency_options);

        return currencyRegex(options).test(str);
    };

    validator.isJSON = function (str) {
        try {
            var obj = JSON.parse(str);
            return !!obj && typeof obj === 'object';
        } catch (e) {}
        return false;
    };

    validator.isMultibyte = function (str) {
        return multibyte.test(str);
    };

    validator.isAscii = function (str) {
        return ascii.test(str);
    };

    validator.isFullWidth = function (str) {
        return fullWidth.test(str);
    };

    validator.isHalfWidth = function (str) {
        return halfWidth.test(str);
    };

    validator.isVariableWidth = function (str) {
        return fullWidth.test(str) && halfWidth.test(str);
    };

    validator.isSurrogatePair = function (str) {
        return surrogatePair.test(str);
    };

    validator.isBase64 = function (str) {
        return base64.test(str);
    };

    validator.isMongoId = function (str) {
        return validator.isHexadecimal(str) && str.length === 24;
    };

    validator.isISO8601 = function (str) {
        return iso8601.test(str);
    };

    validator.ltrim = function (str, chars) {
        var pattern = chars ? new RegExp('^[' + chars + ']+', 'g') : /^\s+/g;
        return str.replace(pattern, '');
    };

    validator.rtrim = function (str, chars) {
        var pattern = chars ? new RegExp('[' + chars + ']+$', 'g') : /\s+$/g;
        return str.replace(pattern, '');
    };

    validator.trim = function (str, chars) {
        var pattern = chars ? new RegExp('^[' + chars + ']+|[' + chars + ']+$', 'g') : /^\s+|\s+$/g;
        return str.replace(pattern, '');
    };

    validator.escape = function (str) {
        return (str.replace(/&/g, '&amp;')
            .replace(/"/g, '&quot;')
            .replace(/'/g, '&#x27;')
            .replace(/</g, '&lt;')
            .replace(/>/g, '&gt;')
            .replace(/\//g, '&#x2F;')
            .replace(/\`/g, '&#96;'));
    };

    validator.stripLow = function (str, keep_new_lines) {
        var chars = keep_new_lines ? '\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F' : '\\x00-\\x1F\\x7F';
        return validator.blacklist(str, chars);
    };

    validator.whitelist = function (str, chars) {
        return str.replace(new RegExp('[^' + chars + ']+', 'g'), '');
    };

    validator.blacklist = function (str, chars) {
        return str.replace(new RegExp('[' + chars + ']+', 'g'), '');
    };

    var default_normalize_email_options = {
        lowercase: true,
        remove_dots: true,
        remove_extension: true
    };

    validator.normalizeEmail = function (email, options) {
        options = merge(options, default_normalize_email_options);
        if (!validator.isEmail(email)) {
            return false;
        }
        var parts = email.split('@', 2);
        parts[1] = parts[1].toLowerCase();
        if (parts[1] === 'gmail.com' || parts[1] === 'googlemail.com') {
            if (options.remove_extension) {
                parts[0] = parts[0].split('+')[0];
            }
            if (options.remove_dots) {
                parts[0] = parts[0].replace(/\./g, '');
            }
            if (!parts[0].length) {
                return false;
            }
            parts[0] = parts[0].toLowerCase();
            parts[1] = 'gmail.com';
        } else if (options.lowercase) {
            parts[0] = parts[0].toLowerCase();
        }
        return parts.join('@');
    };

    function merge(obj, defaults) {
        obj = obj || {};
        for (var key in defaults) {
            if (typeof obj[key] === 'undefined') {
                obj[key] = defaults[key];
            }
        }
        return obj;
    }

    function currencyRegex(options) {
        var symbol = '(\\' + options.symbol.replace(/\./g, '\\.') + ')' + (options.require_symbol ? '' : '?')
            , negative = '-?'
            , whole_dollar_amount_without_sep = '[1-9]\\d*'
            , whole_dollar_amount_with_sep = '[1-9]\\d{0,2}(\\' + options.thousands_separator + '\\d{3})*'
            , valid_whole_dollar_amounts = ['0', whole_dollar_amount_without_sep, whole_dollar_amount_with_sep]
            , whole_dollar_amount = '(' + valid_whole_dollar_amounts.join('|') + ')?'
            , decimal_amount = '(\\' + options.decimal_separator + '\\d{2})?';
        var pattern = whole_dollar_amount + decimal_amount;
        // default is negative sign before symbol, but there are two other options (besides parens)
        if (options.allow_negatives && !options.parens_for_negatives) {
            if (options.negative_sign_after_digits) {
                pattern += negative;
            }
            else if (options.negative_sign_before_digits) {
                pattern = negative + pattern;
            }
        }
        // South African Rand, for example, uses R 123 (space) and R-123 (no space)
        if (options.allow_negative_sign_placeholder) {
            pattern = '( (?!\\-))?' + pattern;
        }
        else if (options.allow_space_after_symbol) {
            pattern = ' ?' + pattern;
        }
        else if (options.allow_space_after_digits) {
            pattern += '( (?!$))?';
        }
        if (options.symbol_after_digits) {
            pattern += symbol;
        } else {
            pattern = symbol + pattern;
        }
        if (options.allow_negatives) {
            if (options.parens_for_negatives) {
                pattern = '(\\(' + pattern + '\\)|' + pattern + ')';
            }
            else if (!(options.negative_sign_before_digits || options.negative_sign_after_digits)) {
                pattern = negative + pattern;
            }
        }
        return new RegExp(
            '^' +
            // ensure there's a dollar and/or decimal amount, and that it doesn't start with a space or a negative sign followed by a space
            '(?!-? )(?=.*\\d)' +
            pattern +
            '$'
        );
    }

    validator.init();

    return validator;

});

/*
Currently reselect 2.0.2 not provided as umd build
in case of update current file built with following webpack config:

module.exports = {
    output: {
        library: 'Reselect',
        libraryTarget: 'umd'
    },
    module: {
        loaders: [
            { test: /\.js$/, loader: 'babel-loader' }
        ]
    }
};
*/

(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["Reselect"] = factory();
	else
		root["Reselect"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	exports.defaultMemoize = defaultMemoize;
	exports.createSelectorCreator = createSelectorCreator;
	exports.createSelector = createSelector;
	exports.createStructuredSelector = createStructuredSelector;

	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }

	function defaultEqualityCheck(a, b) {
	  return a === b;
	}

	function defaultMemoize(func) {
	  var equalityCheck = arguments.length <= 1 || arguments[1] === undefined ? defaultEqualityCheck : arguments[1];

	  var lastArgs = null;
	  var lastResult = null;
	  return function () {
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    if (lastArgs !== null && args.every(function (value, index) {
	      return equalityCheck(value, lastArgs[index]);
	    })) {
	      return lastResult;
	    }
	    lastArgs = args;
	    lastResult = func.apply(undefined, args);
	    return lastResult;
	  };
	}

	function getDependencies(funcs) {
	  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;

	  if (!dependencies.every(function (dep) {
	    return typeof dep === 'function';
	  })) {
	    var dependencyTypes = dependencies.map(function (dep) {
	      return typeof dep;
	    }).join(', ');
	    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));
	  }

	  return dependencies;
	}

	function createSelectorCreator(memoize) {
	  for (var _len2 = arguments.length, memoizeOptions = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
	    memoizeOptions[_key2 - 1] = arguments[_key2];
	  }

	  return function () {
	    for (var _len3 = arguments.length, funcs = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
	      funcs[_key3] = arguments[_key3];
	    }

	    var recomputations = 0;
	    var resultFunc = funcs.pop();
	    var dependencies = getDependencies(funcs);

	    var memoizedResultFunc = memoize.apply(undefined, [function () {
	      recomputations++;
	      return resultFunc.apply(undefined, arguments);
	    }].concat(memoizeOptions));

	    var selector = function selector(state, props) {
	      for (var _len4 = arguments.length, args = Array(_len4 > 2 ? _len4 - 2 : 0), _key4 = 2; _key4 < _len4; _key4++) {
	        args[_key4 - 2] = arguments[_key4];
	      }

	      var params = dependencies.map(function (dependency) {
	        return dependency.apply(undefined, [state, props].concat(args));
	      });
	      return memoizedResultFunc.apply(undefined, _toConsumableArray(params));
	    };

	    selector.recomputations = function () {
	      return recomputations;
	    };
	    return selector;
	  };
	}

	function createSelector() {
	  return createSelectorCreator(defaultMemoize).apply(undefined, arguments);
	}

	function createStructuredSelector(selectors) {
	  var selectorCreator = arguments.length <= 1 || arguments[1] === undefined ? createSelector : arguments[1];

	  if (typeof selectors !== 'object') {
	    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));
	  }
	  var objectKeys = Object.keys(selectors);
	  return selectorCreator(objectKeys.map(function (key) {
	    return selectors[key];
	  }), function () {
	    for (var _len5 = arguments.length, values = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
	      values[_key5] = arguments[_key5];
	    }

	    return values.reduce(function (composition, value, index) {
	      composition[objectKeys[index]] = value;
	      return composition;
	    }, {});
	  });
	}

/***/ }
/******/ ])
});
;
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"));
	else if(typeof define === 'function' && define.amd)
		define(["react"], factory);
	else if(typeof exports === 'object')
		exports["ReactCustomScrollbars"] = factory(require("react"));
	else
		root["ReactCustomScrollbars"] = factory(root["React"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Scrollbars = undefined;

	var _Scrollbars = __webpack_require__(5);

	var _Scrollbars2 = _interopRequireDefault(_Scrollbars);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Scrollbars2.default;
	exports.Scrollbars = _Scrollbars2.default;

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	var prefix = __webpack_require__(12)
	var toCamelCase = __webpack_require__(15)
	var cache = { 'float': 'cssFloat' }
	var addPxToStyle = __webpack_require__(3)

	function style (element, property, value) {
	  var camel = cache[property]
	  if (typeof camel === 'undefined') {
	    camel = detect(property)
	  }

	  // may be false if CSS prop is unsupported
	  if (camel) {
	    if (value === undefined) {
	      return element.style[camel]
	    }

	    element.style[camel] = addPxToStyle(camel, value)
	  }
	}

	function each (element, properties) {
	  for (var k in properties) {
	    if (properties.hasOwnProperty(k)) {
	      style(element, k, properties[k])
	    }
	  }
	}

	function detect (cssProp) {
	  var camel = toCamelCase(cssProp)
	  var result = prefix(camel)
	  cache[camel] = cache[cssProp] = cache[result] = result
	  return result
	}

	function set () {
	  if (arguments.length === 2) {
	    each(arguments[0], arguments[1])
	  } else {
	    style(arguments[0], arguments[1], arguments[2])
	  }
	}

	module.exports = set
	module.exports.set = set

	module.exports.get = function (element, properties) {
	  if (Array.isArray(properties)) {
	    return properties.reduce(function (obj, prop) {
	      obj[prop] = style(element, prop || '')
	      return obj
	    }, {})
	  } else {
	    return style(element, properties || '')
	  }
	}


/***/ },
/* 2 */
/***/ function(module, exports) {

	module.exports = __WEBPACK_EXTERNAL_MODULE_2__;

/***/ },
/* 3 */
/***/ function(module, exports) {

	/* The following list is defined in React's core */
	var IS_UNITLESS = {
	  animationIterationCount: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  gridRow: true,
	  gridColumn: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,

	  // SVG-related properties
	  fillOpacity: true,
	  stopOpacity: true,
	  strokeDashoffset: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};

	module.exports = function(name, value) {
	  if(typeof value === 'number' && !IS_UNITLESS[ name ]) {
	    return value + 'px';
	  } else {
	    return value;
	  }
	};

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.renderViewDefault = renderViewDefault;
	exports.renderTrackHorizontalDefault = renderTrackHorizontalDefault;
	exports.renderTrackVerticalDefault = renderTrackVerticalDefault;
	exports.renderThumbHorizontalDefault = renderThumbHorizontalDefault;
	exports.renderThumbVerticalDefault = renderThumbVerticalDefault;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function renderViewDefault(props) {
	    return _react2.default.createElement('div', props);
	}

	function renderTrackHorizontalDefault(_ref) {
	    var style = _ref.style;

	    var props = _objectWithoutProperties(_ref, ['style']);

	    var finalStyle = _extends({}, style, {
	        right: 2,
	        bottom: 2,
	        left: 2,
	        borderRadius: 3,
	        cursor: 'pointer'
	    });
	    return _react2.default.createElement('div', _extends({ style: finalStyle }, props));
	}

	function renderTrackVerticalDefault(_ref2) {
	    var style = _ref2.style;

	    var props = _objectWithoutProperties(_ref2, ['style']);

	    var finalStyle = _extends({}, style, {
	        right: 2,
	        bottom: 2,
	        top: 2,
	        borderRadius: 3,
	        cursor: 'pointer'
	    });
	    return _react2.default.createElement('div', _extends({ style: finalStyle }, props));
	}

	function renderThumbHorizontalDefault(_ref3) {
	    var style = _ref3.style;

	    var props = _objectWithoutProperties(_ref3, ['style']);

	    var finalStyle = _extends({}, style, {
	        cursor: 'pointer',
	        borderRadius: 'inherit',
	        backgroundColor: 'rgba(0,0,0,.2)'
	    });
	    return _react2.default.createElement('div', _extends({ style: finalStyle }, props));
	}

	function renderThumbVerticalDefault(_ref4) {
	    var style = _ref4.style;

	    var props = _objectWithoutProperties(_ref4, ['style']);

	    var finalStyle = _extends({}, style, {
	        cursor: 'pointer',
	        borderRadius: 'inherit',
	        backgroundColor: 'rgba(0,0,0,.2)'
	    });
	    return _react2.default.createElement('div', _extends({ style: finalStyle }, props));
	}

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _raf2 = __webpack_require__(14);

	var _raf3 = _interopRequireDefault(_raf2);

	var _domCss = __webpack_require__(1);

	var _domCss2 = _interopRequireDefault(_domCss);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _getScrollbarWidth = __webpack_require__(9);

	var _getScrollbarWidth2 = _interopRequireDefault(_getScrollbarWidth);

	var _returnFalse = __webpack_require__(10);

	var _returnFalse2 = _interopRequireDefault(_returnFalse);

	var _getInnerWidth = __webpack_require__(8);

	var _getInnerWidth2 = _interopRequireDefault(_getInnerWidth);

	var _getInnerHeight = __webpack_require__(7);

	var _getInnerHeight2 = _interopRequireDefault(_getInnerHeight);

	var _styles = __webpack_require__(6);

	var _defaultRenderElements = __webpack_require__(4);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	exports.default = (0, _react.createClass)({

	    displayName: 'Scrollbars',

	    propTypes: {
	        onScroll: _react.PropTypes.func,
	        onScrollFrame: _react.PropTypes.func,
	        onScrollStart: _react.PropTypes.func,
	        onScrollStop: _react.PropTypes.func,
	        renderView: _react.PropTypes.func,
	        renderTrackHorizontal: _react.PropTypes.func,
	        renderTrackVertical: _react.PropTypes.func,
	        renderThumbHorizontal: _react.PropTypes.func,
	        renderThumbVertical: _react.PropTypes.func,
	        autoHide: _react.PropTypes.bool,
	        autoHideTimeout: _react.PropTypes.number,
	        autoHideDuration: _react.PropTypes.number,
	        thumbSize: _react.PropTypes.number,
	        thumbMinSize: _react.PropTypes.number,
	        universal: _react.PropTypes.bool,
	        style: _react.PropTypes.object,
	        children: _react.PropTypes.node
	    },

	    getDefaultProps: function getDefaultProps() {
	        return {
	            renderView: _defaultRenderElements.renderViewDefault,
	            renderTrackHorizontal: _defaultRenderElements.renderTrackHorizontalDefault,
	            renderTrackVertical: _defaultRenderElements.renderTrackVerticalDefault,
	            renderThumbHorizontal: _defaultRenderElements.renderThumbHorizontalDefault,
	            renderThumbVertical: _defaultRenderElements.renderThumbVerticalDefault,
	            autoHide: false,
	            autoHideTimeout: 1000,
	            autoHideDuration: 200,
	            thumbMinSize: 30,
	            universal: false
	        };
	    },
	    getInitialState: function getInitialState() {
	        return {
	            didMountUniversal: false
	        };
	    },
	    componentDidMount: function componentDidMount() {
	        this.addListeners();
	        this.update();
	        this.componentDidMountUniversal();
	    },
	    componentDidMountUniversal: function componentDidMountUniversal() {
	        // eslint-disable-line react/sort-comp
	        var universal = this.props.universal;

	        if (!universal) return;
	        this.setState({ didMountUniversal: true });
	    },
	    componentDidUpdate: function componentDidUpdate() {
	        this.update();
	    },
	    componentWillUnmount: function componentWillUnmount() {
	        this.removeListeners();
	        if (this.requestFrame) (0, _raf2.cancel)(this.requestFrame);
	        if (this.hideTrackTimeout) clearTimeout(this.hideTrackTimeout);
	        if (this.detectScrollingInterval) clearInterval(this.detectScrollingInterval);
	    },
	    getScrollLeft: function getScrollLeft() {
	        var view = this.refs.view;

	        return view.scrollLeft;
	    },
	    getScrollTop: function getScrollTop() {
	        var view = this.refs.view;

	        return view.scrollTop;
	    },
	    getScrollWidth: function getScrollWidth() {
	        var view = this.refs.view;

	        return view.scrollWidth;
	    },
	    getScrollHeight: function getScrollHeight() {
	        var view = this.refs.view;

	        return view.scrollHeight;
	    },
	    getClientWidth: function getClientWidth() {
	        var view = this.refs.view;

	        return view.clientWidth;
	    },
	    getClientHeight: function getClientHeight() {
	        var view = this.refs.view;

	        return view.clientHeight;
	    },
	    getValues: function getValues() {
	        var view = this.refs.view;
	        var scrollLeft = view.scrollLeft;
	        var scrollTop = view.scrollTop;
	        var scrollWidth = view.scrollWidth;
	        var scrollHeight = view.scrollHeight;
	        var clientWidth = view.clientWidth;
	        var clientHeight = view.clientHeight;

	        return {
	            left: scrollLeft / (scrollWidth - clientWidth) || 0,
	            top: scrollTop / (scrollHeight - clientHeight) || 0,
	            scrollLeft: scrollLeft,
	            scrollTop: scrollTop,
	            scrollWidth: scrollWidth,
	            scrollHeight: scrollHeight,
	            clientWidth: clientWidth,
	            clientHeight: clientHeight
	        };
	    },
	    getThumbHorizontalWidth: function getThumbHorizontalWidth() {
	        var _props = this.props;
	        var thumbSize = _props.thumbSize;
	        var thumbMinSize = _props.thumbMinSize;
	        var _refs = this.refs;
	        var view = _refs.view;
	        var trackHorizontal = _refs.trackHorizontal;
	        var scrollWidth = view.scrollWidth;
	        var clientWidth = view.clientWidth;

	        var trackWidth = (0, _getInnerWidth2.default)(trackHorizontal);
	        var width = clientWidth / scrollWidth * trackWidth;
	        if (trackWidth === width) return 0;
	        if (thumbSize) return thumbSize;
	        return Math.max(width, thumbMinSize);
	    },
	    getThumbVerticalHeight: function getThumbVerticalHeight() {
	        var _props2 = this.props;
	        var thumbSize = _props2.thumbSize;
	        var thumbMinSize = _props2.thumbMinSize;
	        var _refs2 = this.refs;
	        var view = _refs2.view;
	        var trackVertical = _refs2.trackVertical;
	        var scrollHeight = view.scrollHeight;
	        var clientHeight = view.clientHeight;

	        var trackHeight = (0, _getInnerHeight2.default)(trackVertical);
	        var height = clientHeight / scrollHeight * trackHeight;
	        if (trackHeight === height) return 0;
	        if (thumbSize) return thumbSize;
	        return Math.max(height, thumbMinSize);
	    },
	    getScrollLeftForOffset: function getScrollLeftForOffset(offset) {
	        var _refs3 = this.refs;
	        var view = _refs3.view;
	        var trackHorizontal = _refs3.trackHorizontal;
	        var scrollWidth = view.scrollWidth;
	        var clientWidth = view.clientWidth;

	        var trackWidth = (0, _getInnerWidth2.default)(trackHorizontal);
	        var thumbWidth = this.getThumbHorizontalWidth();
	        return offset / (trackWidth - thumbWidth) * (scrollWidth - clientWidth);
	    },
	    getScrollTopForOffset: function getScrollTopForOffset(offset) {
	        var _refs4 = this.refs;
	        var view = _refs4.view;
	        var trackVertical = _refs4.trackVertical;
	        var scrollHeight = view.scrollHeight;
	        var clientHeight = view.clientHeight;

	        var trackHeight = (0, _getInnerHeight2.default)(trackVertical);
	        var thumbHeight = this.getThumbVerticalHeight();
	        return offset / (trackHeight - thumbHeight) * (scrollHeight - clientHeight);
	    },
	    scrollLeft: function scrollLeft() {
	        var left = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];
	        var view = this.refs.view;

	        view.scrollLeft = left;
	    },
	    scrollTop: function scrollTop() {
	        var top = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];
	        var view = this.refs.view;

	        view.scrollTop = top;
	    },
	    scrollToLeft: function scrollToLeft() {
	        var view = this.refs.view;

	        view.scrollLeft = 0;
	    },
	    scrollToTop: function scrollToTop() {
	        var view = this.refs.view;

	        view.scrollTop = 0;
	    },
	    scrollToRight: function scrollToRight() {
	        var view = this.refs.view;

	        view.scrollLeft = view.scrollWidth;
	    },
	    scrollToBottom: function scrollToBottom() {
	        var view = this.refs.view;

	        view.scrollTop = view.scrollHeight;
	    },
	    addListeners: function addListeners() {
	        if (typeof document === 'undefined') return;
	        var _refs5 = this.refs;
	        var view = _refs5.view;
	        var trackHorizontal = _refs5.trackHorizontal;
	        var trackVertical = _refs5.trackVertical;
	        var thumbHorizontal = _refs5.thumbHorizontal;
	        var thumbVertical = _refs5.thumbVertical;

	        view.addEventListener('scroll', this.handleScroll);
	        if (!(0, _getScrollbarWidth2.default)()) return;
	        trackHorizontal.addEventListener('mouseenter', this.handleTrackMouseEnter);
	        trackHorizontal.addEventListener('mouseleave', this.handleTrackMouseLeave);
	        trackHorizontal.addEventListener('mousedown', this.handleHorizontalTrackMouseDown);
	        trackVertical.addEventListener('mouseenter', this.handleTrackMouseEnter);
	        trackVertical.addEventListener('mouseleave', this.handleTrackMouseLeave);
	        trackVertical.addEventListener('mousedown', this.handleVerticalTrackMouseDown);
	        thumbHorizontal.addEventListener('mousedown', this.handleHorizontalThumbMouseDown);
	        thumbVertical.addEventListener('mousedown', this.handleVerticalThumbMouseDown);
	        document.addEventListener('mouseup', this.handleDocumentMouseUp);
	        window.addEventListener('resize', this.handleWindowResize);
	    },
	    removeListeners: function removeListeners() {
	        if (typeof document === 'undefined') return;
	        var _refs6 = this.refs;
	        var view = _refs6.view;
	        var trackHorizontal = _refs6.trackHorizontal;
	        var trackVertical = _refs6.trackVertical;
	        var thumbHorizontal = _refs6.thumbHorizontal;
	        var thumbVertical = _refs6.thumbVertical;

	        view.removeEventListener('scroll', this.handleScroll);
	        if (!(0, _getScrollbarWidth2.default)()) return;
	        trackHorizontal.removeEventListener('mouseenter', this.handleTrackMouseEnter);
	        trackHorizontal.removeEventListener('mouseleave', this.handleTrackMouseLeave);
	        trackHorizontal.removeEventListener('mousedown', this.handleHorizontalTrackMouseDown);
	        trackVertical.removeEventListener('mouseenter', this.handleTrackMouseEnter);
	        trackVertical.removeEventListener('mouseleave', this.handleTrackMouseLeave);
	        trackVertical.removeEventListener('mousedown', this.handleVerticalTrackMouseDown);
	        thumbHorizontal.removeEventListener('mousedown', this.handleHorizontalThumbMouseDown);
	        thumbVertical.removeEventListener('mousedown', this.handleVerticalThumbMouseDown);
	        document.removeEventListener('mouseup', this.handleDocumentMouseUp);
	        window.removeEventListener('resize', this.handleWindowResize);
	        // Possibly registered by `handleDragStart`
	        document.removeEventListener('mousemove', this.handleDocumentMouseMove);
	    },
	    handleScroll: function handleScroll(event) {
	        var _this = this;

	        var _props3 = this.props;
	        var onScroll = _props3.onScroll;
	        var onScrollFrame = _props3.onScrollFrame;

	        if (onScroll) onScroll(event);
	        this.update(function (values) {
	            var scrollLeft = values.scrollLeft;
	            var scrollTop = values.scrollTop;

	            _this.viewScrollLeft = scrollLeft;
	            _this.viewScrollTop = scrollTop;
	            if (onScrollFrame) onScrollFrame(values);
	        });
	        this.detectScrolling();
	    },
	    handleScrollStart: function handleScrollStart() {
	        var onScrollStart = this.props.onScrollStart;

	        if (onScrollStart) onScrollStart();
	        this.handleScrollStartAutoHide();
	    },
	    handleScrollStartAutoHide: function handleScrollStartAutoHide() {
	        var autoHide = this.props.autoHide;

	        if (!autoHide) return;
	        this.showTrack();
	    },
	    handleScrollStop: function handleScrollStop() {
	        var onScrollStop = this.props.onScrollStop;

	        if (onScrollStop) onScrollStop();
	        this.handleScrollStopAutoHide();
	    },
	    handleScrollStopAutoHide: function handleScrollStopAutoHide() {
	        var autoHide = this.props.autoHide;

	        if (!autoHide) return;
	        this.hideTrack();
	    },
	    detectScrolling: function detectScrolling() {
	        var _this2 = this;

	        if (this.scrolling) return;
	        this.scrolling = true;
	        this.handleScrollStart();
	        this.detectScrollingInterval = setInterval(function () {
	            if (_this2.lastViewScrollLeft === _this2.viewScrollLeft && _this2.lastViewScrollTop === _this2.viewScrollTop) {
	                clearInterval(_this2.detectScrollingInterval);
	                _this2.scrolling = false;
	                _this2.handleScrollStop();
	            }
	            _this2.lastViewScrollLeft = _this2.viewScrollLeft;
	            _this2.lastViewScrollTop = _this2.viewScrollTop;
	        }, 100);
	    },
	    handleHorizontalTrackMouseDown: function handleHorizontalTrackMouseDown() {
	        var view = this.refs.view;
	        var _event = event;
	        var target = _event.target;
	        var clientX = _event.clientX;

	        var _target$getBoundingCl = target.getBoundingClientRect();

	        var targetLeft = _target$getBoundingCl.left;

	        var thumbWidth = this.getThumbHorizontalWidth();
	        var offset = Math.abs(targetLeft - clientX) - thumbWidth / 2;
	        view.scrollLeft = this.getScrollLeftForOffset(offset);
	    },
	    handleVerticalTrackMouseDown: function handleVerticalTrackMouseDown(event) {
	        var view = this.refs.view;
	        var target = event.target;
	        var clientY = event.clientY;

	        var _target$getBoundingCl2 = target.getBoundingClientRect();

	        var targetTop = _target$getBoundingCl2.top;

	        var thumbHeight = this.getThumbVerticalHeight();
	        var offset = Math.abs(targetTop - clientY) - thumbHeight / 2;
	        view.scrollTop = this.getScrollTopForOffset(offset);
	    },
	    handleHorizontalThumbMouseDown: function handleHorizontalThumbMouseDown(event) {
	        this.handleDragStart(event);
	        var target = event.target;
	        var clientX = event.clientX;
	        var offsetWidth = target.offsetWidth;

	        var _target$getBoundingCl3 = target.getBoundingClientRect();

	        var left = _target$getBoundingCl3.left;

	        this.prevPageX = offsetWidth - (clientX - left);
	    },
	    handleVerticalThumbMouseDown: function handleVerticalThumbMouseDown(event) {
	        this.handleDragStart(event);
	        var target = event.target;
	        var clientY = event.clientY;
	        var offsetHeight = target.offsetHeight;

	        var _target$getBoundingCl4 = target.getBoundingClientRect();

	        var top = _target$getBoundingCl4.top;

	        this.prevPageY = offsetHeight - (clientY - top);
	    },
	    handleDocumentMouseUp: function handleDocumentMouseUp() {
	        this.handleDragEnd();
	    },
	    handleDocumentMouseMove: function handleDocumentMouseMove(event) {
	        if (this.dragging === false) return false;
	        if (this.prevPageX) {
	            var clientX = event.clientX;
	            var _refs7 = this.refs;
	            var view = _refs7.view;
	            var trackHorizontal = _refs7.trackHorizontal;

	            var _trackHorizontal$getB = trackHorizontal.getBoundingClientRect();

	            var trackLeft = _trackHorizontal$getB.left;

	            var thumbWidth = this.getThumbHorizontalWidth();
	            var clickPosition = thumbWidth - this.prevPageX;
	            var offset = -trackLeft + clientX - clickPosition;
	            view.scrollLeft = this.getScrollLeftForOffset(offset);
	            return false;
	        }
	        if (this.prevPageY) {
	            var clientY = event.clientY;
	            var _refs8 = this.refs;
	            var view = _refs8.view;
	            var trackVertical = _refs8.trackVertical;

	            var _trackVertical$getBou = trackVertical.getBoundingClientRect();

	            var trackTop = _trackVertical$getBou.top;

	            var thumbHeight = this.getThumbVerticalHeight();
	            var clickPosition = thumbHeight - this.prevPageY;
	            var offset = -trackTop + clientY - clickPosition;
	            view.scrollTop = this.getScrollTopForOffset(offset);
	            return false;
	        }
	    },
	    handleWindowResize: function handleWindowResize() {
	        this.update();
	    },
	    handleDragStart: function handleDragStart(event) {
	        if (!document) return;
	        event.stopImmediatePropagation();
	        this.dragging = true;
	        (0, _domCss2.default)(document.body, _styles.disableSelectStyle);
	        document.addEventListener('mousemove', this.handleDocumentMouseMove);
	        document.onselectstart = _returnFalse2.default;
	    },
	    handleDragEnd: function handleDragEnd() {
	        if (!this.dragging) return;
	        if (!document) return;
	        this.dragging = false;
	        this.prevPageX = this.prevPageY = 0;
	        (0, _domCss2.default)(document.body, _styles.disableSelectStyleReset);
	        document.removeEventListener('mousemove', this.handleDocumentMouseMove);
	        document.onselectstart = undefined;
	        this.handleDragEndAutoHide();
	    },
	    handleDragEndAutoHide: function handleDragEndAutoHide() {
	        var autoHide = this.props.autoHide;

	        if (!autoHide) return;
	        this.hideTrack();
	    },
	    handleTrackMouseEnter: function handleTrackMouseEnter() {
	        this.trackMouseOver = true;
	        this.handleTrackMouseEnterAutoHide();
	    },
	    handleTrackMouseEnterAutoHide: function handleTrackMouseEnterAutoHide() {
	        var autoHide = this.props.autoHide;

	        if (!autoHide) return;
	        this.showTrack();
	    },
	    handleTrackMouseLeave: function handleTrackMouseLeave() {
	        this.trackMouseOver = false;
	        this.handleTrackMouseLeaveAutoHide();
	    },
	    handleTrackMouseLeaveAutoHide: function handleTrackMouseLeaveAutoHide() {
	        var autoHide = this.props.autoHide;

	        if (!autoHide) return;
	        this.hideTrack();
	    },
	    showTrack: function showTrack() {
	        if (this.trackVisible) return;
	        this.trackVisible = true;
	        var _refs9 = this.refs;
	        var trackHorizontal = _refs9.trackHorizontal;
	        var trackVertical = _refs9.trackVertical;

	        if (this.hideTrackTimeout) clearTimeout(this.hideTrackTimeout);
	        (0, _domCss2.default)(trackHorizontal, { opacity: 1 });
	        (0, _domCss2.default)(trackVertical, { opacity: 1 });
	    },
	    hideTrack: function hideTrack() {
	        if (this.dragging) return;
	        if (this.scrolling) return;
	        if (this.trackMouseOver) return;
	        if (!this.trackVisible) return;
	        this.trackVisible = false;
	        var autoHideTimeout = this.props.autoHideTimeout;
	        var _refs10 = this.refs;
	        var trackHorizontal = _refs10.trackHorizontal;
	        var trackVertical = _refs10.trackVertical;

	        if (this.hideTrackTimeout) clearTimeout(this.hideTrackTimeout);
	        this.hideTrackTimeout = setTimeout(function () {
	            (0, _domCss2.default)(trackHorizontal, { opacity: 0 });
	            (0, _domCss2.default)(trackVertical, { opacity: 0 });
	        }, autoHideTimeout);
	    },
	    raf: function raf(callback) {
	        var _this3 = this;

	        if (this.requestFrame) _raf3.default.cancel(this.requestFrame);
	        this.requestFrame = (0, _raf3.default)(function () {
	            _this3.requestFrame = undefined;
	            callback();
	        });
	    },
	    update: function update(callback) {
	        var _this4 = this;

	        this.raf(function () {
	            var values = _this4.getValues();
	            if ((0, _getScrollbarWidth2.default)()) {
	                var _refs11 = _this4.refs;
	                var thumbHorizontal = _refs11.thumbHorizontal;
	                var thumbVertical = _refs11.thumbVertical;
	                var trackHorizontal = _refs11.trackHorizontal;
	                var trackVertical = _refs11.trackVertical;
	                var scrollLeft = values.scrollLeft;
	                var clientWidth = values.clientWidth;
	                var scrollWidth = values.scrollWidth;

	                var trackHorizontalWidth = (0, _getInnerWidth2.default)(trackHorizontal);
	                var thumbHorizontalWidth = _this4.getThumbHorizontalWidth();
	                var thumbHorizontalX = scrollLeft / (scrollWidth - clientWidth) * (trackHorizontalWidth - thumbHorizontalWidth);
	                var thumbHorizontalStyle = {
	                    width: thumbHorizontalWidth,
	                    transform: 'translateX(' + thumbHorizontalX + 'px)'
	                };
	                var scrollTop = values.scrollTop;
	                var clientHeight = values.clientHeight;
	                var scrollHeight = values.scrollHeight;

	                var trackVerticalHeight = (0, _getInnerHeight2.default)(trackVertical);
	                var thumbVerticalHeight = _this4.getThumbVerticalHeight();
	                var thumbVerticalY = scrollTop / (scrollHeight - clientHeight) * (trackVerticalHeight - thumbVerticalHeight);
	                var thumbVerticalStyle = {
	                    height: thumbVerticalHeight,
	                    transform: 'translateY(' + thumbVerticalY + 'px)'
	                };
	                (0, _domCss2.default)(thumbHorizontal, thumbHorizontalStyle);
	                (0, _domCss2.default)(thumbVertical, thumbVerticalStyle);
	            }
	            if (typeof callback !== 'function') return;
	            callback(values);
	        });
	    },
	    render: function render() {
	        var scrollbarWidth = (0, _getScrollbarWidth2.default)();
	        var _props4 = this.props;
	        var onScroll = _props4.onScroll;
	        var onScrollFrame = _props4.onScrollFrame;
	        var onScrollStart = _props4.onScrollStart;
	        var onScrollStop = _props4.onScrollStop;
	        var renderView = _props4.renderView;
	        var renderTrackHorizontal = _props4.renderTrackHorizontal;
	        var renderTrackVertical = _props4.renderTrackVertical;
	        var renderThumbHorizontal = _props4.renderThumbHorizontal;
	        var renderThumbVertical = _props4.renderThumbVertical;
	        var autoHide = _props4.autoHide;
	        var autoHideTimeout = _props4.autoHideTimeout;
	        var autoHideDuration = _props4.autoHideDuration;
	        var thumbSize = _props4.thumbSize;
	        var thumbMinSize = _props4.thumbMinSize;
	        var universal = _props4.universal;
	        var style = _props4.style;
	        var children = _props4.children;

	        var props = _objectWithoutProperties(_props4, ['onScroll', 'onScrollFrame', 'onScrollStart', 'onScrollStop', 'renderView', 'renderTrackHorizontal', 'renderTrackVertical', 'renderThumbHorizontal', 'renderThumbVertical', 'autoHide', 'autoHideTimeout', 'autoHideDuration', 'thumbSize', 'thumbMinSize', 'universal', 'style', 'children']);

	        var didMountUniversal = this.state.didMountUniversal;

	        var containerStyle = _extends({}, _styles.containerStyleDefault, style);

	        var viewStyle = scrollbarWidth ? _extends({}, _styles.viewStyleScrollbarsVisible, {
	            right: -scrollbarWidth,
	            bottom: -scrollbarWidth
	        }, universal && !didMountUniversal ? _styles.viewStyleUniversalInitial : undefined) : _styles.viewStyleScrollbarsInvisible;

	        var trackHorizontalStyle = _extends({}, _styles.trackHorizontalStyleDefault, autoHide ? { transition: 'opacity ' + autoHideDuration + 'ms', opacity: 0 } : undefined, !scrollbarWidth || universal && !didMountUniversal ? { display: 'none' } : undefined);

	        var trackVerticalStyle = _extends({}, _styles.trackVerticalStyleDefault, autoHide ? { transition: 'opacity ' + autoHideDuration + 'ms', opacity: 0 } : undefined, !scrollbarWidth || universal && !didMountUniversal ? { display: 'none' } : undefined);

	        return _react2.default.createElement(
	            'div',
	            _extends({}, props, { style: containerStyle, ref: 'container' }),
	            (0, _react.cloneElement)(renderView({ style: viewStyle }), { ref: 'view' }, children),
	            (0, _react.cloneElement)(renderTrackHorizontal({ style: trackHorizontalStyle }), { ref: 'trackHorizontal' }, (0, _react.cloneElement)(renderThumbHorizontal({ style: _styles.thumbHorizontalStyleDefault }), { ref: 'thumbHorizontal' })),
	            (0, _react.cloneElement)(renderTrackVertical({ style: trackVerticalStyle }), { ref: 'trackVertical' }, (0, _react.cloneElement)(renderThumbVertical({ style: _styles.thumbVerticalStyleDefault }), { ref: 'thumbVertical' }))
	        );
	    }
	});

/***/ },
/* 6 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var containerStyleDefault = exports.containerStyleDefault = {
	    position: 'relative',
	    overflow: 'hidden',
	    width: '100%',
	    height: '100%'
	};

	var viewStyleScrollbarsVisible = exports.viewStyleScrollbarsVisible = {
	    position: 'absolute',
	    top: 0,
	    left: 0,
	    overflow: 'scroll',
	    WebkitOverflowScrolling: 'touch'
	};

	var viewStyleScrollbarsInvisible = exports.viewStyleScrollbarsInvisible = {
	    position: 'relative',
	    width: '100%',
	    height: '100%',
	    overflow: 'scroll',
	    WebkitOverflowScrolling: 'touch'
	};

	var viewStyleUniversalInitial = exports.viewStyleUniversalInitial = {
	    right: 0,
	    bottom: 0,
	    overflow: 'hidden'
	};

	var trackHorizontalStyleDefault = exports.trackHorizontalStyleDefault = {
	    position: 'absolute',
	    height: 6
	};

	var trackVerticalStyleDefault = exports.trackVerticalStyleDefault = {
	    position: 'absolute',
	    width: 6
	};

	var thumbHorizontalStyleDefault = exports.thumbHorizontalStyleDefault = {
	    position: 'relative',
	    display: 'block',
	    height: '100%'
	};

	var thumbVerticalStyleDefault = exports.thumbVerticalStyleDefault = {
	    position: 'relative',
	    display: 'block',
	    width: '100%'
	};

	var disableSelectStyle = exports.disableSelectStyle = {
	    userSelect: 'none'
	};

	var disableSelectStyleReset = exports.disableSelectStyleReset = {
	    userSelect: ''
	};

/***/ },
/* 7 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = getInnerHeight;
	function getInnerHeight(el) {
	    var clientHeight = el.clientHeight;

	    var _getComputedStyle = getComputedStyle(el);

	    var paddingTop = _getComputedStyle.paddingTop;
	    var paddingBottom = _getComputedStyle.paddingBottom;

	    return clientHeight - parseFloat(paddingTop) - parseFloat(paddingBottom);
	}

/***/ },
/* 8 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = getInnerWidth;
	function getInnerWidth(el) {
	    var clientWidth = el.clientWidth;

	    var _getComputedStyle = getComputedStyle(el);

	    var paddingLeft = _getComputedStyle.paddingLeft;
	    var paddingRight = _getComputedStyle.paddingRight;

	    return clientWidth - parseFloat(paddingLeft) - parseFloat(paddingRight);
	}

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = getScrollbarWidth;

	var _domCss = __webpack_require__(1);

	var _domCss2 = _interopRequireDefault(_domCss);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var scrollbarWidth = false;

	function getScrollbarWidth() {
	    if (scrollbarWidth !== false) return scrollbarWidth;
	    if (typeof document !== 'undefined') {
	        var div = document.createElement('div');
	        (0, _domCss2.default)(div, {
	            width: 100,
	            height: 100,
	            position: 'absolute',
	            top: -9999,
	            overflow: 'scroll',
	            MsOverflowStyle: 'scrollbar'
	        });
	        document.body.appendChild(div);
	        scrollbarWidth = div.offsetWidth - div.clientWidth;
	        document.body.removeChild(div);
	    } else {
	        scrollbarWidth = 0;
	    }
	    return scrollbarWidth;
	}

/***/ },
/* 10 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = returnFalse;
	function returnFalse() {
	    return false;
	}

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {// Generated by CoffeeScript 1.7.1
	(function() {
	  var getNanoSeconds, hrtime, loadTime;

	  if ((typeof performance !== "undefined" && performance !== null) && performance.now) {
	    module.exports = function() {
	      return performance.now();
	    };
	  } else if ((typeof process !== "undefined" && process !== null) && process.hrtime) {
	    module.exports = function() {
	      return (getNanoSeconds() - loadTime) / 1e6;
	    };
	    hrtime = process.hrtime;
	    getNanoSeconds = function() {
	      var hr;
	      hr = hrtime();
	      return hr[0] * 1e9 + hr[1];
	    };
	    loadTime = getNanoSeconds();
	  } else if (Date.now) {
	    module.exports = function() {
	      return Date.now() - loadTime;
	    };
	    loadTime = Date.now();
	  } else {
	    module.exports = function() {
	      return new Date().getTime() - loadTime;
	    };
	    loadTime = new Date().getTime();
	  }

	}).call(this);

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))

/***/ },
/* 12 */
/***/ function(module, exports) {

	var div = null
	var prefixes = [ 'Webkit', 'Moz', 'O', 'ms' ]

	module.exports = function prefixStyle (prop) {
	  // re-use a dummy div
	  if (!div) {
	    div = document.createElement('div')
	  }

	  var style = div.style

	  // prop exists without prefix
	  if (prop in style) {
	    return prop
	  }

	  // borderRadius -> BorderRadius
	  var titleCase = prop.charAt(0).toUpperCase() + prop.slice(1)

	  // find the vendor-prefixed prop
	  for (var i = prefixes.length; i >= 0; i--) {
	    var name = prefixes[i] + titleCase
	    // e.g. WebkitBorderRadius or webkitBorderRadius
	    if (name in style) {
	      return name
	    }
	  }

	  return false
	}


/***/ },
/* 13 */
/***/ function(module, exports) {

	// shim for using process in browser

	var process = module.exports = {};
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = setTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    clearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        setTimeout(drainQueue, 0);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	var now = __webpack_require__(11)
	  , global = typeof window === 'undefined' ? {} : window
	  , vendors = ['moz', 'webkit']
	  , suffix = 'AnimationFrame'
	  , raf = global['request' + suffix]
	  , caf = global['cancel' + suffix] || global['cancelRequest' + suffix]

	for(var i = 0; i < vendors.length && !raf; i++) {
	  raf = global[vendors[i] + 'Request' + suffix]
	  caf = global[vendors[i] + 'Cancel' + suffix]
	      || global[vendors[i] + 'CancelRequest' + suffix]
	}

	// Some versions of FF have rAF but not cAF
	if(!raf || !caf) {
	  var last = 0
	    , id = 0
	    , queue = []
	    , frameDuration = 1000 / 60

	  raf = function(callback) {
	    if(queue.length === 0) {
	      var _now = now()
	        , next = Math.max(0, frameDuration - (_now - last))
	      last = next + _now
	      setTimeout(function() {
	        var cp = queue.slice(0)
	        // Clear queue here to prevent
	        // callbacks from appending listeners
	        // to the current frame's queue
	        queue.length = 0
	        for(var i = 0; i < cp.length; i++) {
	          if(!cp[i].cancelled) {
	            try{
	              cp[i].callback(last)
	            } catch(e) {
	              setTimeout(function() { throw e }, 0)
	            }
	          }
	        }
	      }, Math.round(next))
	    }
	    queue.push({
	      handle: ++id,
	      callback: callback,
	      cancelled: false
	    })
	    return id
	  }

	  caf = function(handle) {
	    for(var i = 0; i < queue.length; i++) {
	      if(queue[i].handle === handle) {
	        queue[i].cancelled = true
	      }
	    }
	  }
	}

	module.exports = function(fn) {
	  // Wrap in a new function to prevent
	  // `cancel` potentially being assigned
	  // to the native rAF function
	  return raf.call(global, fn)
	}
	module.exports.cancel = function() {
	  caf.apply(global, arguments)
	}


/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	
	var toSpace = __webpack_require__(17);


	/**
	 * Expose `toCamelCase`.
	 */

	module.exports = toCamelCase;


	/**
	 * Convert a `string` to camel case.
	 *
	 * @param {String} string
	 * @return {String}
	 */


	function toCamelCase (string) {
	  return toSpace(string).replace(/\s(\w)/g, function (matches, letter) {
	    return letter.toUpperCase();
	  });
	}

/***/ },
/* 16 */
/***/ function(module, exports) {

	
	/**
	 * Expose `toNoCase`.
	 */

	module.exports = toNoCase;


	/**
	 * Test whether a string is camel-case.
	 */

	var hasSpace = /\s/;
	var hasCamel = /[a-z][A-Z]/;
	var hasSeparator = /[\W_]/;


	/**
	 * Remove any starting case from a `string`, like camel or snake, but keep
	 * spaces and punctuation that may be important otherwise.
	 *
	 * @param {String} string
	 * @return {String}
	 */

	function toNoCase (string) {
	  if (hasSpace.test(string)) return string.toLowerCase();

	  if (hasSeparator.test(string)) string = unseparate(string);
	  if (hasCamel.test(string)) string = uncamelize(string);
	  return string.toLowerCase();
	}


	/**
	 * Separator splitter.
	 */

	var separatorSplitter = /[\W_]+(.|$)/g;


	/**
	 * Un-separate a `string`.
	 *
	 * @param {String} string
	 * @return {String}
	 */

	function unseparate (string) {
	  return string.replace(separatorSplitter, function (m, next) {
	    return next ? ' ' + next : '';
	  });
	}


	/**
	 * Camelcase splitter.
	 */

	var camelSplitter = /(.)([A-Z]+)/g;


	/**
	 * Un-camelcase a `string`.
	 *
	 * @param {String} string
	 * @return {String}
	 */

	function uncamelize (string) {
	  return string.replace(camelSplitter, function (m, previous, uppers) {
	    return previous + ' ' + uppers.toLowerCase().split('').join(' ');
	  });
	}

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	
	var clean = __webpack_require__(16);


	/**
	 * Expose `toSpaceCase`.
	 */

	module.exports = toSpaceCase;


	/**
	 * Convert a `string` to space case.
	 *
	 * @param {String} string
	 * @return {String}
	 */


	function toSpaceCase (string) {
	  return clean(string).replace(/[\W_]+(.|$)/g, function (matches, match) {
	    return match ? ' ' + match : '';
	  });
	}

/***/ }
/******/ ])
});
;
(function webpackUniversalModuleDefinition(root, factory) {
	if (typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"), require("react-dom"));
	else if (typeof define === 'function' && define.amd)
		define(["react", "react-dom"], factory);
	else if (typeof exports === 'object')
		exports["ReactWaypoint"] = factory(require("react"), require("react-dom"));
	else
		root["ReactWaypoint"] = factory(root["React"], root["ReactDOM"]);
})(this, function (__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__) {
	return /******/ (function (modules) { // webpackBootstrap
		/******/ 	// The module cache
		/******/ 	var installedModules = {};

		/******/ 	// The require function
		/******/ 	function __webpack_require__(moduleId) {

			/******/ 		// Check if module is in cache
			/******/ 		if (installedModules[moduleId])
				/******/ 			return installedModules[moduleId].exports;

			/******/ 		// Create a new module (and put it into the cache)
			/******/ 		var module = installedModules[moduleId] = {
				/******/ 			exports: {},
				/******/ 			id: moduleId,
				/******/ 			loaded: false
				/******/
			};

			/******/ 		// Execute the module function
			/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

			/******/ 		// Flag the module as loaded
			/******/ 		module.loaded = true;

			/******/ 		// Return the exports of the module
			/******/ 		return module.exports;
			/******/
		}


		/******/ 	// expose the modules object (__webpack_modules__)
		/******/ 	__webpack_require__.m = modules;

		/******/ 	// expose the module cache
		/******/ 	__webpack_require__.c = installedModules;

		/******/ 	// __webpack_public_path__
		/******/ 	__webpack_require__.p = "";

		/******/ 	// Load entry module and return exports
		/******/ 	return __webpack_require__(0);
		/******/
	})
	/************************************************************************/
	/******/([
	/* 0 */
	/***/ function (module, exports, __webpack_require__) {

		'use strict';

		Object.defineProperty(exports, "__esModule", {
			value: true
		});

		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

		var _react = __webpack_require__(1);

		var _react2 = _interopRequireDefault(_react);

		var _reactDom = __webpack_require__(2);

		var _reactDom2 = _interopRequireDefault(_reactDom);

		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

		var POSITIONS = {
			above: 'above',
			inside: 'inside',
			below: 'below'
		};

		var propTypes = {
			// threshold is percentage of the height of the visible part of the
			// scrollable ancestor (e.g. 0.1)
			threshold: _react.PropTypes.number,
			onEnter: _react.PropTypes.func,
			onLeave: _react.PropTypes.func,
			fireOnRapidScroll: _react.PropTypes.bool,
			scrollableAncestor: _react.PropTypes.any
		};

		var defaultProps = {
			threshold: 0,
			onEnter: function onEnter() { },
			onLeave: function onLeave() { },

			fireOnRapidScroll: true
		};

		/**
		 * Calls a function when you scroll to the element.
		 */

		var Waypoint = function (_React$Component) {
			_inherits(Waypoint, _React$Component);

			function Waypoint() {
				_classCallCheck(this, Waypoint);

				return _possibleConstructorReturn(this, Object.getPrototypeOf(Waypoint).apply(this, arguments));
			}

			_createClass(Waypoint, [{
				key: 'componentWillMount',
				value: function componentWillMount() {
					if (this.props.scrollableParent) {
						// eslint-disable-line react/prop-types
						throw new Error('The `scrollableParent` prop has changed name ' + 'to `scrollableAncestor`.');
					}
				}
			}, {
				key: 'componentDidMount',
				value: function componentDidMount() {
					if (!Waypoint.getWindow()) {
						return;
					}

					this._handleScroll = this._handleScroll.bind(this);
					this.scrollableAncestor = this._findScrollableAncestor();
					this.scrollableAncestor.addEventListener('scroll', this._handleScroll);
					window.addEventListener('resize', this._handleScroll);
					this._handleScroll(null);
				}
			}, {
				key: 'componentDidUpdate',
				value: function componentDidUpdate() {
					if (!Waypoint.getWindow()) {
						return;
					}

					// The element may have moved.
					this._handleScroll(null);
				}
			}, {
				key: 'componentWillUnmount',
				value: function componentWillUnmount() {
					if (!Waypoint.getWindow()) {
						return;
					}

					if (this.scrollableAncestor) {
						// At the time of unmounting, the scrollable ancestor might no longer
						// exist. Guarding against this prevents the following error:
						//
						//   Cannot read property 'removeEventListener' of undefined
						this.scrollableAncestor.removeEventListener('scroll', this._handleScroll);
					}
					window.removeEventListener('resize', this._handleScroll);
				}

				/**
				 * Traverses up the DOM to find an ancestor container which has an overflow
				 * style that allows for scrolling.
				 *
				 * @return {Object} the closest ancestor element with an overflow style that
				 *   allows for scrolling. If none is found, the `window` object is returned
				 *   as a fallback.
				 */

			}, {
				key: '_findScrollableAncestor',
				value: function _findScrollableAncestor() {
					if (this.props.scrollableAncestor) {
						return this.props.scrollableAncestor;
					}

					var node = _reactDom2.default.findDOMNode(this);

					while (node.parentNode) {
						node = node.parentNode;

						if (node === document) {
							// This particular node does not have a computed style.
							continue;
						}

						if (node === document.documentElement) {
							// This particular node does not have a scroll bar, it uses the window.
							continue;
						}

						var style = window.getComputedStyle(node);
						var overflowY = style.getPropertyValue('overflow-y') || style.getPropertyValue('overflow');

						if (overflowY === 'auto' || overflowY === 'scroll') {
							return node;
						}
					}

					// A scrollable ancestor element was not found, which means that we need to
					// do stuff on window.
					return window;
				}

				/**
				 * @param {Object} event the native scroll event coming from the scrollable
				 *   ancestor, or resize event coming from the window. Will be undefined if
				 *   called by a React lifecyle method
				 */

			}, {
				key: '_handleScroll',
				value: function _handleScroll(event) {
					var currentPosition = this._currentPosition();
					var previousPosition = this._previousPosition || null;

					// Save previous position as early as possible to prevent cycles
					this._previousPosition = currentPosition;

					if (previousPosition === currentPosition) {
						// No change since last trigger
						return;
					}

					if (currentPosition === POSITIONS.inside) {
						this.props.onEnter.call(this, event, previousPosition);
					} else if (previousPosition === POSITIONS.inside) {
						this.props.onLeave.call(this, event, currentPosition);
					}

					var isRapidScrollDown = previousPosition === POSITIONS.below && currentPosition === POSITIONS.above;
					var isRapidScrollUp = previousPosition === POSITIONS.above && currentPosition === POSITIONS.below;
					if (this.props.fireOnRapidScroll && (isRapidScrollDown || isRapidScrollUp)) {
						// If the scroll event isn't fired often enough to occur while the
						// waypoint was visible, we trigger both callbacks anyway.
						this.props.onEnter.call(this, event, previousPosition);
						this.props.onLeave.call(this, event, currentPosition);
					}
				}

				/**
				 * @param {Object} node
				 * @return {Number}
				 */

			}, {
				key: '_distanceToTopOfScrollableAncestor',
				value: function _distanceToTopOfScrollableAncestor(node) {
					if (this.scrollableAncestor !== window && !node.offsetParent) {
						throw new Error('The scrollable ancestor of Waypoint needs to have positioning to ' + 'properly determine position of Waypoint (e.g. `position: relative;`)');
					}

					if (this.scrollableAncestor === window) {
						var rect = node.getBoundingClientRect();
						return rect.top + window.pageYOffset - document.documentElement.clientTop;
					}

					if (node.offsetParent === this.scrollableAncestor || !node.offsetParent) {
						return node.offsetTop;
					} else {
						return node.offsetTop + this._distanceToTopOfScrollableAncestor(node.offsetParent);
					}
				}

				/**
				 * @return {string} The current position of the waypoint in relation to the
				 *   visible portion of the scrollable parent. One of `POSITIONS.above`,
				 *   `POSITIONS.below`, or `POSITIONS.inside`.
				 */

			}, {
				key: '_currentPosition',
				value: function _currentPosition() {
					var waypointTop = this._distanceToTopOfScrollableAncestor(_reactDom2.default.findDOMNode(this));
					var contextHeight = void 0;
					var contextScrollTop = void 0;

					if (this.scrollableAncestor === window) {
						contextHeight = window.innerHeight;
						contextScrollTop = window.pageYOffset;
					} else {
						contextHeight = this.scrollableAncestor.offsetHeight;
						contextScrollTop = this.scrollableAncestor.scrollTop;
					}

					var thresholdPx = contextHeight * this.props.threshold;

					var isBelowTop = contextScrollTop <= waypointTop + thresholdPx;
					if (!isBelowTop) {
						return POSITIONS.above;
					}

					var contextBottom = contextScrollTop + contextHeight;
					var isAboveBottom = contextBottom >= waypointTop - thresholdPx;
					if (!isAboveBottom) {
						return POSITIONS.below;
					}

					return POSITIONS.inside;
				}

				/**
				 * @return {Object}
				 */

			}, {
				key: 'render',
				value: function render() {
					// We need an element that we can locate in the DOM to determine where it is
					// rendered relative to the top of its context.
					return _react2.default.createElement('span', { style: { fontSize: 0 } });
				}
			}]);

			return Waypoint;
		}(_react2.default.Component);

		exports.default = Waypoint;


		Waypoint.propTypes = propTypes;
		Waypoint.above = POSITIONS.above;
		Waypoint.below = POSITIONS.below;
		Waypoint.getWindow = function () {
			if (typeof window !== 'undefined') {
				return window;
			}
		};
		Waypoint.defaultProps = defaultProps;
		module.exports = exports['default'];

		/***/
	},
	/* 1 */
	/***/ function (module, exports) {

		module.exports = __WEBPACK_EXTERNAL_MODULE_1__;

		/***/
	},
	/* 2 */
	/***/ function (module, exports) {

		module.exports = __WEBPACK_EXTERNAL_MODULE_2__;

		/***/
	}
	/******/])
});
;
var StatusCode;
(function (StatusCode) {
    StatusCode[StatusCode["ACCEPTED"] = 202] = "ACCEPTED";
    StatusCode[StatusCode["BAD_GATEWAY"] = 502] = "BAD_GATEWAY";
    StatusCode[StatusCode["BAD_REQUEST"] = 400] = "BAD_REQUEST";
    StatusCode[StatusCode["CONFLICT"] = 409] = "CONFLICT";
    StatusCode[StatusCode["CONTINUE"] = 100] = "CONTINUE";
    StatusCode[StatusCode["CREATED"] = 201] = "CREATED";
    StatusCode[StatusCode["EXPECTATION_FAILED"] = 417] = "EXPECTATION_FAILED";
    StatusCode[StatusCode["FAILED_DEPENDENCY"] = 424] = "FAILED_DEPENDENCY";
    StatusCode[StatusCode["FORBIDDEN"] = 403] = "FORBIDDEN";
    StatusCode[StatusCode["GATEWAY_TIMEOUT"] = 504] = "GATEWAY_TIMEOUT";
    StatusCode[StatusCode["GONE"] = 410] = "GONE";
    StatusCode[StatusCode["HTTP_VERSION_NOT_SUPPORTED"] = 505] = "HTTP_VERSION_NOT_SUPPORTED";
    StatusCode[StatusCode["INSUFFICIENT_SPACE_ON_RESOURCE"] = 419] = "INSUFFICIENT_SPACE_ON_RESOURCE";
    StatusCode[StatusCode["INSUFFICIENT_STORAGE"] = 507] = "INSUFFICIENT_STORAGE";
    StatusCode[StatusCode["INTERNAL_SERVER_ERROR"] = 500] = "INTERNAL_SERVER_ERROR";
    StatusCode[StatusCode["LENGTH_REQUIRED"] = 411] = "LENGTH_REQUIRED";
    StatusCode[StatusCode["LOCKED"] = 423] = "LOCKED";
    StatusCode[StatusCode["METHOD_FAILURE"] = 420] = "METHOD_FAILURE";
    StatusCode[StatusCode["METHOD_NOT_ALLOWED"] = 405] = "METHOD_NOT_ALLOWED";
    StatusCode[StatusCode["MOVED_PERMANENTLY"] = 301] = "MOVED_PERMANENTLY";
    StatusCode[StatusCode["MOVED_TEMPORARILY"] = 302] = "MOVED_TEMPORARILY";
    StatusCode[StatusCode["MULTI_STATUS"] = 207] = "MULTI_STATUS";
    StatusCode[StatusCode["MULTIPLE_CHOICES"] = 300] = "MULTIPLE_CHOICES";
    StatusCode[StatusCode["NETWORK_AUTHENTICATION_REQUIRED"] = 511] = "NETWORK_AUTHENTICATION_REQUIRED";
    StatusCode[StatusCode["NO_CONTENT"] = 204] = "NO_CONTENT";
    StatusCode[StatusCode["NON_AUTHORITATIVE_INFORMATION"] = 203] = "NON_AUTHORITATIVE_INFORMATION";
    StatusCode[StatusCode["NOT_ACCEPTABLE"] = 406] = "NOT_ACCEPTABLE";
    StatusCode[StatusCode["NOT_FOUND"] = 404] = "NOT_FOUND";
    StatusCode[StatusCode["NOT_IMPLEMENTED"] = 501] = "NOT_IMPLEMENTED";
    StatusCode[StatusCode["NOT_MODIFIED"] = 304] = "NOT_MODIFIED";
    StatusCode[StatusCode["OK"] = 200] = "OK";
    StatusCode[StatusCode["PARTIAL_CONTENT"] = 206] = "PARTIAL_CONTENT";
    StatusCode[StatusCode["PAYMENT_REQUIRED"] = 402] = "PAYMENT_REQUIRED";
    StatusCode[StatusCode["PRECONDITION_FAILED"] = 412] = "PRECONDITION_FAILED";
    StatusCode[StatusCode["PRECONDITION_REQUIRED"] = 428] = "PRECONDITION_REQUIRED";
    StatusCode[StatusCode["PROCESSING"] = 102] = "PROCESSING";
    StatusCode[StatusCode["PROXY_AUTHENTICATION_REQUIRED"] = 407] = "PROXY_AUTHENTICATION_REQUIRED";
    StatusCode[StatusCode["REQUEST_HEADER_FIELDS_TOO_LARGE"] = 431] = "REQUEST_HEADER_FIELDS_TOO_LARGE";
    StatusCode[StatusCode["REQUEST_TIMEOUT"] = 408] = "REQUEST_TIMEOUT";
    StatusCode[StatusCode["REQUEST_TOO_LONG"] = 413] = "REQUEST_TOO_LONG";
    StatusCode[StatusCode["REQUEST_URI_TOO_LONG"] = 414] = "REQUEST_URI_TOO_LONG";
    StatusCode[StatusCode["REQUESTED_RANGE_NOT_SATISFIABLE"] = 416] = "REQUESTED_RANGE_NOT_SATISFIABLE";
    StatusCode[StatusCode["RESET_CONTENT"] = 205] = "RESET_CONTENT";
    StatusCode[StatusCode["SEE_OTHER"] = 303] = "SEE_OTHER";
    StatusCode[StatusCode["SERVICE_UNAVAILABLE"] = 503] = "SERVICE_UNAVAILABLE";
    StatusCode[StatusCode["SWITCHING_PROTOCOLS"] = 101] = "SWITCHING_PROTOCOLS";
    StatusCode[StatusCode["TEMPORARY_REDIRECT"] = 307] = "TEMPORARY_REDIRECT";
    StatusCode[StatusCode["TOO_MANY_REQUESTS"] = 429] = "TOO_MANY_REQUESTS";
    StatusCode[StatusCode["UNAUTHORIZED"] = 401] = "UNAUTHORIZED";
    StatusCode[StatusCode["UNPROCESSABLE_ENTITY"] = 422] = "UNPROCESSABLE_ENTITY";
    StatusCode[StatusCode["UNSUPPORTED_MEDIA_TYPE"] = 415] = "UNSUPPORTED_MEDIA_TYPE";
    StatusCode[StatusCode["USE_PROXY"] = 305] = "USE_PROXY";
})(StatusCode || (StatusCode = {}));

/// <reference path="../../typings/uri.js/uri.d.ts" />
/// <reference path="statuscodes.ts" />
/// <reference path="../../typings/whatwg-fetch/whatwg-fetch.d.ts" />
var Api = (function () {
    function Api(baseurl, defaultOptions) {
        this.baseurl = baseurl;
        var language;
        var defaultHeaders = {};
        language = System.getLanguage();
        if (language) {
            defaultHeaders = {
                'Accept-Language': language
            };
        }
        if (defaultOptions && defaultOptions.headers) {
            defaultHeaders = Object.assign({}, defaultOptions.headers, defaultHeaders);
        }
        this.options = Object.assign({}, {
            headers: defaultHeaders,
            mode: 'cors'
        }, defaultOptions);
    }
    Api.prototype.buildRequestUrl = function (path, options) {
        if (!this.baseurl) {
            throw new Error('API base url is not provided');
        }
        var url = new URI(this.baseurl);
        if (path) {
            url.segment(path).normalize();
        }
        if (options && options.query) {
            url.query(options.query);
        }
        return url;
    };
    Api.prototype.buildRequestParams = function (method, customOptions) {
        var mergedOptions = Object.assign({}, this.options, customOptions);
        var result = Object.assign({}, {
            method: method,
            headers: Object.assign({}, this.options.headers, customOptions.headers),
            mode: mergedOptions.mode,
            credentials: mergedOptions.credentials,
        });
        if (mergedOptions.body) {
            var body = void 0;
            if (typeof mergedOptions.body === 'object') {
                body = JSON.stringify(mergedOptions.body);
                if (body) {
                    Object.assign(result.headers, {
                        'Content-Type': 'application/json; charset=utf-8'
                    });
                }
            }
            else {
                body = mergedOptions.body;
            }
            Object.assign(result, {
                body: body
            });
        }
        if (mergedOptions.auth && mergedOptions.auth.accessToken) {
            Object.assign(result.headers, {
                'authorization': "Bearer " + mergedOptions.auth.accessToken,
            });
        }
        return result;
    };
    Api.prototype.promiseResposeStatus = function (response) {
        if (response.ok) {
            return Promise.resolve(response);
        }
        return Promise.reject(response);
    };
    Api.prototype.request = function (method, path, customOptions) {
        var _this = this;
        var url = this.buildRequestUrl(path, customOptions);
        var params = this.buildRequestParams(method, customOptions);
        return new Promise(function (resolve, reject) {
            return fetch(url.toString(), params)
                .then(function (response) {
                return response.text().then(function (text) {
                    var json;
                    try {
                        json = JSON.parse(text);
                    }
                    catch (error) {
                        json = text;
                    }
                    //const json = text ? JSON.parse(text) : text;
                    var result = {
                        status: response.status,
                        responseHeaders: response.headers,
                        jsonResponse: json,
                        ok: response.ok
                    };
                    return _this.promiseResposeStatus(result);
                });
            })
                .then(function (response) { return resolve(response); })
                .catch(function (error) {
                console.log(error);
                reject(error);
            });
        });
    };
    Api.prototype.do = function (method, path, customOptions) {
        return this.request(method, path, customOptions);
    };
    Api.do = function (method, path, customOptions) {
        return new Api(path).do(method, null, customOptions);
    };
    Api.get = function (path, customOptions) {
        return Api.do('get', path, customOptions);
    };
    Api.post = function (path, customOptions) {
        return Api.do('post', path, customOptions);
    };
    Api.put = function (path, customOptions) {
        return Api.do('put', path, customOptions);
    };
    return Api;
}());
// Api interface
/*

new Api(Config.Services.Gis, {}).get('/countries', { query: { lan: 'fr' } });

new Api(Config.Services.EndUserProfile, {}).post('/endUserPortalProfiles', {
    body: {
        "firstName": "testuserrrr", "lastName": "testuserrrr", "email": "testuserrrr@testuserrrr.rrr", "address1": "", "postCode": "", "location": "", "countryId": "CH", "password": "testuserrrr@testuserrrr.rrr", "confirmPassword": "testuserrrr@testuserrrr.rrr", "gender": "0", "authenticationGroupId": 1
    }
})

Api.get('//cs-gis-master.cloudapp.net/api/v1/countries', {query: {lan: 'en'}}).then(resp => resp.json()).then(console.log.bind(console));

*/ 

var Validation;
(function (Validation) {
    var ValidationHelper = (function () {
        function ValidationHelper() {
        }
        ValidationHelper.getValidationObject = function (errorResponse, validationVariable, validationErrorClass, validationCommonError) {
            if (!errorResponse.ok && errorResponse.status == StatusCode.BAD_REQUEST && errorResponse.jsonResponse && errorResponse.jsonResponse.Errors && errorResponse.jsonResponse.Errors.length > 0) {
                var validationObject = new Object();
                for (var i = 0; i < errorResponse.jsonResponse.Errors.length; i++) {
                    var validationError = errorResponse.jsonResponse.Errors[i];
                    validationObject[validationError.Field.replace(validationVariable + ".", "").toLowerCase()] = validationErrorClass;
                }
                validationObject["_error"] = validationCommonError;
                return validationObject;
            }
            return null;
        };
        return ValidationHelper;
    }());
    Validation.ValidationHelper = ValidationHelper;
})(Validation || (Validation = {}));

var Helpers;
(function (Helpers) {
    var Search = (function () {
        function Search() {
        }
        Search.trackSearchResults = function (searchResults) {
            var results = searchResults.reduce(function (result, item) {
                result.OrganizationId.push(item.organizationId);
                result.PropertyRefNumber.push(item.propertyRefNumber);
                return result;
            }, {
                OrganizationId: [],
                PropertyRefNumber: []
            });
            GenericTracking.Trackers.Instance.TrackEvent("SearchResult", results);
        };
        return Search;
    }());
    Helpers.Search = Search;
})(Helpers || (Helpers = {}));

var Utils;
(function (Utils) {
    var Iframe = (function () {
        function Iframe() {
        }
        Iframe.checkIfInIframe = function () {
            try {
                return window.self !== window.top;
            }
            catch (e) {
                return true;
            }
        };
        Iframe.initListener = function (state) {
            var iframe = (function ($) {
                return {
                    target: document.querySelector("body"),
                    domain: null,
                    params: "",
                    postAMessage: function (obj) {
                        // Post message to parent window
                        if (window.parent && window.parent.postMessage) {
                            return window.parent.postMessage(obj, "*");
                        }
                        else {
                            obj.nav = "IE7";
                            window.parent.setIframe(obj);
                            return false;
                        }
                    },
                    // Listen's to parent window
                    listenParent: function (e) {
                        var data, extract, idVisite;
                        /**
                         * http://demo.worldposting.net/iframe2015/#/home
                         * input: http://demo.previsite.net/worldposting-iframe/#/detail-7D5C8C41-D68D-8702-1D3C-5F8EBC56ED3F
                         * Fetch this : /#/detail-7D5C8C41-D68D-8702-1D3C-5F8EBC56ED3F
                         */
                        if (e && e.data && JSON.parse) {
                            data = JSON.parse(e.data);
                            var pattDetail = new RegExp("#/detail-[a-zA-Z0-9-]+");
                            var matchDetail = pattDetail.test(data.parent_location);
                            var pattSearch = new RegExp("#/search?");
                            var matchSearch = pattSearch.test(data.parent_location);
                            var pattProperties = new RegExp("#/properties/[a-zA-Z0-9-]+");
                            var matchProperties = pattProperties.test(data.parent_location);
                            // Backlinking to Iframe.
                            if (matchDetail) {
                                extract = pattDetail.exec(data.parent_location);
                                if (extract) {
                                    extract = extract[0];
                                    idVisite = extract.replace(/#\/detail\-/, "");
                                    window.location.href = "/" + LANGUAGE + "/ItemDetails/Campaign/" + idVisite;
                                }
                            }
                            else if (matchProperties) {
                                extract = pattProperties.exec(data.parent_location);
                                if (extract) {
                                    extract = extract[0];
                                    var loc = extract.replace("#", "");
                                    window.location = loc;
                                }
                            }
                            else if (matchSearch) {
                                extract = pattSearch.exec(data.parent_location);
                                if (extract) {
                                    extract = extract[0];
                                    idVisite = extract.replace(/#\/search\?/, "");
                                    window.location.href = "/" + LANGUAGE + "/search?" + idVisite;
                                }
                            }
                        }
                    },
                    message: function (scroll) {
                        var message = JSON.stringify({
                            scroll: scroll || false,
                            height: $(this.target).height(),
                            params: this.params
                        });
                        return message;
                    },
                    createMutationObserver: function (module) {
                        var target = this.target;
                        var mutationObserver = window.MutationObserver || window.WebKitMutationObserver;
                        if (mutationObserver) {
                            // create an observer instance
                            var observer = new mutationObserver(function (mutations) {
                                var shouldSendMessage = false;
                                mutations.forEach(function (mutation) {
                                    if (mutation.type === "childList" && mutation.addedNodes.length > 0) {
                                        shouldSendMessage = true;
                                    }
                                });
                                if (shouldSendMessage) {
                                    module.postAMessage(module.message());
                                }
                            });
                            // configuration of the observer
                            var config = {
                                childList: true
                            };
                            // pass in the target node, as well as the observer options
                            observer.observe(target, config);
                        }
                        else {
                            console.log('MutationObserver not supported in this browser!');
                        }
                    },
                    newFrame: function (state) {
                        var module = this;
                        var fragmentContent = null;
                        switch (state.config.pageName) {
                            case "ItemDetails":
                                fragmentContent = "detail-" + state.itemDetails.campaignId;
                                break;
                            case "SearchResultNew":
                                fragmentContent = "search?" + state.searchResults.searchUrl;
                                break;
                            case "HomePage":
                                fragmentContent = "home";
                                break;
                            case "SearchResultAgencyNew":
                                fragmentContent = "agency-" + state.searchResults.searchName;
                                break;
                            default:
                                break;
                        }
                        if (fragmentContent != null) {
                            debugger;
                            this.params = "#/" + fragmentContent;
                        }
                        ;
                        if (window.addEventListener) {
                            window.addEventListener("message", this.listenParent);
                        }
                        else {
                            window.attachEvent("onmessage", this.listenParent);
                        }
                        this.createMutationObserver(module);
                        // Force start
                        module.postAMessage(module.message());
                        return this;
                    }
                };
            })($);
            var iframeMessage = iframe.newFrame(state);
            iframeMessage && iframeMessage.postAMessage(iframeMessage.message(!0));
        };
        return Iframe;
    }());
    Utils.Iframe = Iframe;
})(Utils || (Utils = {}));

var Constants;
(function (Constants) {
    var UserDataType = (function () {
        function UserDataType() {
        }
        UserDataType.favorites = "favorites";
        UserDataType.recentSearches = "recentSearches";
        UserDataType.leadRequests = "leadRequests";
        return UserDataType;
    }());
    Constants.UserDataType = UserDataType;
    var AuthErrorTypes = (function () {
        function AuthErrorTypes() {
        }
        AuthErrorTypes.conflict = "conflict";
        AuthErrorTypes.unauthorized = "unauthorized";
        AuthErrorTypes.unknown = "unknown";
        return AuthErrorTypes;
    }());
    Constants.AuthErrorTypes = AuthErrorTypes;
    var UserDataErrorTypes = (function () {
        function UserDataErrorTypes() {
        }
        UserDataErrorTypes.unauthorized = "unauthorized";
        UserDataErrorTypes.unknown = "unknown";
        return UserDataErrorTypes;
    }());
    Constants.UserDataErrorTypes = UserDataErrorTypes;
    var ImmoboxPagesTypes = (function () {
        function ImmoboxPagesTypes() {
        }
        ImmoboxPagesTypes.general = 'general';
        ImmoboxPagesTypes.favorites = 'favorites';
        ImmoboxPagesTypes.leads = 'leads';
        ImmoboxPagesTypes.account = 'account';
        ImmoboxPagesTypes.loginForm = 'login-form';
        ImmoboxPagesTypes.editProfileForm = 'edit-profile-form';
        ImmoboxPagesTypes.registerForm = 'register-form';
        ImmoboxPagesTypes.leadRequestForm = 'lead-request-form';
        return ImmoboxPagesTypes;
    }());
    Constants.ImmoboxPagesTypes = ImmoboxPagesTypes;
    var ImmoboxTabsTypes = (function () {
        function ImmoboxTabsTypes() {
        }
        ImmoboxTabsTypes.general = ImmoboxPagesTypes.general;
        ImmoboxTabsTypes.favorites = ImmoboxPagesTypes.favorites;
        ImmoboxTabsTypes.leads = ImmoboxPagesTypes.leads;
        ImmoboxTabsTypes.account = ImmoboxPagesTypes.account;
        return ImmoboxTabsTypes;
    }());
    Constants.ImmoboxTabsTypes = ImmoboxTabsTypes;
    var GenderTypes = (function () {
        function GenderTypes() {
        }
        GenderTypes.male = 'male';
        GenderTypes.female = 'female';
        return GenderTypes;
    }());
    Constants.GenderTypes = GenderTypes;
})(Constants || (Constants = {}));

var Constants;
(function (Constants) {
    var LoginState = (function () {
        function LoginState() {
        }
        LoginState.notLoggedIn = "Not logged in";
        LoginState.newlyLoggedIn = "Logged in now";
        LoginState.alreadyLoggedIn = "Logged in earlier";
        return LoginState;
    }());
    Constants.LoginState = LoginState;
})(Constants || (Constants = {}));

var Constants;
(function (Constants) {
    var AuthenticationType = (function () {
        function AuthenticationType() {
        }
        AuthenticationType.unknown = "Unknown";
        AuthenticationType.guest = "Guest";
        AuthenticationType.light = "Light";
        AuthenticationType.full = "Full";
        return AuthenticationType;
    }());
    Constants.AuthenticationType = AuthenticationType;
})(Constants || (Constants = {}));

var Constants;
(function (Constants) {
    var ClassNames = (function () {
        function ClassNames() {
        }
        ClassNames.fieldValidationError = "field-validation-error";
        return ClassNames;
    }());
    Constants.ClassNames = ClassNames;
})(Constants || (Constants = {}));

var Constants;
(function (Constants) {
    Constants.initialState = {
        auth: {
            accessToken: null,
            authenticationType: Constants.AuthenticationType.unknown,
            userId: null,
            isLogging: false,
            authLabel: Shared.Utilities.Guid(),
            loginState: Constants.LoginState.notLoggedIn
        },
        profile: {
            Gender: Constants.GenderTypes.male,
            FirstName: null,
            LastName: null,
            Email: null,
            Address1: null,
            Address2: null,
            PostCode: null,
            Location: null,
            CountryId: null,
            Phone: null,
            Language: null,
            Newsletter: null,
            CurrencyId: null
        },
        userData: (_a = {},
            _a[Constants.UserDataType.favorites] = {
                items: [],
                isFetching: false,
                maxCount: null
            },
            _a[Constants.UserDataType.recentSearches] = {
                items: [],
                isFetching: false,
                shouldGetOnComponentMount: false,
                maxCount: 5
            },
            _a[Constants.UserDataType.leadRequests] = {
                items: [],
                isFetching: false,
                maxCount: null
            },
            _a
        ),
        immobox: {
            tabsData: [
                {
                    id: Constants.ImmoboxTabsTypes.general,
                    title: "Immobox.Links.Immobox",
                    icon: "fa-inbox",
                    hasCounter: true,
                    isActive: true,
                    isEnabled: true,
                    contentPageId: Constants.ImmoboxPagesTypes.general,
                    dataTypes: [Constants.UserDataType.recentSearches]
                },
                {
                    id: Constants.ImmoboxTabsTypes.favorites,
                    title: "Immobox.Links.Favorites",
                    icon: "fa-star",
                    hasCounter: true,
                    isActive: false,
                    isEnabled: false,
                    contentPageId: Constants.ImmoboxPagesTypes.favorites,
                    dataTypes: [Constants.UserDataType.favorites]
                },
                {
                    id: Constants.ImmoboxTabsTypes.leads,
                    title: "Immobox.Links.Requests",
                    icon: "fa-comment",
                    hasCounter: true,
                    isActive: false,
                    isEnabled: true,
                    contentPageId: Constants.ImmoboxPagesTypes.leads,
                    dataTypes: [Constants.UserDataType.leadRequests]
                }
            ],
            tabsMobileData: [
                {
                    id: Constants.ImmoboxTabsTypes.general,
                    icon: "fa-inbox",
                    hasCounter: true,
                    isActive: false,
                    isEnabled: true,
                    contentPageId: Constants.ImmoboxPagesTypes.general,
                    dataTypes: [Constants.UserDataType.recentSearches]
                },
                {
                    id: Constants.ImmoboxTabsTypes.favorites,
                    icon: "fa-star",
                    hasCounter: true,
                    isActive: false,
                    isEnabled: false,
                    contentPageId: Constants.ImmoboxPagesTypes.favorites,
                    dataTypes: [Constants.UserDataType.favorites]
                },
                {
                    id: Constants.ImmoboxTabsTypes.leads,
                    icon: "fa-comment",
                    hasCounter: true,
                    isActive: false,
                    isEnabled: true,
                    contentPageId: Constants.ImmoboxPagesTypes.leads,
                    dataTypes: [Constants.UserDataType.leadRequests]
                },
                {
                    id: Constants.ImmoboxTabsTypes.account,
                    icon: "fa-user",
                    hasCounter: false,
                    isActive: false,
                    isEnabled: true,
                    contentPageId: Constants.ImmoboxPagesTypes.loginForm,
                    dataTypes: [Constants.UserDataType.favorites]
                }
            ],
            contentPages: [
                {
                    id: Constants.ImmoboxPagesTypes.general,
                    isActiveForSidebar: true,
                    isActiveForPopover: false
                },
                {
                    id: Constants.ImmoboxPagesTypes.favorites,
                    isActiveForSidebar: false,
                    isActiveForPopover: false
                },
                {
                    id: Constants.ImmoboxPagesTypes.leads,
                    isActiveForSidebar: false,
                    isActiveForPopover: false
                },
                {
                    id: Constants.ImmoboxPagesTypes.loginForm,
                    isActiveForSidebar: false,
                    isActiveForPopover: false
                },
                {
                    id: Constants.ImmoboxPagesTypes.editProfileForm,
                    isActiveForSidebar: false,
                    isActiveForPopover: false
                },
                {
                    id: Constants.ImmoboxPagesTypes.registerForm,
                    isActiveForSidebar: false,
                    isActiveForPopover: false
                },
                {
                    id: Constants.ImmoboxPagesTypes.leadRequestForm,
                    isActiveForSidebar: false,
                    isActiveForPopover: false
                }
            ]
        },
        appData: {
            countries: {
                items: [],
                isFetching: false,
            }
        },
        localization: {
            translations: window.translations || {},
            currentLocale: "en",
            isFetching: true
        },
        config: {
            portalConfig: {
                supportedCultures: [],
                currencies: [],
                defaultCurrency: null,
                id: null,
                defaultCountryISO: null,
                enableFullProfile: false,
                enableShortRegistrationForm: false,
                enableAutoRegistration: false,
                numberOfTheElementAfterWhichAddBannerInTheResultList: 0,
                numberOfTheElementAfterWhichAddBannerInTheResultListSpecified: false,
                enableOneClickContact: false
            },
            bannersConfig: {
                doubleClickAdditionList: []
            },
            iFrameCompatible: false,
            pageName: "",
            routeUrls: undefined
        },
        searchResults: {
            result: [],
            searchCriteriaForEup: {},
            searchName: null,
            searchUrl: null,
            isFetching: false,
            currentPageNumber: 0,
            pagesToDisplay: 0,
            previousPageNumber: 0,
            nextPageNumber: 0,
            pageNumberMaximum: 0,
            saveCriteriaInDb: true,
            searchNameForEup: null,
            searchConfigName: null,
            areaName: null
        },
        itemDetails: {
            campaignId: null
        },
        wrappers: {
            leadRequestWrapper: {},
            accountWrapper: {}
        }
    };
    var _a;
})(Constants || (Constants = {}));

var Repositories;
(function (Repositories) {
    var AuthData = (function () {
        function AuthData() {
        }
        AuthData.loginUser = function (userInputData) {
            return new Promise(function (resolve, reject) {
                AuthData.loginUserViaApi(userInputData)
                    .then(function () { return AuthData.getAccessTokenFromApi(); })
                    .then(function (json) { return resolve(json); })
                    .catch(function (error) {
                    console.log(error);
                    reject(error);
                });
            });
        };
        AuthData.loginUserViaApi = function (userInputData) {
            var loginEndpoint = Router.action('Account', 'Login', { language: System.getLanguage() });
            return Api.post(loginEndpoint, {
                body: userInputData,
                credentials: 'same-origin'
            })
                .then(function (response) { return response; })
                .catch(function (response) {
                switch (response.status) {
                    case StatusCode.FORBIDDEN:
                        throw new Error(Constants.AuthErrorTypes.unauthorized);
                    default:
                        throw new Error(Constants.AuthErrorTypes.unknown);
                }
            });
        };
        AuthData.getAccessTokenFromApi = function () {
            return new Promise(function (resolve, reject) {
                var tokenEndpoint = Router.action('Account', 'GetAccessToken', { language: System.getLanguage() });
                Api.post(tokenEndpoint, {
                    credentials: 'same-origin',
                    headers: {
                        'Cache-Control': 'no-cache',
                        'Pragma': 'no-cache'
                    }
                })
                    .then(function (_a) {
                    var jsonResponse = _a.jsonResponse;
                    var token = AuthData.computeTokenValidTo(jsonResponse);
                    // Auth data is successfully retrieved, now we can try to populate Local Storage
                    AuthData.populateLocalStorage(token)
                        .catch(function () { return Promise.resolve(); })
                        .then(function () { return resolve(token); });
                })
                    .catch(function (error) {
                    console.log(error);
                    reject(error);
                });
            });
        };
        AuthData.computeTokenValidTo = function (token) {
            if (token && token["tokenLifespan"]) {
                return Object.assign({}, token, {
                    validTo: new Date().getTime() + token["tokenLifespan"]
                });
            }
            return token;
        };
        AuthData.get = function (auth) {
            return new Promise(function (resolve, reject) {
                AuthData.getFromLocalStorage()
                    .then(function (json) { return resolve(json); })
                    .catch(function () { return AuthData.getAccessTokenFromApi(); })
                    .then(resolve);
            });
        };
        AuthData.userIsAuthenticated = function (auth) {
            return (auth.authenticationType === Constants.AuthenticationType.full || auth.authenticationType === Constants.AuthenticationType.light)
                && auth.accessToken && AuthData.tokenIsNotExpired(auth.validTo);
        };
        AuthData.getFromLocalStorage = function () {
            return new Promise(function (resolve, reject) {
                if (Modernizr.localstorage) {
                    var authDataFromLocalStorage = JSON.parse(localStorage.getItem(AuthData.localStorageKey));
                    if (authDataFromLocalStorage != null && Object.keys(authDataFromLocalStorage).length > 0 && AuthData.tokenIsNotExpired(authDataFromLocalStorage.validTo)) {
                        resolve(authDataFromLocalStorage);
                    }
                    else {
                        reject("No auth data was found in Local Storage");
                    }
                }
                else {
                    reject("Local Storage is not available");
                }
            });
        };
        AuthData.tokenIsNotExpired = function (validTo) {
            return validTo && new Date().getTime() < validTo;
        };
        AuthData.populateLocalStorage = function (sourceData) {
            return new Promise(function (resolve, reject) {
                if (Modernizr.localstorage) {
                    if (sourceData != undefined) {
                        localStorage.setItem(AuthData.localStorageKey, JSON.stringify(sourceData));
                        resolve();
                    }
                    else {
                        reject("No source data was provided");
                    }
                }
                else {
                    reject("Local Storage is not available");
                }
            });
        };
        AuthData.clearLocalStorage = function () {
            if (Modernizr.localstorage) {
                var authDataFromLocalStorage = JSON.parse(localStorage.getItem(AuthData.localStorageKey));
                if (authDataFromLocalStorage != null) {
                    localStorage.removeItem(AuthData.localStorageKey);
                }
            }
        };
        AuthData.createUserViaApi = function (userData) {
            // add currency as a part of the profile data
            var currentCurrency = Repositories.Profile.getCurrentCurrency();
            userData['currencyId'] = currentCurrency;
            return new Promise(function (resolve, reject) {
                new Api('/')
                    .do('post', 'Account/CreateProfile', {
                    body: userData
                })
                    .then(function (response) {
                    resolve(response.jsonResponse);
                })
                    .catch(function (response) {
                    switch (response.status) {
                        case StatusCode.CONFLICT:
                            throw new Error(Constants.AuthErrorTypes.conflict);
                        default:
                            throw new Error(Constants.AuthErrorTypes.unknown);
                    }
                })
                    .catch(function (error) {
                    reject({
                        error: error.message
                    });
                });
            });
        };
        AuthData.unauthorizeUser = function () {
            var logoutUrl = Router.action('Account', 'Logout', { language: System.getLanguage() });
            return Api.get(logoutUrl, {
                credentials: 'same-origin'
            })
                .then(function (response) { return response.jsonResponse; });
        };
        AuthData.localStorageKey = "auth";
        return AuthData;
    }());
    Repositories.AuthData = AuthData;
})(Repositories || (Repositories = {}));

var Repositories;
(function (Repositories) {
    var Profile = (function () {
        function Profile() {
        }
        Profile.get = function (auth) {
            return new Promise(function (resolve, reject) {
                if (auth != null && auth.authenticationType != null) {
                    switch (auth.authenticationType) {
                        case Constants.AuthenticationType.light:
                        case Constants.AuthenticationType.full:
                            Profile.getFromLocalStorage()
                                .then(function (json) { return resolve(json); })
                                .catch(function () {
                                // In case of authenticated user, we retrieve it from EUP
                                var url = Config.Services.EndUserProfile + "endUserPortalProfiles/" + auth.userId;
                                return Api.get(url, { auth: auth })
                                    .then(function (response) { return response.jsonResponse; })
                                    .then(function (json) {
                                    // User profile data is successfully retrieved from EUP, now we can try to populate Local Storage
                                    Profile.populateLocalStorage(json)
                                        .then(function () { return resolve(json); })
                                        .catch(function () { return resolve(json); });
                                })
                                    .catch(function (error) {
                                    console.log(error);
                                    reject(error);
                                });
                            });
                            break;
                        case Constants.AuthenticationType.guest:
                            {
                                Profile.getFromLocalStorage()
                                    .then(function (json) { return resolve(json); })
                                    .catch(function () { return reject("No profile data is provided for guest or unknown user."); });
                                break;
                            }
                        default:
                            reject("No profile data is provided for guest or unknown user.");
                            break;
                    }
                }
                else {
                    reject("No AuthenticationType is provided.");
                }
            });
        };
        Profile.update = function (newData, auth) {
            return new Promise(function (resolve, reject) {
                if (auth.authenticationType != Constants.AuthenticationType.guest) {
                    var url = Config.Services.EndUserProfile + "endUserPortalProfiles/" + auth.userId;
                    return Api.put(url, { body: newData, auth: auth })
                        .then(function (response) { return resolve(response.jsonResponse); })
                        .catch(function (response) {
                        switch (response.status) {
                            case StatusCode.CONFLICT:
                                throw new Error(Constants.AuthErrorTypes.conflict);
                            default:
                                throw new Error(Constants.AuthErrorTypes.unknown);
                        }
                    })
                        .catch(function (error) {
                        reject({
                            error: error.message
                        });
                    });
                }
                else {
                    Profile.getFromLocalStorage()
                        .then(function (json) {
                        return Object.assign(json != null ? json : {}, newData);
                    })
                        .catch(function () {
                        return newData;
                    })
                        .then(function (newProfile) {
                        return Profile.populateLocalStorage(newProfile)
                            .then(function () { return resolve(newProfile); })
                            .catch(function () { return resolve(newProfile); });
                    });
                }
            });
        };
        Profile.updatePhone = function (phone, auth) {
            var profile = {
                phone: phone
            };
            return Profile.update(profile, auth);
        };
        Profile.search = function (data, auth) {
            return new Promise(function (resolve, reject) {
                var url = Config.Services.EndUserProfile + "endUserPortalProfiles/search?" + (data.email ? "email=" + data.email : "") + (data.searchProfileAuthType ? "&euptype=" + data.searchProfileAuthType : "") + "\n\t\t\t\t\t" + (data.authenticationGroupId ? "&authenticationGroup=" + data.authenticationGroupId : "");
                return Api.get(url, { auth: auth })
                    .then(function (response) { return resolve(response.jsonResponse); })
                    .catch(function (error) {
                    console.log(error);
                    reject(error);
                });
            });
        };
        Profile.merge = function (eupp1, eupp2, auth) {
            //Merge EndUserPortalProfile2 into EndUserPortalProfile1
            return new Promise(function (resolve, reject) {
                var url = Config.Services.EndUserProfile + "endUserPortalProfiles/" + eupp1 + "/Merge/" + eupp2;
                return Api.post(url, { auth: auth })
                    .then(function (response) { return resolve(response.jsonResponse); })
                    .catch(function (error) {
                    console.log(error);
                    reject(error);
                });
            });
        };
        Profile.getFromLocalStorage = function () {
            if (!Modernizr.localstorage) {
                return Promise.reject("Local Storage is not available");
            }
            var profileFromLocalStorage = JSON.parse(localStorage.getItem(Profile.localStorageKey));
            if (profileFromLocalStorage != null && Object.keys(profileFromLocalStorage).length > 0) {
                return Promise.resolve(profileFromLocalStorage);
            }
            else {
                return Promise.reject("No profile data was found in Local Storage");
            }
        };
        Profile.populateLocalStorage = function (sourceData) {
            return new Promise(function (resolve, reject) {
                if (Modernizr.localstorage) {
                    if (sourceData != undefined) {
                        localStorage.setItem(Profile.localStorageKey, JSON.stringify(sourceData));
                        resolve();
                    }
                    else {
                        reject("No source data was provided");
                    }
                }
                else {
                    reject("Local Storage is not available");
                }
            });
        };
        Profile.clearLocalStorage = function () {
            if (Modernizr.localstorage) {
                var profileFromLocalStorage = JSON.parse(localStorage.getItem(Profile.localStorageKey));
                if (profileFromLocalStorage != null) {
                    localStorage.removeItem(Profile.localStorageKey);
                }
            }
        };
        /* Returns currency value from profile data(if it is explicitly changed). In case it is empty - returns portal default. */
        Profile.getCurrentCurrency = function () {
            var selectedCurrencyId = store.getState().profile.CurrencyId;
            var portalConfig = store.getState().config.portalConfig;
            return selectedCurrencyId ? selectedCurrencyId : portalConfig.defaultCurrency.currency;
        };
        Profile.localStorageKey = "profile";
        return Profile;
    }());
    Repositories.Profile = Profile;
})(Repositories || (Repositories = {}));

var Repositories;
(function (Repositories) {
    var RecentSearches = (function () {
        function RecentSearches() {
        }
        RecentSearches.update = function (sourceData, auth, initUserData) {
            switch (auth.authenticationType) {
                case Constants.AuthenticationType.guest:
                    return Repositories.UserData.getFromLocalStorage(Constants.UserDataType.recentSearches)
                        .then(function (searches) {
                        console.debug('Recent searches in localstorage', searches);
                        if (Object.keys(searches).length) {
                            sourceData = [sourceData].concat(searches.slice(1));
                        }
                        console.debug('Recent searches after update', sourceData);
                        return sourceData;
                    })
                        .then(function (data) {
                        return Repositories.UserData.populateLocalStorage(Constants.UserDataType.recentSearches, data, Constants.initialState.userData.recentSearches.maxCount);
                    });
                case Constants.AuthenticationType.light:
                case Constants.AuthenticationType.full:
                    var searchCriteria = sourceData['SearchCriteria'];
                    var lastSearchId = sourceData['LastSearchId'];
                    if (!searchCriteria) {
                        throw new Error('No SearchCriteria is provided');
                    }
                    var url = Config.Services.EndUserProfile + "endUserPortalProfiles/" + auth.userId + "/lastSearches/" + lastSearchId;
                    var body = {
                        searchCriteria: searchCriteria
                    };
                    return Api.do('put', url, { body: body, auth: auth })
                        .then(function (response) {
                        // We need to clean user data in Local Storage, so we'll be able to use Redux Action from the caller's THEN function
                        // At this point, it was decided to do this way, so we'll be always sure that our Local Storage data is in sync and relevant with EUP
                        Repositories.UserData.clearLocalStorage(Constants.UserDataType.recentSearches);
                        return Promise.resolve();
                    });
            }
        };
        RecentSearches.updateLastExecutionDate = function (lastSearchId, auth) {
            if (auth.authenticationType === Constants.AuthenticationType.guest) {
                return Promise.resolve();
            }
            var url = Config.Services.EndUserProfile + "endUserPortalProfiles/" + auth.userId + "/lastSearches/" + lastSearchId + "/lastExecutionDate";
            return Api.do('put', url, { auth: auth })
                .then(function (response) {
                Repositories.UserData.clearLocalStorage(Constants.UserDataType.recentSearches);
                return Promise.resolve();
            });
        };
        return RecentSearches;
    }());
    Repositories.RecentSearches = RecentSearches;
})(Repositories || (Repositories = {}));

var Repositories;
(function (Repositories) {
    var UserData = (function () {
        function UserData() {
        }
        UserData.get = function (userDataType, authData, authLabel, getState) {
            return new Promise(function (resolve, reject) {
                UserData.getFromLocalStorage(userDataType)
                    .then(function (json) { return resolve(json); })
                    .catch(function () {
                    if (!authData || !authData.authenticationType) {
                        reject('No AuthenticationType is provided');
                        return;
                    }
                    switch (authData.authenticationType) {
                        case Constants.AuthenticationType.light:
                        case Constants.AuthenticationType.full:
                            // In case of authenticated user, we retrieve it from EUP
                            var url = void 0;
                            switch (userDataType) {
                                case Constants.UserDataType.recentSearches:
                                    url = Config.Services.EndUserProfile + "endUserPortalProfiles/" + authData.userId + "/lastSearches?count=5";
                                    break;
                                case Constants.UserDataType.favorites:
                                    url = "http://bitter-wind-8365.getsandbox.com/favs";
                                    break;
                                case Constants.UserDataType.leadRequests:
                                    url = Config.Services.EndUserProfile + "endUserPortalProfiles/" + authData.userId + "/leads";
                                    break;
                                default:
                                    url = null;
                                    break;
                            }
                            Api.get(url, { auth: authData })
                                .then(function (result) { return result.jsonResponse; })
                                .then(function (json) {
                                if (getState().auth.authLabel !== authLabel)
                                    return resolve(json);
                                // User data is successfully retrieved from EUP, now we can try to populate Local Storage
                                UserData.populateLocalStorage(userDataType, json, authData.authenticationType)
                                    .then(function () { return resolve(json); })
                                    .catch(function () { return resolve(json); });
                            })
                                .catch(function (error) {
                                console.log(error);
                                reject(Constants.UserDataErrorTypes.unknown);
                            });
                            break;
                        default:
                            reject("No user data is provided for guest or unknown user.");
                            break;
                    }
                });
            });
        };
        UserData.set = function (userDataType, sourceData, authData, initUserData) {
            if (!authData || !authData.authenticationType) {
                throw new Error('No AuthenticationType is provided');
            }
            switch (authData.authenticationType) {
                case Constants.AuthenticationType.guest:
                    var maxCount = null;
                    switch (userDataType) {
                        case Constants.UserDataType.recentSearches:
                            maxCount = Constants.initialState.userData.recentSearches.maxCount;
                            //const searches = UserData.getFromLocalStorage(userDataType).then(searches => searches);
                            //console.debug('Recent searches in localstorage', searches);
                            //if (Object.keys(searches).length) {
                            //	if (searches[0] && UserData.compareSearchCriterias(searches[0], sourceData)) {
                            //		sourceData = [sourceData].concat(searches.slice(1))
                            //	}
                            //}
                            break;
                        default:
                            break;
                    }
                    if (maxCount != null) {
                        // If AuthenticationType is Guest, we try to populate Local Storage
                        return UserData.populateLocalStorage(userDataType, sourceData, maxCount);
                    }
                    break;
                case Constants.AuthenticationType.light:
                case Constants.AuthenticationType.full:
                    var url = void 0, body = void 0;
                    switch (userDataType) {
                        case Constants.UserDataType.recentSearches:
                            var searchCriteria = sourceData['SearchCriteria'];
                            if (!searchCriteria) {
                                throw new Error('No SearchCriteria is provided');
                            }
                            url = Config.Services.EndUserProfile + "endUserPortalProfiles/" + authData.userId + "/lastSearches";
                            if (!Array.isArray(searchCriteria)) {
                                body = {
                                    searchCriteria: searchCriteria
                                };
                            }
                            else {
                                url += "/createAll";
                                searchCriteria = searchCriteria.reverse()
                                    .reduce(function (list, item) {
                                    if (item['SearchCriteria']) {
                                        list.push(item['SearchCriteria']);
                                    }
                                    return list;
                                }, []);
                                body = {
                                    searchCriteria: searchCriteria
                                };
                            }
                            break;
                        case Constants.UserDataType.leadRequests:
                            body = sourceData;
                            url = Config.Services.EndUserProfile + "endUserPortalProfiles/" + authData.userId + "/leads";
                            break;
                        default:
                            body = null;
                            url = null;
                            break;
                    }
                    return Api.post(url, { body: body, auth: authData })
                        .then(function (response) {
                        // We need to clean user data in Local Storage, so we'll be able to use Redux Action from the caller's THEN function
                        // At this point, it was decided to do this way, so we'll be always sure that our Local Storage data is in sync and relevant with EUP
                        UserData.clearLocalStorage(userDataType);
                        return Promise.resolve();
                    });
                default:
                    break;
            }
        };
        UserData.getFromLocalStorage = function (userDataType) {
            if (!Modernizr.localstorage) {
                return Promise.reject("Local Storage is not available");
            }
            var userDataFromLocalStorage = JSON.parse(localStorage.getItem(UserData.localStorageKey));
            if (userDataFromLocalStorage != null && Object.keys(userDataFromLocalStorage).length > 0) {
                if (userDataFromLocalStorage.hasOwnProperty(userDataType.toString())) {
                    return Promise.resolve(userDataFromLocalStorage[userDataType.toString()]);
                }
                else {
                    return Promise.reject("No Local Storage data for userDataType was found");
                }
            }
            else {
                return Promise.reject("No user data was found in Local Storage");
            }
        };
        UserData.populateLocalStorage = function (userDataType, sourceData, userDataMaxCount) {
            if (userDataMaxCount === void 0) { userDataMaxCount = null; }
            if (!Modernizr.localstorage) {
                throw new Error("Local Storage is not available");
            }
            var userDataFromLocalStorage = JSON.parse(localStorage.getItem(UserData.localStorageKey));
            if (sourceData && userDataType) {
                var userData = void 0;
                if (Array.isArray(sourceData)) {
                    // If user is Full or Light we save all user data from eup service
                    userData = sourceData;
                }
                else {
                    userData = [sourceData];
                    if (userDataFromLocalStorage) {
                        var userDataByType = userDataFromLocalStorage[userDataType];
                        if (userDataByType && Object.keys(userDataByType).length) {
                            userData = userData.concat(userDataByType);
                            if (userDataMaxCount) {
                                userData = userData.slice(0, userDataMaxCount);
                            }
                        }
                    }
                }
                var updatedUserData = Object.assign({}, userDataFromLocalStorage, (_a = {},
                    _a[userDataType] = userData,
                    _a
                ));
                localStorage.setItem(UserData.localStorageKey, JSON.stringify(updatedUserData));
                return Promise.resolve();
            }
            else {
                throw new Error("No source data was provided");
            }
            var _a;
        };
        UserData.clearLocalStorage = function (userDataType) {
            if (Modernizr.localstorage) {
                if (userDataType != null) {
                    var userDataFromLocalStorage = JSON.parse(localStorage.getItem(UserData.localStorageKey));
                    if (userDataFromLocalStorage != null) {
                        delete userDataFromLocalStorage[userDataType.toString()];
                        localStorage.setItem(UserData.localStorageKey, JSON.stringify(userDataFromLocalStorage));
                    }
                }
                else {
                    localStorage.removeItem(UserData.localStorageKey);
                }
            }
        };
        UserData.localStorageKey = "userData";
        return UserData;
    }());
    Repositories.UserData = UserData;
})(Repositories || (Repositories = {}));

var Repositories;
(function (Repositories) {
    var Localization = (function () {
        function Localization() {
        }
        Localization.get = function (locale, dicoId) {
            var url = "/Translations/" + locale;
            if (dicoId) {
                url += "?dicoId=" + dicoId;
            }
            return Api.get(url, {})
                .then(function (response) { return response.jsonResponse; });
        };
        return Localization;
    }());
    Repositories.Localization = Localization;
})(Repositories || (Repositories = {}));

var ActionTypes;
(function (ActionTypes) {
    var AuthData = (function () {
        function AuthData() {
        }
        AuthData.authorizeUser = "AUTHORIZE_USER";
        AuthData.loggingUserIn = "LOGGING_USER_IN";
        AuthData.receiveAuthData = "RECEIVE_AUTH_DATA";
        AuthData.revertAuthDataToGuestState = "REVERT_AUTH_DATA_TO_GUEST_STATE";
        AuthData.setLoginState = "SET_LOGIN_STATE";
        return AuthData;
    }());
    ActionTypes.AuthData = AuthData;
})(ActionTypes || (ActionTypes = {}));

var ActionTypes;
(function (ActionTypes) {
    var Profile = (function () {
        function Profile() {
        }
        Profile.receiveProfileData = "RECEIVE_PROFILE_DATA";
        Profile.revertProfileToInitialState = "REVERT_PROFILE_TO_INITIAL_STATE";
        return Profile;
    }());
    ActionTypes.Profile = Profile;
})(ActionTypes || (ActionTypes = {}));

var ActionTypes;
(function (ActionTypes) {
    var Immobox = (function () {
        function Immobox() {
        }
        // Immobox tabs
        Immobox.changeTabWithContentPage = "CHANGE_TAB_WITH_CONTENT_PAGE";
        Immobox.setActiveTab = "SET_ACTIVE_TAB";
        Immobox.setActivePopoverTab = "SET_ACTIVE_POPOVER_TAB";
        Immobox.requestCounterByTabId = "REQUEST_COUNTER_BY_TAB_ID";
        Immobox.stopRequestCounterByTabId = "STOP_REQUEST_COUNTER_BY_TAB_ID";
        Immobox.receiveCounterByTabId = "RECEIVE_COUNTER_BY_TAB_ID";
        // Immobox mobile
        Immobox.openPopoverWithContentPage = "OPEN_POPOVER_WITH_CONTENT_PAGE";
        // Immobox content
        Immobox.changeContentPageForSidebar = "CHANGE_CONTENT_PAGE_FOR_SIDEBAR";
        Immobox.changeContentPageForPopover = "CHANGE_CONTENT_PAGE_FOR_POPOVER";
        return Immobox;
    }());
    ActionTypes.Immobox = Immobox;
})(ActionTypes || (ActionTypes = {}));

var ActionTypes;
(function (ActionTypes) {
    var UserData = (function () {
        function UserData() {
        }
        // Common
        UserData.revertAllToInitialState = "REVERT_ALL_TO_INITIAL_STATE";
        // Search results
        UserData.receiveSearchResults = "RECEIVE_SEARCH_RESULTS";
        // Recent Searches
        UserData.updateRecentSearches = "UPDATE_RECENT_SEARCHES";
        UserData.requestRecentSearches = "REQUEST_RECENT_SEARCHES";
        UserData.stopRequestRecentSearches = "STOP_REQUEST_RECENT_SEARCHES";
        UserData.receiveRecentSearches = "RECEIVE_RECENT_SEARCHES";
        UserData.revertRecentSearchesToInitialState = "REVERT_RECENT_SEARCHES_TO_INITIAL_STATE";
        UserData.shouldGetRecentSearchesOnComponentMount = "SHOULD_GET_RECENT_SEARCHES_ON_COMPONENT_MOUNT";
        // Favorites
        UserData.requestFavorites = "REQUEST_FAVORITES";
        UserData.stopRequestFavorites = "STOP_REQUEST_FAVORITES";
        UserData.receiveFavorites = "RECEIVE_FAVORITES";
        UserData.revertFavoritesToInitialState = "REVERT_FAVORITES_TO_INITIAL_STATE";
        // Lead Requests
        UserData.requestLeadRequests = "REQUEST_LEAD_REQUESTS";
        UserData.stopRequestLeadRequests = "STOP_REQUEST_LEAD_REQUESTS";
        UserData.receiveLeadRequests = "RECEIVE_LEAD_REQUESTS";
        UserData.revertLeadRequestsToInitialState = "REVERT_LEAD_REQUESTS_TO_INITIAL_STATE";
        return UserData;
    }());
    ActionTypes.UserData = UserData;
})(ActionTypes || (ActionTypes = {}));

var ActionTypes;
(function (ActionTypes) {
    var AppData = (function () {
        function AppData() {
        }
        AppData.receiveCountriesList = 'RECEIVE_COUNTRIES_LIST';
        AppData.startFetchingCountriesList = 'START_FETCHING_COUNTRIES_LIST';
        return AppData;
    }());
    ActionTypes.AppData = AppData;
})(ActionTypes || (ActionTypes = {}));

var ActionTypes;
(function (ActionTypes) {
    var Localization = (function () {
        function Localization() {
        }
        Localization.loadTranslations = "LOAD_TRANSLATIONS";
        Localization.loadTranslationsInProgress = "LOAD_TRANSLATIONS_IN_PROGRESS";
        Localization.loadTranslationsFinished = "LOAD_TRANSLATIONS_FINISHED";
        Localization.setCurrentLocale = "SET_CURRENT_LOCALE";
        return Localization;
    }());
    ActionTypes.Localization = Localization;
})(ActionTypes || (ActionTypes = {}));

var ActionTypes;
(function (ActionTypes) {
    var Search = (function () {
        function Search() {
        }
        // Search results
        Search.fetchSearchResults = "FETCH_SEARCH_RESULTS";
        Search.receiveSearchResults = "RECEIVE_SEARCH_RESULTS";
        return Search;
    }());
    ActionTypes.Search = Search;
})(ActionTypes || (ActionTypes = {}));

var ActionTypes;
(function (ActionTypes) {
    var Wrappers = (function () {
        function Wrappers() {
        }
        Wrappers.createLeadRequestWrapper = "CREATE_LEAD_REQUEST_WRAPPER";
        Wrappers.destroyLeadRequestWrapper = "DESTROY_LEAD_REQUEST_WRAPPER";
        Wrappers.setLeadRequestWrapperStatus = "SET_LEAD_REQUEST_WRAPPER_STATUS";
        Wrappers.showContentOnLeadRequestSuccess = "SHOW_CONTENT_ON_LEAD_REQUEST_SUCCESS";
        return Wrappers;
    }());
    ActionTypes.Wrappers = Wrappers;
})(ActionTypes || (ActionTypes = {}));

var ActionCreators;
(function (ActionCreators) {
    var AuthData = (function () {
        function AuthData() {
        }
        AuthData.loginUser = function (userInputData) {
            return function (dispatch) {
                dispatch(AuthData.loggingUserIn());
                return new Promise(function (resolve, reject) {
                    Repositories.AuthData.loginUser(userInputData)
                        .then(function (json) {
                        dispatch(AuthData.receiveAuthData(json));
                        resolve(json);
                    })
                        .then(function () { store.dispatch(ActionCreators.AuthData.setLoginState(Constants.LoginState.newlyLoggedIn)); })
                        .catch(function (_a) {
                        var message = _a.message;
                        return reject({ error: message });
                    });
                });
            };
        };
        AuthData.loadUserData = function () {
            return function (dispatch, getState) {
                var currentUserLabel = getState().auth.authLabel;
                console.log("Load user data after login and merge for user " + currentUserLabel);
                Repositories.UserData.clearLocalStorage();
                Repositories.Profile.clearLocalStorage();
                return dispatch(ActionCreators.Profile.getUserProfile())
                    .then(function () {
                    dispatch(ActionCreators.UserData.getUserData(currentUserLabel));
                    var portalConfig = getState().config.portalConfig;
                    if (portalConfig && portalConfig.enableFullProfile) {
                        dispatch(ActionCreators.Immobox.changeTabWithContentPage(Constants.ImmoboxTabsTypes.general, Constants.ImmoboxPagesTypes.general));
                    }
                });
            };
        };
        AuthData.authorizeUser = function (userInputData, mergeProfile) {
            if (mergeProfile === void 0) { mergeProfile = false; }
            return function (dispatch, getState) {
                var oldAuthData = getState().auth;
                var oldProfile = getState().profile;
                return dispatch(AuthData.loginUser(userInputData))
                    .then(function (json) {
                    switch (oldAuthData.authenticationType) {
                        case Constants.AuthenticationType.guest:
                            return dispatch(ActionCreators.UserData.updateDeferredUserData());
                        case Constants.AuthenticationType.light:
                            if (mergeProfile) {
                                return dispatch(ActionCreators.Profile.mergeProfiles(json.userId, oldAuthData.userId));
                            }
                            break;
                    }
                    return Promise.resolve();
                })
                    .then(function () { return dispatch(AuthData.loadUserData()); })
                    .then(function () {
                    switch (oldAuthData.authenticationType) {
                        case Constants.AuthenticationType.guest:
                            return dispatch(ActionCreators.Profile.updateProfileFromGuest(oldProfile));
                    }
                });
            };
        };
        AuthData.getAccessToken = function () {
            return function (dispatch, getState) { return AuthData.getAccessTokenPromise(dispatch, getState().auth); };
        };
        AuthData.getAccessTokenPromise = function (dispatch, auth) {
            return new Promise(function (resolve) {
                if (Repositories.AuthData.userIsAuthenticated(auth)
                    || auth.authenticationType === Constants.AuthenticationType.guest) {
                    resolve();
                }
                else {
                    Repositories.AuthData.get(auth)
                        .catch(function () { return ({ "authenticationType": Constants.AuthenticationType.guest }); })
                        .then(function (json) { return dispatch(AuthData.receiveAuthData(json)); })
                        .then(function () { return resolve(); });
                }
            });
        };
        AuthData.unauthorizeUser = function () {
            return function (dispatch, getState) {
                Repositories.AuthData.unauthorizeUser()
                    .then(function (json) {
                    dispatch(AuthData.receiveAuthData(json));
                    if (json.authenticationType === Constants.AuthenticationType.guest) {
                        // need a method to clear all data from local storage with all reverts in state
                        Repositories.UserData.clearLocalStorage();
                        dispatch(ActionCreators.UserData.revertAllToInitialState());
                        Repositories.Profile.clearLocalStorage();
                        dispatch(ActionCreators.Profile.revertProfileToInitialState());
                        Repositories.AuthData.clearLocalStorage();
                        dispatch(AuthData.revertAuthDataToGuestState());
                        //
                        dispatch(ActionCreators.Immobox.changeTabWithContentPage(Constants.ImmoboxTabsTypes.general, Constants.ImmoboxPagesTypes.general));
                    }
                })
                    .catch(function (error) { alert("Something happened! Unauthorization process has failed."); });
            };
        };
        AuthData.registerUser = function (values) {
            return function (dispatch, getState) {
                var auth = getState().auth;
                switch (auth.authenticationType) {
                    case Constants.AuthenticationType.light:
                        // If user is Light then we convert it to full, send all user data from light to full user and log in as full user
                        return dispatch(ActionCreators.Profile.convertLightToFullProfile(values));
                    case Constants.AuthenticationType.guest:
                    default:
                        // If user is Guest then we create it and log in
                        return dispatch(AuthData.createUserAndDispatchLogin(values));
                }
            };
        };
        AuthData.createUserAndDispatchLogin = function (values) {
            return function (dispatch) {
                return Repositories.AuthData.createUserViaApi(values)
                    .then(function (data) {
                    console.log('User created: ', data);
                    return dispatch(AuthData.loginUser({
                        userName: values.email,
                        password: values.password
                    }));
                })
                    .then(function () { return dispatch(ActionCreators.UserData.updateDeferredUserData()); })
                    .then(function () { return dispatch(AuthData.loadUserData()); });
            };
        };
        AuthData.loggingUserIn = function () {
            return {
                type: ActionTypes.AuthData.loggingUserIn
            };
        };
        AuthData.receiveAuthData = function (data) {
            return {
                type: ActionTypes.AuthData.receiveAuthData,
                data: data
            };
        };
        AuthData.revertAuthDataToGuestState = function () {
            return {
                type: ActionTypes.AuthData.revertAuthDataToGuestState
            };
        };
        AuthData.setLoginState = function (loginState) {
            return {
                type: ActionTypes.AuthData.setLoginState,
                loginState: loginState
            };
        };
        return AuthData;
    }());
    ActionCreators.AuthData = AuthData;
})(ActionCreators || (ActionCreators = {}));

var ActionCreators;
(function (ActionCreators) {
    var Profile = (function () {
        function Profile() {
        }
        Profile.getUserProfile = function () {
            return function (dispatch, getState) {
                return ActionCreators.AuthData.getAccessTokenPromise(dispatch, getState().auth)
                    .then(function () {
                    return Repositories.Profile.get(getState().auth)
                        .then(function (json) { return dispatch(Profile.receiveProfileData(json)); })
                        .catch(function (error) { console.log("Receive profile data process has failed.", error); });
                })
                    .then(function () {
                    Profile.reloadPageIfRequired();
                });
            };
        };
        Profile.convertLightToFullProfile = function (values) {
            return function (dispatch, getState) {
                return ActionCreators.AuthData.getAccessTokenPromise(dispatch, getState().auth)
                    .then(function () { return Repositories.Profile.update(values, getState().auth); })
                    .then(function () {
                    console.log("Light user is converted to full. Authorization is run...");
                    return dispatch(ActionCreators.AuthData.authorizeUser({
                        userName: values.email,
                        password: values.password
                    }));
                });
            };
        };
        Profile.updateAndGetProfile = function (values) {
            return function (dispatch, getState) {
                return ActionCreators.AuthData.getAccessTokenPromise(dispatch, getState().auth)
                    .then(function () { return Repositories.Profile.update(values, getState().auth); })
                    .then(function () { return Repositories.Profile.clearLocalStorage(); })
                    .then(function () { return dispatch(Profile.getUserProfile()); });
            };
        };
        Profile.updateProfileFromGuest = function (guestProfile) {
            return function (dispatch, getState) {
                return ActionCreators.AuthData.getAccessTokenPromise(dispatch, getState().auth)
                    .then(function () {
                    var profile = getState().profile;
                    if (profile.CurrencyId == null && guestProfile.CurrencyId != null) {
                        dispatch(Profile.changeCurrency(guestProfile.CurrencyId));
                    }
                });
            };
        };
        Profile.searchProfile = function (values) {
            return function (dispatch, getState) {
                return ActionCreators.AuthData.getAccessTokenPromise(dispatch, getState().auth)
                    .then(function () {
                    return Repositories.Profile.search(values, getState().auth)
                        .catch(function (error) { console.log("Search profile data process has failed."); });
                });
            };
        };
        Profile.mergeProfiles = function (eupp1, eupp2) {
            // Merge eupp2 into eupp1 (eupp1 is destinationEuppId, eupp2 is sourceEuppId)
            return function (dispatch, getState) {
                return ActionCreators.AuthData.getAccessTokenPromise(dispatch, getState().auth)
                    .then(function () {
                    return Repositories.Profile.merge(eupp1, eupp2, getState().auth)
                        .then(function () { console.log("Merge profile data process is done."); })
                        .catch(function (error) { console.log("Merge profile data process has failed."); });
                });
            };
        };
        Profile.receiveProfileData = function (data) {
            return {
                type: ActionTypes.Profile.receiveProfileData,
                data: data
            };
        };
        Profile.reloadPageIfRequired = function () {
            var currentLoginState = store.getState().auth.loginState;
            if (currentLoginState == Constants.LoginState.newlyLoggedIn) {
                var currentLanguage = store.getState().localization.currentLocale;
                var profileLanguage = store.getState().profile.Language;
                var routeUrls = store.getState().config.routeUrls;
                if (currentLanguage.length === 2) {
                    if (currentLanguage !== profileLanguage) {
                        var portalConfig = store.getState().config.portalConfig;
                        for (var i = 0; i < portalConfig.supportedCultures.length; i++) {
                            if (portalConfig.supportedCultures[i].cultureID === profileLanguage) {
                                ActionCreators.Localization.reloadPageWithNewLanguage(profileLanguage, routeUrls);
                            }
                        }
                    }
                }
            }
        };
        Profile.revertProfileToInitialState = function () {
            return {
                type: ActionTypes.Profile.revertProfileToInitialState
            };
        };
        Profile.changeCurrency = function (currency) {
            var values = {
                CurrencyId: currency
            };
            return function (dispatch, getState) {
                return ActionCreators.AuthData.getAccessTokenPromise(dispatch, getState().auth)
                    .then(function () { return Repositories.Profile.update(values, getState().auth); })
                    .then(function () {
                    if (getState().auth.authenticationType != Constants.AuthenticationType.guest) {
                        return Repositories.Profile.clearLocalStorage();
                    }
                })
                    .then(function () { return dispatch(Profile.getUserProfile()); })
                    .then(function () {
                    var pageName = getState().config.pageName;
                    if (pageName === 'SearchResultNew' || pageName === 'SearchResultAgencyNew' || pageName === 'ItemDetails') {
                        location.href = new URI().setSearch((pageName === 'ItemDetails') ? 'currencyId' : 'CurrencyID', currency).resource();
                    }
                });
            };
        };
        return Profile;
    }());
    ActionCreators.Profile = Profile;
})(ActionCreators || (ActionCreators = {}));

var ActionCreators;
(function (ActionCreators) {
    var Immobox = (function () {
        function Immobox() {
        }
        // Immobox tabs
        Immobox.changeTabWithContentPage = function (activeTabId, contentPageId) {
            return function (dispatch) {
                dispatch(Immobox.setActiveTab(activeTabId));
                return dispatch(Immobox.changeContentPageForSidebar(contentPageId));
            };
        };
        Immobox.setActiveTab = function (tabId) {
            return {
                type: ActionTypes.Immobox.setActiveTab,
                payload: {
                    tabId: tabId
                }
            };
        };
        // Immobox tab counters
        Immobox.fetchUserDataByTabId = function (tabId) {
            return function (dispatch, getState) {
                var authLabel = getState().auth.authLabel;
                console.log("Fetch data by tab id " + authLabel);
                switch (tabId) {
                    case Constants.ImmoboxTabsTypes.general:
                        dispatch(ActionCreators.RecentSearches.getRecentSearches(authLabel));
                        break;
                    case Constants.ImmoboxTabsTypes.favorites:
                        dispatch(ActionCreators.UserData.getFavorites(authLabel));
                        break;
                    case Constants.ImmoboxTabsTypes.leads:
                        dispatch(ActionCreators.UserData.getLeadRequests(authLabel));
                        break;
                }
            };
        };
        // Immobox popovers
        Immobox.openPopoverWithContentPage = function (activeTabId, contentPageId) {
            return function (dispatch) {
                dispatch(Immobox.setActivePopoverTab(activeTabId));
                return dispatch(Immobox.changeContentPageForPopover(contentPageId));
            };
        };
        Immobox.setActivePopoverTab = function (tabId) {
            return {
                type: ActionTypes.Immobox.setActivePopoverTab,
                payload: {
                    tabId: tabId
                }
            };
        };
        // Immobox content page
        Immobox.changeContentPageForSidebar = function (contentPageId) {
            return {
                type: ActionTypes.Immobox.changeContentPageForSidebar,
                payload: {
                    contentPageId: contentPageId
                }
            };
        };
        Immobox.changeContentPageForPopover = function (contentPageId) {
            return {
                type: ActionTypes.Immobox.changeContentPageForPopover,
                payload: {
                    contentPageId: contentPageId
                }
            };
        };
        return Immobox;
    }());
    ActionCreators.Immobox = Immobox;
})(ActionCreators || (ActionCreators = {}));

var ActionCreators;
(function (ActionCreators) {
    var RecentSearches = (function () {
        function RecentSearches() {
        }
        // Recent Searches
        RecentSearches.updateRecentSearches = function (searchCriteria) {
            return function (dispatch, getState) {
                return ActionCreators.AuthData.getAccessTokenPromise(dispatch, getState().auth)
                    .then(function () { return dispatch(RecentSearches.getRecentSearches(getState().auth.authLabel)); })
                    .then(function () {
                    var _a = getState(), auth = _a.auth, searchResults = _a.searchResults, userData = _a.userData;
                    if (!searchResults.saveCriteriaInDb) {
                        return Promise.resolve();
                    }
                    var searchUrl = new URI().removeQuery('p').hash('').resource();
                    var sourceData = {
                        SearchCriteria: searchCriteria,
                        searchName: searchResults.searchName,
                        searchConfigName: searchResults.searchConfigName,
                        areaName: searchResults.areaName,
                        searchUrl: searchUrl
                    };
                    var lastSearch = userData.recentSearches.items[0];
                    if (lastSearch) {
                        var lastSearchCriteria = lastSearch.SearchCriteria || lastSearch.searchCriteria;
                        if (RecentSearches.criteriaShallowCompare(searchCriteria, lastSearchCriteria)) {
                            var updatedSearch_1 = Object.assign({}, sourceData, {
                                SearchCriteria: Object.assign({}, sourceData.SearchCriteria, // use criteria data from search results in priority
                                {
                                    searchCriteriaId: lastSearchCriteria.searchCriteriaId || lastSearchCriteria.SearchCriteriaId // but use criteria id stored in client
                                }),
                                LastSearchId: lastSearch.lastSearchId || lastSearch.LastSearchId
                            });
                            if (!RecentSearches.criteriaAreEqual(searchCriteria, lastSearchCriteria)) {
                                return Repositories.RecentSearches.update(updatedSearch_1, auth, userData)
                                    .then(function () { return Repositories.RecentSearches.updateLastExecutionDate(updatedSearch_1.LastSearchId, auth); });
                            }
                            else {
                                return Repositories.RecentSearches.updateLastExecutionDate(updatedSearch_1.LastSearchId, auth);
                            }
                        }
                    }
                    var savedSearch = userData.recentSearches.items.find(function (s) { return RecentSearches.criteriaAreEqual(s.SearchCriteria, searchCriteria); });
                    if (savedSearch) {
                        return Repositories.RecentSearches.updateLastExecutionDate(savedSearch.LastSearchId, getState().auth);
                    }
                    return Repositories.UserData.set(Constants.UserDataType.recentSearches, sourceData, auth, userData);
                })
                    .then(function () { return dispatch(RecentSearches.getRecentSearches()); });
            };
        };
        RecentSearches.criteriaShallowCompare = function (a, b) {
            if (!a || !b) {
                return false;
            }
            return (a.transactionTypeId || a.TransactionTypeId) === (b.transactionTypeId || b.TransactionTypeId)
                && (a.propertySubTypeGroupId || a.PropertySubTypeGroupId) === (b.propertySubTypeGroupId || b.PropertySubTypeGroupId)
                && (a.areaId || a.AreaId) === (b.areaId || b.AreaId);
        };
        RecentSearches.criteriaAreEqual = function (first, second) {
            if (!first || !second) {
                return false;
            }
            return (first.AdMaterialImmoPropertySubTypeGroupId || first.adMaterialImmoPropertySubTypeGroupId) === (second.AdMaterialImmoPropertySubTypeGroupId || second.adMaterialImmoPropertySubTypeGroupId)
                && (first.AdMaterialImmoTransactionTypeId || first.adMaterialImmoTransactionTypeId) === (second.AdMaterialImmoTransactionTypeId || second.adMaterialImmoTransactionTypeId)
                && (first.AreaId || first.areaId) === (second.AreaId || second.areaId)
                && (first.AvailableFromMin || first.availableFromMin || null) === (second.AvailableFromMin || second.availableFromMin || null)
                && (first.CommercialAreaMin || first.commercialAreaMin || null) === (second.CommercialAreaMin || second.commercialAreaMin || null)
                && (first.CurrencyId || first.currencyId || null) === (second.CurrencyId || second.currencyId || null)
                && (first.LandAreaMin || first.landAreaMin || null) === (second.LandAreaMin || second.landAreaMin || null)
                && (first.LivingAreaMax || first.livingAreaMax || null) === (second.LivingAreaMax || second.livingAreaMax || null)
                && (first.LivingAreaMin || first.livingAreaMin || null) === (second.LivingAreaMin || second.livingAreaMin || null)
                && (first.NumberOfRoomsMax || first.numberOfRoomsMax || null) === (second.NumberOfRoomsMax || second.numberOfRoomsMax || null)
                && (first.NumberOfRoomsMin || first.numberOfRoomsMin || null) === (second.NumberOfRoomsMin || second.numberOfRoomsMin || null)
                && (first.PriceMax || first.priceMax || null) === (second.PriceMax || second.priceMax || null)
                && (first.PriceMin || first.priceMin || null) === (second.PriceMin || second.priceMin || null)
                && (first.PricePerSquareMeterMin || first.pricePerSquareMeterMin || null) === (second.PricePerSquareMeterMin || second.pricePerSquareMeterMin || null)
                && (first.ProfitGrossMin || first.profitGrossMin || null) === (second.ProfitGrossMin || second.profitGrossMin || null)
                && (first.Radius || first.radius || null) === (second.Radius || second.radius || null)
                && (first.SearchId || first.searchId || null) === (second.SearchId || second.searchId || null)
                && (first.SortBy || first.sortBy || null) === (second.SortBy || second.sortBy || null)
                && (first.SortDirection || first.sortDirection || null) === (second.SortDirection || second.sortDirection || null)
                && (first.UsableAreaMax || first.usableAreaMax || null) === (second.UsableAreaMax || second.usableAreaMax || null)
                && (first.UsableAreaMin || first.usableAreaMin || null) === (second.UsableAreaMin || second.usableAreaMin || null);
        };
        RecentSearches.updateRecentSearch = function () {
            return function (dispatch, getState) {
            };
        };
        RecentSearches.getRecentSearches = function (authLabel) {
            return function (dispatch, getState) {
                authLabel = authLabel || getState().auth.authLabel;
                console.log("Get recent searches " + authLabel);
                var _a = getState(), recentSearches = _a.userData.recentSearches, tabsData = _a.immobox.tabsData;
                // POW-3527
                var generalTabData = tabsData.find(function (tab) { return tab.id === Constants.ImmoboxTabsTypes.general; });
                if (generalTabData && !generalTabData.isEnabled) {
                    return;
                }
                return ActionCreators.AuthData.getAccessTokenPromise(dispatch, getState().auth)
                    .then(function () {
                    dispatch(RecentSearches.requestRecentSearches());
                    return Repositories.UserData.get(Constants.UserDataType.recentSearches, getState().auth, authLabel, getState)
                        .then(function (json) {
                        if (getState().auth.authLabel !== authLabel) {
                            return dispatch(RecentSearches.stopRequestRecentSearches());
                        }
                        return dispatch(RecentSearches.receiveRecentSearches(json));
                    })
                        .catch(function () { return dispatch(RecentSearches.stopRequestRecentSearches()); });
                });
            };
        };
        RecentSearches.requestRecentSearches = function () {
            return {
                type: ActionTypes.UserData.requestRecentSearches
            };
        };
        RecentSearches.stopRequestRecentSearches = function () {
            return {
                type: ActionTypes.UserData.stopRequestRecentSearches
            };
        };
        RecentSearches.receiveRecentSearches = function (data) {
            return {
                type: ActionTypes.UserData.receiveRecentSearches,
                data: data
            };
        };
        RecentSearches.revertRecentSearchesToInitialState = function () {
            return {
                type: ActionTypes.UserData.revertRecentSearchesToInitialState
            };
        };
        return RecentSearches;
    }());
    ActionCreators.RecentSearches = RecentSearches;
})(ActionCreators || (ActionCreators = {}));

var ActionCreators;
(function (ActionCreators) {
    var UserData = (function () {
        function UserData() {
        }
        // Common
        UserData.revertAllToInitialState = function () {
            return function (dispatch) {
                dispatch(ActionCreators.RecentSearches.revertRecentSearchesToInitialState());
                dispatch(UserData.revertFavoritesToInitialState());
                dispatch(UserData.revertLeadRequestsToInitialState());
            };
        };
        UserData.getUserData = function (authLabel) {
            return function (dispatch, getState) {
                authLabel = authLabel || getState().auth.authLabel;
                console.log("Get user data " + authLabel);
                var promises = [
                    dispatch(UserData.getFavorites(authLabel)),
                    dispatch(ActionCreators.RecentSearches.getRecentSearches(authLabel)),
                    dispatch(UserData.getLeadRequests(authLabel))
                ];
                return Promise.all(promises);
            };
        };
        UserData.getRootUserData = function () {
            return function (dispatch, getState) {
                return ActionCreators.AuthData.getAccessTokenPromise(dispatch, getState().auth)
                    .then(function () { return dispatch(ActionCreators.Profile.getUserProfile()); })
                    .then(function () {
                    var authLabel = getState().auth.authLabel;
                    console.log("Get root user data " + authLabel);
                    dispatch(UserData.getFavorites(authLabel));
                    dispatch(ActionCreators.RecentSearches.getRecentSearches(authLabel));
                    dispatch(UserData.getLeadRequests(authLabel));
                    //update login state to "logged in earlier" in case authentication type is full
                    if (store.getState().auth.authenticationType == Constants.AuthenticationType.full
                        && store.getState().auth.loginState == Constants.LoginState.notLoggedIn)
                        store.dispatch(ActionCreators.AuthData.setLoginState(Constants.LoginState.alreadyLoggedIn));
                    ActionCreators.Profile.reloadPageIfRequired();
                });
            };
        };
        UserData.updateDeferredUserData = function (authLabel) {
            return function (dispatch, getState) {
                authLabel = authLabel || getState().auth.authLabel;
                console.log("Update deferred user data " + authLabel);
                var promises = [
                    // temporary solution until we will reimplement recent searches schema
                    new Promise(function (resolve) {
                        Repositories.UserData.getFromLocalStorage(Constants.UserDataType.recentSearches)
                            .then(function (searches) { return searches['SearchCriteria'] || (Object.keys(searches).length > 0 && searches) || Promise.reject('No recent searches found'); })
                            .then(function (searches) {
                            console.log('Found unsaved recent searches in local storage. Posting to EUP...', searches);
                            resolve(dispatch(ActionCreators.RecentSearches.updateRecentSearches(searches)));
                        })
                            .catch(function () { return resolve(); });
                    })
                ];
                return Promise.all(promises);
            };
        };
        // Favorites
        UserData.getFavorites = function (authLabel) {
            return function (dispatch, getState) {
                authLabel = authLabel || getState().auth.authLabel;
                // POW-3527
                var favTabData = getState().immobox.tabsData.find(function (tab) { return tab.id == Constants.ImmoboxTabsTypes.favorites; });
                if (favTabData && !favTabData.isEnabled) {
                    return;
                }
                return ActionCreators.AuthData.getAccessTokenPromise(dispatch, getState().auth)
                    .then(function () {
                    dispatch(UserData.requestFavorites());
                    Repositories.UserData.get(Constants.UserDataType.favorites, getState().auth, authLabel, getState)
                        .then(function (json) {
                        if (getState().auth.authLabel !== authLabel) {
                            return dispatch(UserData.stopRequestFavorites());
                        }
                        return dispatch(UserData.receiveFavorites(json));
                    })
                        .catch(function () { return dispatch(UserData.stopRequestFavorites()); });
                });
            };
        };
        UserData.requestFavorites = function () {
            return {
                type: ActionTypes.UserData.requestFavorites
            };
        };
        UserData.stopRequestFavorites = function () {
            return {
                type: ActionTypes.UserData.stopRequestFavorites
            };
        };
        UserData.receiveFavorites = function (data) {
            return {
                type: ActionTypes.UserData.receiveFavorites,
                data: data
            };
        };
        UserData.revertFavoritesToInitialState = function () {
            return {
                type: ActionTypes.UserData.revertFavoritesToInitialState
            };
        };
        // Lead requests
        UserData.createLeadRequests = function (sourceData) {
            return function (dispatch, getState) {
                var currentAuth = getState().auth;
                var currentProfile = getState().profile;
                var currentUserData = getState().userData;
                var language = getState().localization.currentLocale;
                return ActionCreators.AuthData.getAccessTokenPromise(dispatch, getState().auth)
                    .then(function () {
                    // If user is Guest we try to authorize it as light
                    if (getState().auth.authenticationType === Constants.AuthenticationType.guest
                        && getState().auth.authLabel == currentAuth.authLabel) {
                        return dispatch(ActionCreators.AuthData.authorizeUser({ userName: sourceData.email }))
                            .catch(function (error) {
                            switch (error.error) {
                                case Constants.AuthErrorTypes.unauthorized:
                                    // If it is unauthorized error than we create light user
                                    var userProfileData = Object.assign({}, sourceData, {
                                        authenticationGroupId: Config.AuthenticationGroupId,
                                        endUserProfileTypeId: Constants.AuthenticationType.light,
                                        newsletter: false,
                                        language: language
                                    });
                                    return dispatch(ActionCreators.AuthData.createUserAndDispatchLogin(userProfileData))
                                        .catch(function (error) { return Promise.reject({
                                        _error: 'Immobox.Validations.SomethingWentWrong'
                                    }); });
                                default:
                                    return Promise.reject({
                                        _error: 'Immobox.SignIn.UnknownError'
                                    });
                            }
                        });
                    }
                })
                    .then(function () {
                    currentAuth = getState().auth;
                    currentProfile = getState().profile;
                    currentUserData = getState().userData;
                    return Repositories.UserData.set(Constants.UserDataType.leadRequests, sourceData, currentAuth, currentUserData);
                })
                    .then(function () {
                    // If user's phone is missing in user's profile then we update user phone number in user profile 
                    if (sourceData["phone"] && sourceData["phone"] != currentProfile["Phone"]) {
                        return Repositories.Profile.updatePhone(sourceData["phone"], currentAuth)
                            .then(function () {
                            Repositories.Profile.clearLocalStorage();
                            if (getState().auth.authLabel == currentAuth.authLabel) {
                                dispatch(ActionCreators.Profile.getUserProfile());
                            }
                        });
                    }
                })
                    .then(function () {
                    GenericTracking.Trackers.Instance.TrackEvent("CampaignRequest", {
                        Value: sourceData.campaignId
                    });
                    GenericTracking.Trackers.Instance.TrackEvent("LeadRequest");
                    GenericTracking.Trackers.Instance.TrackEvent("ContactByForm", {
                        CampaignId: sourceData.campaignId
                    });
                })
                    .then(function () {
                    if (currentAuth.authLabel != getState().auth.authLabel)
                        return;
                    dispatch(UserData.getLeadRequests(currentAuth.authLabel));
                    var portalConfig = getState().config.portalConfig;
                    if (portalConfig && portalConfig.enableFullProfile) {
                        dispatch(ActionCreators.Immobox.changeTabWithContentPage(Constants.ImmoboxTabsTypes.leads, Constants.ImmoboxPagesTypes.leads));
                    }
                });
            };
        };
        UserData.getLeadRequests = function (authLabel) {
            return function (dispatch, getState) {
                authLabel = authLabel || getState().auth.authLabel;
                // POW-3527
                var leadsTabData = getState().immobox.tabsData.find(function (tab) { return tab.id == Constants.ImmoboxTabsTypes.leads; });
                if (leadsTabData && !leadsTabData.isEnabled) {
                    return;
                }
                return ActionCreators.AuthData.getAccessTokenPromise(dispatch, getState().auth)
                    .then(function () {
                    dispatch(UserData.requestLeadRequests());
                    Repositories.UserData.get(Constants.UserDataType.leadRequests, getState().auth, authLabel, getState)
                        .then(function (json) {
                        if (getState().auth.authLabel !== authLabel) {
                            return dispatch(UserData.stopRequestLeadRequests());
                        }
                        return dispatch(UserData.receiveLeadRequests(json));
                    })
                        .catch(function () { return dispatch(UserData.stopRequestLeadRequests()); });
                });
            };
        };
        UserData.requestLeadRequests = function () {
            return {
                type: ActionTypes.UserData.requestLeadRequests
            };
        };
        UserData.stopRequestLeadRequests = function () {
            return {
                type: ActionTypes.UserData.stopRequestLeadRequests
            };
        };
        UserData.receiveLeadRequests = function (data) {
            return {
                type: ActionTypes.UserData.receiveLeadRequests,
                data: data
            };
        };
        UserData.revertLeadRequestsToInitialState = function () {
            return {
                type: ActionTypes.UserData.revertLeadRequestsToInitialState
            };
        };
        return UserData;
    }());
    ActionCreators.UserData = UserData;
})(ActionCreators || (ActionCreators = {}));

var ActionCreators;
(function (ActionCreators) {
    var AppData = (function () {
        function AppData() {
        }
        AppData.fetchCountriesFromGis = function () {
            return function (dispatch) {
                return new Api(Config.Services.Gis)
                    .do('get', '/countries', {
                    query: { lan: System.getLanguage() }
                })
                    .then(function (countries) {
                    dispatch(AppData.receiveCountriesList(countries.jsonResponse));
                })
                    .catch(function (error) {
                    console.log(error);
                });
            };
        };
        AppData.getCountriesList = function () {
            return function (dispatch, getState) {
                if (!getState().appData.countries.items.length) {
                    dispatch(AppData.startFetchingCountriesList());
                    dispatch(AppData.fetchCountriesFromGis());
                }
            };
        };
        AppData.startFetchingCountriesList = function () {
            return {
                type: ActionTypes.AppData.startFetchingCountriesList
            };
        };
        AppData.receiveCountriesList = function (countries) {
            return {
                type: ActionTypes.AppData.receiveCountriesList,
                payload: {
                    items: countries
                }
            };
        };
        return AppData;
    }());
    ActionCreators.AppData = AppData;
})(ActionCreators || (ActionCreators = {}));

var ActionCreators;
(function (ActionCreators) {
    var Localization = (function () {
        function Localization() {
        }
        Localization.loadTranslations = function (locale, dicoId) {
            return function (dispatch) {
                return new Promise(function (resolve) {
                    dispatch(Localization.loadTranslationsInProgress());
                    Repositories.Localization.get(locale, dicoId)
                        .then(function (translations) {
                        resolve(dispatch(Localization.loadTranslationsFinished(translations)));
                    })
                        .catch(function () { return resolve(); });
                });
            };
        };
        Localization.updateTranslations = function (locale) {
            var profileData = {
                Language: locale
            };
            return function (dispatch, getState) {
                var routeUrls = getState().config.routeUrls;
                return Repositories.Profile.update(profileData, getState().auth)
                    .then(function () { return Repositories.Profile.clearLocalStorage(); })
                    .then(function () { return dispatch(ActionCreators.Profile.getUserProfile()); })
                    .then(function () { return Localization.reloadPageWithNewLanguage(locale, routeUrls); })
                    .catch(function () { return Localization.errorSavingPreferredLanguage(locale, routeUrls); });
            };
        };
        Localization.reloadPageWithNewLanguage = function (locale, routeUrls) {
            var newUrl;
            if (routeUrls && routeUrls.hasOwnProperty(locale)) {
                newUrl = routeUrls[locale];
            }
            else {
                var uri = new URI(document.location.href);
                if (uri.segment(0).length === 2) {
                    uri.segment(0, locale);
                }
                newUrl = uri.resource();
            }
            //location.href = newUrl;
            setTimeout(function () { location.href = newUrl; }, 0);
        };
        Localization.errorSavingPreferredLanguage = function (locale, routeUrls) {
            Localization.reloadPageWithNewLanguage(locale, routeUrls);
        };
        Localization.loadTranslationsInProgress = function () {
            return {
                type: ActionTypes.Localization.loadTranslationsInProgress,
                data: {
                    isFetching: true
                }
            };
        };
        Localization.loadTranslationsFinished = function (translations) {
            return {
                type: ActionTypes.Localization.loadTranslationsFinished,
                data: {
                    translations: translations,
                    isFetching: false
                }
            };
        };
        Localization.setCurrentLocale = function (currentLocale) {
            return {
                type: ActionTypes.Localization.setCurrentLocale,
                payload: {
                    currentLocale: currentLocale
                }
            };
        };
        return Localization;
    }());
    ActionCreators.Localization = Localization;
})(ActionCreators || (ActionCreators = {}));

var ActionCreators;
(function (ActionCreators) {
    var Search = (function () {
        function Search() {
        }
        Search.urlOfSearchResultPage = function (pageNumber) {
            return new URI()
                .setSearch('p', pageNumber)
                .setSearch('loadByInfiniteScroll', true)
                .resource();
        };
        Search.fetchResults = function () {
            return function (dispatch, getState) {
                var _a = getState().searchResults, currentPageNumber = _a.currentPageNumber, nextPageNumber = _a.nextPageNumber, pageNumberMaximum = _a.pageNumberMaximum;
                if (!nextPageNumber) {
                    return Promise.reject('We have reached the end of results');
                }
                var urlOfNextPage = Search.urlOfSearchResultPage(nextPageNumber);
                dispatch(Search.fetchSearchResults());
                return Api.get(urlOfNextPage, {
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                    .then(function (data) { return data.jsonResponse; })
                    .then(function (json) { return dispatch(Search.receiveSearchResults(json)); });
            };
        };
        Search.receiveSearchResults = function (data) {
            return {
                type: ActionTypes.UserData.receiveSearchResults,
                payload: data
            };
        };
        Search.fetchSearchResults = function () {
            return {
                type: ActionTypes.Search.fetchSearchResults
            };
        };
        return Search;
    }());
    ActionCreators.Search = Search;
})(ActionCreators || (ActionCreators = {}));

var ActionCreators;
(function (ActionCreators) {
    var Wrappers = (function () {
        function Wrappers() {
        }
        Wrappers.createLeadRequestWrapper = function (wrapperId) {
            return {
                type: ActionTypes.Wrappers.createLeadRequestWrapper,
                payload: {
                    wrapperId: wrapperId
                }
            };
        };
        Wrappers.destroyLeadRequestWrapper = function (wrapperId) {
            return {
                type: ActionTypes.Wrappers.destroyLeadRequestWrapper,
                payload: {
                    wrapperId: wrapperId
                }
            };
        };
        Wrappers.showContentOnLeadRequestSuccess = function (formData, wrapperId) {
            return function (dispatch, getState) {
                return new Promise(function (resolve, reject) {
                    var state = getState();
                    // Check if current user is full or not
                    if (state.auth.authenticationType === Constants.AuthenticationType.full) {
                        return resolve({ isFullUser: true });
                    }
                    else if (state.config.portalConfig.enableFullProfile) {
                        // Check if a full user exists or not
                        return dispatch(ActionCreators.Profile.searchProfile(formData))
                            .then(function (json) { return resolve({ fullProfileExistsInEup: json.length > 0 }); })
                            .catch(function (error) { return console.error(error); });
                    }
                    else {
                        return resolve({});
                    }
                })
                    .then(function (options) { return dispatch(Wrappers.setLeadRequestWrapperStatus(wrapperId, options)); });
            };
        };
        Wrappers.setLeadRequestWrapperStatus = function (wrapperId, options) {
            return {
                type: ActionTypes.Wrappers.setLeadRequestWrapperStatus,
                payload: {
                    wrapperId: wrapperId,
                    options: options
                }
            };
        };
        return Wrappers;
    }());
    ActionCreators.Wrappers = Wrappers;
})(ActionCreators || (ActionCreators = {}));

var Reducers;
(function (Reducers) {
    Reducers.auth = function (state, action) {
        if (state === void 0) { state = Constants.initialState.auth; }
        if (action === void 0) { action = null; }
        switch (action.type) {
            case ActionTypes.AuthData.loggingUserIn:
                return Object.assign({}, state, {
                    isLogging: true
                });
            case ActionTypes.AuthData.receiveAuthData:
                return Object.assign({}, state, {
                    accessToken: action.data.accessToken,
                    authenticationType: action.data.authenticationType,
                    userId: action.data.userId,
                    validTo: action.data.validTo,
                    isLogging: false,
                    authLabel: Shared.Utilities.Guid()
                });
            case ActionTypes.AuthData.revertAuthDataToGuestState:
                return Object.assign({}, state, {
                    accessToken: null,
                    authenticationType: Constants.AuthenticationType.guest,
                    isLogging: false,
                    userId: null,
                    authLabel: Shared.Utilities.Guid()
                });
            case ActionTypes.AuthData.setLoginState:
                return Object.assign({}, state, {
                    loginState: action.loginState
                });
            default:
                return state;
        }
    };
})(Reducers || (Reducers = {}));

var Reducers;
(function (Reducers) {
    Reducers.profile = function (state, action) {
        if (state === void 0) { state = Constants.initialState.profile; }
        if (action === void 0) { action = null; }
        switch (action.type) {
            case ActionTypes.Profile.receiveProfileData:
                var _a = action.data, FirstName = _a.FirstName, LastName = _a.LastName, Address1 = _a.Address1, Address2 = _a.Address2, PostCode = _a.PostCode, Location_1 = _a.Location, CountryId = _a.CountryId, Phone = _a.Phone, Gender = _a.Gender, Email = _a.Email, Language = _a.Language, Newsletter = _a.Newsletter, CurrencyId = _a.CurrencyId;
                var obj = Object.assign({}, state, {
                    FirstName: FirstName,
                    LastName: LastName,
                    Address1: Address1,
                    Address2: Address2,
                    PostCode: PostCode,
                    Location: Location_1,
                    CountryId: CountryId,
                    Phone: Phone,
                    Gender: Gender != null ? Gender.toLowerCase() : null,
                    Email: Email,
                    Language: Language,
                    Newsletter: Newsletter,
                    CurrencyId: CurrencyId
                });
                return obj;
            case ActionTypes.Profile.revertProfileToInitialState:
                return Constants.initialState.profile;
            default:
                return state;
        }
    };
})(Reducers || (Reducers = {}));

var Reducers;
(function (Reducers) {
    Reducers.immobox = function (state, action) {
        if (state === void 0) { state = Constants.initialState.immobox; }
        if (action === void 0) { action = null; }
        switch (action.type) {
            case ActionTypes.Immobox.setActiveTab:
                return Object.assign({}, state, {
                    tabsData: state.tabsData.map(function (tabData) {
                        return Object.assign({}, tabData, {
                            isActive: tabData.id === action.payload.tabId
                        });
                    })
                });
            case ActionTypes.Immobox.setActivePopoverTab:
                return Object.assign({}, state, {
                    tabsMobileData: state.tabsMobileData.map(function (tabData) {
                        return Object.assign({}, tabData, {
                            isActive: tabData.id === action.payload.tabId
                        });
                    })
                });
            case ActionTypes.Immobox.changeContentPageForSidebar:
                return Object.assign({}, state, {
                    contentPages: state.contentPages.map(function (contentPage) {
                        return Object.assign({}, contentPage, {
                            isActiveForSidebar: contentPage.id === action.payload.contentPageId
                        });
                    })
                });
            case ActionTypes.Immobox.changeContentPageForPopover:
                return Object.assign({}, state, {
                    contentPages: state.contentPages.map(function (contentPage) {
                        return Object.assign({}, contentPage, {
                            isActiveForPopover: contentPage.id === action.payload.contentPageId
                        });
                    })
                });
            case ActionTypes.Immobox.requestCounterByTabId:
                return Object.assign({}, state, {
                    tabsData: state.tabsData.map(function (tabData) {
                        return tabData.id === action.tabId
                            ? Object.assign({}, tabData, {
                                isFetching: tabData.id === action.tabId
                            })
                            : tabData;
                    })
                });
            case ActionTypes.Immobox.stopRequestCounterByTabId:
                return Object.assign({}, state, {
                    tabsData: state.tabsData.map(function (tabData) {
                        return tabData.id === action.tabId
                            ? Object.assign({}, tabData, {
                                isFetching: false
                            })
                            : tabData;
                    })
                });
            case ActionTypes.Immobox.receiveCounterByTabId:
                return Object.assign({}, state, {
                    tabsData: state.tabsData.map(function (tabData) {
                        return tabData.id === action.tabId
                            ? Object.assign({}, tabData, {
                                isFetching: false,
                                counter: action.counterNumber
                            })
                            : tabData;
                    })
                });
            default:
                return state;
        }
    };
})(Reducers || (Reducers = {}));

var Reducers;
(function (Reducers) {
    Reducers.favorites = function (state, action) {
        if (state === void 0) { state = Constants.initialState.userData.favorites; }
        if (action === void 0) { action = null; }
        switch (action.type) {
            case ActionTypes.UserData.requestFavorites:
                return Object.assign({}, state, {
                    isFetching: true
                });
            case ActionTypes.UserData.stopRequestFavorites:
                return Object.assign({}, state, {
                    isFetching: false
                });
            case ActionTypes.UserData.receiveFavorites:
                return Object.assign({}, state, {
                    isFetching: false,
                    items: action.data
                });
            case ActionTypes.UserData.revertFavoritesToInitialState:
                return Constants.initialState.userData.favorites;
            default:
                return state;
        }
    };
})(Reducers || (Reducers = {}));

var Reducers;
(function (Reducers) {
    Reducers.recentSearches = function (state, action) {
        if (state === void 0) { state = Constants.initialState.userData.recentSearches; }
        if (action === void 0) { action = null; }
        switch (action.type) {
            case ActionTypes.UserData.requestRecentSearches:
                return Object.assign({}, state, {
                    isFetching: true
                });
            case ActionTypes.UserData.stopRequestRecentSearches:
                return Object.assign({}, state, {
                    isFetching: false
                });
            case ActionTypes.UserData.receiveRecentSearches:
                var items = [];
                if (Array.isArray(action.data)) {
                    items = action.data.map(function (item) { return item; });
                }
                return Object.assign({}, state, {
                    isFetching: false,
                    items: items
                });
            case ActionTypes.UserData.revertRecentSearchesToInitialState:
                return Constants.initialState.userData.recentSearches;
            case ActionTypes.UserData.shouldGetRecentSearchesOnComponentMount:
                return Object.assign({}, state, {
                    shouldGetOnComponentMount: action.payload.value
                });
            default:
                return state;
        }
    };
})(Reducers || (Reducers = {}));

var Reducers;
(function (Reducers) {
    Reducers.leadRequests = function (state, action) {
        if (state === void 0) { state = Constants.initialState.userData.leadRequests; }
        if (action === void 0) { action = null; }
        switch (action.type) {
            case ActionTypes.UserData.requestLeadRequests:
                return Object.assign({}, state, {
                    isFetching: true
                });
            case ActionTypes.UserData.stopRequestLeadRequests:
                return Object.assign({}, state, {
                    isFetching: false
                });
            case ActionTypes.UserData.receiveLeadRequests:
                var items = [];
                if (Array.isArray(action.data)) {
                    items = action.data
                        .map(function (item) { return item; })
                        .filter(function (item) { return 'Url' in item; });
                }
                return Object.assign({}, state, {
                    isFetching: false,
                    items: items
                });
            case ActionTypes.UserData.revertLeadRequestsToInitialState:
                return Constants.initialState.userData.leadRequests;
            default:
                return state;
        }
    };
})(Reducers || (Reducers = {}));

var Reducers;
(function (Reducers) {
    Reducers.userData = Redux.combineReducers({
        favorites: Reducers.favorites,
        recentSearches: Reducers.recentSearches,
        leadRequests: Reducers.leadRequests
    });
})(Reducers || (Reducers = {}));

var Reducers;
(function (Reducers) {
    Reducers.form = ReduxForm.reducer;
})(Reducers || (Reducers = {}));

var Reducers;
(function (Reducers) {
    Reducers.countries = function (state, action) {
        if (state === void 0) { state = Constants.initialState.appData.countries; }
        if (action === void 0) { action = null; }
        switch (action.type) {
            case ActionTypes.AppData.startFetchingCountriesList:
                return Object.assign({}, state, {
                    isFetching: true
                });
            case ActionTypes.AppData.receiveCountriesList:
                return Object.assign({}, state, {
                    items: action.payload.items,
                    isFetching: false
                });
            default:
                return state;
        }
    };
    Reducers.appData = Redux.combineReducers({
        countries: Reducers.countries
    });
})(Reducers || (Reducers = {}));

var Reducers;
(function (Reducers) {
    Reducers.localization = function (state, action) {
        if (state === void 0) { state = Constants.initialState.localization; }
        if (action === void 0) { action = null; }
        switch (action.type) {
            case ActionTypes.Localization.loadTranslationsInProgress:
                return Object.assign({}, state, action.data);
            case ActionTypes.Localization.loadTranslationsFinished:
                return Object.assign({}, state, action.data);
            case ActionTypes.Localization.setCurrentLocale:
                return Object.assign({}, state, action.payload);
            default:
                return state;
        }
    };
})(Reducers || (Reducers = {}));

var Reducers;
(function (Reducers) {
    Reducers.searchResults = function (state, action) {
        if (state === void 0) { state = Constants.initialState.searchResults; }
        if (action === void 0) { action = null; }
        switch (action.type) {
            case ActionTypes.Search.receiveSearchResults:
                return Object.assign({}, state, {
                    isFetching: false,
                    result: state.result.concat(action.payload.result),
                    currentPageNumber: action.payload.currentPageNumber,
                    pagesToDisplay: action.payload.pagesToDisplay,
                    previousPageNumber: action.payload.previousPageNumber,
                    nextPageNumber: action.payload.nextPageNumber,
                    pageNumberMaximum: action.payload.pageNumberMaximum
                });
            case ActionTypes.Search.fetchSearchResults:
                return Object.assign({}, state, {
                    isFetching: true
                });
            default:
                return state;
        }
    };
})(Reducers || (Reducers = {}));

var Reducers;
(function (Reducers) {
    Reducers.leadRequestWrapper = function (state, action) {
        if (state === void 0) { state = Constants.initialState.wrappers.leadRequestWrapper; }
        if (action === void 0) { action = null; }
        switch (action.type) {
            case ActionTypes.Wrappers.createLeadRequestWrapper:
                return Object.assign({}, state, (_a = {},
                    _a[action.payload.wrapperId] = {
                        leadRequestIsCreated: false,
                        fullProfileExistsInEup: false,
                        isFullUser: false
                    },
                    _a
                ));
            case ActionTypes.Wrappers.destroyLeadRequestWrapper:
                var newState = Object.assign({}, state);
                delete newState[action.payload.wrapperId];
                return newState;
            case ActionTypes.Wrappers.setLeadRequestWrapperStatus:
                var _b = action.payload.options, fullProfileExistsInEup = _b.fullProfileExistsInEup, isFullUser = _b.isFullUser;
                // This part is bad, the object should be properly merged and not replaced, will improve it later /dzh
                return Object.assign({}, state, (_c = {},
                    _c[action.payload.wrapperId] = {
                        leadRequestIsCreated: true,
                        fullProfileExistsInEup: fullProfileExistsInEup || false,
                        isFullUser: isFullUser || false
                    },
                    _c
                ));
            default:
                return state;
        }
        var _a, _c;
    };
})(Reducers || (Reducers = {}));

var Reducers;
(function (Reducers) {
    Reducers.wrappers = Redux.combineReducers({
        leadRequestWrapper: Reducers.leadRequestWrapper
    });
})(Reducers || (Reducers = {}));

var Reducers;
(function (Reducers) {
    Reducers.itemDetails = function (state, action) {
        if (state === void 0) { state = Constants.initialState.itemDetails; }
        if (action === void 0) { action = null; }
        switch (action.type) {
            default:
                return state;
        }
    };
})(Reducers || (Reducers = {}));

var Reducers;
(function (Reducers) {
    Reducers.config = function (state, action) {
        if (state === void 0) { state = Constants.initialState.config; }
        if (action === void 0) { action = null; }
        switch (action.type) {
            default:
                return state;
        }
    };
})(Reducers || (Reducers = {}));

var Reducers;
(function (Reducers) {
    Reducers.rootReducer = Redux.combineReducers({
        auth: Reducers.auth,
        profile: Reducers.profile,
        userData: Reducers.userData,
        immobox: Reducers.immobox,
        form: Reducers.form,
        appData: Reducers.appData,
        localization: Reducers.localization,
        config: Reducers.config,
        searchResults: Reducers.searchResults,
        wrappers: Reducers.wrappers,
        itemDetails: Reducers.itemDetails
    });
})(Reducers || (Reducers = {}));

var Selectors;
(function (Selectors) {
    function isTabFetching(dataList) {
        return dataList.some(function (value) { return value.isFetching; });
    }
    function getTabCounter(tabId, dataList) {
        switch (tabId) {
            case Constants.ImmoboxTabsTypes.general:
                {
                    // On general tab we can have two or more datasources like recent searches and alerts
                    var counter = dataList.reduce(function (prev, next) { return prev + next.items.reduce(function (prevAlert, nextAlert) { return prevAlert + (nextAlert && nextAlert.newPropertiesCount || 1); }, 0); }, 0);
                    return counter;
                }
            case Constants.ImmoboxTabsTypes.favorites:
            case Constants.ImmoboxTabsTypes.leads:
                {
                    var counter = dataList.reduce(function (prev, next) { return prev + next.items.length; }, 0);
                    return counter;
                }
        }
    }
    function isShouldMount(tabId, dataList) {
        switch (tabId) {
            case "general":
                return dataList.some(function (value) { return value.shouldGetOnComponentMount; });
            case "favorites":
            case "leads":
                return true;
        }
    }
    var tabSelector = function (state, props) { return props; };
    var userDataSelector = function (state) { return state.userData; };
    var tabUserDataSelector = Reselect.createSelector(tabSelector, userDataSelector, function (tab, userData) {
        return tab.dataTypes != null ? tab.dataTypes.map(function (dataType) { return userData[dataType]; }) : null;
    });
    Selectors.countersSelector = Reselect.createSelector([tabUserDataSelector, tabSelector], function (datas, tab) {
        return {
            isFetching: isTabFetching(datas),
            counter: tab.hasCounter ? getTabCounter(tab.id, datas) : null,
            shouldMount: isShouldMount(tab.id, datas)
        };
    });
})(Selectors || (Selectors = {}));

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    var shallowCompare = React.addons.shallowCompare;
    var KEYCODES = {
        ESCAPE: 27
    };
    var DEFAULT_CSS_CLASS = "portal";
    var CLASS_SUFFIX_CONTENT = "content";
    var CLASS_SUFFIX_OVERLAY = "overlay";
    var Portal = (function (_super) {
        __extends(Portal, _super);
        function Portal() {
            _super.call(this);
            this.state = { active: false };
            this.handleWrapperClick = this.handleWrapperClick.bind(this);
            this.closePortal = this.closePortal.bind(this);
            this.handleOutsideMouseClick = this.handleOutsideMouseClick.bind(this);
            this.handleOverlayClick = this.handleOverlayClick.bind(this);
            this.handleKeydown = this.handleKeydown.bind(this);
            this.portal = null;
            this.node = null;
        }
        Portal.prototype.componentDidMount = function () {
            this.overlayClass = this.props.className ? this.props.className + "_" + CLASS_SUFFIX_OVERLAY : DEFAULT_CSS_CLASS + "_" + CLASS_SUFFIX_OVERLAY;
            this.contentClass = this.props.className ? this.props.className + "_" + CLASS_SUFFIX_CONTENT : DEFAULT_CSS_CLASS + "_" + CLASS_SUFFIX_CONTENT;
            if (this.props.closeOnEsc) {
                document.addEventListener('keydown', this.handleKeydown);
            }
            if (this.props.closeOnOutsideClick) {
                document.addEventListener('mousedown', this.handleOutsideMouseClick);
                document.addEventListener('touchstart', this.handleOutsideMouseClick);
            }
            if (this.props.isOpened) {
                this.openPortal();
            }
        };
        Portal.prototype.componentWillReceiveProps = function (newProps) {
            // portal's 'is open' state is handled through the prop isOpened
            if (typeof newProps.isOpened !== 'undefined') {
                if (newProps.isOpened) {
                    if (this.state.active) {
                        this.renderPortal(newProps);
                    }
                    else {
                        this.openPortal(newProps);
                    }
                }
                if (!newProps.isOpened && this.state.active) {
                    this.closePortal();
                }
            }
            // portal handles its own 'is open' state
            if (typeof newProps.isOpened === 'undefined' && this.state.active) {
                this.renderPortal(newProps);
            }
        };
        Portal.prototype.componentWillUnmount = function () {
            if (this.props.closeOnEsc) {
                document.removeEventListener('keydown', this.handleKeydown);
            }
            if (this.props.closeOnOutsideClick) {
                document.removeEventListener('mousedown', this.handleOutsideMouseClick);
                document.removeEventListener('touchstart', this.handleOutsideMouseClick);
            }
            this.closePortal();
        };
        Portal.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            return shallowCompare(this, nextProps, nextState);
        };
        Portal.prototype.renderPortal = function (props) {
            var portalOverlay, portalContent;
            if (!this.node) {
                var node = document.createElement('div');
                node.className = props.className ? props.className : DEFAULT_CSS_CLASS;
                if (this.props.hasOverlay) {
                    portalOverlay = document.createElement('div');
                    portalOverlay.className = this.overlayClass;
                    if (this.props.closeOnOverlay) {
                        portalOverlay.addEventListener('click', this.handleOverlayClick);
                    }
                    node.appendChild(portalOverlay);
                }
                portalContent = document.createElement('div');
                portalContent.className = this.contentClass;
                // Hide scrollbars on desktop version
                if (!Modernizr.touch || !System.Browser.IsMobile()) {
                    portalContent.style.overflow = "hidden";
                }
                node.appendChild(portalContent);
                this.node = node;
                if (props.className) {
                    this.node.className = props.className;
                }
                document.body.appendChild(this.node);
            }
            this.portal = ReactDOM.unstable_renderSubtreeIntoContainer(this, React.cloneElement(props.children, { closePortal: this.closePortal }), this.node.getElementsByClassName(this.contentClass)[0], this.props.onUpdate);
        };
        Portal.prototype.render = function () {
            if (this.props.openByClickOn) {
                return React.cloneElement(this.props.openByClickOn, { onClick: this.handleWrapperClick });
            }
            else {
                return null;
            }
        };
        Portal.prototype.handleWrapperClick = function (e) {
            e.preventDefault();
            e.stopPropagation();
            this.openPortal();
        };
        Portal.prototype.openPortal = function (props) {
            if (props === void 0) { props = this.props; }
            this.setState({ active: true });
            this.renderPortal(props);
            this.props.onOpen(this.node);
        };
        Portal.prototype.closePortal = function () {
            var _this = this;
            var resetPortalState = function () {
                if (_this.node) {
                    ReactDOM.unmountComponentAtNode(_this.node);
                    document.body.removeChild(_this.node);
                }
                _this.portal = null;
                _this.node = null;
                _this.setState({ active: false });
            };
            if (this.state.active) {
                if (this.props.beforeClose) {
                    this.props.beforeClose(this.node, resetPortalState);
                }
                else {
                    resetPortalState();
                }
                this.props.onClose();
            }
        };
        Portal.prototype.handleOutsideMouseClick = function (e) {
            if (!this.state.active) {
                return;
            }
            var root = ReactDOM.findDOMNode(this.portal);
            if (root.contains(e.target) || e.target.tagName === 'HTML') {
                return;
            }
            e.stopPropagation();
            this.closePortal();
        };
        Portal.prototype.handleOverlayClick = function (e) {
            var root = ReactDOM.findDOMNode(this.portal);
            var overlay = this.node.getElementsByClassName(this.overlayClass)[0];
            if (root.contains(e.target) || e.target.tagName === 'HTML' || !overlay.contains(e.target)) {
                return;
            }
            e.stopPropagation();
            this.closePortal();
        };
        Portal.prototype.handleKeydown = function (e) {
            if (e.keyCode === KEYCODES.ESCAPE && this.state.active) {
                this.closePortal();
            }
        };
        return Portal;
    }(React.Component));
    Components.Portal = Portal;
    Portal.propTypes = {
        className: React.PropTypes.string,
        style: React.PropTypes.object,
        children: React.PropTypes.element.isRequired,
        openByClickOn: React.PropTypes.element,
        closeOnEsc: React.PropTypes.bool,
        closeOnOutsideClick: React.PropTypes.bool,
        isOpened: React.PropTypes.bool,
        onOpen: React.PropTypes.func,
        onClose: React.PropTypes.func,
        beforeClose: React.PropTypes.func,
        onUpdate: React.PropTypes.func,
        hasOverlay: React.PropTypes.bool
    };
    Portal.defaultProps = {
        onOpen: function () { },
        onClose: function () { },
        onUpdate: function () { },
    };
})(Components || (Components = {}));

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    var ModalWindow = (function (_super) {
        __extends(ModalWindow, _super);
        function ModalWindow(props) {
            _super.call(this, props);
            this.state = { modalIsOpen: false };
            this.closeModal = this.closeModal.bind(this);
            this.openModal = this.openModal.bind(this);
        }
        ModalWindow.prototype.openModal = function () {
            this.setState({ modalIsOpen: true });
        };
        ModalWindow.prototype.closeModal = function () {
            this.setState({ modalIsOpen: false });
        };
        ModalWindow.prototype.getChildContext = function () {
            return { closeModal: this.closeModal };
        };
        ModalWindow.prototype.render = function () {
            var _a = this.props, title = _a.title, children = _a.children, trigger = _a.trigger;
            return (React.createElement("div", {onClick: this.openModal}, trigger, React.createElement(ReactModal, {onRequestClose: this.closeModal, isOpen: this.state.modalIsOpen}, React.createElement("header", {className: "modal-header"}, React.createElement("div", {className: "modal-title"}, title), React.createElement("button", {className: "modal-cancel btn __small", onClick: this.closeModal}, React.createElement("i", {className: "fa fa-times"}))), React.createElement("div", {className: "modal-content"}, children))));
        };
        return ModalWindow;
    }(React.Component));
    Components.ModalWindow = ModalWindow;
    ModalWindow.childContextTypes = {
        closeModal: React.PropTypes.any
    };
})(Components || (Components = {}));

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    var Translation = (function (_super) {
        __extends(Translation, _super);
        function Translation() {
            _super.apply(this, arguments);
        }
        Translation.prototype.render = function () {
            var translation = this.context.translations[this.props.term];
            return React.createElement("span", null, this.context.isFetching ? '' : (translation || this.props.term));
        };
        return Translation;
    }(React.Component));
    Components.Translation = Translation;
    Translation.propTypes = {
        term: React.PropTypes.string.isRequired
    };
    Translation.contextTypes = {
        translations: React.PropTypes.object,
        isFetching: React.PropTypes.bool
    };
})(Components || (Components = {}));

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var IntlMixin = ReactIntl.IntlMixin;
var FormattedNumber = ReactIntl.FormattedNumber;
var Components;
(function (Components) {
    var Number = (function (_super) {
        __extends(Number, _super);
        function Number() {
            _super.apply(this, arguments);
        }
        Number.prototype.render = function () {
            var _a = this.props, value = _a.value, half = _a.half, style = _a.style, currency = _a.currency, minimumFractionDigits = _a.minimumFractionDigits, maximumFractionDigits = _a.maximumFractionDigits;
            if (half) {
                var useHalf = false;
                if (value * 2 % 2 != 0) {
                    useHalf = true;
                }
                return React.createElement("span", null, React.createElement(NumberWithArabicSupport, {value: Math.floor(value), style: style, currency: currency, minimumFractionDigits: minimumFractionDigits, maximumFractionDigits: maximumFractionDigits}), " ", useHalf ? String.fromCharCode(189) : null);
            }
            else {
                return React.createElement(NumberWithArabicSupport, {value: value, style: style, currency: currency, minimumFractionDigits: minimumFractionDigits, maximumFractionDigits: maximumFractionDigits});
            }
        };
        return Number;
    }(React.Component));
    Components.Number = Number;
    var NumberWithArabicSupport = (function (_super) {
        __extends(NumberWithArabicSupport, _super);
        function NumberWithArabicSupport() {
            _super.apply(this, arguments);
        }
        NumberWithArabicSupport.prototype.render = function () {
            var _a = this.props, value = _a.value, style = _a.style, currency = _a.currency, minimumFractionDigits = _a.minimumFractionDigits, maximumFractionDigits = _a.maximumFractionDigits;
            var component = ReactDOMServer.renderToStaticMarkup(React.createElement(FormattedNumber, {value: value, style: style, currency: currency, minimumFractionDigits: minimumFractionDigits, maximumFractionDigits: maximumFractionDigits, locales: [System.getLanguage()]}));
            component = component.replace(/<\/?span[^>]*>/g, "");
            if (System.getLanguage() == "ar") {
                component = component.replace(/[٠١٢٣٤٥٦٧٨٩]/g, function (d) {
                    return (d.charCodeAt(0) - 1632).toString();
                }).replace(/[۰۱۲۳۴۵۶۷۸۹]/g, function (d) {
                    return (d.charCodeAt(0) - 1776).toString();
                });
            }
            return React.createElement("span", null, component);
        };
        return NumberWithArabicSupport;
    }(React.Component));
    Components.NumberWithArabicSupport = NumberWithArabicSupport;
})(Components || (Components = {}));

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var IntlMixin = ReactIntl.IntlMixin;
var FormattedNumber = ReactIntl.FormattedNumber;
var Components;
(function (Components) {
    var Currency = (function (_super) {
        __extends(Currency, _super);
        function Currency() {
            _super.apply(this, arguments);
        }
        Currency.prototype.render = function () {
            var _a = this.props, value = _a.value, currency = _a.currency;
            return React.createElement(Components.Number, {value: value, style: "currency", currency: currency, minimumFractionDigits: 0, maximumFractionDigits: 0});
        };
        return Currency;
    }(React.Component));
    Components.Currency = Currency;
    var CurrencySymbol = (function (_super) {
        __extends(CurrencySymbol, _super);
        function CurrencySymbol() {
            _super.apply(this, arguments);
        }
        CurrencySymbol.prototype.render = function () {
            var currency = this.props.currency;
            return React.createElement("span", null, new Intl.NumberFormat(System.getLanguage(), { style: 'currency', currency: currency, minimumFractionDigits: 0, maximumFractionDigits: 0 }).format(1).replace(/s*1s*/, ""));
        };
        return CurrencySymbol;
    }(React.Component));
    Components.CurrencySymbol = CurrencySymbol;
})(Components || (Components = {}));

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    var Scroll = (function (_super) {
        __extends(Scroll, _super);
        function Scroll() {
            _super.apply(this, arguments);
        }
        Scroll.prototype.render = function () {
            var isMobile = Modernizr.touch && System.Browser.IsMobile();
            return (isMobile ?
                React.createElement("div", null, this.props.children)
                : React.createElement(ReactCustomScrollbars.Scrollbars, React.__spread({}, this.props, {autoHide: true, autoHideDuration: 200, renderTrackHorizontal: function () { return (React.createElement("div", null)); }}), this.props.children));
        };
        return Scroll;
    }(React.Component));
    Components.Scroll = Scroll;
})(Components || (Components = {}));

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    Components.FormArea = function (props) {
        return React.createElement("div", {className: classNames(['form_area', { 'mandatory icon': !!props.mandatory }, [props.className]])}, props.children);
    };
    Components.ErrorMessageBlock = function (props) {
        return React.createElement("div", {className: "error-block error-message-block visible"}, React.createElement(Components.Translation, {term: props.error}));
    };
    var DropDownField = (function (_super) {
        __extends(DropDownField, _super);
        function DropDownField() {
            _super.apply(this, arguments);
        }
        DropDownField.prototype.render = function () {
            var _this = this;
            var _a = this.props, options = _a.options, field = _a.field;
            return (React.createElement("select", React.__spread({}, field), options.map(function (item, index) {
                return (React.createElement("option", {value: item.value, key: index}, _this.context.isFetching ? "" : _this.context.translations[item.name] || item.name));
            })));
        };
        DropDownField.contextTypes = {
            translations: React.PropTypes.object,
            isFetching: React.PropTypes.bool
        };
        return DropDownField;
    }(React.Component));
    Components.DropDownField = DropDownField;
    var TextField = (function (_super) {
        __extends(TextField, _super);
        function TextField() {
            _super.apply(this, arguments);
        }
        TextField.prototype.render = function () {
            var _a = this.props, type = _a.type, placeholder = _a.placeholder, field = _a.field, disabled = _a.disabled;
            return (React.createElement("input", React.__spread({type: type, className: field.touched && field.error && 'input-validation-error', placeholder: this.context.isFetching ? "" : this.context.translations[placeholder] || placeholder, disabled: disabled}, field)));
        };
        TextField.contextTypes = {
            translations: React.PropTypes.object,
            isFetching: React.PropTypes.bool
        };
        return TextField;
    }(React.Component));
    Components.TextField = TextField;
    var TextArea = (function (_super) {
        __extends(TextArea, _super);
        function TextArea() {
            _super.apply(this, arguments);
        }
        TextArea.prototype.render = function () {
            var _a = this.props, placeholder = _a.placeholder, field = _a.field;
            return (React.createElement("textarea", React.__spread({className: field.touched && field.error && 'input-validation-error', placeholder: this.context.translations[placeholder], rows: 4}, field)));
        };
        TextArea.contextTypes = {
            translations: React.PropTypes.object
        };
        return TextArea;
    }(React.Component));
    Components.TextArea = TextArea;
})(Components || (Components = {}));

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    var Spinner = (function (_super) {
        __extends(Spinner, _super);
        function Spinner() {
            _super.apply(this, arguments);
        }
        Spinner.prototype.render = function () {
            return (React.createElement("div", {id: "ifscr-loading-icon", className: "scroll-spinner"}, React.createElement(Icon, {name: "refresh", spin: true}), ' ', React.createElement(Components.Translation, {term: "SearchResults.InfiniteScroll.Loading"})));
        };
        return Spinner;
    }(React.Component));
    Components.Spinner = Spinner;
    var Icon = (function (_super) {
        __extends(Icon, _super);
        function Icon() {
            _super.apply(this, arguments);
        }
        Icon.prototype.render = function () {
            var className = classNames([
                'fa',
                ("fa-" + this.props.name),
                { 'fa-spin': this.props.spin }
            ]);
            return (React.createElement("i", {className: className}));
        };
        return Icon;
    }(React.Component));
    Components.Icon = Icon;
})(Components || (Components = {}));

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    Components.Ellipsis = function (ComposedComponent, maxLines, ellipsisText) {
        if (ellipsisText === void 0) { ellipsisText = '...'; }
        var ReactMultilineEllipsis = (function (_super) {
            __extends(ReactMultilineEllipsis, _super);
            function ReactMultilineEllipsis(props) {
                _super.call(this, props);
                this.checkEllipsis = this.checkEllipsis.bind(this);
                this.getDOMNodeProperty = this.getDOMNodeProperty.bind(this);
                this.startsWith = this.startsWith.bind(this);
                this.cutLongText = this.cutLongText.bind(this);
                this.state = {
                    text: "" + props.text
                };
            }
            ReactMultilineEllipsis.prototype.componentDidMount = function () {
                this.checkEllipsis();
            };
            ReactMultilineEllipsis.prototype.componentDidUpdate = function () {
                this.checkEllipsis();
            };
            ReactMultilineEllipsis.prototype.getDOMNodeProperty = function (node, property) {
                return document.defaultView.getComputedStyle(node, null)
                    .getPropertyValue(property);
            };
            ReactMultilineEllipsis.prototype.checkEllipsis = function () {
                var node = ReactDOM.findDOMNode(this.refs.component);
                var lineHeight = parseFloat(this.getDOMNodeProperty(node, 'line-height').replace('px', ''));
                var height = parseFloat(this.getDOMNodeProperty(node, 'height').replace('px', ''));
                var numberOfLines = height / lineHeight;
                if (numberOfLines > maxLines) {
                    var currentText = this.state.text;
                    // cut very long text for better performance
                    var lineWidth = node.clientWidth;
                    var charWidth = 5; // assume the average width of character is not less than 5px
                    var charsInLine = Math.floor(lineWidth / charWidth);
                    var cutSize = charsInLine * (maxLines + 1);
                    var ellipsedText = (currentText.length > cutSize)
                        ? currentText.substr(0, cutSize)
                        : currentText;
                    ellipsedText = this.cutLongText(ellipsedText);
                    if (this.startsWith(ellipsisText, ' ')) {
                        ellipsedText = this.cutLongText(ellipsedText);
                    }
                    this.setState({ text: "" + ellipsedText + ellipsisText });
                }
            };
            ReactMultilineEllipsis.prototype.cutLongText = function (text) {
                var spaceIndex = text.lastIndexOf(' ');
                return (spaceIndex >= 0)
                    ? text.substring(0, spaceIndex)
                    : text.substring(0, text.length - 4);
            };
            ReactMultilineEllipsis.prototype.startsWith = function (str, textToSearch) {
                return str.startsWith
                    ? str.startsWith(textToSearch)
                    : str.indexOf(textToSearch, 0) === 0;
            };
            ReactMultilineEllipsis.prototype.render = function () {
                return React.createElement(ComposedComponent, React.__spread({ref: 'component'}, this.props, this.state));
            };
            return ReactMultilineEllipsis;
        }(React.Component));
        ReactMultilineEllipsis.propTypes = {
            text: React.PropTypes.string.isRequired
        };
        return ReactMultilineEllipsis;
    };
})(Components || (Components = {}));

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    var fields = ['email', 'phone', 'gender', 'firstName', 'lastName',
        'phone', 'address1', 'postCode', 'location', 'countryId', 'comments',
        'portalId', 'endUserPortalProfileId', 'campaignId', 'engineAdvertId',
        'searchProfileAuthType', 'authenticationGroupId'];
    var validate = function (values) {
        var errors = {};
        if (!values.email) {
            errors.email = 'Immobox.Validations.Required';
        }
        else if (!validator.isEmail(values.email)) {
            errors.email = 'Immobox.Validations.InvalidEmail';
        }
        if (!values.phone) {
            errors.phone = 'Immobox.Validations.Required';
        }
        else if (!validator.isNumeric(values.phone)) {
            errors.phone = 'Immobox.Validations.InvalidMobilePhone';
        }
        if (!values.firstName) {
            errors.firstName = 'Immobox.Validations.Required';
        }
        if (!values.lastName) {
            errors.lastName = 'Immobox.Validations.Required';
        }
        return errors;
    };
    var LeadRequestFormComponent = (function (_super) {
        __extends(LeadRequestFormComponent, _super);
        function LeadRequestFormComponent(props) {
            _super.call(this, props);
            this.state = {
                isFullForm: false,
                isFullUserExist: false
            };
            this.toggleForm = this.toggleForm.bind(this);
            this.onFormSubmit = this.onFormSubmit.bind(this);
        }
        LeadRequestFormComponent.prototype.getChildContext = function () {
            return {
                translations: this.props.translations,
                isFetching: this.props.isFetching
            };
        };
        LeadRequestFormComponent.prototype.componentDidMount = function () {
            this.props.getCountriesList();
        };
        LeadRequestFormComponent.prototype.toggleForm = function () {
            this.setState({ isFullForm: !this.state.isFullForm });
        };
        LeadRequestFormComponent.prototype.onFormSubmit = function (formData) {
            var _a = this.props, campaignId = _a.campaignId, createLeadRequests = _a.createLeadRequests, onLeadRequestIsCreated = _a.onLeadRequestIsCreated;
            formData = Object.assign(formData, {
                portalId: this.props.portalId,
                endUserPortalProfileId: this.props.endUserPortalProfileId,
                campaignId: this.props.campaignId,
                engineAdvertId: this.props.engineAdvertId,
                searchProfileAuthType: this.props.searchProfileAuthType,
                authenticationGroupId: this.props.authenticationGroupId
            });
            return createLeadRequests(formData)
                .then(function () { return onLeadRequestIsCreated(formData); })
                .catch(function (error) {
                console.error(error);
                switch (error.error) {
                    default:
                        return Promise.reject({
                            _error: "Immobox.Validations.SomethingWentWrong"
                        });
                }
            });
        };
        LeadRequestFormComponent.prototype.render = function () {
            var _a = this.props, _b = _a.fields, email = _b.email, phone = _b.phone, gender = _b.gender, firstName = _b.firstName, lastName = _b.lastName, address1 = _b.address1, postCode = _b.postCode, location = _b.location, countryId = _b.countryId, comments = _b.comments, handleSubmit = _a.handleSubmit, submitting = _a.submitting, error = _a.error, countriesList = _a.countriesList;
            if (countriesList.isFetching) {
                return React.createElement(Components.Translation, {term: "Immobox.Loading"});
            }
            else {
                return (React.createElement("form", {onSubmit: handleSubmit(this.onFormSubmit), className: "lead-request-form", ref: "leadRequestForm"}, error && React.createElement(Components.ErrorMessageBlock, {error: error}), React.createElement("p", {className: "lead-request_message"}, React.createElement(Components.Translation, {term: "LeadRequestForm.FillTheForm"}), ":"), React.createElement(Components.FormArea, {mandatory: true}, React.createElement(Components.TextField, {type: "email", placeholder: "Immobox.Fields.Email", field: email})), React.createElement(Components.FormArea, {mandatory: true}, React.createElement(Components.TextField, {type: "tel", placeholder: "Immobox.Fields.Phone", field: phone})), React.createElement(Components.FormArea, null, React.createElement(Components.DropDownField, {field: gender, options: [
                    { value: Constants.GenderTypes.male, name: 'Immobox.Fields.Gender.Male' },
                    { value: Constants.GenderTypes.female, name: 'Immobox.Fields.Gender.Female' },
                ]})), React.createElement(Components.FormArea, {mandatory: true}, React.createElement(Components.TextField, {type: "text", placeholder: "Immobox.Fields.FirstName", field: firstName})), React.createElement(Components.FormArea, {mandatory: true}, React.createElement(Components.TextField, {type: "text", placeholder: "Immobox.Fields.LastName", field: lastName})), React.createElement(Components.FormArea, {className: "text-right"}, React.createElement("span", {className: "lead-request-form_trigger action", onClick: this.toggleForm}, this.state.isFullForm ?
                    React.createElement("span", {className: "lead-request-form_switcher_full"}, React.createElement(Components.Translation, {term: "LeadRequestForm.SimpleContactInformation"}))
                    : React.createElement("span", {className: "lead-request-form_switcher_short"}, React.createElement(Components.Translation, {term: "LeadRequestForm.DetailedContactInformation"})))), this.state.isFullForm ?
                    React.createElement("div", {className: "lead-request-form_full_part"}, React.createElement(Components.FormArea, null, React.createElement(Components.TextField, {type: "text", placeholder: "Immobox.Fields.Address", field: address1})), React.createElement(Components.FormArea, null, React.createElement("div", {className: "row"}, React.createElement("div", {className: "pcol-6 tcol-6 col-6"}, React.createElement(Components.TextField, {type: "text", placeholder: "Immobox.Fields.Zipcode", field: postCode})), React.createElement("div", {className: "pcol-6 tcol-6 col-6"}, React.createElement(Components.TextField, {type: "text", placeholder: "Immobox.Fields.City", field: location})))), React.createElement(Components.FormArea, null, React.createElement(Components.DropDownField, {field: countryId, options: countriesList.items.map(function (item) {
                        return {
                            value: item.IsoCode,
                            name: item.Name,
                        };
                    })})), React.createElement(Components.FormArea, null, React.createElement(Components.TextArea, {placeholder: "LeadRequestForm.CommentPlaceholder", field: comments})))
                    : false, React.createElement(Components.FormArea, {className: "text-center"}, React.createElement("button", {type: "submit", className: classNames(['btn __big classified_contact_btn __icon', { '__process': !!submitting }]), disabled: submitting}, React.createElement(Components.Translation, {term: "LeadRequestForm.Actions.Send"})))));
            }
        };
        LeadRequestFormComponent.propTypes = {
            fields: React.PropTypes.object.isRequired,
            handleSubmit: React.PropTypes.func.isRequired,
            submitting: React.PropTypes.bool,
            getCountriesList: React.PropTypes.func.isRequired,
            campaignId: React.PropTypes.string.isRequired,
            engineId: React.PropTypes.string.isRequired,
        };
        LeadRequestFormComponent.childContextTypes = {
            translations: React.PropTypes.object,
            isFetching: React.PropTypes.bool
        };
        return LeadRequestFormComponent;
    }(React.Component));
    var init = function (state, props) {
        return {
            email: state.profile && state.profile.Email || '',
            gender: state.profile && state.profile.Gender ? Constants.GenderTypes.male : Constants.GenderTypes.female,
            firstName: state.profile && state.profile.FirstName || '',
            lastName: state.profile && state.profile.LastName || '',
            address1: state.profile && state.profile.Address1 || '',
            postCode: state.profile && state.profile.PostCode || '',
            phone: state.profile && state.profile.Phone || '',
            location: state.profile && state.profile.Location || '',
            countryId: state.profile && state.profile.CountryId || state.config.portalConfig.defaultCountryISO,
            portalId: state.config.portalConfig.id,
            endUserPortalProfileId: state.auth.userId,
            campaignId: props.campaignId,
            engineAdvertId: props.engineId,
            searchProfileAuthType: Constants.AuthenticationType.full,
            authenticationGroupId: Config.AuthenticationGroupId
        };
    };
    var mapStateToProps = function (state, props) {
        return {
            countriesList: state.appData.countries,
            translations: state.localization.translations,
            isFetching: state.localization.isFetching,
            portalId: state.config.portalConfig.id,
            endUserPortalProfileId: state.auth.userId,
            campaignId: props.campaignId,
            engineAdvertId: props.engineId,
            searchProfileAuthType: Constants.AuthenticationType.full,
            authenticationGroupId: Config.AuthenticationGroupId,
            initialValues: {
                email: state.profile && state.profile.Email || '',
                gender: state.profile && state.profile.Gender ? Constants.GenderTypes.male : Constants.GenderTypes.female,
                firstName: state.profile && state.profile.FirstName || '',
                lastName: state.profile && state.profile.LastName || '',
                address1: state.profile && state.profile.Address1 || '',
                postCode: state.profile && state.profile.PostCode || '',
                phone: state.profile && state.profile.Phone || '',
                location: state.profile && state.profile.Location || '',
                countryId: state.profile && state.profile.CountryId || state.config.portalConfig.defaultCountryISO,
            }
        };
    };
    var mapDispatchToProps = function (dispatch) {
        return Redux.bindActionCreators({
            getCountriesList: ActionCreators.AppData.getCountriesList,
            createLeadRequests: ActionCreators.UserData.createLeadRequests
        }, dispatch);
    };
    Components.LeadRequestForm = ReduxForm.reduxForm({
        form: 'lead-request',
        fields: fields,
        validate: validate
    }, mapStateToProps, mapDispatchToProps)(LeadRequestFormComponent);
})(Components || (Components = {}));

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    var fields = ['password', 'confirmPassword', 'endUserProfileTypeId', 'email'];
    var validate = function (values) {
        var errors = {};
        if (!values.password) {
            errors.password = 'Immobox.Validations.Required';
        }
        if (values.password && values.password.length < 8) {
            errors.password = 'Immobox.Validations.PasswordTooShort';
        }
        if (!values.confirmPassword) {
            errors.confirmPassword = 'Immobox.Validations.Required';
        }
        if (values.password && values.confirmPassword && values.password !== values.confirmPassword) {
            errors.confirmPassword = 'Immobox.Validations.PasswordsMustMatch';
        }
        return errors;
    };
    var ChangePasswordFormComponent = (function (_super) {
        __extends(ChangePasswordFormComponent, _super);
        function ChangePasswordFormComponent(props) {
            _super.call(this, props);
            this.state = {
                isSuccessfulRequest: false
            };
            this.formSubmit = this.formSubmit.bind(this);
        }
        ChangePasswordFormComponent.prototype.formSubmit = function (formData) {
            var _this = this;
            return this.props.dispatch(ActionCreators.Profile.convertLightToFullProfile(formData))
                .then(function () { return _this.setState({ isSuccessfulRequest: true }); })
                .catch(function (error) {
                switch (error.error) {
                    default:
                        return Promise.reject({
                            _error: 'Immobox.Validations.SomethingWentWrong'
                        });
                }
            });
        };
        ChangePasswordFormComponent.prototype.render = function () {
            var _a = this.props, _b = _a.fields, password = _b.password, confirmPassword = _b.confirmPassword, handleSubmit = _a.handleSubmit, submitting = _a.submitting, error = _a.error;
            if (this.state.isSuccessfulRequest) {
                return (React.createElement("div", {className: "message-box __2"}, React.createElement("h4", null, React.createElement(Components.Translation, {term: "LeadRequestForm.CreateAccount.Message.AccountCreated"}))));
            }
            else {
                return (React.createElement("div", null, React.createElement("div", {className: "alert text-center"}, React.createElement("div", {className: "alert_title"}, React.createElement(Components.Translation, {term: "LeadRequestForm.CreateAccount.Message.CompleteSignUp"})), React.createElement("div", {className: "alert_content"}, React.createElement(Components.Translation, {term: "LeadRequestForm.CreateAccount.Message.AddPassword"}))), React.createElement("form", {className: "form", onSubmit: handleSubmit(this.formSubmit)}, error && React.createElement(Components.ErrorMessageBlock, {error: error}), React.createElement(Components.FormArea, {mandatory: true}, React.createElement(Components.TextField, {type: "password", placeholder: "Immobox.Fields.Password", field: password}), password.touched && password.error && React.createElement("div", {className: Constants.ClassNames.fieldValidationError}, React.createElement(Components.Translation, {term: password.error}))), React.createElement(Components.FormArea, {mandatory: true}, React.createElement(Components.TextField, {type: "password", placeholder: "Immobox.Fields.PasswordConfirmation", mandatory: true, field: confirmPassword}), confirmPassword.touched && confirmPassword.error && React.createElement("div", {className: Constants.ClassNames.fieldValidationError}, React.createElement(Components.Translation, {term: confirmPassword.error}))), React.createElement(Components.FormArea, {className: "text-center"}, React.createElement("button", {type: "submit", className: "btn __big btn__submit", disabled: submitting}, submitting && React.createElement("i", {className: "fa fa-spin fa-spinner btn_icon"}), React.createElement(Components.Translation, {term: "LeadRequestForm.CreateAccount.SignUp"}))))));
            }
        };
        return ChangePasswordFormComponent;
    }(React.Component));
    var mapStateToProps = function (state, props) {
        return {
            initialValues: {
                endUserProfileTypeId: Constants.AuthenticationType.full,
                email: state.profile.Email
            }
        };
    };
    Components.ChangePasswordForm = ReduxForm.reduxForm({
        form: 'change-password',
        fields: fields,
        validate: validate,
    }, mapStateToProps)(ChangePasswordFormComponent);
})(Components || (Components = {}));

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    var fields = ['userName', 'password'];
    var validate = function (values) {
        var errors = {};
        if (!values.userName) {
            errors.userName = 'Immobox.Validations.Required';
        }
        else if (!validator.isEmail(values.userName)) {
            errors.userName = 'Immobox.Validations.InvalidEmail';
        }
        if (!values.password) {
            errors.password = 'Immobox.Validations.Required';
        }
        return errors;
    };
    var LoginFormComponent = (function (_super) {
        __extends(LoginFormComponent, _super);
        function LoginFormComponent(props) {
            _super.call(this, props);
            this.formSubmit = this.formSubmit.bind(this);
        }
        LoginFormComponent.prototype.formSubmit = function (formData) {
            var _this = this;
            // mergeProfile=true for authorizeUser after submit login form (if user is Light and submits login form then light user is merged to full)
            return this.props.dispatch(ActionCreators.AuthData.authorizeUser(formData, true))
                .catch(function (error) {
                switch (error.error) {
                    case Constants.AuthErrorTypes.unauthorized:
                        return Promise.reject({
                            _error: 'Immobox.SignIn.Unauthorized'
                        });
                    default:
                        return Promise.reject({
                            _error: 'Immobox.SignIn.UnknownError'
                        });
                }
            })
                .then(function () {
                _this.props.onLoggedIn();
                if (typeof _this.context["closeModal"] == "function") {
                    _this.context["closeModal"]();
                }
            });
        };
        LoginFormComponent.prototype.render = function () {
            var _a = this.props, _b = _a.fields, userName = _b.userName, password = _b.password, handleSubmit = _a.handleSubmit, submitting = _a.submitting, error = _a.error, isLogging = _a.isLogging, authenticationType = _a.authenticationType, hideRegisterButton = _a.hideRegisterButton, onLoggedIn = _a.onLoggedIn, handleSwitchToRegisterClick = _a.handleSwitchToRegisterClick;
            var disableEmailField = authenticationType != Constants.AuthenticationType.guest;
            return (React.createElement("form", {className: "form login-form", onSubmit: handleSubmit(this.formSubmit), ref: "loginForm"}, error && React.createElement(Components.ErrorMessageBlock, {error: error}), React.createElement(Components.FormArea, {mandatory: true}, React.createElement(Components.TextField, {type: "email", placeholder: "Immobox.Fields.Email", field: userName, disabled: disableEmailField})), React.createElement(Components.FormArea, {mandatory: true}, React.createElement(Components.TextField, {type: "password", placeholder: "Immobox.Fields.Password", field: password})), React.createElement(Components.FormArea, {className: "text-center"}, React.createElement("button", {type: "submit", className: "btn btn__primary btn__block", disabled: submitting}, submitting && React.createElement("i", {className: "fa fa-spin fa-spinner btn_icon"}), React.createElement(Components.Translation, {term: "Immobox.SignIn.Actions.Submit"}))), (!hideRegisterButton) ?
                React.createElement(Components.FormArea, {className: "login_register-area"}, React.createElement("div", {className: "alt-content"}, React.createElement("p", {className: "login_register-area_title"}, React.createElement(Components.Translation, {term: "Immobox.SignIn.NoAccountYet"})), React.createElement("button", {type: "button", onClick: handleSwitchToRegisterClick, className: "btn btn__secondary btn__block __3"}, React.createElement(Components.Translation, {term: "Immobox.Register.Links.OpenForm"}))))
                : false));
        };
        LoginFormComponent.contextTypes = {
            closeModal: React.PropTypes.any
        };
        return LoginFormComponent;
    }(React.Component));
    var mapStateToProps = function (state) {
        return {
            authenticationType: state.auth.authenticationType,
            initialValues: {
                userName: state.profile && state.profile.Email ? state.profile.Email : '',
                password: ''
            }
        };
    };
    Components.LoginForm = ReduxForm.reduxForm({
        form: 'login',
        fields: fields,
        validate: validate,
    }, mapStateToProps)(LoginFormComponent);
})(Components || (Components = {}));

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    var fields = ['firstName', 'lastName', 'email', 'address1',
        'postCode', 'location', 'countryId', 'password', 'newsletter',
        'confirmPassword', 'gender', 'portalId', 'authenticationGroupId',
        'endUserProfileTypeId', 'language'];
    // ugly validator
    var validate = function (values) {
        var errors = {};
        if (!values.firstName || values.firstName.trim().length == 0) {
            errors.firstName = 'Immobox.Validations.Required';
        }
        if (!values.lastName || values.lastName.trim().length == 0) {
            errors.lastName = 'Immobox.Validations.Required';
        }
        if (!values.email || values.email.trim().length == 0) {
            errors.email = 'Immobox.Validations.Required';
        }
        else if (!validator.isEmail(values.email)) {
            errors.email = 'Immobox.Validations.InvalidEmail';
        }
        if (!values.password) {
            errors.password = 'Immobox.Validations.Required';
        }
        if (values.password && values.password.length < 8) {
            errors.password = 'Immobox.Validations.PasswordTooShort';
        }
        if (!values.confirmPassword) {
            errors.confirmPassword = 'Immobox.Validations.Required';
        }
        if (values.password && values.confirmPassword && values.password !== values.confirmPassword) {
            errors.confirmPassword = 'Immobox.Validations.PasswordsMustMatch';
        }
        return errors;
    };
    var RegisterFormComponent = (function (_super) {
        __extends(RegisterFormComponent, _super);
        function RegisterFormComponent(props) {
            _super.call(this, props);
            this.formSubmit = this.formSubmit.bind(this);
        }
        RegisterFormComponent.prototype.componentDidMount = function () {
            this.props.getCountriesList();
        };
        RegisterFormComponent.prototype.formSubmit = function (formData) {
            formData.firstName = formData.firstName.trim();
            formData.lastName = formData.lastName.trim();
            formData.email = formData.email.trim();
            return this.props.dispatch(ActionCreators.AuthData.registerUser(formData))
                .then(this.props.dispatch(ActionCreators.Immobox.openPopoverWithContentPage(null, null)))
                .catch(function (error) {
                switch (error.error) {
                    case Constants.AuthErrorTypes.conflict:
                        return Promise.reject({
                            email: 'Immobox.Validations.Error',
                            _error: 'Immobox.Validations.EmailAlreadyExists'
                        });
                    default:
                        return Promise.reject({
                            _error: 'Immobox.Validations.SomethingWentWrong'
                        });
                }
            });
        };
        RegisterFormComponent.prototype.render = function () {
            var _a = this.props, _b = _a.fields, firstName = _b.firstName, lastName = _b.lastName, email = _b.email, address1 = _b.address1, postCode = _b.postCode, location = _b.location, countryId = _b.countryId, password = _b.password, confirmPassword = _b.confirmPassword, gender = _b.gender, handleSubmit = _a.handleSubmit, submitting = _a.submitting, error = _a.error, countriesList = _a.countriesList, handleSwitchToLoginClick = _a.handleSwitchToLoginClick;
            if (countriesList.isFetching) {
                return React.createElement(Components.Translation, {term: "Immobox.Loading"});
            }
            else {
                return (React.createElement("form", {onSubmit: handleSubmit(this.formSubmit), className: "form register-form"}, error && React.createElement(Components.ErrorMessageBlock, {error: error}), React.createElement(Components.FormArea, null, React.createElement(Components.DropDownField, {field: gender, options: [
                    { value: Constants.GenderTypes.male, name: 'Immobox.Fields.Gender.Male' },
                    { value: Constants.GenderTypes.female, name: 'Immobox.Fields.Gender.Female' }
                ]})), React.createElement(Components.FormArea, {mandatory: true}, React.createElement(Components.TextField, {type: "text", placeholder: "Immobox.Fields.FirstName", field: firstName})), React.createElement(Components.FormArea, {mandatory: true}, React.createElement(Components.TextField, {type: "text", placeholder: "Immobox.Fields.LastName", field: lastName})), React.createElement(Components.FormArea, {mandatory: true}, React.createElement(Components.TextField, {type: "email", placeholder: "Immobox.Fields.Email", field: email})), React.createElement(Components.FormArea, null, React.createElement(Components.TextField, {type: "text", placeholder: "Immobox.Fields.Address", field: address1})), React.createElement(Components.FormArea, null, React.createElement("div", {className: "row"}, React.createElement("div", {className: "pcol-6 tcol-6 col-6"}, React.createElement(Components.TextField, {type: "text", placeholder: "Immobox.Fields.Zipcode", field: postCode})), React.createElement("div", {className: "pcol-6 tcol-6 col-6"}, React.createElement(Components.TextField, {type: "text", placeholder: "Immobox.Fields.City", field: location})))), React.createElement(Components.FormArea, null, React.createElement(Components.DropDownField, {field: countryId, options: countriesList.items.map(function (item) { return ({
                    value: item.IsoCode,
                    name: item.Name,
                }); })})), React.createElement(Components.FormArea, {mandatory: true}, React.createElement(Components.TextField, {type: "password", placeholder: "Immobox.Fields.Password", field: password}), password.touched && password.error && React.createElement(Components.Translation, {term: password.error})), React.createElement(Components.FormArea, {mandatory: true}, React.createElement(Components.TextField, {type: "password", placeholder: "Immobox.Fields.PasswordConfirmation", mandatory: true, field: confirmPassword}), confirmPassword.touched && confirmPassword.error && React.createElement(Components.Translation, {term: confirmPassword.error})), React.createElement(Components.FormArea, null, React.createElement("button", {type: "submit", className: "btn __big btn__submit btn__block", disabled: submitting}, submitting && React.createElement("i", {className: "fa fa-spin fa-spinner btn_icon"}), React.createElement(Components.Translation, {term: "Immobox.Register.Actions.Register"}))), React.createElement(Components.FormArea, {className: "text-right"}, React.createElement("a", {href: "#", onClick: handleSwitchToLoginClick}, React.createElement(Components.Translation, {term: "Immobox.Register.GoBackToLogin"})))));
            }
        };
        RegisterFormComponent.propTypes = {
            fields: React.PropTypes.object.isRequired,
            handleSubmit: React.PropTypes.func.isRequired,
            submitting: React.PropTypes.bool,
            getCountriesList: React.PropTypes.func.isRequired
        };
        return RegisterFormComponent;
    }(React.Component));
    var mapStateToProps = function (state) {
        return {
            countriesList: state.appData.countries,
            initialValues: {
                firstName: state.profile && state.profile.FirstName ? state.profile.FirstName : null,
                lastName: state.profile && state.profile.LastName ? state.profile.LastName : null,
                email: state.profile && state.profile.Email ? state.profile.Email : null,
                address1: state.profile && state.profile.Address1 ? state.profile.Address1 : null,
                postCode: state.profile && state.profile.PostCode ? state.profile.PostCode : null,
                location: state.profile && state.profile.Location ? state.profile.Location : null,
                countryId: state.profile && state.profile.CountryId ? state.profile.CountryId : state.config.portalConfig.defaultCountryISO,
                gender: state.profile && state.profile.Gender,
                newsletter: state.profile && state.profile.Newsletter ? state.profile.Newsletter : true,
                portalId: state.config.portalConfig.id,
                authenticationGroupId: Config.AuthenticationGroupId,
                endUserProfileTypeId: Constants.AuthenticationType.full,
                language: state.localization.currentLocale
            }
        };
    };
    var mapDispatchToProps = function (dispatch) {
        return Redux.bindActionCreators({
            getCountriesList: ActionCreators.AppData.getCountriesList
        }, dispatch);
    };
    Components.RegisterForm = ReduxForm.reduxForm({
        form: 'register',
        fields: fields,
        validate: validate
    }, mapStateToProps, mapDispatchToProps)(RegisterFormComponent);
})(Components || (Components = {}));

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    var fields = ['firstName', 'lastName', 'email', 'address1',
        'postCode', 'location', 'countryId', 'gender', 'phone',
        'portalId', 'authenticationGroupId'];
    // ugly validator
    var validate = function (values) {
        var errors = {};
        if (!values.firstName || values.firstName.trim().length == 0) {
            errors.firstName = 'Immobox.Validations.Required';
        }
        if (!values.lastName || values.lastName.trim().length == 0) {
            errors.lastName = 'Immobox.Validations.Required';
        }
        if (!values.email || values.email.trim().length == 0) {
            errors.email = 'Immobox.Validations.Required';
        }
        else if (!validator.isEmail(values.email)) {
            errors.email = 'Immobox.Validations.InvalidEmail';
        }
        return errors;
    };
    var EditProfileFormComponent = (function (_super) {
        __extends(EditProfileFormComponent, _super);
        function EditProfileFormComponent(props) {
            _super.call(this, props);
            this.formSubmit = this.formSubmit.bind(this);
        }
        EditProfileFormComponent.prototype.componentDidMount = function () {
            this.props.getCountriesList();
        };
        EditProfileFormComponent.prototype.formSubmit = function (formData) {
            formData.firstName = formData.firstName.trim();
            formData.lastName = formData.lastName.trim();
            formData.email = formData.email.trim();
            return this.props.dispatch(ActionCreators.Profile.updateAndGetProfile(formData))
                .catch(function (error) {
                var rejectObject = Validation.ValidationHelper.getValidationObject(error, "profile", 'Immobox.Validations.Error', 'Immobox.Validations.SomethingWentWrong');
                if (rejectObject != null) {
                    return Promise.reject(rejectObject);
                }
                switch (error.error) {
                    case Constants.AuthErrorTypes.conflict:
                        return Promise.reject({
                            email: 'Immobox.Validations.Error',
                            _error: 'Immobox.Validations.EmailAlreadyExists'
                        });
                    default:
                        return Promise.reject({
                            _error: 'Immobox.Validations.SomethingWentWrong'
                        });
                }
            });
        };
        EditProfileFormComponent.prototype.render = function () {
            var _a = this.props, _b = _a.fields, firstName = _b.firstName, lastName = _b.lastName, email = _b.email, address1 = _b.address1, postCode = _b.postCode, location = _b.location, countryId = _b.countryId, gender = _b.gender, phone = _b.phone, handleSubmit = _a.handleSubmit, submitting = _a.submitting, error = _a.error, countriesList = _a.countriesList;
            if (countriesList.isFetching) {
                return React.createElement(Components.Translation, {term: "Immobox.Loading"});
            }
            else {
                return (React.createElement("form", {className: "form profile-form", onSubmit: handleSubmit(this.formSubmit)}, error && React.createElement(Components.ErrorMessageBlock, {error: error}), React.createElement(Components.FormArea, null, React.createElement(Components.DropDownField, {field: gender, options: [
                    { value: Constants.GenderTypes.male, name: 'Immobox.Fields.Gender.Male' },
                    { value: Constants.GenderTypes.female, name: 'Immobox.Fields.Gender.Female' }
                ]})), React.createElement(Components.FormArea, {mandatory: true}, React.createElement(Components.TextField, {type: "text", placeholder: "Immobox.Fields.FirstName", field: firstName})), React.createElement(Components.FormArea, {mandatory: true}, React.createElement(Components.TextField, {type: "text", placeholder: "Immobox.Fields.LastName", field: lastName})), React.createElement(Components.FormArea, {mandatory: true}, React.createElement(Components.TextField, {type: "email", placeholder: "Immobox.Fields.Email", field: email})), React.createElement(Components.FormArea, null, React.createElement(Components.TextField, {type: "text", placeholder: "Immobox.Fields.Phone", field: phone})), React.createElement(Components.FormArea, null, React.createElement(Components.TextField, {type: "text", placeholder: "Immobox.Fields.Address", field: address1})), React.createElement(Components.FormArea, null, React.createElement("div", {className: "row"}, React.createElement("div", {className: "pcol-6 tcol-6 col-6"}, React.createElement(Components.TextField, {type: "text", placeholder: "Immobox.Fields.Zipcode", field: postCode})), React.createElement("div", {className: "pcol-6 tcol-6 col-6"}, React.createElement(Components.TextField, {type: "text", placeholder: "Immobox.Fields.City", field: location})))), React.createElement(Components.FormArea, null, React.createElement(Components.DropDownField, {field: countryId, options: countriesList.items.map(function (item) {
                    return {
                        value: item.IsoCode,
                        name: item.Name,
                    };
                })})), React.createElement("button", {type: "submit", className: "btn __big btn__submit btn__block", disabled: submitting}, submitting && React.createElement("i", {className: "fa fa-spin fa-spinner btn_icon"}), React.createElement(Components.Translation, {term: "Immobox.Actions.Update"}))));
            }
        };
        EditProfileFormComponent.propTypes = {
            fields: React.PropTypes.object.isRequired,
            handleSubmit: React.PropTypes.func.isRequired,
            submitting: React.PropTypes.bool,
            getCountriesList: React.PropTypes.func.isRequired
        };
        return EditProfileFormComponent;
    }(React.Component));
    var mapStateToProps = function (state) {
        return {
            initialValues: {
                firstName: state.profile.FirstName,
                lastName: state.profile.LastName,
                email: state.profile.Email,
                address1: state.profile.Address1,
                postCode: state.profile.PostCode,
                location: state.profile.Location,
                countryId: state.profile.CountryId,
                gender: state.profile.Gender,
                phone: state.profile.Phone,
                portalId: state.config.portalConfig.id,
                authenticationGroupId: Config.AuthenticationGroupId
            },
            countriesList: state.appData.countries
        };
    };
    var mapDispatchToProps = function (dispatch) {
        return Redux.bindActionCreators({
            getCountriesList: ActionCreators.AppData.getCountriesList
        }, dispatch);
    };
    Components.EditProfileForm = ReduxForm.reduxForm({
        form: 'edit-profile',
        fields: fields,
        validate: validate
    }, mapStateToProps, mapDispatchToProps)(EditProfileFormComponent);
})(Components || (Components = {}));

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    var ImmoboxUserInfo = (function (_super) {
        __extends(ImmoboxUserInfo, _super);
        function ImmoboxUserInfo() {
            _super.apply(this, arguments);
        }
        ImmoboxUserInfo.prototype.onLogOff = function (event) {
            event.preventDefault();
            this.props.unauthorizeUser();
        };
        ImmoboxUserInfo.prototype.render = function () {
            var _a = this.props, auth = _a.auth, profile = _a.profile, locale = _a.locale, activeTabId = _a.activeTabId, supportedCultures = _a.supportedCultures, updateTranslations = _a.updateTranslations, changeTabWithContentPage = _a.changeTabWithContentPage, currencies = _a.currencies, selectedCurrency = _a.selectedCurrency, updateCurrency = _a.updateCurrency;
            return (React.createElement("div", {className: "immobox_user"}, React.createElement("div", {className: "row"}, React.createElement("div", {className: "col-12 tcol-12 pcol-12"}, React.createElement("div", {className: "immobox_user_photo immobox_close"}, React.createElement("i", {className: "icon fa fa-user fa-1-5x"})), React.createElement("div", {className: "immobox_user_data"}, auth.authenticationType == Constants.AuthenticationType.guest ?
                React.createElement("div", {className: "immobox_user_data_identity"}, React.createElement(Components.Translation, {term: "Immobox.Title"}))
                : auth.authenticationType == Constants.AuthenticationType.full || auth.authenticationType == Constants.AuthenticationType.light ?
                    React.createElement("div", {className: "immobox_user_data_identity"}, React.createElement("span", {title: profile.FirstName}, profile.FirstName), " ", React.createElement("span", {title: profile.LastName}, profile.LastName))
                    : false, React.createElement("div", {className: "immobox_user_data_controls"}, auth.authenticationType == Constants.AuthenticationType.full ?
                React.createElement("span", {id: "editprofile-link", className: "immobox_user_data_account", onClick: function (evt) { return changeTabWithContentPage(activeTabId, Constants.ImmoboxPagesTypes.editProfileForm); }}, React.createElement(Components.Translation, {term: "Immobox.Links.MyAccount"}))
                : false, " ", auth.authenticationType == Constants.AuthenticationType.full || auth.authenticationType == Constants.AuthenticationType.light ?
                React.createElement("a", {id: "logoff-link", className: "immobox_user_data_logoff", href: "#", onClick: this.onLogOff.bind(this)}, React.createElement(Components.Translation, {term: "Immobox.Links.LogOut"}))
                : false)), supportedCultures.length > 1 ?
                React.createElement("div", {className: "immobox_user_language"}, React.createElement(Components.LanguageSwitcher, null))
                : null, currencies.length > 1 ?
                React.createElement("div", {className: "immobox_user_currency"}, React.createElement(Components.ImmoboxCurrencySwitcher, {currencies: currencies, selectedCurrency: selectedCurrency, updateCurrency: updateCurrency}))
                : null))));
        };
        return ImmoboxUserInfo;
    }(React.Component));
    Components.ImmoboxUserInfo = ImmoboxUserInfo;
})(Components || (Components = {}));

/// <reference path="../../../../typings/react/react.d.ts" />
/// <reference path="../../../../typings/react/react-redux.d.ts" />
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    var ImmoboxAuthenticationOffer = (function (_super) {
        __extends(ImmoboxAuthenticationOffer, _super);
        function ImmoboxAuthenticationOffer() {
            _super.apply(this, arguments);
        }
        ImmoboxAuthenticationOffer.prototype.render = function () {
            return (React.createElement("div", {className: "not-connected-warning"}, React.createElement("div", {className: "row __no-gutters warning-content"}, React.createElement("div", {className: "warning-content_default warning-content_item"}, React.createElement("div", {className: "warning-content_text"}, React.createElement(Components.Translation, {term: "Immobox.SignIn.Message"})), React.createElement("div", {className: "warning-content_img"}, React.createElement("img", {src: "/Themes/Mojito/Images/responsive.png"})))), this.props.children));
        };
        return ImmoboxAuthenticationOffer;
    }(React.Component));
    Components.ImmoboxAuthenticationOffer = ImmoboxAuthenticationOffer;
})(Components || (Components = {}));

/// <reference path="../../../../typings/react/react.d.ts" />
/// <reference path="../../../../typings/react/react-redux.d.ts" />
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    var ImmoboxAuthenticationButtons = (function (_super) {
        __extends(ImmoboxAuthenticationButtons, _super);
        function ImmoboxAuthenticationButtons() {
            _super.apply(this, arguments);
        }
        ImmoboxAuthenticationButtons.prototype.render = function () {
            var onLoginButtonClick = this.props.onLoginButtonClick;
            return (React.createElement("div", {className: "row __no-gutters warning-button"}, React.createElement("div", {className: "warning-button_left"}, React.createElement("button", {className: "btn btn__primary __small btn__block text-center", onClick: function () {
                onLoginButtonClick("login-form");
            }}, React.createElement(Components.Translation, {term: "Immobox.SignIn.Actions.OpenForm"}))), React.createElement("div", {className: "warning-button_right"}, React.createElement("button", {className: "btn btn__secondary __small btn__block text-center", onClick: function () {
                onLoginButtonClick("register-form");
            }}, React.createElement(Components.Translation, {term: "Immobox.Register.Links.OpenForm"})))));
        };
        return ImmoboxAuthenticationButtons;
    }(React.Component));
    Components.ImmoboxAuthenticationButtons = ImmoboxAuthenticationButtons;
})(Components || (Components = {}));

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    var ImmoboxSearchItem = (function (_super) {
        __extends(ImmoboxSearchItem, _super);
        function ImmoboxSearchItem() {
            _super.call(this);
        }
        ImmoboxSearchItem.prototype.render = function () {
            var _a = this.props, searchName = _a.searchName, searchConfigName = _a.searchConfigName, areaName = _a.areaName, searchUrl = _a.searchUrl, searchCriteria = _a.searchCriteria, location = _a.location, lastSearchId = _a.lastSearchId;
            var radius = searchCriteria.Radius || searchCriteria.radius;
            var priceMin = searchCriteria.PriceMin || searchCriteria.priceMin;
            var priceMax = searchCriteria.PriceMax || searchCriteria.priceMax;
            var numberOfRoomsMin = searchCriteria.NumberOfRoomsMin || searchCriteria.numberOfRoomsMin;
            var livingAreaMin = searchCriteria.LivingAreaMin || searchCriteria.livingAreaMin;
            var currencyId = searchCriteria.CurrencyId || searchCriteria.currencyId;
            var transactionTypeId = searchCriteria.TransactionTypeId || searchCriteria.transactionTypeId;
            var radiusElement = null;
            var priceElement = null;
            var roomsElement = null;
            var surfaceElement = null;
            var searchNameElement = null;
            if (radius) {
                radiusElement = (React.createElement("span", null, " ", radius, " ", React.createElement(Components.Translation, {term: "Immobox.RecentSearches.UnitOfDistance"}), " "));
            }
            if (priceMin && priceMax) {
                priceElement = (React.createElement("span", null, React.createElement(Components.CurrencySymbol, {currency: currencyId}), " ", React.createElement(Components.Number, {value: priceMin}), " ", React.createElement(Components.Translation, {term: "Immobox.RecentSearches.To"}), " ", React.createElement(Components.Number, {value: priceMax})));
            }
            else if (priceMin) {
                priceElement = (React.createElement("span", null, React.createElement(Components.Translation, {term: "Immobox.RecentSearches.Min"}), " ", React.createElement(Components.Currency, {value: priceMin, currency: currencyId}), " "));
            }
            else if (priceMax) {
                priceElement = (React.createElement("span", null, React.createElement(Components.Translation, {term: "Immobox.RecentSearches.Max"}), " ", React.createElement(Components.Currency, {value: priceMax, currency: currencyId}), " "));
            }
            if (numberOfRoomsMin) {
                roomsElement = (React.createElement("span", null, React.createElement(Components.Translation, {term: "Immobox.RecentSearches.Min"}), " ", React.createElement(Components.Number, {half: true, value: numberOfRoomsMin}), " "));
            }
            if (livingAreaMin) {
                surfaceElement = (React.createElement("span", null, React.createElement(Components.Translation, {term: "Immobox.RecentSearches.Min"}), " ", React.createElement(Components.Number, {value: livingAreaMin}), " "));
            }
            if (transactionTypeId && searchConfigName) {
                searchNameElement = (React.createElement("span", null, React.createElement(Components.Translation, {term: "SearchResults.Title." + transactionTypeId}), " / ", React.createElement(Components.Translation, {term: "SearchForm.Filters.SubTypeGroup." + searchConfigName})));
            }
            else {
                searchNameElement = (React.createElement("span", null, searchName));
            }
            return (React.createElement("div", {className: "immobox_item"}, React.createElement("div", {className: "col-12 tcol-12 pcol-12"}, React.createElement("div", {className: "immobox_item_details"}, React.createElement("a", {href: searchUrl}, React.createElement("div", {className: "immobox_item_details_type immobox_item_details_data immobox_item_details_data__standout"}, searchNameElement)), React.createElement("div", {className: "immobox_item_details_type immobox_item_details_data"}, React.createElement("span", null, areaName && areaName), areaName && radiusElement && " , ", radiusElement && radiusElement), priceElement ? (React.createElement("div", {className: "immobox_item_details_type immobox_item_details_data"}, React.createElement(Components.Translation, {term: "Immobox.RecentSearches.Price"}), ": ", priceElement)) : null, roomsElement ? (React.createElement("div", {className: "immobox_item_details_type immobox_item_details_data"}, React.createElement(Components.Translation, {term: "Immobox.RecentSearches.Rooms"}), ": ", roomsElement)) : null, surfaceElement ? (React.createElement("div", {className: "immobox_item_details_type immobox_item_details_data"}, React.createElement(Components.Translation, {term: "Immobox.RecentSearches.Surface"}), ": ", surfaceElement)) : null), React.createElement("div", {className: "immobox_item_controls"}, this.props.onCreateAlertClick ?
                (React.createElement("button", {className: "immobox_create-alert btn __small __default", type: "button", "data-search-criteria-id": this.props.data.searchCriteriaImmoId, "data-title": this.props.data.location, "data-price": this.props.data.price, "data-currency": "CHF"}, React.createElement("span", {className: "btn_text"}, React.createElement(Components.Translation, {term: "Immobox.Actions.CreateAlert"})))) : null))));
        };
        return ImmoboxSearchItem;
    }(React.Component));
    Components.ImmoboxSearchItem = ImmoboxSearchItem;
})(Components || (Components = {}));

/// <reference path="../../../../typings/react/react.d.ts" />
/// <reference path="../../../../typings/react/react-redux.d.ts" />
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    var ImmoboxFavoriteItem = (function (_super) {
        __extends(ImmoboxFavoriteItem, _super);
        function ImmoboxFavoriteItem() {
            _super.apply(this, arguments);
        }
        ImmoboxFavoriteItem.prototype.render = function () {
            var _a = this.props, url = _a.url, imageUrl = _a.imageUrl, price = _a.price, title = _a.title;
            return (React.createElement("div", {className: "immobox_item"}, React.createElement("a", {className: "immobox_item_link", href: url}, React.createElement("div", {className: "immobox_item_visual"}, React.createElement("img", {className: "classified_image_img", src: imageUrl, alt: ""})), React.createElement("div", {className: "immobox_item_data"}, React.createElement("div", {className: "immobox_item_details"}, React.createElement("div", {className: "immobox_item_details_price immobox_item_details_data immobox_item_details_data__standout"}, React.createElement(Components.Translation, {term: "Immobox.CampaignDetails.Price"}), React.createElement("span", null, price)), React.createElement("div", {className: "immobox_item_details_summary immobox_item_details_data"}, title))))));
        };
        return ImmoboxFavoriteItem;
    }(React.Component));
    Components.ImmoboxFavoriteItem = ImmoboxFavoriteItem;
})(Components || (Components = {}));

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    var ImmoboxLeadRequestItem = (function (_super) {
        __extends(ImmoboxLeadRequestItem, _super);
        function ImmoboxLeadRequestItem() {
            _super.apply(this, arguments);
        }
        ImmoboxLeadRequestItem.prototype.render = function () {
            // ReSharper disable InconsistentNaming
            var _a = this.props, Url = _a.Url, ImageUrl = _a.ImageUrl, Price = _a.Price, AreaName = _a.AreaName, AutomaticTitle = _a.AutomaticTitle, Comments = _a.Comments;
            // ReSharper restore InconsistentNaming
            return (React.createElement("div", {className: "immobox_item"}, React.createElement("a", {className: "immobox_item_link", href: "/" + Url}, React.createElement("div", {className: "immobox_item_visual_container col-4 tcol-4 pcol-4"}, React.createElement("div", {className: "immobox_item_visual"}, React.createElement("img", {className: classNames(['classified_image_img', { '__not-available': ImageUrl == null }]), src: ImageUrl ? ImageUrl : "/Themes/Mojito/Images/no-picture-64.png", alt: ""}))), React.createElement("div", {className: "col-8 tcol-8 pcol-8"}, React.createElement("div", {className: "immobox_item_details"}, Price ?
                React.createElement("div", {className: "immobox_item_details_price immobox_item_details_data immobox_item_details_data__standout"}, React.createElement("span", null, Price))
                : false, AutomaticTitle ?
                React.createElement("div", {className: "immobox_item_details_summary immobox_item_details_data"}, AreaName ? AreaName + ", " : false, AutomaticTitle)
                : false, Comments ?
                React.createElement("div", {className: "immobox_lead_item"}, React.createElement("i", null, React.createElement(Components.ImmoboxLeadRequestItemComment, {text: Comments})))
                : false), React.createElement("div", {className: "immobox_item_controls"})))));
        };
        return ImmoboxLeadRequestItem;
    }(React.Component));
    Components.ImmoboxLeadRequestItem = ImmoboxLeadRequestItem;
})(Components || (Components = {}));

/// <reference path="../../../../typings/react/react.d.ts" />
/// <reference path="../../../../typings/react/react-redux.d.ts" />
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    var ImmoboxFavorites = (function (_super) {
        __extends(ImmoboxFavorites, _super);
        function ImmoboxFavorites() {
            _super.apply(this, arguments);
        }
        ImmoboxFavorites.prototype.componentDidMount = function () {
            this.props.getFavorites();
        };
        ImmoboxFavorites.prototype.render = function () {
            var _a = this.props, isFetching = _a.isFetching, items = _a.items;
            if (isFetching) {
                return (React.createElement(Components.Translation, {term: "Immobox.Loading"}));
            }
            else if (typeof items == "object" && Object.keys(items).length > 0) {
                var favoritesList = items.map(function (item, index) {
                    return (React.createElement(Components.ImmoboxFavoriteItem, React.__spread({key: index}, item)));
                });
                return (React.createElement("div", {className: "immobox_pager_pages_page"}, favoritesList));
            }
            else {
                return (React.createElement("div", null, React.createElement(Components.Translation, {term: "Immobox.Favorites.NoResult"})));
            }
        };
        return ImmoboxFavorites;
    }(React.Component));
    Components.ImmoboxFavorites = ImmoboxFavorites;
})(Components || (Components = {}));

/// <reference path="../../../../typings/react/react.d.ts" />
/// <reference path="../../../../typings/react/react-redux.d.ts" />
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    var ImmoboxRecentSearches = (function (_super) {
        __extends(ImmoboxRecentSearches, _super);
        function ImmoboxRecentSearches() {
            _super.apply(this, arguments);
        }
        ImmoboxRecentSearches.prototype.componentDidMount = function () {
            var _a = this.props, getRecentSearches = _a.getRecentSearches, shouldGetOnComponentMount = _a.shouldGetOnComponentMount;
            if (shouldGetOnComponentMount) {
                getRecentSearches();
            }
            ;
        };
        ImmoboxRecentSearches.prototype.render = function () {
            var _a = this.props, isFetching = _a.isFetching, items = _a.items;
            if (isFetching) {
                return (React.createElement(Components.Translation, {term: "Immobox.Loading"}));
            }
            else if (typeof items == "object" && Object.keys(items).length > 0) {
                var recentSearchesList = items.map(function (item, index) {
                    var searchName = item.SearchName || item.searchName;
                    var searchConfigName = item.SearchConfigName || item.searchConfigName;
                    var areaName = item.AreaName || item.areaName;
                    var searchUrl = item.SearchUrl || item.searchUrl;
                    var searchCriteria = item.SearchCriteria || item.searchCriteria;
                    var lastSearchId = item.LastSearchId || item.lastSearchId;
                    return (React.createElement(Components.ImmoboxSearchItem, {key: index, searchName: searchName, searchConfigName: searchConfigName, areaName: areaName, searchUrl: searchUrl, searchCriteria: searchCriteria, location: item.location, lastSearchId: lastSearchId}));
                });
                return (React.createElement("div", {className: "immobox_pager_pages_page"}, React.createElement("h5", null, React.createElement(Components.Translation, {term: "Immobox.RecentSearches.Title"})), recentSearchesList));
            }
            else {
                return (React.createElement("div", null, React.createElement(Components.Translation, {term: "Immobox.RecentSearches.NoSearchesAvailable"})));
            }
        };
        return ImmoboxRecentSearches;
    }(React.Component));
    Components.ImmoboxRecentSearches = ImmoboxRecentSearches;
})(Components || (Components = {}));

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    var ImmoboxLeadRequests = (function (_super) {
        __extends(ImmoboxLeadRequests, _super);
        function ImmoboxLeadRequests() {
            _super.apply(this, arguments);
        }
        ImmoboxLeadRequests.prototype.componentDidMount = function () {
            this.props.getLeadRequests();
        };
        ImmoboxLeadRequests.prototype.render = function () {
            var _a = this.props, isFetching = _a.isFetching, items = _a.items;
            if (isFetching) {
                return (React.createElement(Components.Translation, {term: "Immobox.Loading"}));
            }
            else if (typeof items == "object" && Object.keys(items).length > 0) {
                var leadRequestsList = items.map(function (item, index) {
                    return (React.createElement(Components.ImmoboxLeadRequestItem, React.__spread({key: index}, item)));
                });
                return (React.createElement("div", {className: "immobox_pager_pages_page"}, leadRequestsList));
            }
            else {
                return (React.createElement(Components.Translation, {term: "Immobox.Requests.NoResult"}));
            }
        };
        return ImmoboxLeadRequests;
    }(React.Component));
    Components.ImmoboxLeadRequests = ImmoboxLeadRequests;
})(Components || (Components = {}));

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    var EllipsedText = (function (_super) {
        __extends(EllipsedText, _super);
        function EllipsedText() {
            _super.apply(this, arguments);
        }
        EllipsedText.prototype.render = function () {
            return (React.createElement("div", null, this.props.text));
        };
        return EllipsedText;
    }(React.Component));
    EllipsedText.propTypes = {
        text: React.PropTypes.string.isRequired
    };
    Components.ImmoboxLeadRequestItemComment = Components.Ellipsis(EllipsedText, 2, " (...)");
})(Components || (Components = {}));

/// <reference path="../../../../typings/react/react.d.ts" />
/// <reference path="../../../../typings/react/react-redux.d.ts" />
/// <reference path="../../../../typings/classnames/classnames.d.ts" />
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    var ImmoboxTabCounter = (function (_super) {
        __extends(ImmoboxTabCounter, _super);
        function ImmoboxTabCounter() {
            _super.apply(this, arguments);
        }
        ImmoboxTabCounter.prototype.render = function () {
            var _a = this.props, counter = _a.counter, isFetching = _a.isFetching;
            if (isFetching) {
                return (React.createElement("i", {className: "fa fa-spin fa-spinner fa-1-5x"}));
            }
            else if (counter > 0) {
                return (React.createElement("div", {className: "counter"}, counter));
            }
            else
                return null;
        };
        ImmoboxTabCounter.propTypes = {
            tabId: React.PropTypes.string.isRequired,
            counter: React.PropTypes.number.isRequired,
            isFetching: React.PropTypes.bool.isRequired
        };
        return ImmoboxTabCounter;
    }(React.Component));
    Components.ImmoboxTabCounter = ImmoboxTabCounter;
})(Components || (Components = {}));

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    var ImmoboxTabComponent = (function (_super) {
        __extends(ImmoboxTabComponent, _super);
        function ImmoboxTabComponent() {
            _super.call(this);
            this.handleTabClick = this.handleTabClick.bind(this);
        }
        ImmoboxTabComponent.prototype.handleTabClick = function () {
            var _a = this.props, id = _a.id, contentPageId = _a.contentPageId, isActive = _a.isActive, enableTabToggle = _a.enableTabToggle, onTabClick = _a.onTabClick;
            if (isActive) {
                if (enableTabToggle) {
                    onTabClick(null, null);
                }
            }
            else {
                onTabClick(id, contentPageId);
            }
        };
        ImmoboxTabComponent.prototype.render = function () {
            var _a = this.props, id = _a.id, icon = _a.icon, title = _a.title, hasCounter = _a.hasCounter, counter = _a.counter, isActive = _a.isActive, isFetching = _a.isFetching;
            return (React.createElement("li", {className: classNames(['pager_nav_item', {
                    '__active': isActive
                }]), onClick: this.handleTabClick}, React.createElement("div", {className: "icon-with-counter icon-with-counter__up"}, React.createElement("i", {className: 'icon fa fa-1-5x ' + icon}), hasCounter ?
                React.createElement(Components.ImmoboxTabCounter, {counter: counter, tabId: id, isFetching: isFetching})
                : false), title != null ?
                React.createElement("div", {className: "pager_nav_item_caption"}, React.createElement(Components.Translation, {term: title}))
                : false));
        };
        ImmoboxTabComponent.propTypes = {
            id: React.PropTypes.string.isRequired,
            icon: React.PropTypes.string.isRequired,
            title: React.PropTypes.string,
            hasCounter: React.PropTypes.bool.isRequired,
            contentPageId: React.PropTypes.string.isRequired,
            isActive: React.PropTypes.bool,
            enableTabToggle: React.PropTypes.bool,
            onTabClick: React.PropTypes.func.isRequired,
        };
        return ImmoboxTabComponent;
    }(React.Component));
    Components.ImmoboxTab = ReactRedux.connect(Selectors.countersSelector)(ImmoboxTabComponent);
})(Components || (Components = {}));

/// <reference path="../../../../typings/react/react.d.ts" />
/// <reference path="../../../../typings/react/react-redux.d.ts" />
/// <reference path="../../../../typings/classnames/classnames.d.ts" />
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    var ImmoboxTabs = (function (_super) {
        __extends(ImmoboxTabs, _super);
        function ImmoboxTabs() {
            _super.apply(this, arguments);
        }
        ImmoboxTabs.prototype.render = function () {
            var _a = this.props, tabsData = _a.tabsData, userData = _a.userData, changeTabWithContentPage = _a.changeTabWithContentPage, fetchUserDataByTabId = _a.fetchUserDataByTabId;
            return (React.createElement("ul", {className: "pager_nav", ref: "immoboxTabs"}, tabsData.map(function (tab, index) {
                return tab.isEnabled ? (React.createElement(Components.ImmoboxTab, React.__spread({key: index}, tab, {fetchUserDataByTabId: fetchUserDataByTabId, onTabClick: function (tabId, contentPageId) {
                    changeTabWithContentPage(tabId, contentPageId);
                }})))
                    : null;
            })));
        };
        return ImmoboxTabs;
    }(React.Component));
    Components.ImmoboxTabs = ImmoboxTabs;
    ImmoboxTabs.propTypes = {
        tabsData: React.PropTypes.array.isRequired,
        userData: React.PropTypes.object.isRequired,
        changeTabWithContentPage: React.PropTypes.func.isRequired,
        fetchUserDataByTabId: React.PropTypes.func.isRequired,
    };
})(Components || (Components = {}));

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    var ImmoboxTabContent = (function (_super) {
        __extends(ImmoboxTabContent, _super);
        function ImmoboxTabContent() {
            _super.call(this);
            this.handleSwitchToRegisterClick = this.handleSwitchToRegisterClick.bind(this);
            this.handleSwitchToLoginClick = this.handleSwitchToLoginClick.bind(this);
        }
        ImmoboxTabContent.prototype.handleSwitchToRegisterClick = function () {
            var changeContentPage = this.props.changeContentPage;
            changeContentPage(Constants.ImmoboxPagesTypes.registerForm);
        };
        ImmoboxTabContent.prototype.handleSwitchToLoginClick = function () {
            var changeContentPage = this.props.changeContentPage;
            changeContentPage(Constants.ImmoboxPagesTypes.loginForm);
        };
        ImmoboxTabContent.prototype.shouldDisplayLoginInsteadOfGeneral = function () {
            return this.props.auth.authenticationType === Constants.AuthenticationType.guest
                && this.props.recentSearches.items.length == 0;
        };
        ImmoboxTabContent.prototype.render = function () {
            var _a = this.props, auth = _a.auth, activeContentPage = _a.activeContentPage, profile = _a.profile, favorites = _a.favorites, recentSearches = _a.recentSearches, leadRequests = _a.leadRequests, changeContentPage = _a.changeContentPage, changeTabWithContentPage = _a.changeTabWithContentPage, getFavorites = _a.getFavorites, getRecentSearches = _a.getRecentSearches, getLeadRequests = _a.getLeadRequests;
            return (React.createElement("div", {className: "immobox_content"}, (auth.authenticationType !== Constants.AuthenticationType.full) ?
                React.createElement(Components.ImmoboxAuthenticationOffer, null, (activeContentPage.id !== Constants.ImmoboxPagesTypes.loginForm
                    && activeContentPage.id !== Constants.ImmoboxPagesTypes.registerForm
                    && !this.shouldDisplayLoginInsteadOfGeneral()) ?
                    React.createElement(Components.ImmoboxAuthenticationButtons, {onLoginButtonClick: function (contentPageId) {
                        changeTabWithContentPage(null, contentPageId);
                    }})
                    : false)
                : false, activeContentPage.id === Constants.ImmoboxPagesTypes.general ?
                this.shouldDisplayLoginInsteadOfGeneral() ?
                    React.createElement(Components.LoginForm, React.__spread({formKey: "immoboxLogin", handleSwitchToRegisterClick: this.handleSwitchToRegisterClick}, profile))
                    : React.createElement(Components.ImmoboxRecentSearches, React.__spread({getRecentSearches: getRecentSearches}, recentSearches))
                : false, activeContentPage.id === Constants.ImmoboxPagesTypes.favorites ?
                React.createElement(Components.ImmoboxFavorites, React.__spread({getFavorites: getFavorites}, favorites))
                : false, activeContentPage.id === Constants.ImmoboxPagesTypes.leads ?
                React.createElement(Components.ImmoboxLeadRequests, React.__spread({getLeadRequests: getLeadRequests}, leadRequests))
                : false, activeContentPage.id === Constants.ImmoboxPagesTypes.loginForm ?
                React.createElement(Components.LoginForm, React.__spread({formKey: "immoboxLogin", handleSwitchToRegisterClick: this.handleSwitchToRegisterClick}, profile))
                : false, activeContentPage.id === Constants.ImmoboxPagesTypes.registerForm ?
                React.createElement(Components.RegisterForm, React.__spread({formKey: "immoboxRegister", handleSwitchToLoginClick: this.handleSwitchToLoginClick}, profile))
                : false, activeContentPage.id === Constants.ImmoboxPagesTypes.editProfileForm ?
                React.createElement(Components.EditProfileForm, React.__spread({}, profile))
                : false));
        };
        return ImmoboxTabContent;
    }(React.Component));
    Components.ImmoboxTabContent = ImmoboxTabContent;
})(Components || (Components = {}));

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    var ImmoboxPopoversTabs = (function (_super) {
        __extends(ImmoboxPopoversTabs, _super);
        function ImmoboxPopoversTabs() {
            _super.apply(this, arguments);
        }
        ImmoboxPopoversTabs.prototype.render = function () {
            var _a = this.props, tabsData = _a.tabsData, userData = _a.userData, fetchUserDataByTabId = _a.fetchUserDataByTabId, openPopoverWithContentPage = _a.openPopoverWithContentPage;
            return (React.createElement("ul", {className: "pager_nav"}, tabsData.map(function (tab, index) {
                return tab.isEnabled ? (React.createElement(Components.ImmoboxTab, React.__spread({key: index}, tab, {enableTabToggle: true, fetchUserDataByTabId: fetchUserDataByTabId, onTabClick: function (tabId, contentPageId) {
                    openPopoverWithContentPage(tabId, contentPageId);
                }})))
                    : null;
            })));
        };
        return ImmoboxPopoversTabs;
    }(React.Component));
    Components.ImmoboxPopoversTabs = ImmoboxPopoversTabs;
    ImmoboxPopoversTabs.propTypes = {
        tabsData: React.PropTypes.array.isRequired,
        userData: React.PropTypes.object.isRequired,
        openPopoverWithContentPage: React.PropTypes.func.isRequired,
        fetchUserDataByTabId: React.PropTypes.func.isRequired,
    };
})(Components || (Components = {}));

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    var ImmoboxPopoversTabContent = (function (_super) {
        __extends(ImmoboxPopoversTabContent, _super);
        function ImmoboxPopoversTabContent() {
            _super.call(this);
            this.handleSwitchToRegisterClick = this.handleSwitchToRegisterClick.bind(this);
            this.handleSwitchToLoginClick = this.handleSwitchToLoginClick.bind(this);
        }
        ImmoboxPopoversTabContent.prototype.handleSwitchToRegisterClick = function () {
            var changeContentPageForPopover = this.props.changeContentPageForPopover;
            changeContentPageForPopover(Constants.ImmoboxPagesTypes.registerForm);
        };
        ImmoboxPopoversTabContent.prototype.handleSwitchToLoginClick = function () {
            var changeContentPageForPopover = this.props.changeContentPageForPopover;
            changeContentPageForPopover(Constants.ImmoboxPagesTypes.loginForm);
        };
        ImmoboxPopoversTabContent.prototype.render = function () {
            var _a = this.props, auth = _a.auth, activeTab = _a.activeTab, activeContentPage = _a.activeContentPage, profile = _a.profile, favorites = _a.favorites, recentSearches = _a.recentSearches, leadRequests = _a.leadRequests, locale = _a.locale, config = _a.config, getFavorites = _a.getFavorites, getRecentSearches = _a.getRecentSearches, getLeadRequests = _a.getLeadRequests, getUserProfile = _a.getUserProfile, unauthorizeUser = _a.unauthorizeUser, updateTranslations = _a.updateTranslations, openPopoverWithContentPage = _a.openPopoverWithContentPage, changeCurrency = _a.changeCurrency;
            var contentPage = null;
            switch (activeTab.id) {
                case Constants.ImmoboxTabsTypes.general:
                    contentPage = React.createElement(Components.ImmoboxRecentSearches, React.__spread({getRecentSearches: getRecentSearches}, recentSearches));
                    break;
                case Constants.ImmoboxTabsTypes.favorites:
                    contentPage = React.createElement(Components.ImmoboxFavorites, React.__spread({getFavorites: getFavorites}, favorites));
                    break;
                case Constants.ImmoboxTabsTypes.leads:
                    contentPage = React.createElement(Components.ImmoboxLeadRequests, React.__spread({getLeadRequests: getLeadRequests}, leadRequests));
                    break;
                case Constants.ImmoboxTabsTypes.account:
                    if (auth.authenticationType === Constants.AuthenticationType.guest
                        || auth.authenticationType === Constants.AuthenticationType.light) {
                        switch (activeContentPage.id) {
                            case Constants.ImmoboxPagesTypes.loginForm:
                                contentPage = React.createElement("div", null, React.createElement(Components.LoginForm, React.__spread({formKey: "immoboxLogin", handleSwitchToRegisterClick: this.handleSwitchToRegisterClick}, profile)));
                                break;
                            case Constants.ImmoboxPagesTypes.registerForm:
                                contentPage = React.createElement("div", null, React.createElement(Components.RegisterForm, React.__spread({formKey: "immoboxRegister", handleSwitchToLoginClick: this.handleSwitchToLoginClick}, profile)));
                                break;
                            default:
                                break;
                        }
                    }
                    else {
                        contentPage = React.createElement(Components.EditProfileForm, React.__spread({}, profile));
                    }
                    break;
                default:
                    break;
            }
            return (React.createElement("div", null, React.createElement(Components.Scroll, {style: { height: 600, width: 271 }}, activeContentPage.id != null
                ? React.createElement(Components.ImmoboxUserInfo, {auth: auth, profile: profile, locale: locale, activeTabId: Constants.ImmoboxTabsTypes.account, supportedCultures: config.portalConfig.supportedCultures, getUserProfile: getUserProfile, unauthorizeUser: unauthorizeUser, updateTranslations: updateTranslations, changeTabWithContentPage: openPopoverWithContentPage, currencies: config.portalConfig.currencies, selectedCurrency: profile.CurrencyId != null ? profile.CurrencyId : config.portalConfig.defaultCurrency.currency, updateCurrency: changeCurrency})
                : null, contentPage)));
        };
        return ImmoboxPopoversTabContent;
    }(React.Component));
    Components.ImmoboxPopoversTabContent = ImmoboxPopoversTabContent;
})(Components || (Components = {}));

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    var ImmoboxCurrencySwitcher = (function (_super) {
        __extends(ImmoboxCurrencySwitcher, _super);
        function ImmoboxCurrencySwitcher() {
            var _this = this;
            _super.apply(this, arguments);
            this.changeCurrency = function (event) {
                var currency = event.target.value;
                _this.setState({ value: currency });
                // old .ts part, must be removed when fully migrate to react
                Helpers.Common.ReplaceCurrencyInLink($("a.id_ads-from-agency"), currency);
                HomePage.TopCountries.UpdateCurrency(currency);
                HomePage.TopCountries.UpdateCurrencyForCountryPage(currency);
                _this.props.updateCurrency(currency);
            };
        }
        ImmoboxCurrencySwitcher.prototype.render = function () {
            var _a = this.props, currencies = _a.currencies, selectedCurrency = _a.selectedCurrency;
            return (React.createElement("select", {onChange: this.changeCurrency, value: selectedCurrency}, currencies.map(function (item) {
                return (React.createElement("option", {value: item.currency, key: item.currency}, item.currency));
            })));
        };
        return ImmoboxCurrencySwitcher;
    }(React.Component));
    Components.ImmoboxCurrencySwitcher = ImmoboxCurrencySwitcher;
})(Components || (Components = {}));

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    var Provider = ReactRedux.Provider, connect = ReactRedux.connect;
    function scrollToContactForm(duration) {
        var scrollValue = $('#id_contact-form').offset().top - 200;
        $('html,body').animate({ scrollTop: scrollValue }, duration);
    }
    var IFrameContactButtonComponent = (function (_super) {
        __extends(IFrameContactButtonComponent, _super);
        function IFrameContactButtonComponent() {
            _super.apply(this, arguments);
        }
        IFrameContactButtonComponent.prototype.goToContactForm = function (url, contactFormId) {
            if (url) {
                window.location.href = url + '#' + contactFormId;
                return;
            }
            scrollToContactForm(400);
        };
        IFrameContactButtonComponent.prototype.render = function () {
            var _this = this;
            var _a = this.props, title = _a.title, campaignId = _a.campaignId, contactFormId = _a.contactFormId, route = _a.route, url = _a.url;
            // ak: wanted to use react router, but couldn't understand how to use it
            // Perfect will be to create something like extRoutes.addRoute() and so on
            if (window.location.href.indexOf(route) >= 0) {
                $(document).ready(function () {
                    scrollToContactForm(200);
                });
            }
            return (React.createElement("button", {className: "classified_contact_btn btn __icon", onClick: function () { _this.goToContactForm(url, contactFormId); }, type: "button"}, title));
        };
        return IFrameContactButtonComponent;
    }(React.Component));
    var mapContactButtonStateToProps = function (state, props) { return ({
        title: state.localization.translations[props.title],
    }); };
    Components.IFrameContactButton = connect(mapContactButtonStateToProps)(IFrameContactButtonComponent);
})(Components || (Components = {}));

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    var Provider = ReactRedux.Provider, connect = ReactRedux.connect;
    function createContactModalView(campaignId, engineId, title, triggerTitle, wrapperId) {
        return (React.createElement(ConnectedSendRequest, {campaignId: campaignId, engineId: engineId, modalTitle: title, triggerTitle: triggerTitle, wrapperId: wrapperId}));
    }
    function createIFrameContactButton(title, campaignId, contactFormId, route) {
        return (React.createElement(Provider, {store: store}, React.createElement(Components.IFrameContactButton, React.__spread({}, this.props, {title: title, campaignId: campaignId, contactFormId: contactFormId, route: route}))));
    }
    var SendRequestButtonComponent = (function (_super) {
        __extends(SendRequestButtonComponent, _super);
        function SendRequestButtonComponent() {
            _super.apply(this, arguments);
        }
        SendRequestButtonComponent.prototype.render = function () {
            var _a = this.props, campaignId = _a.campaignId, engineId = _a.engineId, title = _a.title, triggerTitle = _a.triggerTitle, wrapperId = _a.wrapperId;
            return (React.createElement(Components.ModalWindow, {title: title, trigger: React.createElement("button", {className: "classified_contact_btn btn __icon", type: "button", "data-campaignid": campaignId}, triggerTitle)}, React.createElement(Components.LeadRequestWrapper, {campaignId: campaignId, engineId: engineId, formKey: "modal-" + campaignId, wrapperId: wrapperId})));
        };
        return SendRequestButtonComponent;
    }(React.Component));
    var mapSendButtonStateToProps = function (state, props) { return ({
        title: state.localization.translations[props.modalTitle],
        triggerTitle: state.localization.translations[props.triggerTitle],
        localization: state.localization.translations
    }); };
    Components.SendRequestButton = connect(mapSendButtonStateToProps)(SendRequestButtonComponent);
    var ConnectedSendRequest = (function (_super) {
        __extends(ConnectedSendRequest, _super);
        function ConnectedSendRequest() {
            _super.apply(this, arguments);
        }
        ConnectedSendRequest.prototype.render = function () {
            return (React.createElement(Provider, {store: store}, React.createElement(Components.SendRequestButton, React.__spread({}, this.props))));
        };
        return ConnectedSendRequest;
    }(React.Component));
    Components.ConnectedSendRequest = ConnectedSendRequest;
    function renderContactModalView(target, campaignId, engineId, title, triggerTitle, wrapperId) {
        if (store.getState().config.iFrameCompatible) {
            return ReactDOM.render(createIFrameContactButton(title, campaignId, 'id_contact-form', 'contact-form'), target);
        }
        else {
            return ReactDOM.render(createContactModalView(campaignId, engineId, title, triggerTitle, wrapperId), target);
        }
    }
    Components.renderContactModalView = renderContactModalView;
})(Components || (Components = {}));

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    var LanguageSwitcherComponent = (function (_super) {
        __extends(LanguageSwitcherComponent, _super);
        function LanguageSwitcherComponent(props) {
            var _this = this;
            _super.call(this, props);
            this.handleChange = function (event) {
                var _a = _this.props, authenticationType = _a.auth.authenticationType, updateTranslations = _a.updateTranslations;
                if (authenticationType !== Constants.AuthenticationType.guest) {
                    Repositories.UserData.clearLocalStorage();
                }
                var newLocale = event.target.value;
                updateTranslations(newLocale);
            };
            this.handleChange = this.handleChange.bind(this);
        }
        LanguageSwitcherComponent.prototype.render = function () {
            var _a = this.props, supportedCultures = _a.supportedCultures, locale = _a.locale;
            if (supportedCultures.length < 1) {
                return null;
            }
            var sortedCultures = this.sortCultures(supportedCultures);
            return (React.createElement("select", {onChange: this.handleChange, value: locale}, sortedCultures.map(function (item) { return (React.createElement("option", {value: item.cultureID, key: item.cultureID}, item.cultureID)); })));
        };
        LanguageSwitcherComponent.prototype.sortCultures = function (cultures) {
            return cultures.sort(function (a, b) {
                if (a.orderSpecified && !b.orderSpecified)
                    return -1;
                if (!a.orderSpecified && b.orderSpecified)
                    return 1;
                if (!a.orderSpecified && !b.orderSpecified)
                    return -1;
                return a.order - b.order;
            });
        };
        return LanguageSwitcherComponent;
    }(React.Component));
    Components.LanguageSwitcherComponent = LanguageSwitcherComponent;
    var mapStateToProps = function (state) { return ({
        supportedCultures: state.config.portalConfig.supportedCultures,
        routeUrls: state.config.routeUrls,
        locale: state.localization.currentLocale,
        auth: state.auth
    }); };
    var mapDispatchToProps = function (dispatch) { return Redux.bindActionCreators({
        updateTranslations: ActionCreators.Localization.updateTranslations
    }, dispatch); };
    Components.LanguageSwitcher = ReactRedux.connect(mapStateToProps, mapDispatchToProps)(LanguageSwitcherComponent);
})(Components || (Components = {}));

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    var Search;
    (function (Search) {
        var NoResults = (function (_super) {
            __extends(NoResults, _super);
            function NoResults() {
                _super.apply(this, arguments);
            }
            NoResults.prototype.render = function () {
                return (React.createElement("div", {className: "content-area no-results row p-all"}, React.createElement("p", null, React.createElement(Components.Translation, {term: "SearchResults.NoResult.Message"})), React.createElement("p", null, React.createElement("a", {href: "/"}, React.createElement(Components.Translation, {term: "SearchResults.NoResult.Action.BackToHome"})))));
            };
            return NoResults;
        }(React.Component));
        Search.NoResults = NoResults;
    })(Search = Components.Search || (Components.Search = {}));
})(Components || (Components = {}));

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    var Search;
    (function (Search) {
        var AgencyLogo = (function (_super) {
            __extends(AgencyLogo, _super);
            function AgencyLogo() {
                _super.apply(this, arguments);
            }
            AgencyLogo.prototype.render = function () {
                var _a = this.props, logoFullUrl = _a.logoFullUrl, campaignUrl = _a.campaignUrl;
                return (React.createElement("div", {className: "classified_agency-logo"}, React.createElement("a", {className: "classified_agency-logo_link", href: campaignUrl}, React.createElement("img", {className: "classified_agency-logo_img", src: logoFullUrl}))));
            };
            AgencyLogo.propTypes = {
                logoFullUrl: React.PropTypes.string,
                campaignUrl: React.PropTypes.string
            };
            return AgencyLogo;
        }(React.Component));
        Search.AgencyLogo = AgencyLogo;
    })(Search = Components.Search || (Components.Search = {}));
})(Components || (Components = {}));

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    var Search;
    (function (Search) {
        var ImmoPhoto = (function (_super) {
            __extends(ImmoPhoto, _super);
            function ImmoPhoto() {
                _super.apply(this, arguments);
            }
            ImmoPhoto.prototype.render = function () {
                var _a = this.props, photoUrl = _a.photoUrl, numberOfPhotos = _a.numberOfPhotos, isMobile = _a.isMobile;
                var noPicturePath = isMobile
                    ? '/Themes/Mojito/Images/no-picture-64.png'
                    : '/Themes/Mojito/Images/no-picture-128.png';
                var width = isMobile ? 128 : 300;
                var height = isMobile ? 96 : 225;
                var imageUrl = new URI(photoUrl || '').removeQuery('format', 'thumb_is');
                switch (true) {
                    case /image.portia.ch\/remote/.test(imageUrl.toString()):
                        imageUrl = imageUrl
                            .addQuery('width', width)
                            .addQuery('height', height)
                            .addQuery('mode', 'crop')
                            .addQuery('autorotate', 'true');
                        break;
                    case /resourcehandler\./.test(imageUrl.toString()):
                        imageUrl = imageUrl
                            .addQuery('format', 'custom')
                            .addQuery('size_x', width)
                            .addQuery('size_y', height)
                            .addQuery('mode', 'fit_cropped');
                        break;
                }
                return (React.createElement("div", {className: "classified_thumb"}, numberOfPhotos && imageUrl.toString()
                    ?
                        React.createElement("div", null, React.createElement("img", {className: "classified_thumb_picture", src: imageUrl.toString()}), React.createElement("span", {className: "classified_thumb_counter __no-print"}, numberOfPhotos))
                    :
                        React.createElement("div", {className: "classified_thumb_no-picture"}, React.createElement("img", {className: "classified_thumb_picture __not-available", src: noPicturePath}))));
            };
            ImmoPhoto.propTypes = {
                photoUrl: React.PropTypes.string,
                numberOfPhotos: React.PropTypes.number,
                isMobile: React.PropTypes.bool
            };
            return ImmoPhoto;
        }(React.Component));
        Search.ImmoPhoto = ImmoPhoto;
    })(Search = Components.Search || (Components.Search = {}));
})(Components || (Components = {}));

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    var Search;
    (function (Search) {
        var Immo = (function (_super) {
            __extends(Immo, _super);
            function Immo() {
                _super.apply(this, arguments);
            }
            Immo.prototype.shouldComponentUpdate = function (nextProps, nextState) {
                return React.addons.shallowCompare(this, nextProps, nextState);
            };
            Immo.prototype.render = function () {
                var _a = this.props, campaignId = _a.campaignId, campaignSourceId = _a.campaignSourceId, organizationId = _a.organizationId, propertyRefNumber = _a.propertyRefNumber, index = _a.index, currencyIdForDisplay = _a.currencyIdForDisplay, priceFormatted = _a.priceFormatted, mainTitle = _a.mainTitle, description = _a.description, numberOfPhotos = _a.numberOfPhotos, photoUrl = _a.photoUrl, location = _a.location, agencyContact = _a.agencyContact, pageNumber = _a.pageNumber, returnUrl = _a.returnUrl;
                var campaignUrl = Router.action('ItemDetails', 'Campaign', {
                    language: System.getLanguage(),
                    campaignId: campaignId,
                    currencyId: currencyIdForDisplay,
                    returnUrl: returnUrl.setQuery('p', pageNumber).hash("adv" + index).resource()
                });
                return (React.createElement("div", {id: "adv" + index, className: "anchored-block", "data-campaign-id": campaignId, "data-organization-id": organizationId, "data-propertyrefnumber": propertyRefNumber}, React.createElement("div", {className: "classified classified__standard"}, React.createElement("div", {className: "row __no-gutters hidden-phone"}, React.createElement("a", {href: campaignUrl}, React.createElement(Search.ImmoPhoto, {numberOfPhotos: numberOfPhotos, photoUrl: photoUrl})), React.createElement("div", {className: "classified_info"}, agencyContact && agencyContact.displayLogoInList && agencyContact.logoFullUrl &&
                    React.createElement(Search.AgencyLogo, {logoFullUrl: agencyContact.logoFullUrl, campaignUrl: campaignUrl}), React.createElement("div", {className: "classified_summary"}, React.createElement("a", {className: "classified_summary_price_link", href: campaignUrl}, React.createElement("span", {className: "classified_summary_price", dangerouslySetInnerHTML: { __html: priceFormatted }}), ' '), React.createElement("a", {className: "classified_summary_synopsis_link", href: campaignUrl}, React.createElement("span", {className: "classified_summary_synopsis"}, location && location.name
                    ? [location.name, mainTitle].join(', ')
                    : mainTitle))), description &&
                    React.createElement("div", {className: "classified_description"}, description))), React.createElement("footer", {className: "classified_footer hidden-phone __no-print text-right"}, React.createElement("div", {className: "row __no-gutters"}, React.createElement("ul", {className: "inline-list"}, React.createElement("li", {className: "inline-list_item"}, React.createElement("div", {id: "classified_contact-" + campaignId, className: "classified_contact"}, (function () {
                    if (store.getState().config.iFrameCompatible) {
                        return React.createElement(Components.IFrameContactButton, {title: "ItemDetails.Actions.Contact", campaignId: campaignId, contactFormId: "id_contact-form", url: campaignUrl, route: "contact-form"});
                    }
                    else {
                        return React.createElement(Components.SendRequestButton, {campaignId: campaignId, engineId: campaignSourceId, modalTitle: "LeadRequestForm.Modal.Title", triggerTitle: "SearchResults.Item.Actions.Contact", wrapperId: "searchResultsItem"});
                    }
                })())), React.createElement("li", {className: "inline-list_item visible-desktop"}, React.createElement("div", {className: "classified_details"}, React.createElement("a", {href: campaignUrl, id: "UrlToDetails-" + campaignId, className: "classified_details_btn btn __icon", type: "button"}, React.createElement(Components.Translation, {term: "SearchResults.Item.Actions.Details"}))))))), React.createElement("div", {className: "visible-phone __no-print"}, React.createElement("a", {className: "classified_details-link", href: campaignUrl}, React.createElement("div", {className: "row __no-gutters"}, React.createElement("div", {className: "classified_thumb"}, React.createElement(Search.ImmoPhoto, {isMobile: true, numberOfPhotos: numberOfPhotos, photoUrl: photoUrl})), React.createElement("div", {className: "classified_info"}, React.createElement("div", {className: "classified_summary"}, React.createElement("span", {className: "classified_summary_price", dangerouslySetInnerHTML: { __html: priceFormatted }}), ' ', React.createElement("span", {className: "classified_summary_synopsis"}, location && location.name
                    ? [location.name, mainTitle].join(', ')
                    : mainTitle)), description &&
                    React.createElement("div", {className: "classified_description"}, description))))))));
            };
            Immo.propTypes = {
                returnUrl: React.PropTypes.object
            };
            return Immo;
        }(React.Component));
        Search.Immo = Immo;
    })(Search = Components.Search || (Components.Search = {}));
})(Components || (Components = {}));

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    var Search;
    (function (Search) {
        var ResultPager = (function (_super) {
            __extends(ResultPager, _super);
            function ResultPager(props) {
                _super.call(this, props);
                this.checkVisiblePage = this.checkVisiblePage.bind(this);
            }
            ResultPager.prototype.componentDidMount = function () {
                window.addEventListener('scroll', this.checkVisiblePage, false);
            };
            ResultPager.prototype.componentWillUnmount = function () {
                window.removeEventListener('scroll', this.checkVisiblePage, false);
            };
            ResultPager.prototype.checkVisiblePage = function () {
                var refs = this.refs;
                var top = window.pageYOffset;
                var bottom = top + window.innerHeight;
                if (!refs || !Object.keys(refs).length)
                    return;
                for (var page in refs) {
                    var p = refs[page];
                    var obj = ReactDOM.findDOMNode(p);
                    if (!obj)
                        return;
                    var rect = obj.getBoundingClientRect();
                    var topVisible = 0 < rect.top && rect.top < top;
                    var bottomVisible = 0 < rect.bottom && rect.bottom < bottom;
                    var isVisible = topVisible || bottomVisible;
                    if (isVisible) {
                        this.props.scrollPager(p.props.index + 1);
                        return;
                    }
                }
            };
            ResultPager.prototype.render = function () {
                var _a = this.props, result = _a.result, pageSize = _a.pageSize, returnUrl = _a.returnUrl;
                var chunked = [], index = 0, pageIndex = -1, length = result.length;
                while (index < length) {
                    chunked[++pageIndex] = result.slice(index, index + pageSize);
                    index += pageSize;
                }
                return (React.createElement("div", null, chunked.map(function (page, index) {
                    return (React.createElement(ResultPage, {key: "page-" + index, ref: "page-" + index, returnUrl: returnUrl, index: index, items: page}));
                })));
            };
            return ResultPager;
        }(React.Component));
        Search.ResultPager = ResultPager;
        var ResultPage = (function (_super) {
            __extends(ResultPage, _super);
            function ResultPage() {
                _super.apply(this, arguments);
            }
            ResultPage.prototype.shouldComponentUpdate = function (nextProps, nextState) {
                return React.addons.shallowCompare(this, nextProps, nextState);
            };
            ResultPage.prototype.render = function () {
                var _a = this.props, index = _a.index, items = _a.items, returnUrl = _a.returnUrl;
                return (React.createElement("div", {id: "page-" + index}, items.map(function (item) {
                    return React.createElement(Search.Immo, React.__spread({key: item.campaignId, returnUrl: returnUrl}, item));
                })));
            };
            return ResultPage;
        }(React.Component));
        Search.ResultPage = ResultPage;
    })(Search = Components.Search || (Components.Search = {}));
})(Components || (Components = {}));

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    var Search;
    (function (Search) {
        var Waypoint = ReactWaypoint;
        var ResultsComponent = (function (_super) {
            __extends(ResultsComponent, _super);
            function ResultsComponent(props, context) {
                _super.call(this, props, context);
                this.handleNewPageLoad = this.handleNewPageLoad.bind(this);
                this.handleScrollToPage = this.handleScrollToPage.bind(this);
            }
            ResultsComponent.prototype.componentDidMount = function () {
                var _a = this.props, _b = _a.searchResults, searchCriteriaForEup = _b.searchCriteriaForEup, isFetching = _b.isFetching, result = _b.result, updateRecentSearches = _a.actions.updateRecentSearches;
                if (!isFetching) {
                    updateRecentSearches(searchCriteriaForEup);
                    $(function () {
                        Helpers.Search.trackSearchResults(result);
                    });
                }
            };
            ResultsComponent.prototype.handleNewPageLoad = function () {
                this.props.actions.fetchResults()
                    .then(function (data) {
                    if (data) {
                        Helpers.Search.trackSearchResults(data.payload.result);
                    }
                })
                    .catch(function (e) {
                    console.log(e);
                });
            };
            ResultsComponent.prototype.handleScrollToPage = function (pageNumber) {
                var _a = this.props, location = _a.location, history = _a.history;
                if ((parseInt(location.query.p, 10) || 1) === pageNumber)
                    return;
                location.query.p = pageNumber;
                if (location.query.p === 1) {
                    delete location.query.p;
                }
                delete location.hash;
                var _b = window.History, createHistory = _b.createHistory, useQueries = _b.useQueries;
                useQueries(createHistory)().replace(location);
                //history.replace(location);
            };
            ResultsComponent.prototype.render = function () {
                var _a = this.props.searchResults, result = _a.result, isFetching = _a.isFetching, pageSize = _a.pageSize, pageNumberMaximum = _a.pageNumberMaximum, currentPageNumber = _a.currentPageNumber;
                var searchUrl = new URI();
                if (!result.length && !isFetching) {
                    return React.createElement(Search.NoResults, null);
                }
                var contentLoader = null;
                if (this.props.iFrameCompatible && currentPageNumber < pageNumberMaximum) {
                    contentLoader = (React.createElement("button", {onClick: this.handleNewPageLoad}, "Load more"));
                }
                else {
                    contentLoader = (React.createElement(Waypoint, {key: "infinite-scroll", onEnter: this.handleNewPageLoad, threshold: 1.8, scrollableAncestor: window}));
                }
                return (React.createElement("div", null, React.createElement(Search.ResultPager, {result: result, returnUrl: searchUrl, pageSize: pageSize, scrollPager: this.handleScrollToPage}), isFetching && React.createElement(Components.Spinner, null), !isFetching && contentLoader));
            };
            ResultsComponent.prototype.getChildContext = function () {
                return {
                    translations: this.props.translations,
                    isFetching: this.props.isFetching
                };
            };
            ResultsComponent.childContextTypes = {
                translations: React.PropTypes.object,
                isFetching: React.PropTypes.bool
            };
            return ResultsComponent;
        }(React.Component));
        Search.ResultsComponent = ResultsComponent;
        var connect = ReactRedux.connect;
        var mapStateToProps = function (state) {
            return {
                searchResults: state.searchResults,
                isFetching: state.localization.isFetching,
                translations: state.localization.translations,
                iFrameCompatible: state.config.iFrameCompatible
            };
        };
        var mapDispatchToProps = function (dispatch) {
            return {
                actions: Redux.bindActionCreators({
                    updateRecentSearches: ActionCreators.RecentSearches.updateRecentSearches,
                    fetchResults: ActionCreators.Search.fetchResults
                }, dispatch)
            };
        };
        Search.Results = connect(mapStateToProps, mapDispatchToProps)(ResultsComponent);
    })(Search = Components.Search || (Components.Search = {}));
})(Components || (Components = {}));

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Components;
(function (Components) {
    var LeadRequestWrapperComponent = (function (_super) {
        __extends(LeadRequestWrapperComponent, _super);
        function LeadRequestWrapperComponent() {
            _super.call(this);
            this.handleLeadRequestIsCreated = this.handleLeadRequestIsCreated.bind(this);
            this.handleUserLogin = this.handleUserLogin.bind(this);
        }
        LeadRequestWrapperComponent.prototype.componentWillMount = function () {
            var _a = this.props, createLeadRequestWrapper = _a.createLeadRequestWrapper, wrapperId = _a.wrapperId;
            createLeadRequestWrapper(wrapperId);
        };
        LeadRequestWrapperComponent.prototype.componentWillUnmount = function () {
            var _a = this.props, destroyLeadRequestWrapper = _a.destroyLeadRequestWrapper, wrapperId = _a.wrapperId;
            destroyLeadRequestWrapper(wrapperId);
        };
        LeadRequestWrapperComponent.prototype.getChildContext = function () {
            return {
                translations: this.props.translations,
                isFetching: this.props.isFetching
            };
        };
        LeadRequestWrapperComponent.prototype.handleLeadRequestIsCreated = function (formData) {
            var _a = this.props, showContentOnLeadRequestSuccess = _a.showContentOnLeadRequestSuccess, wrapperId = _a.wrapperId;
            showContentOnLeadRequestSuccess(formData, wrapperId);
        };
        LeadRequestWrapperComponent.prototype.handleUserLogin = function () {
            var _a = this.props, setLeadRequestWrapperStatus = _a.setLeadRequestWrapperStatus, leadRequestWrapper = _a.leadRequestWrapper, wrapperId = _a.wrapperId;
            // This part is bad, the object in reducer should be properly merged and not replaced, will improve it later /dzh
            setLeadRequestWrapperStatus(wrapperId, {
                leadRequestIsCreated: true,
                fullProfileExistsInEup: leadRequestWrapper.fullProfileExistsInEup,
                isFullUser: true
            });
        };
        LeadRequestWrapperComponent.prototype.render = function () {
            var _a = this.props, campaignId = _a.campaignId, engineId = _a.engineId, enableAutoRegistration = _a.enableAutoRegistration, enableFullProfile = _a.enableFullProfile, leadRequestWrapper = _a.leadRequestWrapper, formKey = _a.formKey;
            if (leadRequestWrapper != null) {
                var leadRequestIsCreated = leadRequestWrapper.leadRequestIsCreated, fullProfileExistsInEup = leadRequestWrapper.fullProfileExistsInEup, isFullUser = leadRequestWrapper.isFullUser;
                if (leadRequestIsCreated) {
                    var content = null;
                    if (enableFullProfile && !isFullUser) {
                        if (fullProfileExistsInEup) {
                            content =
                                React.createElement("div", null, React.createElement("div", {className: "alert text-center"}, React.createElement("div", {className: "alert_title"}, React.createElement(Components.Translation, {term: "LeadRequestForm.Login.Message.UserBack"})), React.createElement("div", {className: "alert_content"}, React.createElement(Components.Translation, {term: "LeadRequestForm.Login.Message.SaveRequest"}))), React.createElement(Components.LoginForm, {mergeProfile: true, hideRegisterButton: true, onLoggedIn: this.handleUserLogin}));
                        }
                        else if (!enableAutoRegistration) {
                            content = React.createElement(Components.ChangePasswordForm, null);
                        }
                    }
                    return (React.createElement("div", {className: "lead-request_confirm"}, React.createElement("div", {className: "alert __success message-box __1"}, React.createElement("div", {className: "alert_title"}, React.createElement("i", {className: "fa fa-check-circle-o"}), React.createElement(Components.Translation, {term: "LeadRequestForm.Message.Success"}))), content));
                }
                else {
                    return (React.createElement(Components.LeadRequestForm, {key: campaignId, formKey: formKey, campaignId: campaignId, engineId: engineId, onLeadRequestIsCreated: this.handleLeadRequestIsCreated}));
                }
            }
            else {
                return null;
            }
        };
        LeadRequestWrapperComponent.childContextTypes = {
            translations: React.PropTypes.object,
            isFetching: React.PropTypes.bool
        };
        return LeadRequestWrapperComponent;
    }(React.Component));
    LeadRequestWrapperComponent.propTypes = {
        campaignId: React.PropTypes.string.isRequired,
        engineId: React.PropTypes.string.isRequired,
        enableAutoRegistration: React.PropTypes.bool,
        enableFullProfile: React.PropTypes.bool,
        wrapperId: React.PropTypes.string.isRequired,
        leadRequestWrapper: React.PropTypes.object
    };
    var mapStateToProps = function (state, ownProps) {
        return {
            translations: state.localization.translations,
            isFetching: state.localization.isFetching,
            enableAutoRegistration: state.config.portalConfig.enableAutoRegistration,
            enableFullProfile: state.config.portalConfig.enableFullProfile,
            wrapperId: ownProps.wrapperId,
            leadRequestWrapper: state.wrappers.leadRequestWrapper[ownProps.wrapperId]
        };
    };
    var mapDispatchToProps = function (dispatch) {
        return Redux.bindActionCreators({
            createLeadRequestWrapper: ActionCreators.Wrappers.createLeadRequestWrapper,
            destroyLeadRequestWrapper: ActionCreators.Wrappers.destroyLeadRequestWrapper,
            showContentOnLeadRequestSuccess: ActionCreators.Wrappers.showContentOnLeadRequestSuccess,
            setLeadRequestWrapperStatus: ActionCreators.Wrappers.setLeadRequestWrapperStatus
        }, dispatch);
    };
    Components.LeadRequestWrapper = ReactRedux.connect(mapStateToProps, mapDispatchToProps)(LeadRequestWrapperComponent);
    var LeadRequestWrapperWithProvider = (function (_super) {
        __extends(LeadRequestWrapperWithProvider, _super);
        function LeadRequestWrapperWithProvider() {
            _super.apply(this, arguments);
        }
        LeadRequestWrapperWithProvider.prototype.render = function () {
            var Provider = ReactRedux.Provider;
            return (React.createElement("div", {className: "contact-request"}, React.createElement(Provider, {store: store}, React.createElement(Components.LeadRequestWrapper, React.__spread({}, this.props)))));
        };
        return LeadRequestWrapperWithProvider;
    }(React.Component));
    Components.renderLeadRequestWrapperInto = function (target, campaignId, engineId, wrapperId) {
        ReactDOM.render(React.createElement(LeadRequestWrapperWithProvider, {campaignId: campaignId, engineId: engineId, formKey: "id-" + campaignId, wrapperId: wrapperId}), target);
    };
})(Components || (Components = {}));

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Containers;
(function (Containers) {
    var AppContainer = (function (_super) {
        __extends(AppContainer, _super);
        function AppContainer() {
            _super.apply(this, arguments);
        }
        AppContainer.prototype.render = function () {
            var _a = this.props, content = _a.content, immobox = _a.immobox, portalConfig = _a.portalConfig;
            return (React.createElement("div", null, content, portalConfig && portalConfig.enableFullProfile ?
                React.createElement("div", {className: "immobox"}, immobox)
                : false));
        };
        return AppContainer;
    }(React.Component));
    Containers.AppContainer = AppContainer;
    var mapStateToProps = function (state) {
        return {
            portalConfig: state.config.portalConfig
        };
    };
    Containers.appContainerConnector = ReactRedux.connect(mapStateToProps)(AppContainer);
})(Containers || (Containers = {}));

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Containers;
(function (Containers) {
    var Scroll = Components.Scroll, ModalWindow = Components.ModalWindow, LeadRequestForm = Components.LeadRequestForm, ImmoboxUserInfo = Components.ImmoboxUserInfo, ImmoboxTabs = Components.ImmoboxTabs, ImmoboxTabContent = Components.ImmoboxTabContent;
    var ImmoboxContainer = (function (_super) {
        __extends(ImmoboxContainer, _super);
        function ImmoboxContainer() {
            _super.apply(this, arguments);
        }
        ImmoboxContainer.prototype.shouldDisplayTabs = function () {
            return this.props.auth.authenticationType != Constants.AuthenticationType.guest
                || this.props.userData.recentSearches.items.length > 0;
        };
        ImmoboxContainer.prototype.render = function () {
            var _a = this.props, auth = _a.auth, immobox = _a.immobox, profile = _a.profile, userData = _a.userData, localization = _a.localization, config = _a.config, actions = _a.actions;
            if (auth.authenticationType === Constants.AuthenticationType.unknown) {
                return null;
            }
            else {
                var activeContentPage = immobox.contentPages.filter(function (page) { return page.isActiveForSidebar; })[0];
                return (React.createElement("div", {className: "immobox_pager"}, React.createElement(Scroll, null, React.createElement(ImmoboxUserInfo, {auth: auth, profile: profile, locale: localization.currentLocale, supportedCultures: config.portalConfig.supportedCultures, getUserProfile: actions.getUserProfile, unauthorizeUser: actions.unauthorizeUser, updateTranslations: actions.updateTranslations, changeTabWithContentPage: actions.changeTabWithContentPage, currencies: config.portalConfig.currencies, selectedCurrency: profile.CurrencyId != null ? profile.CurrencyId : config.portalConfig.defaultCurrency.currency, updateCurrency: actions.changeCurrency}), (this.shouldDisplayTabs()) ?
                    React.createElement(ImmoboxTabs, React.__spread({tabsData: immobox.tabsData, userData: userData, showCaption: true}, actions))
                    : false, React.createElement(ImmoboxTabContent, React.__spread({auth: auth, activeContentPage: activeContentPage, favorites: userData.favorites, recentSearches: userData.recentSearches, leadRequests: userData.leadRequests, profile: profile}, actions)))));
            }
        };
        ImmoboxContainer.prototype.getChildContext = function () {
            return {
                translations: this.props.localization.translations,
                isFetching: this.props.localization.isFetching
            };
        };
        return ImmoboxContainer;
    }(React.Component));
    ImmoboxContainer.propTypes = {
        auth: React.PropTypes.object.isRequired,
        immobox: React.PropTypes.object.isRequired,
        actions: React.PropTypes.object.isRequired,
        profile: React.PropTypes.object.isRequired,
        localization: React.PropTypes.object.isRequired,
        config: React.PropTypes.object.isRequired
    };
    ImmoboxContainer.childContextTypes = {
        translations: React.PropTypes.object,
        isFetching: React.PropTypes.bool
    };
    var mapStateToProps = function (state) {
        return {
            auth: state.auth,
            immobox: state.immobox,
            profile: state.profile,
            userData: state.userData,
            localization: state.localization,
            config: state.config
        };
    };
    var mapDispatchToProps = function (dispatch) {
        return {
            actions: Redux.bindActionCreators({
                getRecentSearches: ActionCreators.RecentSearches.getRecentSearches,
                getFavorites: ActionCreators.UserData.getFavorites,
                getLeadRequests: ActionCreators.UserData.getLeadRequests,
                getAccessToken: ActionCreators.AuthData.getAccessToken,
                getUserProfile: ActionCreators.Profile.getUserProfile,
                changeTabWithContentPage: ActionCreators.Immobox.changeTabWithContentPage,
                changeContentPage: ActionCreators.Immobox.changeContentPageForSidebar,
                fetchUserDataByTabId: ActionCreators.Immobox.fetchUserDataByTabId,
                unauthorizeUser: ActionCreators.AuthData.unauthorizeUser,
                updateTranslations: ActionCreators.Localization.updateTranslations,
                changeCurrency: ActionCreators.Profile.changeCurrency
            }, dispatch)
        };
    };
    Containers.immoboxContainerConnector = ReactRedux.connect(mapStateToProps, mapDispatchToProps)(ImmoboxContainer);
})(Containers || (Containers = {}));

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Containers;
(function (Containers) {
    var Portal = Components.Portal;
    var ImmoboxPopoversTabs = Components.ImmoboxPopoversTabs;
    var ImmoboxPopoversTabContent = Components.ImmoboxPopoversTabContent;
    var ImmoboxPopoversComponent = (function (_super) {
        __extends(ImmoboxPopoversComponent, _super);
        function ImmoboxPopoversComponent() {
            _super.call(this);
            this.handlePortalClose = this.handlePortalClose.bind(this);
        }
        ImmoboxPopoversComponent.prototype.handlePortalClose = function () {
            this.props.actions.openPopoverWithContentPage(null, null);
        };
        ImmoboxPopoversComponent.prototype.render = function () {
            var auth = this.props.auth;
            if (auth.authenticationType === Constants.AuthenticationType.unknown) {
                return null;
            }
            else {
                var _a = this.props, tabsMobileData = _a.tabsMobileData, contentPages = _a.contentPages, userData = _a.userData, profile = _a.profile, localization = _a.localization, config = _a.config, actions = _a.actions;
                var activeContentPage = contentPages.filter(function (page) { return page.isActiveForPopover; })[0];
                var activeTab = tabsMobileData.filter(function (tab) { return tab.isActive; })[0];
                var immoboxPopoversTabs = React.createElement(ImmoboxPopoversTabs, React.__spread({ref: "immoboxPopoversTabs", tabsData: tabsMobileData, userData: userData}, actions));
                return (React.createElement("div", null, activeTab != null && activeContentPage != null
                    ? React.createElement(Portal, {className: "immobox-popover", isOpened: true, closeOnEsc: true, hasOverlay: true, closeOnOverlay: true, onClose: this.handlePortalClose}, React.createElement(ImmoboxPopoversTabContent, React.__spread({auth: auth, activeContentPage: activeContentPage, activeTab: activeTab, favorites: userData.favorites, recentSearches: userData.recentSearches, leadRequests: userData.leadRequests, profile: profile, locale: localization.currentLocale, config: config}, actions)))
                    : null, immoboxPopoversTabs));
            }
        };
        ImmoboxPopoversComponent.prototype.getChildContext = function () {
            return {
                translations: this.props.localization.translations,
                isFetching: this.props.localization.isFetching
            };
        };
        return ImmoboxPopoversComponent;
    }(React.Component));
    ImmoboxPopoversComponent.propTypes = {
        auth: React.PropTypes.object.isRequired,
        tabsMobileData: React.PropTypes.array.isRequired,
        contentPages: React.PropTypes.array.isRequired,
        actions: React.PropTypes.object.isRequired,
        localization: React.PropTypes.object.isRequired,
        config: React.PropTypes.object.isRequired
    };
    ImmoboxPopoversComponent.childContextTypes = {
        translations: React.PropTypes.object,
        isFetching: React.PropTypes.bool
    };
    var mapStateToProps = function (state) {
        return {
            auth: state.auth,
            tabsMobileData: state.immobox.tabsMobileData,
            contentPages: state.immobox.contentPages,
            profile: state.profile,
            userData: state.userData,
            localization: state.localization,
            config: state.config
        };
    };
    var mapDispatchToProps = function (dispatch) {
        return {
            actions: Redux.bindActionCreators({
                getRecentSearches: ActionCreators.RecentSearches.getRecentSearches,
                getFavorites: ActionCreators.UserData.getFavorites,
                getLeadRequests: ActionCreators.UserData.getLeadRequests,
                getUserProfile: ActionCreators.Profile.getUserProfile,
                openPopoverWithContentPage: ActionCreators.Immobox.openPopoverWithContentPage,
                setActivePopoverTab: ActionCreators.Immobox.setActivePopoverTab,
                changeContentPageForPopover: ActionCreators.Immobox.changeContentPageForPopover,
                changeContentPage: ActionCreators.Immobox.changeContentPageForPopover,
                fetchUserDataByTabId: ActionCreators.Immobox.fetchUserDataByTabId,
                unauthorizeUser: ActionCreators.AuthData.unauthorizeUser,
                updateTranslations: ActionCreators.Localization.updateTranslations,
                changeCurrency: ActionCreators.Profile.changeCurrency
            }, dispatch)
        };
    };
    Containers.ImmoboxPopoversContainer = ReactRedux.connect(mapStateToProps, mapDispatchToProps)(ImmoboxPopoversComponent);
})(Containers || (Containers = {}));

var _a = window.History, createHistory = _a.createHistory, useQueries = _a.useQueries;
var Provider = ReactRedux.Provider;
var insideIFrame = Utils.Iframe.checkIfInIframe();
var devTools = window.devToolsExtension ? window.devToolsExtension() : function (f) { return f; };
var constructInitialState = function (init) {
    var __SEARCH_RESULTS__ = init.__SEARCH_RESULTS__, __PORTAL_CONFIG__ = init.__PORTAL_CONFIG__, __BANNERS_CONFIG__ = init.__BANNERS_CONFIG__, __PAGE_NAME__ = init.__PAGE_NAME__, __CAMPAIGNID__ = init.__CAMPAIGNID__, __ROUTE_URLS__ = init.__ROUTE_URLS__;
    var searchResults = undefined;
    if (__SEARCH_RESULTS__ && Object.keys(__SEARCH_RESULTS__).length) {
        searchResults = Object.assign({
            isFetching: false
        }, __SEARCH_RESULTS__);
    }
    var portalConfig = __PORTAL_CONFIG__ || Constants.initialState.config.portalConfig;
    var bannersConfig = __BANNERS_CONFIG__ || Constants.initialState.config.bannersConfig;
    var iFrameCompatible = insideIFrame;
    var pageName = __PAGE_NAME__ || Constants.initialState.config.pageName;
    var campaignId = __CAMPAIGNID__ || Constants.initialState.itemDetails.campaignId;
    var routeUrls = __ROUTE_URLS__ || [];
    return {
        searchResults: searchResults,
        config: {
            portalConfig: portalConfig,
            bannersConfig: bannersConfig,
            iFrameCompatible: iFrameCompatible,
            pageName: pageName,
            routeUrls: routeUrls
        },
        itemDetails: {
            campaignId: campaignId
        }
    };
};
var store = Redux.createStore(Reducers.rootReducer, constructInitialState(window), Redux.compose(Redux.applyMiddleware(ReduxMiddleware.thunkMiddleware, reduxLogger({
    collapsed: function (getState, action) { return action.type.startsWith('redux-form'); }
})), devTools));
//const clientHistory = (ReactRouter as any).useRouterHistory(createHistory)({ queryKey: false });
//const clientHistory = (ReactRouter as any).browserHistory;
var clientHistory = createHistory();
if (insideIFrame) {
    Utils.Iframe.initListener(store.getState());
}
function onEnterRootRoute(nextState) {
    store.dispatch(ActionCreators.Localization.setCurrentLocale(nextState.params['language']));
    store.dispatch(ActionCreators.UserData.getRootUserData());
    store.dispatch(ActionCreators.Localization.loadTranslations(nextState.params['language'], nextState.location.query['dicoId']));
}
//function onEnterSearchEngine() {
//	store.dispatch(ActionCreators.UserData.shouldGetRecentSearchesOnComponentMount(false));
//}
ReactDOM.render(React.createElement(Provider, {store: store}, React.createElement(ReactRouter.Router, {history: clientHistory}, React.createElement(ReactRouter.Route, {path: ":language", onEnter: onEnterRootRoute, component: Containers.appContainerConnector}, React.createElement(ReactRouter.IndexRoute, {components: { immobox: Containers.immoboxContainerConnector }}), React.createElement(ReactRouter.Route, {path: "*", components: { immobox: Containers.immoboxContainerConnector }})))), document.getElementById('app'));
if (store.getState().config.portalConfig && store.getState().config.portalConfig.enableFullProfile) {
    ReactDOM.render(React.createElement(ReactRedux.Provider, {store: store}, React.createElement(Containers.ImmoboxPopoversContainer, null)), document.getElementById('immobox-popovers'));
}
if (document.getElementById('search-engine_list')) {
    ReactDOM.render(React.createElement(Provider, {store: store}, React.createElement(ReactRouter.Router, {history: clientHistory}, React.createElement(ReactRouter.Route, {path: ":language", onEnter: onEnterRootRoute}, React.createElement(ReactRouter.Route, {path: "search", component: Components.Search.Results}), React.createElement(ReactRouter.Route, {path: "agency/:agencyPrettyName/:businessUnitId", component: Components.Search.Results}), React.createElement(ReactRouter.Route, {path: "agence/:agencyPrettyName/:businessUnitId", component: Components.Search.Results}), React.createElement(ReactRouter.Route, {path: "makler/:agencyPrettyName/:businessUnitId", component: Components.Search.Results}), React.createElement(ReactRouter.Route, {path: "agenzia/:agencyPrettyName/:businessUnitId", component: Components.Search.Results}), React.createElement(ReactRouter.Route, {path: "agencia/:agencyPrettyName/:businessUnitId", component: Components.Search.Results}), React.createElement(ReactRouter.Route, {path: "agencija/:agencyPrettyName/:businessUnitId", component: Components.Search.Results}), React.createElement(ReactRouter.Route, {path: "agentura/:agencyPrettyName/:businessUnitId", component: Components.Search.Results}), React.createElement(ReactRouter.Route, {path: ":searchGroupName/:searchConfigName/:searchSubGroupName", component: Components.Search.Results})))), document.getElementById('search-engine_list'));
}

